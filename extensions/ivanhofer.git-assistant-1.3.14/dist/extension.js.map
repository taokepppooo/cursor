{"version":3,"sources":["../webpack/bootstrap",".././src/extension.ts",".././src/application/Commands.ts",".././src/commands/PushBeforeClosingIDE.command.ts","../external \"vscode\"",".././src/models/Event.ts",".././src/handlers/EventHandler.ts",".././src/UI/Logger.ts",".././src/UI/InformationMessage.ts",".././src/UI/StatusBar.ts",".././src/UI/Status.ts",".././src/UI/StatusItem.ts",".././src/application/Helper.ts",".././src/application/Config.ts",".././src/commands/Command.ts",".././src/commands/ShowOutput.command.ts",".././src/commands/StartExtension.command.ts",".././src/commands/StopExtension.command.ts",".././src/application/Watcher.ts","../external \"fs\"",".././src/application/GitRepository.ts","../external \"path\"",".././src/models/Git.ts",".././src/models/Branch.ts",".././src/models/Submodule.ts",".././src/application/CMD.ts","../external \"child_process\"",".././node_modules/deep-diff/index.js",".././node_modules/simple-git/promise.js",".././node_modules/simple-git/src/git.js",".././node_modules/debug/src/index.js",".././node_modules/debug/src/browser.js",".././node_modules/debug/src/common.js",".././node_modules/ms/index.js",".././node_modules/debug/src/node.js","../external \"tty\"","../external \"util\"",".././node_modules/supports-color/index.js","../external \"os\"",".././node_modules/has-flag/index.js",".././node_modules/simple-git/src/util/deferred.js",".././node_modules/simple-git/src/util/exists.js",".././node_modules/simple-git/src/responses/index.js",".././node_modules/simple-git/src/responses/BranchDeleteSummary.js",".././node_modules/simple-git/src/responses/BranchSummary.js",".././node_modules/simple-git/src/responses/CommitSummary.js",".././node_modules/simple-git/src/responses/DiffSummary.js",".././node_modules/simple-git/src/responses/FetchSummary.js",".././node_modules/simple-git/src/responses/FileStatusSummary.js",".././node_modules/simple-git/src/responses/ListLogSummary.js",".././node_modules/simple-git/src/responses/MergeSummary.js",".././node_modules/simple-git/src/responses/PullSummary.js",".././node_modules/simple-git/src/responses/MoveSummary.js",".././node_modules/simple-git/src/responses/StatusSummary.js",".././node_modules/simple-git/src/responses/TagList.js",".././node_modules/simple-git/src/index.js",".././node_modules/simple-git/src/util/dependencies.js","../external \"buffer\"",".././src/application/Features.ts",".././src/handlers/exit/PushBeforeClosingIDE.handler.ts",".././src/UI/QuickPick.ts",".././src/UI/QuickPickOption.ts",".././src/handlers/ChangeHandler.ts",".././src/handlers/git/GitHandler.handler.ts",".././src/handlers/git/branch_changed/BranchWarn.handler.ts",".././src/UI/InputBox.ts",".././src/UI/MessageOption.ts",".././src/handlers/git/branch_changed/CheckForRemote.handler.ts",".././src/handlers/git/branch_changed/DetectDetachedHead.handler.ts",".././src/handlers/git/commits/MergeCommits.handler.ts",".././src/handlers/git/commits/PullCommits.handler.ts",".././src/handlers/git/commits/PushCommit.handler.ts",".././src/handlers/git/push/PushSubmodulesFirst.handler.ts",".././src/handlers/start/CheckConfigVariables.handler.ts",".././src/handlers/start/CheckRemoteChanges.handler.ts",".././src/handlers/start/PerformStartupCheckOfRepositories.handler.ts",".././src/handlers/start/UpdateInitSubmodules.handler.ts",".././src/handlers/start/WatcherStart.handler.ts",".././src/handlers/submodule/update/HandleSubmoduleUpdate.handler.ts",".././src/handlers/submodule/SubmoduleHandler.handler.ts"],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;;;;;;;;;AAGiC;AACA;AACX;AACgB;AAClB;AACA;AACM;AACG;AACd;AAC4B;AAEvD,IAAI,OAAyB;AAE7B,6EAA6E;AACtE,MAAM,QAAQ,GAAG,CAAC,GAAqB,EAAQ,EAAE;IACvD,OAAO,GAAG,GAAG;IAEb,kDAAM,CAAC,IAAI,EAAE;IAEb,iDAAM,CAAC,4EAAgB,EAAE,GAAG,OAAO,EAAE,CAAC,MAAM,EAAE,EAAE;QAC/C,IAAI,MAAM,EAAE;YACX,aAAa,EAAE;SACf;aAAM;YACN,6DAAQ,CAAC,qBAAqB,CAAC,OAAO,CAAC;SACvC;IACF,CAAC,CAAC;AACH,CAAC;AAED,2DAA2D;AACpD,MAAM,UAAU,GAAG,GAAS,EAAE,CAAC,kDAAM,CAAC,WAAW,CAAC,uBAAuB,CAAC;AAEjF,MAAM,aAAa,GAAG,GAAwB,EAAE;IAC/C,2DAAM,CAAC,UAAU,EAAE;IAEnB,MAAM,6DAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC;IAExC,IAAI,CAAC,2DAAM,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;QACjC,kDAAM,CAAC,WAAW,CAAC,sCAAsC,CAAC;QAE1D,OAAM;KACN;IACD,cAAc,EAAE;AACjB,CAAC;AAEM,MAAM,cAAc,GAAG,GAAwB,EAAE;IACvD,qDAAS,CAAC,aAAa,CAAC,OAAO,CAAC;IAEhC,MAAM,6DAAQ,CAAC,cAAc,EAAE;IAE/B,MAAM,MAAM,GAAG,kDAAM,CAAC,iBAAiB,EAAE;IACzC,qDAAS,CAAC,SAAS,CAAC,MAAM,CAAC;IAE3B,MAAM,8DAAY,CAAC,MAAM,CAAC,qDAAK,CAAC,KAAK,CAAC;IAEtC,qDAAS,CAAC,YAAY,CAAC,MAAM,CAAC;AAC/B,CAAC;;;;;;;;AC1DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;AAGsE;AACpB;AACC;AACF;AAE7D,MAAM,QAAQ,GAAG,CAAC,8EAA2B,EAAE,oEAAiB,EAAE,wEAAc,EAAE,uEAAa,CAAC;AAChG;;GAEG;AACY,MAAM,QAAQ;IAC5B;;;OAGG;IACH,MAAM,CAAC,gBAAgB,CAAC,OAAyB;QAChD,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC5B,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC;QACjC,CAAC,CAAC;IACH,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,qBAAqB,CAAC,OAAyB;QACrD,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC5B,OAAO,CAAC,oBAAoB,CAAC,OAAO,CAAC;QACtC,CAAC,CAAC;IACH,CAAC;CACD;;;;;;;;ACjCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;;;;;;;;;AAEuC;AAChB;AACgB;AACpB;AAE/B;;;GAGG;AACY,MAAM,2BAA4B,SAAQ,gDAAO;IAC/D,MAAM,CAAC,eAAe,CAAC,OAAyB;QAC/C,gDAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,sBAAsB,EAAE,2BAA2B,CAAC,oBAAoB,CAAC;QACnG,gDAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,0BAA0B,EAAE,2BAA2B,CAAC,wBAAwB,CAAC;IAC5G,CAAC;IAED,MAAM,CAAC,oBAAoB,CAAC,OAAyB;QACpD,gDAAO,CAAC,QAAQ,CACf,OAAO,EACP,sBAAsB,EACtB,+CAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,oCAAoC,CAAC,CACxE;QACD,gDAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,0BAA0B,EAAE,+CAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC;IACnH,CAAC;IAED,MAAM,CAAO,oBAAoB;;YAChC,MAAM,8DAAY,CAAC,MAAM,CAAC,qDAAK,CAAC,IAAI,EAAE,KAAK,CAAC;QAC7C,CAAC;KAAA;IAED,MAAM,CAAO,wBAAwB;;YACpC,MAAM,8DAAY,CAAC,MAAM,CAAC,qDAAK,CAAC,IAAI,EAAE,IAAI,CAAC;QAC5C,CAAC;KAAA;CACD;;;;;;;ACjCD,mC;;;;;;;ACAA;AAAA,IAAK,KAaJ;AAbD,WAAK,KAAK;IACT,sBAAa;IACb,sBAAa;IACb,0CAAiC;IACjC,oBAAW;IACX,kDAAyC;IACzC,oCAA2B;IAC3B,gDAAuC;IACvC,kDAAyC;IACzC,8BAAqB;IACrB,wBAAe;IACf,gCAAuB;IACvB,8CAAqC;AACtC,CAAC,EAbI,KAAK,KAAL,KAAK,QAaT;AAEc,oEAAK;;;;;;;;ACfpB;AAAA;AAAA;AAAY;;;;;;;;;;AAEqB;AAIjC;;GAEG;AACY,MAAM,YAAY;IAIhC;;;OAGG;IACK,MAAM,CAAC,iBAAiB,CAAC,WAAkB;QAClD,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;YAClD,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC;SAChD;QACD,MAAM,GAAG,GAAG,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC;QACxD,IAAI,GAAG,EAAE;YACR,OAAO,GAAG;SACV;QAED,OAAO,EAAE;IACV,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,gBAAgB;QACtB,YAAY,CAAC,cAAc,GAAG,IAAI,GAAG,EAAE;QACvC,YAAY,CAAC,KAAK,GAAG,CAAC;QACtB,kDAAM,CAAC,WAAW,CAAC,8BAA8B,CAAC;IACnD,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,eAAe,CAAC,WAAkB,EAAE,OAA6B;QACvE,MAAM,QAAQ,GAAG,YAAY,CAAC,iBAAiB,CAAC,WAAW,CAAC;QAC5D,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,kDAAM,CAAC,WAAW,CAAC,sBAAsB,OAAO,CAAC,IAAI,cAAc,WAAW,WAAW,CAAC;IAC3F,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAO,MAAM,CAAC,WAAkB,EAAE,OAAa;;YACpD,MAAM,QAAQ,GAAG,YAAY,CAAC,iBAAiB,CAAC,WAAW,CAAC;YAC5D,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACrB,OAAM;aACN;YAED,YAAY,CAAC,KAAK,EAAE;YAEpB,MAAM,aAAa,GAAG,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC;YACpD,MAAM,eAAe,GAAG,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC;YAEvD,MAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE;YACnC,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;gBAC/B,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE;gBACjC,kDAAM,CAAC,WAAW,CAAC,gBAAgB,aAAa,KAAK,OAAO,CAAC,IAAI,GAAG,CAAC;gBACrE,2CAA2C;gBAC3C,MAAM,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC;gBAC7B,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE;gBAC/B,MAAM,aAAa,GAAG,CAAC,YAAY,GAAG,cAAc,CAAC,GAAG,IAAI;gBAC5D,kDAAM,CAAC,WAAW,CAAC,gBAAgB,eAAe,KAAK,OAAO,CAAC,IAAI,MAAM,aAAa,IAAI,CAAC;aAC3F;YACD,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE;YACjC,MAAM,eAAe,GAAG,CAAC,cAAc,GAAG,gBAAgB,CAAC,GAAG,IAAI;YAClE,kDAAM,CAAC,WAAW,CACjB,WAAW,QAAQ,CAAC,MAAM,YACzB,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAC9B,gBAAgB,WAAW,MAAM,eAAe,IAAI,CACpD;YAED,YAAY,CAAC,KAAK,EAAE;QACrB,CAAC;KAAA;IAED;;;OAGG;IACK,MAAM,CAAC,WAAW,CAAC,EAAW;QACrC,OAAO,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE;IACpF,CAAC;;AAlFc,2BAAc,GAAsB,IAAI,GAAG,EAAE;AAC7C,kBAAK,GAAG,CAAC;;;;;;;;ACXzB;AAAA;AAAA;AAAA;AAAA;AAAY;AAEkC;AACO;AAErD;;GAEG;AACY,MAAM,MAAM;IAG1B;;OAEG;IACH,MAAM,CAAC,IAAI;QACV,MAAM,CAAC,MAAM,GAAG,6CAAM,CAAC,mBAAmB,CAAC,eAAe,CAAC;IAC5D,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,UAAU;QAChB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;IACrB,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,WAAW,CAAC,OAAe,EAAE,eAAwB,KAAK;QAChE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,mBAAmB,EAAE,GAAG,OAAO,CAAC;QACzD,IAAI,YAAY,EAAE;YACjB,2DAAkB,CAAC,sBAAsB,CAAC,OAAO,CAAC;SAClD;IACF,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,SAAS,CAAC,KAAa,EAAE,eAAwB,KAAK;QAC5D,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,KAAK,EAAE,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;QAC5C,IAAI,YAAY,EAAE;YACjB,2DAAkB,CAAC,sBAAsB,CAAC,KAAK,CAAC;SAChD;IACF,CAAC;CACD;AAED,MAAM,mBAAmB,GAAG,GAAW,EAAE;IACxC,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE;IACtB,MAAM,IAAI,GAAG,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;IAChD,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;IAEhD,OAAO,IAAI,IAAI,IAAI,MAAM,IAAI,MAAM,IAAI;AACxC,CAAC;AAED,MAAM,eAAe,GAAG,CAAC,KAAa,EAAU,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK;;;;;;;;AC5DlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;;;;;;;;;AAEmB;AACF;AAEM;AACN;AACa;AAE1C;;GAEG;AACY,MAAM,kBAAkB;IACtC;;;;OAIG;IACH,MAAM,CAAC,sBAAsB,CAAC,OAAe,EAAE,GAAG,OAAwB;QACzE,OAAO,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,EAAE;YACpC,IAAI,QAAQ,GAAG,KAAK;YAEpB,MAAM,UAAU,GAAI,2DAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAY,IAAI,CAAC;YACxE,iFAAiF;YACjF,UAAU,CAAC,GAAG,EAAE;gBACf,IAAI,CAAC,QAAQ,EAAE;oBACd,QAAQ,GAAG,IAAI;oBACf,OAAO,CAAC,EAAE,CAAC;iBACX;gBAED,OAAM;YACP,CAAC,EAAE,UAAU,CAAC;YAEd,iCAAiC;YACjC,MAAM,IAAI,GAA8B,MAAM,6CAAM,CAAC,sBAAsB,CAAC,OAAO,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC;YACpG,IAAI,QAAQ,EAAE;gBACb,kDAAS,CAAC,SAAS,CAAC,+CAAM,CAAC,mBAAmB,EAAE,CAAC;gBAEjD,OAAM;aACN;YAED,IAAI,IAAI,EAAE;gBACT,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;gBACpB,QAAQ,GAAG,IAAI;gBAEf,OAAM;aACN;YAED,uDAAuD;YACvD,+CAAM,CAAC,WAAW,CAAC,0BAA0B,OAAO,IAAI,CAAC;YACzD,OAAO,CAAC,EAAE,CAAC;YAEX,OAAM;QACP,CAAC,EAAC;IACH,CAAC;CACD;;;;;;;;ACvDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;AAEwE;AACvD;AAGtB,MAAM,eAAe,GAAW,IAAI;AACpC,MAAM,SAAS,GAAW,GAAG;AACpC,MAAM,iBAAiB,GAAW,GAAG;AACrC,MAAM,oBAAoB,GAAW,CAAC;AAEtC;;GAEG;AACY,MAAM,SAAS;IAM7B;;;OAGG;IACH,MAAM,CAAC,aAAa,CAAC,OAAyB;QAC7C,SAAS,CAAC,aAAa,GAAG,6CAAM,CAAC,mBAAmB,CAAC,yDAAkB,CAAC,IAAI,EAAE,CAAC,CAAC;QAChF,SAAS,CAAC,aAAa,CAAC,OAAO,GAAG,0BAA0B;QAC5D,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QACnD,SAAS,CAAC,MAAM,GAAG,EAAE;QACrB,SAAS,CAAC,SAAS,GAAG,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,SAAS,CAAC,MAAkB;QAClC,+CAAM,CAAC,WAAW,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QACvD,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QAC7B,SAAS,CAAC,gBAAgB,EAAE;IAC7B,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,YAAY,CAAC,MAAkB;QACrC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,MAAM,CAAC;QACrE,SAAS,CAAC,gBAAgB,EAAE;IAC7B,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,aAAa,CAAC,MAAkB;QACtC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,qBAAqB,EAAE,KAAK,MAAM,EAAE;YAC7E,OAAM;SACN;QAED,IAAI,IAAI,GAAG,GAAG,MAAM,CAAC,YAAY,EAAE,GAAG;QACtC,IAAI,IAAI,IAAI,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;QACzD,IAAI,IAAI,MAAM,CAAC,YAAY,EAAE;QAC7B,IAAI,IAAI,IAAI,KAAK,CAAC,oBAAoB,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;QAEhF,SAAS,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI;QAEnC,IAAI,EAAE,SAAS,CAAC,SAAS,GAAG,oBAAoB,EAAE;YACjD,SAAS,CAAC,SAAS,GAAG,CAAC;SACvB;QAED,UAAU,CAAC,GAAG,EAAE;YACf,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC;QAChC,CAAC,EAAE,iBAAiB,CAAC;IACtB,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,gBAAgB;QAC9B,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM;QACtC,IAAI,CAAC,MAAM,EAAE;YACZ,SAAS,CAAC,aAAa,CAAC,IAAI,EAAE;YAE9B,OAAM;SACN;QAED,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAEzC,MAAM,IAAI,GAAG,SAAS,CAAC,qBAAqB,EAAE;QAC9C,IAAI,IAAI,EAAE;YACT,MAAM,GAAG,IAAI;SACb;QAED,SAAS,CAAC,aAAa,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,EAAE;QAChD,SAAS,CAAC,aAAa,CAAC,IAAI,EAAE;QAC9B,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;YACxB,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC;SAC/B;QACD,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;YACzB,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,SAAS,CAAC,SAAS,CAAC;SACjD;IACF,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,qBAAqB;QACnC,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,UAAsB,EAAE,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QAC7F,IAAI,QAAQ,CAAC,MAAM,EAAE;YACpB,OAAO,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,UAAsB,EAAE,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC/F,IAAI,SAAS,CAAC,MAAM,EAAE;YACrB,OAAO,SAAS,CAAC,CAAC,CAAC;SACnB;QAED,OAAO,SAAS;IACjB,CAAC;IAED;;;;OAIG;IACK,MAAM,CAAC,QAAQ,CAAC,MAAkB,EAAE,SAAiB;QAC5D,IAAI,SAAS,CAAC,SAAS,KAAK,SAAS,IAAI,SAAS,CAAC,qBAAqB,EAAE,KAAK,MAAM,EAAE;YACtF,OAAM;SACN;QACD,MAAM,QAAQ,GAAG,MAAM,CAAC,iBAAiB,EAAE;QAE3C,IAAI,CAAC,QAAQ,EAAE;YACd,UAAU,CAAC,GAAG,EAAE;gBACf,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC;YACtC,CAAC,EAAE,SAAS,CAAC;YAEb,OAAM;SACN;QACD,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC;IAC/B,CAAC;;AAzHM,mBAAS,GAAW,CAAC;;;;;;;;AClB7B;AAAA;AAAA;AAAA;AAAY;AAEyB;AACoB;AAEzD;;GAEG;AACY,MAAM,MAAM;IAC1B,MAAM,CAAC,iBAAiB;QACvB,OAAO,mDAAU,CAAC,qBAAqB,CAAC,uBAAuB,CAAC;IACjE,CAAC;IACD,MAAM,CAAC,cAAc;QACpB,OAAO,IAAI,mDAAU,CAAC,uBAAuB,CAAC;IAC/C,CAAC;IACD,MAAM,CAAC,gBAAgB;QACtB,OAAO,mDAAU,CAAC,sBAAsB,CAAC,yBAAyB,CAAC;IACpE,CAAC;IACD,MAAM,CAAC,iBAAiB,CAAC,QAAgB,EAAE,KAAa;QACvD,OAAO,mDAAU,CAAC,sBAAsB,CAAC,wBAAwB,QAAQ,aAAa,KAAK,GAAG,CAAC;IAChG,CAAC;IACD,MAAM,CAAC,yBAAyB;QAC/B,OAAO,mDAAU,CAAC,sBAAsB,CAAC,kCAAkC,CAAC;IAC7E,CAAC;IAED,MAAM,CAAC,2BAA2B,CAAC,cAAsB,EAAE,MAAc;QACxE,MAAM,OAAO,GAAG,4CAA4C,MAAM,GAAG;QAErE,OAAO,mDAAU,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACpF,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,cAAsB;QAC7C,OAAO,mDAAU,CAAC,qBAAqB,CAAC,wBAAwB,6EAAiB,CAAC,cAAc,CAAC,GAAG,CAAC;IACtG,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,cAAsB,EAAE,MAAc,EAAE,MAAc;QAC1E,OAAO,mDAAU,CAAC,qBAAqB,CACtC,sBAAsB,MAAM,gBAAgB,MAAM,UAAU,6EAAiB,CAAC,cAAc,CAAC,GAAG,CAChG;IACF,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,cAAsB,EAAE,MAAc,EAAE,MAAc;QAC7E,MAAM,OAAO,GAAG,WAAW,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,iBAAiB;QAEzE,OAAO,mDAAU,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACpF,CAAC;IACD,MAAM,CAAC,aAAa,CAAC,cAAsB,EAAE,MAAc,EAAE,MAAc,EAAE,QAAgB,CAAC;QAC7F,MAAM,OAAO,GAAG,GAAG,KAAK,uBAAuB,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG;QAE/E,OAAO,mDAAU,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACpF,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,cAAsB,EAAE,MAAc,EAAE,MAAc,EAAE,QAAgB,CAAC;QAC9F,MAAM,OAAO,GAAG,WAAW,KAAK,gBAAgB,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG;QAEhF,OAAO,mDAAU,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACnF,CAAC;IACD,MAAM,CAAC,aAAa,CAAC,cAAsB,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,CAAC;QAC9F,MAAM,OAAO,GAAG,GAAG,MAAM,yBAAyB,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG;QAElF,OAAO,mDAAU,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACpF,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,cAAsB,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,CAAC;QAC/F,MAAM,OAAO,GAAG,WAAW,MAAM,kBAAkB,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG;QAEnF,OAAO,mDAAU,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACnF,CAAC;IACD,MAAM,CAAC,aAAa,CACnB,cAAsB,EACtB,MAAc,EACd,MAAc,EACd,QAAgB,CAAC,EACjB,SAAiB,CAAC;QAElB,MAAM,OAAO,GAAG,GAAG,KAAK,MAAM,MAAM,uBAAuB,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG;QAE3F,OAAO,mDAAU,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACpF,CAAC;IACD,MAAM,CAAC,cAAc,CACpB,cAAsB,EACtB,MAAc,EACd,MAAc,EACd,QAAgB,CAAC,EACjB,SAAiB,CAAC;QAElB,MAAM,OAAO,GAAG,WAAW,KAAK,MAAM,MAAM,gBAAgB,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG;QAE5F,OAAO,mDAAU,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACnF,CAAC;IAED,MAAM,CAAC,0BAA0B,CAAC,cAAsB,EAAE,MAAc;QACvE,MAAM,OAAO,GAAG,gBAAgB,MAAM,GAAG;QAEzC,OAAO,mDAAU,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACpF,CAAC;IAED,MAAM,CAAC,gBAAgB;QACtB,OAAO,mDAAU,CAAC,sBAAsB,CAAC,wBAAwB,CAAC;IACnE,CAAC;IACD,MAAM,CAAC,eAAe;QACrB,OAAO,mDAAU,CAAC,sBAAsB,CAAC,2BAA2B,CAAC;IACtE,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,MAAc;QAClC,OAAO,mDAAU,CAAC,sBAAsB,CAAC,eAAe,MAAM,WAAW,CAAC;IAC3E,CAAC;IAED,MAAM,CAAC,gBAAgB;QACtB,OAAO,mDAAU,CAAC,sBAAsB,CAAC,oBAAoB,CAAC;IAC/D,CAAC;IAED,MAAM,CAAC,mBAAmB;QACzB,OAAO,mDAAU,CAAC,sBAAsB,CAAC,yDAAyD,CAAC;IACpG,CAAC;CACD;AAED,MAAM,gBAAgB,GAAG,CAAC,OAAe,EAAE,cAAsB,EAAU,EAAE;IAC5E,IAAI,cAAc,CAAC,MAAM,EAAE;QAC1B,OAAO,IAAI,kBAAkB,cAAc,GAAG;KAC9C;IAED,OAAO,OAAO;AACf,CAAC;AAED,MAAM,aAAa,GAAG,CAAC,MAAc,EAAE,MAAc,EAAU,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM;;;;;;;;AC3HvG;AAAA;AAAA;AAAA;AAAY;AAE4C;AAExD,IAAY,OAIX;AAJD,WAAY,OAAO;IAClB,iCAAwB;IACxB,2BAAkB;IAClB,2BAAkB;AACnB,CAAC,EAJW,OAAO,KAAP,OAAO,QAIlB;AAED;;GAEG;AACY,MAAM,UAAU;IAO9B,YAAY,OAAe,EAAE,EAAE,OAAgB,OAAO,CAAC,OAAO,EAAE,WAAoB,KAAK,EAAE,cAAsB,CAAC;QACjH,IAAI,CAAC,IAAI,GAAG,IAAI;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI;QAChB,IAAI,CAAC,QAAQ,GAAG,QAAQ;QACxB,IAAI,CAAC,SAAS,GAAG,WAAW,GAAG,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,WAAW;IAC/B,CAAC;IAED,MAAM,CAAC,sBAAsB,CAAC,IAAY;QACzC,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,0DAAe,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,qBAAqB,CAAC,IAAY;QACxC,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;IAChD,CAAC;IAED,UAAU;QACT,OAAO,IAAI,CAAC,QAAQ;IACrB,CAAC;IAED,WAAW;QACV,OAAO,IAAI,CAAC,SAAS;IACtB,CAAC;IAED,iBAAiB;QAChB,IAAI,CAAC,WAAW,IAAI,oDAAS;QAE7B,OAAO,IAAI,CAAC,WAAW,GAAG,CAAC;IAC5B,CAAC;IAED,QAAQ;QACP,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;IACvD,CAAC;IAED,YAAY;QACX,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE;IACtB,CAAC;IAED,YAAY;QACX,OAAO,IAAI,CAAC,IAAI;IACjB,CAAC;CACD;;;;;;;;AC7DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;AAEsB;AAElC;;GAEG;AACI,MAAM,gBAAgB,GAAG,GAAW,EAAE;IAC5C,IAAI,CAAC,gDAAS,CAAC,gBAAgB,EAAE;QAChC,OAAO,EAAE;KACT;IAED,OAAO,gDAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM;AAChD,CAAC;AAED;;;GAGG;AACI,MAAM,iBAAiB,GAAG,CAAC,cAAsB,EAAU,EAAE;IACnE,IAAI,IAAI,GAAG,cAAc;IACzB,yDAAyD;IACzD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;QACjB,IAAI,gDAAS,CAAC,gBAAgB,EAAE;YAC/B,IAAI,GAAG,gDAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI;SACzC;KACD;IAED,OAAO,IAAI;AACZ,CAAC;AAED;;;;GAIG;AACI,MAAM,SAAS,GAAG,CAAC,MAAW,EAAE,MAAW,EAAE,EAAE;IACrD,mHAAmH;IACnH,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QACtC,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,IAAI,GAAG,IAAI,MAAM,EAAE;YACnD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SAC/D;KACD;IACD,sCAAsC;IACtC,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,EAAE,MAAM,CAAC;IAEnC,OAAO,MAAM;AACd,CAAC;;;;;;;;AC/CD;AAAA;AAAA;AAAA;AAAA;AAAY;AACmE;AAE/E,IAAY,aAIX;AAJD,WAAY,aAAa;IACxB,oCAAqB;IACrB,8BAAe;IACf,sCAAuB;AACxB,CAAC,EAJW,aAAa,KAAb,aAAa,QAIxB;AAED;;GAEG;AACY,MAAM,MAAM;IAG1B;;OAEG;IACH,MAAM,CAAC,UAAU;QAChB,IAAI,CAAC,MAAM,GAAG,gDAAS,CAAC,gBAAgB,CAAC,eAAe,CAAC;IAC1D,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,QAAQ,CAAC,KAAa;;QAC5B,aAAO,MAAM,CAAC,MAAM,0CAAE,GAAG,CAAC,KAAK,EAAC;IACjC,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,SAAS,CAAC,KAAa;QAC7B,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,aAAa,CAAC,QAAQ,EAAE;YAC3C,OAAO,KAAK;SACZ;QAED,OAAO,IAAI;IACZ,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,OAAO,CAAC,KAAa;QAC3B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,0DAAmB,CAAC,MAAM,CAAC;IACpE,CAAC;CACD;;;;;;;;AClDD;AAAA;AAAA;AAAA;AAAA;AAAY;AAEuC;AAClB;AAEjC;;GAEG;AACY,MAAe,OAAO;IACpC;;;;;OAKG;IACO,MAAM,CAAC,QAAQ,CAAC,OAAyB,EAAE,aAAqB,EAAE,OAAY;QACvF,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,+CAAQ,CAAC,eAAe,CAAC,gBAAgB,GAAG,aAAa,EAAE,OAAO,CAAC,CAAC;QAC/F,kDAAM,CAAC,WAAW,CAAC,aAAa,aAAa,aAAa,CAAC;IAC5D,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,eAAe,CAAC,QAA0B;QAChD,MAAM,IAAI,SAAS,CAAC,sBAAsB,CAAC;IAC5C,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,oBAAoB,CAAC,QAA0B;QACrD,MAAM,IAAI,SAAS,CAAC,sBAAsB,CAAC;IAC5C,CAAC;CACD;;;;;;;;ACnCD;AAAA;AAAA;AAAA;AAAY;AAGqB;AACF;AAE/B;;GAEG;AACY,MAAM,iBAAkB,SAAQ,gDAAO;IACrD,MAAM,CAAC,eAAe,CAAC,OAAyB;QAC/C,gDAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,EAAE,iBAAiB,CAAC,cAAc,CAAC;IAC1E,CAAC;IAED,MAAM,CAAC,oBAAoB,CAAC,OAAyB;QACpD,gDAAO,CAAC,QAAQ,CACf,OAAO,EACP,YAAY,EACZ,kDAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,uDAAuD,EAAE,IAAI,CAAC,CAC5F;IACF,CAAC;IAED,MAAM,CAAC,cAAc;QACpB,kDAAM,CAAC,UAAU,EAAE;IACpB,CAAC;CACD;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;;;;;;;;;AAGmB;AACc;AACZ;AACkB;AACT;AAE1C;;GAEG;AACY,MAAM,cAAe,SAAQ,gDAAO;IAClD,MAAM,CAAC,eAAe,CAAC,OAAyB;QAC/C,gDAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,oBAAoB,EAAE,cAAc,CAAC,cAAc,CAAC;IAC/E,CAAC;IAED,MAAM,CAAC,oBAAoB,CAAC,OAAyB;QACpD,gDAAO,CAAC,QAAQ,CACf,OAAO,EACP,oBAAoB,EACpB,kDAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,uDAAuD,EAAE,IAAI,CAAC,CAC5F;IACF,CAAC;IAED,MAAM,CAAO,cAAc;;YAC1B,kDAAM,CAAC,WAAW,CAAC,gCAAgC,CAAC;YAEpD,2DAAM,CAAC,UAAU,EAAE;YACnB,8DAAY,CAAC,gBAAgB,EAAE;YAC/B,iEAAc,EAAE;QACjB,CAAC;KAAA;CACD;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAY;;;;;;;;;;AAGmB;AACa;AACX;AAEjC;;GAEG;AACY,MAAM,aAAc,SAAQ,gDAAO;IACjD,MAAM,CAAC,eAAe,CAAC,OAAyB;QAC/C,gDAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,mBAAmB,EAAE,aAAa,CAAC,aAAa,CAAC;IAC5E,CAAC;IAED,MAAM,CAAC,oBAAoB,CAAC,OAAyB;QACpD,gDAAO,CAAC,QAAQ,CACf,OAAO,EACP,mBAAmB,EACnB,kDAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,uDAAuD,EAAE,IAAI,CAAC,CAC5F;IACF,CAAC;IAED,MAAM,CAAO,aAAa;;YACzB,kDAAM,CAAC,WAAW,CAAC,gCAAgC,CAAC;YACpD,4DAAO,CAAC,IAAI,EAAE;QACf,CAAC;KAAA;CACD;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;;;;;;;;;AAEyB;AACF;AACgB;AAClB;AACA;AACM;AACI;AACA;AACd;AAE7B,MAAM,4BAA4B,GAAG,IAAI;AAEzC;;GAEG;AACY,MAAM,OAAO;IAO3B;;OAEG;IACH,MAAM,CAAO,KAAK;;YACjB,OAAO,CAAC,SAAS,GAAG,gDAAK,CAAC,gEAAgB,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,MAAc,EAAE,QAAa,EAAE,EAAE;gBACpG,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC;YACnC,CAAC,CAAC;YAEF,OAAO,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE;YAC9B,OAAO,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE;YAChC,OAAO,CAAC,YAAY,GAAG,+CAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC,IAAI,EAAE;YAEpE,qDAAS,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC;QACpC,CAAC;KAAA;IAED;;OAEG;IACH,MAAM,CAAC,OAAO;QACb,OAAO,CAAC,IAAI,EAAE;QACd,sDAAa,CAAC,KAAK,EAAE;QACrB,qDAAS,CAAC,SAAS,CAAC,kDAAM,CAAC,gBAAgB,EAAE,CAAC;QAC9C,kDAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC;QACvC,OAAO,CAAC,KAAK,EAAE;IAChB,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAI;QACV,IAAI,OAAO,CAAC,SAAS,EAAE;YACtB,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE;SACzB;QACD,qDAAS,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;IACvC,CAAC;IAED,6FAA6F;IAC7F,yBAAyB;IACzB,6FAA6F;IAE7F;;;OAGG;IACK,MAAM,CAAO,gBAAgB,CAAC,QAAgB;;YACrD,IAAI,CAAC,QAAQ,EAAE;gBACd,OAAM;aACN;YACD,qEAAqE;YACrE,IAAI,sDAAa,CAAC,mBAAmB,EAAE,EAAE;gBACxC,OAAM;aACN;YAED,mCAAmC;YACnC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;YAExC,IAAI,KAAK;YACT,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,EAAE;gBACxC,IAAI,CAAC,CAAC,MAAM,sDAAa,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,EAAE;oBAC1D,uBAAuB;oBACvB,KAAK,GAAG,sDAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,qDAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,qDAAK,CAAC,GAAG,CAAC;iBACrG;aACD;iBAAM,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;gBAC5C,sCAAsC;gBACtC,OAAM;aACN;iBAAM,IAAI,CAAC,MAAM,sDAAa,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE;gBACpE,oCAAoC;gBACpC,KAAK,GAAG,qDAAK,CAAC,cAAc;aAC5B;iBAAM;gBACN,8BAA8B;gBAC9B,KAAK,GAAG,qDAAK,CAAC,IAAI;aAClB;YACD,IAAI,KAAK,EAAE;gBACV,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC;aACnC;QACF,CAAC;KAAA;IAED;;;;OAIG;IACK,MAAM,CAAO,UAAU,CAAC,KAAY,EAAE,QAAgB;;YAC7D,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE,QAAQ,CAAC;YACrE,8DAAY,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC;QACzC,CAAC;KAAA;IAED;;;OAGG;IACK,MAAM,CAAC,cAAc,CAAC,QAAgB;QAC7C,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1F,CAAC;IAED;;;OAGG;IACK,MAAM,CAAC,eAAe,CAAC,KAAY;QAC1C,MAAM,GAAG,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC;QAC3C,IAAI,GAAG,EAAE;YACR,OAAO,GAAG;SACV;QAED,iEAAiE;QACjE,MAAM,GAAG,GAAG,IAAI,GAAG,EAAU;QAC7B,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC;QAEpC,OAAO,GAAG;IACX,CAAC;IAED;;;;OAIG;IACK,MAAM,CAAC,iBAAiB,CAAC,KAAY,EAAE,QAAgB;QAC9D,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC;QAEpD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,UAAU,CAAC,GAAG,EAAE;gBACf,MAAM,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;gBAC/C,gGAAgG;gBAChG,IAAI,UAAU,KAAK,SAAS,EAAE;oBAC7B,IAAI,YAAY,GAAa,EAAE;oBAC/B,YAAY,GAAG,CAAC,GAAG,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;oBAClD,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,GAAG,EAAE,CAAC;oBAC1C,kDAAM,CAAC,WAAW,CAAC,kBAAkB,KAAK,KAAK,YAAY,CAAC,MAAM,gBAAgB,CAAC;oBAEnF,OAAO,CAAC,YAAY,CAAC;iBACrB;YACF,CAAC,EAAE,4BAA4B,CAAC;QACjC,CAAC,CAAC;IACH,CAAC;IAED;;;;OAIG;IACK,MAAM,CAAC,SAAS,CAAC,KAAY,EAAE,QAAgB;QACtD,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;QAE5C,MAAM,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC;QACpD,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC;QAE1C,OAAO,WAAW;IACnB,CAAC;IAED;;;OAGG;IACK,MAAM,CAAC,aAAa,CAAC,KAAY;QACxC,MAAM,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;QAEzC,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;;AAhKc,cAAM,GAAG,kDAAM,CAAC,cAAc,EAAE;;;;;;;ACtBhD,+B;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;;;;;;;;;AAEe;AACE;AACE;AAEE;AACA;AACM;AAEhB;AACqB;AACU;AAEtD,MAAM,mBAAmB,GAAa,CAAC,MAAM,EAAE,YAAY,EAAE,eAAe,CAAC;AAE7E;;GAEG;AACY,MAAM,aAAa;IAMjC;;OAEG;IACH,MAAM,CAAC,KAAK;QACX,aAAa,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE;QACnC,aAAa,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE;IACrC,CAAC;IAED;;;OAGG;IACK,MAAM,CAAC,YAAY,CAAC,iBAAyB,EAAE;QACtD,IAAI,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;YACjD,OAAO,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC;SACnD;QACD,MAAM,SAAS,GAAG,mBAAO,CAAC,EAAoB,CAAC,CAAC,iDAAI,CAAC,gEAAgB,EAAE,EAAE,cAAc,CAAC,CAAC;QACzF,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC;QAEvD,OAAO,SAAS;IACjB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAO,WAAW,CAAC,iBAAyB,EAAE,EAAE,qBAA6B,EAAE;;YACpF,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;YAEpD,IAAI,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;YAC1D,IAAI,QAAQ,EAAE;gBACb,OAAO,QAAQ;aACf;YAED,mDAAmD;YACnD,QAAQ,GAAG,MAAM,aAAa,CAAC,cAAc,CAAC,cAAc,EAAE,kBAAkB,CAAC;YAEjF,OAAO,QAAQ;QAChB,CAAC;KAAA;IAED;;;;OAIG;IACK,MAAM,CAAC,WAAW,CAAC,iBAAyB,EAAE,EAAE,QAAa;QACpE,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;QACpD,MAAM,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;QAC5D,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC;QAErD,yCAAyC;QACzC,IAAI,QAAQ,EAAE;YACb,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC;SAC9B;IACF,CAAC;IAED;;;OAGG;IACH,MAAM,CAAO,oBAAoB,CAAC,QAAgB;;YACjD,kBAAkB;YAClB,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1B,OAAO,IAAI;aACX;YACD,mBAAmB;YACnB,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;gBACtF,OAAO,IAAI;aACX;YACD,uBAAuB;YACvB,MAAM,cAAc,GAAG,CAAC,MAAM,aAAa,CAAC,WAAW,EAAE,CAAC;iBACxD,aAAa,EAAE;iBACf,MAAM,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,eAAe,GAAG,SAAS,CAAC,OAAO,EAAE,KAAK,QAAQ,CAAC;YAC3E,IAAI,cAAc,CAAC,MAAM,EAAE;gBAC1B,OAAO,IAAI;aACX;YAED,OAAO,KAAK;QACb,CAAC;KAAA;IAED;;;OAGG;IACH,MAAM,CAAC,mBAAmB,CAAC,QAAgB;QAC1C,OAAO,IAAI,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;IACxD,CAAC;IAED;;;OAGG;IACH,MAAM,CAAO,iBAAiB,CAAC,QAAgB;;YAC9C,MAAM,SAAS,GAAG,CAAC,MAAM,aAAa,CAAC,WAAW,EAAE,CAAC;iBACnD,aAAa,EAAE;iBACf,IAAI,CAAC,CAAC,SAAoB,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEtF,OAAO,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE;QAC5C,CAAC;KAAA;IAED;;OAEG;IACH,MAAM,CAAC,mBAAmB;QACzB,OAAO,aAAa,CAAC,UAAU;IAChC,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,aAAa;QAC3B,aAAa,CAAC,UAAU,GAAG,IAAI;IAChC,CAAC;IAED;;;;OAIG;IACK,MAAM,CAAC,WAAW,CAAC,cAAsB,EAAE,MAAe;QACjE,aAAa,CAAC,SAAS,CAAC,cAAc,EAAE,MAAM,CAAC;QAC/C,aAAa,CAAC,UAAU,GAAG,KAAK;IACjC,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAO,SAAS,CAAC,cAAsB,EAAE,MAAe;;YAC7D,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBAC3B,OAAM;aACN;YAED,MAAM,SAAS,GAAG,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC;YAE5D,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,EAAE;YACjG,MAAM,YAAY,GAAG,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa;YACtE,IAAI,kBAAkB,GAAG,KAAK;YAE9B,wBAAwB;YACxB,MAAM,SAAS,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAC;YAC1F,IAAI,kBAAkB,EAAE;gBACvB,MAAM,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;aACtC;YAED,0DAA0D;YAC1D,UAAU,CAAC,GAAS,EAAE;gBACrB,MAAM,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC;gBAEnC,IAAI,CAAC,kBAAkB,EAAE;oBACxB,SAAS,CAAC,iBAAiB,CAAC,YAAY,CAAC;iBACzC;gBAED,kDAAM,CAAC,WAAW,CAAC,yBAAyB,CAAC;YAC9C,CAAC,GAAE,EAAE,CAAC;QACP,CAAC;KAAA;IAED,6FAA6F;IAC7F,sBAAsB;IACtB,6FAA6F;IAE7F;;;OAGG;IACH,MAAM,CAAO,cAAc,CAAC,iBAAyB,EAAE,EAAE,qBAA6B,EAAE;;YACvF,IAAI,SAAS;YACb,IAAI;gBACH,SAAS,GAAG,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC;aACtD;YAAC,OAAO,KAAK,EAAE;gBACf,kDAAM,CAAC,WAAW,CAAC,mBAAmB,cAAc,YAAY,CAAC;gBAEjE,OAAO,IAAI,mDAAG,EAAE;aAChB;YACD,MAAM,QAAQ,GAAG,IAAI,mDAAG,CAAC,cAAc,CAAC;YAExC,IAAI;gBACH,mCAAmC;gBACnC,MAAM,SAAS,CAAC,KAAK,EAAE;aACvB;YAAC,OAAO,KAAK,EAAE;gBACf,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE;oBAC9C,kDAAM,CAAC,WAAW,CAAC,0CAA0C,CAAC;iBAC9D;qBAAM;oBACN,kDAAM,CAAC,WAAW,CAAC,+CAA+C,cAAc,EAAE,CAAC;iBACnF;aACD;YAED,IAAI,kBAAkB,EAAE;gBACvB,QAAQ,CAAC,qBAAqB,CAAC,kBAAkB,CAAC;aAClD;YAED,MAAM,IAAI,GAAG,kDAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC;YACpD,qDAAS,CAAC,SAAS,CAAC,IAAI,CAAC;YAEzB,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,MAAM,EAAE;YAEvC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;YACjC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;YAC/B,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC;YAClC,IAAI,MAAM,CAAC,QAAQ,EAAE;gBACpB,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD;YAED,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,MAAM,EAAE;YACzC,IAAI,QAAQ,CAAC,SAAS,EAAE,KAAK,MAAM,EAAE;gBACpC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC;aACpC;YACD,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAE3C,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAEvC,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,UAAU,EAAE;YAC5C,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC;YAE5B,MAAM,MAAM,GAAG,MAAM,4CAAG,CAAC,cAAc,CAAC,eAAe,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;YAC5E,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAE3E,aAAa,CAAC,WAAW,CAAC,cAAc,EAAE,QAAQ,CAAC;YAEnD,qDAAS,CAAC,YAAY,CAAC,IAAI,CAAC;YAE5B,OAAO,QAAQ;QAChB,CAAC;KAAA;IAED,6FAA6F;IAC7F,oBAAoB;IACpB,6FAA6F;IAE7F;;;OAGG;IACH,MAAM,CAAO,YAAY,CAAC,iBAAyB,EAAE;;YACpD,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;YAChE,MAAM,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE;YAEvC,IAAI,CAAC,QAAQ,EAAE;gBACd,OAAO,QAAQ;aACf;YAED,MAAM,QAAQ,GAAG,sDAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE;YAEnD,IAAI,IAAI,GAAQ,EAAE;YAClB,+CAA+C;YAC/C,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAW,EAAE,EAAE;gBAChC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;oBAClC,OAAM;iBACN;gBAED,IAAI,WAAW,GAAG,MAAM,CAAC,GAAG;gBAC5B,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,WAAmB,EAAE,EAAE;oBACrD,MAAM,GAAG,GAAQ,EAAE;oBACnB,GAAG,CAAC,WAAW,CAAC,GAAG,WAAW;oBAC9B,WAAW,GAAG,GAAG;gBAClB,CAAC,CAAC;gBAEF,IAAI,WAAW,CAAC,QAAQ,EAAE;oBACzB,WAAW,CAAC,QAAQ,GAAG,SAAS;iBAChC;gBAED,IAAI,GAAG,yDAAS,CAAC,IAAI,EAAE,WAAW,CAAC;YACpC,CAAC,CAAC;YAEF,OAAO,IAAI;QACZ,CAAC;KAAA;IAED,6FAA6F;IAC7F,UAAU;IACV,6FAA6F;IAE7F;;OAEG;IACH,MAAM,CAAO,IAAI;;YAChB,MAAM,WAAW,GAAG,aAAa,CAAC,YAAY,EAAE;YAChD,MAAM,WAAW,CAAC,IAAI,EAAE;YACxB,MAAM,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC;YAC5B,MAAM,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC;QACzC,CAAC;KAAA;IAED,6FAA6F;IAC7F,sBAAsB;IACtB,6FAA6F;IAE7F;;;OAGG;IACH,MAAM,CAAC,iBAAiB,CAAC,QAAgB;QACxC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACtC,4CAAG,CAAC,cAAc,CAAC,oBAAoB,QAAQ,EAAE,CAAC;iBAChD,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;oBACnB,OAAO,MAAM,EAAE;iBACf;gBACD,OAAO,CAAC,MAAM,CAAC;YAChB,CAAC,CAAC;iBACD,KAAK,CAAC,MAAM,CAAC;QAChB,CAAC,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAO,iBAAiB,CAC7B,QAAgB,EAChB,KAAa,EACb,QAA4B,QAAQ;;YAEpC,MAAM,4CAAG,CAAC,cAAc,CAAC,gBAAgB,KAAK,IAAI,QAAQ,IAAI,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;gBACjF,kDAAM,CAAC,SAAS,CAAC,yCAAyC,QAAQ,GAAG,CAAC;gBAEtE,OAAM;YACP,CAAC,CAAC;YAEF,qDAAS,CAAC,SAAS,CAAC,kDAAM,CAAC,iBAAiB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC;KAAA;IAED,6FAA6F;IAC7F,oBAAoB;IACpB,6FAA6F;IAE7F;;;;;OAKG;IACH,MAAM,CAAO,aAAa,CAAC,cAAsB,EAAE,MAAc,EAAE,MAAc;;YAChF,MAAM,MAAM,GAAG,kDAAM,CAAC,aAAa,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,CAAC;YACnE,qDAAS,CAAC,SAAS,CAAC,MAAM,CAAC;YAC3B,aAAa,CAAC,aAAa,EAAE;YAE7B,MAAM,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE;YAE7F,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;YACzC,qDAAS,CAAC,YAAY,CAAC,MAAM,CAAC;QAC/B,CAAC;KAAA;IAED,6FAA6F;IAC7F,cAAc;IACd,6FAA6F;IAE7F;;;;OAIG;IACH,MAAM,CAAO,eAAe,CAAC,iBAAyB,EAAE,EAAE,MAAc;;YACvE,MAAM,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC5E,kDAAM,CAAC,aAAa,CAAC,MAAM,CAAC;QAC7B,CAAC;KAAA;IAED;;;;OAIG;IACH,MAAM,CAAO,2BAA2B,CAAC,cAAsB,EAAE,MAAc;;YAC9E,aAAa,CAAC,aAAa,EAAE;YAE7B,MAAM,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC;iBAC9C,QAAQ,CAAC,MAAM,CAAC;iBAChB,KAAK,CAAC,GAAG,EAAE;gBACX,IAAI,OAAO,GAAG,8BAA8B,MAAM,GAAG;gBACrD,IAAI,cAAc,CAAC,MAAM,EAAE;oBAC1B,OAAO,IAAI,kBAAkB,cAAc,GAAG;iBAC9C;gBACD,kDAAM,CAAC,SAAS,CAAC,OAAO,CAAC;gBACzB,aAAa,CAAC,WAAW,CAAC,cAAc,EAAE,MAAM,CAAC;gBAEjD,OAAM;YACP,CAAC,CAAC;YAEH,qDAAS,CAAC,SAAS,CAAC,kDAAM,CAAC,0BAA0B,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;YAC9E,aAAa,CAAC,WAAW,CAAC,cAAc,EAAE,MAAM,CAAC;QAClD,CAAC;KAAA;IAED;;;OAGG;IACH,MAAM,CAAO,gBAAgB,CAAC,cAAsB;;YACnD,aAAa,CAAC,aAAa,EAAE;YAC7B,MAAM,4CAAG,CAAC,cAAc,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;gBACrE,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;gBACzC,kDAAM,CAAC,SAAS,CAAC,sCAAsC,EAAE,IAAI,CAAC;gBAE9D,OAAM;YACP,CAAC,CAAC;YAEF,qDAAS,CAAC,SAAS,CAAC,kDAAM,CAAC,gBAAgB,EAAE,CAAC;YAC9C,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;QAC1C,CAAC;KAAA;IAED;;;OAGG;IACH,MAAM,CAAO,eAAe,CAAC,cAAsB;;YAClD,aAAa,CAAC,aAAa,EAAE;YAC7B,MAAM,4CAAG,CAAC,cAAc,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;gBACpE,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;gBACzC,kDAAM,CAAC,SAAS,CAAC,iDAAiD,EAAE,IAAI,CAAC;gBAEzE,OAAM;YACP,CAAC,CAAC;YAEF,qDAAS,CAAC,SAAS,CAAC,kDAAM,CAAC,eAAe,EAAE,CAAC;YAC7C,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;QAC1C,CAAC;KAAA;IAED;;;OAGG;IACH,MAAM,CAAO,+BAA+B,CAAC,QAAa;;YACzD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC9B,MAAM,kBAAkB,GAAG,QAAQ,CAAC,qBAAqB,EAAE;gBAC3D,MAAM,aAAa,GAAG,QAAQ,CAAC,eAAe,EAAE;gBAEhD,mDAAQ,CAAC,iDAAI,CAAC,kBAAkB,EAAE,cAAc,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,IAAY,EAAE,EAAE;oBAChF,IAAI,CAAC,IAAI,EAAE;wBACV,OAAO,OAAO,CAAC,EAAE,CAAC;qBAClB;oBAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAK,EAAuB;oBACjE,IAAI,cAAc,GAAG,KAAK;oBAC1B,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;wBACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;4BAChC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;yBAC7C;6BAAM,IAAI,cAAc,EAAE;4BAC1B,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gCAC5B,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;6BACnD;yBACD;oBACF,CAAC,CAAC;oBAEF,OAAO,CAAC,EAAE,CAAC;gBACZ,CAAC,CAAC;YACH,CAAC,CAAC;QACH,CAAC;KAAA;IAED,6FAA6F;IAC7F,UAAU;IACV,6FAA6F;IAE7F;;;;;;;OAOG;IACH,MAAM,CAAO,cAAc,CAC1B,cAAsB,EACtB,MAAc,EACd,MAAc,EACd,SAAiB,CAAC,EAClB,SAAkB,KAAK;;YAEvB,MAAM,MAAM,GAAG,kDAAM,CAAC,cAAc,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;YAC5E,IAAI,CAAC,MAAM,EAAE;gBACZ,aAAa,CAAC,aAAa,EAAE;gBAC7B,qDAAS,CAAC,SAAS,CAAC,MAAM,CAAC;aAC3B;YACD,MAAM,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC;iBAC9C,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;iBACpB,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;gBACrB,kDAAM,CAAC,SAAS,CAAC,gCAAgC,MAAM,IAAI,MAAM,GAAG,EAAE,IAAI,CAAC;gBAC3E,kDAAM,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC;gBAC7B,IAAI,CAAC,MAAM,EAAE;oBACZ,qDAAS,CAAC,YAAY,CAAC,MAAM,CAAC;oBAC9B,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;iBACzC;gBAED,OAAM;YACP,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,EAAE;gBACZ,qDAAS,CAAC,SAAS,CAAC,kDAAM,CAAC,aAAa,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;gBACjF,qDAAS,CAAC,YAAY,CAAC,MAAM,CAAC;gBAC9B,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;aACzC;QACF,CAAC;KAAA;IAED,6FAA6F;IAC7F,UAAU;IACV,6FAA6F;IAE7F;;;;;;;OAOG;IACH,MAAM,CAAO,cAAc,CAC1B,cAAsB,EACtB,MAAc,EACd,MAAc,EACd,QAAgB,CAAC,EACjB,SAAkB,KAAK;;YAEvB,MAAM,MAAM,GAAG,kDAAM,CAAC,cAAc,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;YAC3E,IAAI,CAAC,MAAM,EAAE;gBACZ,aAAa,CAAC,aAAa,EAAE;gBAC7B,qDAAS,CAAC,SAAS,CAAC,MAAM,CAAC;aAC3B;YACD,MAAM,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC;iBAC9C,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;iBACpB,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;gBACrB,kDAAM,CAAC,SAAS,CAAC,8BAA8B,MAAM,IAAI,MAAM,GAAG,EAAE,IAAI,CAAC;gBACzE,kDAAM,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC;gBAC7B,IAAI,CAAC,MAAM,EAAE;oBACZ,qDAAS,CAAC,YAAY,CAAC,MAAM,CAAC;oBAC9B,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;iBACzC;gBAED,OAAM;YACP,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,EAAE;gBACZ,qDAAS,CAAC,SAAS,CAAC,kDAAM,CAAC,aAAa,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;gBAChF,qDAAS,CAAC,YAAY,CAAC,MAAM,CAAC;gBAC9B,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;aACzC;QACF,CAAC;KAAA;IAED;;OAEG;IACH,MAAM,CAAO,kBAAkB;;YAC9B,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC,WAAW,EAAE;YAElD,OAAO,aAAa,CAAC,cAAc,CAClC,QAAQ,CAAC,eAAe,EAAE,EAC1B,QAAQ,CAAC,SAAS,EAAE,EACpB,QAAQ,CAAC,SAAS,EAAE,EACpB,QAAQ,CAAC,QAAQ,EAAE,CACnB;QACF,CAAC;KAAA;IAED,6FAA6F;IAC7F,WAAW;IACX,6FAA6F;IAE7F;;;;;;;OAOG;IACH,MAAM,CAAO,qBAAqB,CACjC,cAAsB,EACtB,MAAc,EACd,MAAc,EACd,QAAgB,CAAC,EACjB,SAAiB,CAAC;;YAElB,aAAa,CAAC,aAAa,EAAE;YAC7B,MAAM,MAAM,GAAG,kDAAM,CAAC,cAAc,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;YACnF,qDAAS,CAAC,SAAS,CAAC,MAAM,CAAC;YAE3B,MAAM,aAAa,CAAC,cAAc,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE,CACrG,aAAa,CAAC,+BAA+B,CAAC,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAC5F;YAED,MAAM,aAAa,CAAC,cAAc,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE,CACpG,aAAa,CAAC,+BAA+B,CAAC,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAC5F;YAED,qDAAS,CAAC,SAAS,CAAC,kDAAM,CAAC,aAAa,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YACxF,qDAAS,CAAC,YAAY,CAAC,MAAM,CAAC;YAC9B,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;QAC1C,CAAC;KAAA;IAED;;;;;;;OAOG;IACK,MAAM,CAAC,+BAA+B,CAC7C,KAAU,EACV,cAAsB,EACtB,MAAc,EACd,MAAc,EACd,MAAkB;QAElB,kDAAM,CAAC,SAAS,CAAC,+BAA+B,MAAM,IAAI,MAAM,GAAG,EAAE,IAAI,CAAC;QAC1E,kDAAM,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC;QAC7B,qDAAS,CAAC,YAAY,CAAC,MAAM,CAAC;QAC9B,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC;IAC1C,CAAC;IAED,6FAA6F;IAC7F,2BAA2B;IAC3B,6FAA6F;IAE7F;;OAEG;IACH,MAAM,CAAO,mBAAmB;;YAC/B,MAAM,4CAAG,CAAC,cAAc,CAAC,6BAA6B,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;gBAClE,kDAAM,CAAC,SAAS,CAAC,oDAAoD,EAAE,IAAI,CAAC;gBAE5E,OAAM;YACP,CAAC,CAAC;QACH,CAAC;KAAA;;AAhnBc,uBAAS,GAAqB,IAAI,GAAG,EAAE;AACvC,wBAAU,GAAqB,IAAI,GAAG,EAAE;AAExC,wBAAU,GAAY,KAAK;;;;;;;ACvB3C,iC;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;AAE2B;AACV;AACM;AACqB;AAEzC,MAAM,GAAG;IAcvB,YAAY,UAAkB,EAAE;QAC/B,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,iDAAI,CAAC,4EAAgB,EAAE,EAAE,OAAO,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE;QAC3B,IAAI,CAAC,MAAM,GAAG,EAAE;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE;QAChB,IAAI,CAAC,YAAY,GAAG,KAAK;QACzB,IAAI,CAAC,QAAQ,GAAG,EAAE;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,EAAE;QACpB,IAAI,CAAC,kBAAkB,GAAG,EAAE;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI;IACrB,CAAC;IAED,OAAO;QACN,OAAO,IAAI,CAAC,OAAO;IACpB,CAAC;IAED,eAAe;QACd,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4EAAgB,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;QACtF,IAAI,uDAAU,CAAC,YAAY,CAAC,EAAE;YAC7B,OAAO,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;SAC7B;QAED,OAAO,YAAY;IACpB,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,OAAO,KAAK,4EAAgB,EAAE;IAC3C,CAAC;IAED,YAAY;QACX,OAAO,IAAI,CAAC,SAAS;IACtB,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM;IACnB,CAAC;IAED,SAAS,CAAC,MAAc;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM;IACrB,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM;IACnB,CAAC;IAED,SAAS,CAAC,MAAc;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM;IACrB,CAAC;IAED,cAAc;QACb,OAAO,IAAI,CAAC,YAAY;IACzB,CAAC;IAED,eAAe,CAAC,YAAqB;QACpC,IAAI,CAAC,YAAY,GAAG,YAAY;IACjC,CAAC;IAED,WAAW,CAAC,QAAa;QACxB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;aACnC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aAC3B,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,IAAI,+CAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/D,CAAC;IAED,WAAW;QACV,OAAO,IAAI,CAAC,QAAQ;IACrB,CAAC;IAED,gBAAgB;QACf,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAc,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACpE,CAAC;IAED,iBAAiB;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAc,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACnE,CAAC;IAED,UAAU,CAAC,OAAY;QACtB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;IACzD,CAAC;IAED,UAAU;QACT,OAAO,IAAI,CAAC,OAAO;IACpB,CAAC;IAED,QAAQ;QACP,OAAO,IAAI,CAAC,KAAK;IAClB,CAAC;IAED,QAAQ,CAAC,KAAa;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK;IACnB,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM;IACnB,CAAC;IAED,SAAS,CAAC,MAAc;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM;IACrB,CAAC;IAED,aAAa,CAAC,SAAiB;QAC9B,IAAI,CAAC,UAAU,GAAG,EAAE;QACpB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACtB,OAAM;SACN;QACD,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAI;YACnC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;gBACrB,CAAC,EAAE;aACH;YACD,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;YACrB,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;YACzB,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;YAE/B,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC5B,MAAM,GAAG,EAAE;gBACX,CAAC,EAAE;aACH;YACD,CAAC,IAAI,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,kDAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;SACvD;IACF,CAAC;IAED,aAAa;QACZ,OAAO,IAAI,CAAC,UAAU;IACvB,CAAC;IAED,qBAAqB,CAAC,kBAA0B;QAC/C,IAAI,CAAC,kBAAkB,GAAG,kBAAkB;IAC7C,CAAC;IAED,qBAAqB;QACpB,OAAO,IAAI,CAAC,kBAAkB;IAC/B,CAAC;IAED,WAAW,CAAC,QAAa;QACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ;IACzB,CAAC;IAED,WAAW;QACV,OAAO,IAAI,CAAC,QAAQ;IACrB,CAAC;CACD;;;;;;;;ACtKD;AAAA;AAAY;AAEG,MAAM,MAAM;IAI1B,YAAY,IAAY,EAAE,MAAc;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI;QAChB,IAAI,CAAC,MAAM,GAAG,MAAM;IACrB,CAAC;IAED,OAAO;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IAC1C,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM;IACnB,CAAC;IAED,QAAQ;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;IACnD,CAAC;CACD;;;;;;;;ACtBD;AAAA;AAAY;AAEG,MAAM,SAAS;IAK7B,YAAY,UAAkB,EAAE,IAAY,EAAE,MAAc;QAC3D,IAAI,CAAC,UAAU,GAAG,UAAU;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI;QAChB,IAAI,CAAC,MAAM,GAAG,MAAM;IACrB,CAAC;IAED,aAAa;QACZ,OAAO,IAAI,CAAC,UAAU;IACvB,CAAC;IAED,OAAO;QACN,OAAO,IAAI,CAAC,IAAI;IACjB,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM;IACnB,CAAC;CACD;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;AAEwB;AACH;AACU;AAE3C;;GAEG;AACY,MAAM,GAAG;IAIvB;;;;OAIG;IACH,MAAM,CAAC,cAAc,CAAC,OAAe,EAAE,YAAoB,gEAAgB,EAAE;QAC5E,kDAAkD;QAClD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACtC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC9C,kDAAM,CAAC,SAAS,CAAC,YAAY,OAAO,eAAe,EAAE,IAAI,CAAC;gBAE1D,OAAO,MAAM,EAAE;aACf;YACD,6BAA6B;YAC7B,0DAAI,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,CAAC,KAAU,EAAE,MAAW,EAAE,OAAY,EAAE,EAAE;gBAC3E,IAAI,KAAK,KAAK,IAAI,EAAE;oBACnB,OAAO,MAAM,CAAC,KAAK,CAAC;iBACpB;gBACD,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACvB,CAAC,CAAC;QACH,CAAC,CAAC;IACH,CAAC;;AAxBD,+BAA+B;AAChB,0BAAsB,GAAG,IAAI,MAAM,CAAC,uBAAuB,CAAC;;;;;;;ACX5E,0C;;;;;;ACAA,mCAAC,0BAA0B;AAC3B;AACA;AACA,MAAM,IAA0C;AAChD;AACA,MAAM,mCAAmB,YAAY;AACrC;AACA,OAAO;AAAA,oGAAC;AACR,GAAG,MAAM,kBAaN;AACH,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,aAAa;AAC3C,mBAAmB,mBAAmB;AACtC;AACA;AACA,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA,YAAY,WAAW;;AAEvB;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;AC5gBD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,aAAa,mBAAO,CAAC,EAAW;AAChC,oBAAoB,mBAAO,CAAC,EAAO;AACnC;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,IAAI;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA,aAAa;AACb,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,eAAe;AAC3B,IAAI;AACJ;;;;;;;AC/FA;;AAEA;;AAEA,eAAe,mBAAO,CAAC,EAAO;AAC9B,kBAAkB,mBAAO,CAAC,EAAiB;AAC3C,gBAAgB,mBAAO,CAAC,EAAe;AACvC;AACA,mBAAmB,mBAAO,CAAC,EAAa;;AAExC;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA,8CAA8C,MAAoB;;AAElE;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,aAAa;AAC3B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,aAAa;AAC3B,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,UAAU;AACV,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA,4EAA4E,KAAK,MAAM;AACvF;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yEAAyE,iBAAiB;AAC1F;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;ACvjDD;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,mBAAO,CAAC,EAAc;AACxC,CAAC;AACD,kBAAkB,mBAAO,CAAC,EAAW;AACrC;;;;;;;ACTA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,EAAU;;AAEnC,OAAO,WAAW;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;ACtQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,EAAI;;AAEpC;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,aAAa,kCAAkC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;ACzQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACjKA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,EAAK;AACzB,aAAa,mBAAO,CAAC,EAAM;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,EAAgB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,2BAA2B;;AAEnC;AACA;AACA,iDAAiD,EAAE;AACnD,sBAAsB,WAAW,IAAI,KAAK;;AAE1C;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,EAAU;;AAEnC,OAAO,WAAW;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AChQA,gC;;;;;;ACAA,iC;;;;;;;ACAa;AACb,WAAW,mBAAO,CAAC,EAAI;AACvB,gBAAgB,mBAAO,CAAC,EAAU;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AClIA,+B;;;;;;;ACAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;;;;;;;ACRA,SAAS,mBAAO,CAAC,EAAI;;AAErB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;AC/BA;AACA,wBAAwB,mBAAO,CAAC,EAAuB;AACvD,kBAAkB,mBAAO,CAAC,EAAiB;AAC3C,kBAAkB,mBAAO,CAAC,EAAiB;AAC3C,gBAAgB,mBAAO,CAAC,EAAe;AACvC,iBAAiB,mBAAO,CAAC,EAAgB;AACzC,sBAAsB,mBAAO,CAAC,EAAqB;AACnD,mBAAmB,mBAAO,CAAC,EAAkB;AAC7C,iBAAiB,mBAAO,CAAC,EAAgB;AACzC,gBAAgB,mBAAO,CAAC,EAAe;AACvC,gBAAgB,mBAAO,CAAC,EAAe;AACvC,kBAAkB,mBAAO,CAAC,EAAiB;AAC3C,YAAY,mBAAO,CAAC,EAAW;AAC/B;;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;;;;;;;AClDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC1DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;;;;;;AC3Fa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,OAAO;;AAEP;AACA;;AAEA;;;;;;;;ACtDa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA;;AAEA,kBAAkB,mBAAO,CAAC,EAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sBAAsB,EAAE;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;;;;;;ACvEA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,EAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,qDAAqD,qBAAqB;AAC1E;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yDAAyD,UAAU;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACrGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACvIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,6CAA6C,UAAU;AACvD;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;;;;;;;;;AC5BA,wBAAwB,mBAAO,CAAC,EAAqB;;AAErD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,EAAE;AACxC,4BAA4B,EAAE;AAC9B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AA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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict'\n\nimport { ExtensionContext } from 'vscode'\nimport Commands from './application/Commands'\nimport Features from './application/Features'\nimport Event from './models/Event'\nimport EventHandler from './handlers/EventHandler'\nimport Logger from './UI/Logger'\nimport Status from './UI/Status'\nimport StatusBar from './UI/StatusBar'\nimport Config from './application/Config'\nimport { exists } from 'fs'\nimport { getWorkspacePath } from './application/Helper'\n\nlet context: ExtensionContext\n\n// this function is called when the extension is activated for the first time\nexport const activate = (ctx: ExtensionContext): void => {\n\tcontext = ctx\n\n\tLogger.init()\n\n\texists(getWorkspacePath() + '/.git', (exists) => {\n\t\tif (exists) {\n\t\t\tinitExtension()\n\t\t} else {\n\t\t\tCommands.registerDummyCommands(context)\n\t\t}\n\t})\n}\n\n// this method is called when your extension is deactivated\nexport const deactivate = (): void => Logger.showMessage('Extension deactivated')\n\nconst initExtension = async (): Promise<void> => {\n\tConfig.loadConfig()\n\n\tawait Commands.registerCommands(context)\n\n\tif (!Config.isEnabled('enabled')) {\n\t\tLogger.showMessage('Extension is not enabled in settings')\n\n\t\treturn\n\t}\n\tstartExtension()\n}\n\nexport const startExtension = async (): Promise<void> => {\n\tStatusBar.initStatusBar(context)\n\n\tawait Features.enableFeatures()\n\n\tconst status = Status.startingExtension()\n\tStatusBar.addStatus(status)\n\n\tawait EventHandler.handle(Event.START)\n\n\tStatusBar.removeStatus(status)\n}\n","'use strict'\n\nimport { ExtensionContext } from 'vscode'\nimport PushBeforeClosingIDECommand from '../commands/PushBeforeClosingIDE.command'\nimport ShowOutputCommand from '../commands/ShowOutput.command'\nimport StartExtension from '../commands/StartExtension.command'\nimport StopExtension from '../commands/StopExtension.command'\n\nconst COMMANDS = [PushBeforeClosingIDECommand, ShowOutputCommand, StartExtension, StopExtension]\n/**\n * this class registers all commands displayed in the VS Code Command Pallette\n */\nexport default class Commands {\n\t/**\n\t * registers all Commands as a Command in VS Code\n\t * @param context VS Code ExtensionContext\n\t */\n\tstatic registerCommands(context: ExtensionContext): void {\n\t\tCOMMANDS.forEach((command) => {\n\t\t\tcommand.registerCommand(context)\n\t\t})\n\t}\n\n\t/**\n\t * registers dummy Commands as a Command in VS Code so it will not throw an Exception when the Extension\n\t * is not loaded\n\t * @param context VS Code ExtensionContext\n\t */\n\tstatic registerDummyCommands(context: ExtensionContext): void {\n\t\tCOMMANDS.forEach((command) => {\n\t\t\tcommand.registerDummyCommand(context)\n\t\t})\n\t}\n}\n","'use strict'\n\nimport { ExtensionContext, commands } from 'vscode'\nimport Event from '../models/Event'\nimport EventHandler from '../handlers/EventHandler'\nimport Command from './Command'\n\n/**\n * this class registers a Command that is activated when the user tries to close\n * the VS Code Window with a keyboard-shortcut\n */\nexport default class PushBeforeClosingIDECommand extends Command {\n\tstatic registerCommand(context: ExtensionContext): void {\n\t\tCommand.register(context, 'pushBeforeClosingIDE', PushBeforeClosingIDECommand.pushBeforeClosingIDE)\n\t\tCommand.register(context, 'pushBeforeClosingIDEhard', PushBeforeClosingIDECommand.pushBeforeClosingIDEhard)\n\t}\n\n\tstatic registerDummyCommand(context: ExtensionContext): void {\n\t\tCommand.register(\n\t\t\tcontext,\n\t\t\t'pushBeforeClosingIDE',\n\t\t\tcommands.executeCommand.bind(null, 'workbench.action.closeActiveEditor'),\n\t\t)\n\t\tCommand.register(context, 'pushBeforeClosingIDEhard', commands.executeCommand.bind(null, 'workbench.action.quit'))\n\t}\n\n\tstatic async pushBeforeClosingIDE(): Promise<void> {\n\t\tawait EventHandler.handle(Event.EXIT, false)\n\t}\n\n\tstatic async pushBeforeClosingIDEhard(): Promise<void> {\n\t\tawait EventHandler.handle(Event.EXIT, true)\n\t}\n}\n","module.exports = require(\"vscode\");","enum Event {\n\tEXIT = 'EXIT',\n\tFILE = 'FILE',\n\tFILE_SUBMODULE = 'FILE_SUBMODULE',\n\tGIT = 'GIT',\n\tGIT_BRANCH_CHANGED = 'GIT_BRANCH_CHANGED',\n\tGIT_COMMITS = 'GIT_COMMITS',\n\tGIT_COMMITS_LOCAL = 'GIT_COMMITS_LOCAL',\n\tGIT_COMMITS_REMOTE = 'GIT_COMMITS_REMOTE',\n\tGIT_PUSH = 'GIT_PUSH',\n\tSTART = 'START',\n\tSUBMODULE = 'SUBMODULE',\n\tSUBMODULE_UPDATE = 'SUBMODULE_UPDATE',\n}\n\nexport default Event\n","'use strict'\n\nimport Logger from '../UI/Logger'\nimport Event from '../models/Event'\nimport ChangeHandler from './ChangeHandler'\n\n/**\n * this class handles the registration and calling of Features of the Extension\n */\nexport default class EventHandler {\n\tprivate static changeHandlers: Map<Event, any[]> = new Map()\n\tprivate static level = 0\n\n\t/**\n\t * gets all registered Handlers for a given Event\n\t * @param changeEvent Event to search for\n\t */\n\tprivate static getChangeHandlers(changeEvent: Event): typeof ChangeHandler[] {\n\t\tif (!EventHandler.changeHandlers.has(changeEvent)) {\n\t\t\tEventHandler.changeHandlers.set(changeEvent, [])\n\t\t}\n\t\tconst ret = EventHandler.changeHandlers.get(changeEvent)\n\t\tif (ret) {\n\t\t\treturn ret\n\t\t}\n\n\t\treturn []\n\t}\n\n\t/**\n\t * resets everything and deletes all Handlers\n\t */\n\tstatic clearAllHandlers(): void {\n\t\tEventHandler.changeHandlers = new Map()\n\t\tEventHandler.level = 0\n\t\tLogger.showMessage(`[event] ChangeHandlers reset`)\n\t}\n\n\t/**\n\t * registers an Handler for a specific Event\n\t * @param changeEvent Event, when the Handler should be called\n\t * @param Handler Handler that is called when the Event was fired\n\t */\n\tstatic registerHandler(changeEvent: Event, Handler: typeof ChangeHandler): void {\n\t\tconst Handlers = EventHandler.getChangeHandlers(changeEvent)\n\t\tHandlers.push(Handler)\n\t\tLogger.showMessage(`[event][register] '${Handler.name}' added to ${changeEvent}-Handlers`)\n\t}\n\n\t/**\n\t * calls all Handlers for a specific Event\n\t * @param changeEvent Event to fire\n\t * @param payload some additional information for the Handlers\n\t */\n\tstatic async handle(changeEvent: Event, payload?: any): Promise<void> {\n\t\tconst Handlers = EventHandler.getChangeHandlers(changeEvent)\n\t\tif (!Handlers.length) {\n\t\t\treturn\n\t\t}\n\n\t\tEventHandler.level++\n\n\t\tconst levelStringUp = EventHandler.levelString(true)\n\t\tconst levelStringDown = EventHandler.levelString(false)\n\n\t\tconst timeStartHandler = Date.now()\n\t\tfor (const Handler of Handlers) {\n\t\t\tconst timeStartEvent = Date.now()\n\t\t\tLogger.showMessage(`[event][call]${levelStringUp} '${Handler.name}'`)\n\t\t\t// call Handler and wait until its finished\n\t\t\tawait Handler.handle(payload)\n\t\t\tconst timeEndEvent = Date.now()\n\t\t\tconst timeDiffEvent = (timeEndEvent - timeStartEvent) / 1000\n\t\t\tLogger.showMessage(`[event][call]${levelStringDown} '${Handler.name}' [${timeDiffEvent}s]`)\n\t\t}\n\t\tconst timeEndHandler = Date.now()\n\t\tconst timeDiffHandler = (timeEndHandler - timeStartHandler) / 1000\n\t\tLogger.showMessage(\n\t\t\t`[event] ${Handlers.length} function${\n\t\t\t\tHandlers.length === 1 ? '' : 's'\n\t\t\t} called for '${changeEvent}' [${timeDiffHandler}s]`,\n\t\t)\n\n\t\tEventHandler.level--\n\t}\n\n\t/**\n\t * generates the depth-info of the current called function\n\t * @param up wheter the Event was started or ended\n\t */\n\tprivate static levelString(up: boolean): string {\n\t\treturn `${new Array(EventHandler.level - 1).fill(' -').join('')} ${up ? '>' : '<'}`\n\t}\n}\n","'use strict'\n\nimport { OutputChannel, window } from 'vscode'\nimport InformationMessage from './InformationMessage'\n\n/**\n * this class handles the logging-output\n */\nexport default class Logger {\n\tprivate static output: OutputChannel\n\n\t/**\n\t * registers a OutputChannel in VS Code\n\t */\n\tstatic init(): void {\n\t\tLogger.output = window.createOutputChannel('git-assistant')\n\t}\n\n\t/**\n\t * shows the Output-Panel\n\t */\n\tstatic showOutput(): void {\n\t\tLogger.output.show()\n\t}\n\n\t/**\n\t * logs a message to the OutputChannel\n\t * @param message message to show\n\t * @param notification display message as InformationMessage or not\n\t */\n\tstatic showMessage(message: string, notification: boolean = false): void {\n\t\tLogger.output.appendLine(getCurrentTimestamp() + message)\n\t\tif (notification) {\n\t\t\tInformationMessage.showInformationMessage(message)\n\t\t}\n\t}\n\n\t/**\n\t * logs an error to the OutputChannel\n\t * @param error error to show\n\t * @param notification display error as InformationMessage or not\n\t */\n\tstatic showError(error: string, notification: boolean = false): void {\n\t\tLogger.output.appendLine(`[ERROR] ${error}`)\n\t\tLogger.output.append('' + new Error().stack)\n\t\tif (notification) {\n\t\t\tInformationMessage.showInformationMessage(error)\n\t\t}\n\t}\n}\n\nconst getCurrentTimestamp = (): string => {\n\tconst now = new Date()\n\tconst hour = prefixWithZeros(now.getHours())\n\tconst minute = prefixWithZeros(now.getMinutes())\n\tconst second = prefixWithZeros(now.getSeconds())\n\n\treturn `[${hour}:${minute}:${second}] `\n}\n\nconst prefixWithZeros = (value: number): string => (value < 10 ? '0' : '') + value\n","'use strict'\n\nimport { window } from 'vscode'\nimport Logger from './Logger'\nimport MessageOption from './MessageOption'\nimport StatusBar from './StatusBar'\nimport Status from './Status'\nimport Config from '../application/Config'\n\n/**\n * this class is a wrapper for the VS Code InfromationMessage\n */\nexport default class InformationMessage {\n\t/**\n\t * displays a InformationMessage and some Options\n\t * @param message message to show\n\t * @param options options to display\n\t */\n\tstatic showInformationMessage(message: string, ...options: MessageOption[]): Promise<string> {\n\t\treturn new Promise(async (resolve) => {\n\t\t\tlet resolved = false\n\n\t\t\tconst timeToWait = (Config.getValue('message-wait-time') as number) || 0\n\t\t\t// auto-resolve message after a certain time so the Extension will not be blocked\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!resolved) {\n\t\t\t\t\tresolved = true\n\t\t\t\t\tresolve('')\n\t\t\t\t}\n\n\t\t\t\treturn\n\t\t\t}, timeToWait)\n\n\t\t\t// display the InformationMessage\n\t\t\tconst data: MessageOption | undefined = await window.showInformationMessage(message, {}, ...options)\n\t\t\tif (resolved) {\n\t\t\t\tStatusBar.addStatus(Status.messageAutoResolved())\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (data) {\n\t\t\t\tresolve(data.action)\n\t\t\t\tresolved = true\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// user dismissed message without clicking on an action\n\t\t\tLogger.showMessage(`Message not resolved: '${message}' `)\n\t\t\tresolve('')\n\n\t\t\treturn\n\t\t})\n\t}\n}\n","'use strict'\n\nimport { ExtensionContext, StatusBarAlignment, StatusBarItem, window } from 'vscode'\nimport Logger from './Logger'\nimport StatusItem from './StatusItem'\n\nexport const DEFAULT_TIMEOUT: number = 3000\nexport const TICK_TIME: number = 500\nconst ANIMATION_TIMEOUT: number = 250\nconst NR_OF_ANIMATION_DOTS: number = 5\n\n/**\n * this class handles the information displayed in the StatusBar\n */\nexport default class StatusBar {\n\tstatic statusbarItem: StatusBarItem\n\tstatic status: StatusItem[]\n\tstatic tickCount: number\n\tstatic iteration: number = 0\n\n\t/**\n\t * initializes the StatusBar\n\t * @param context VS Code ExtensionContext\n\t */\n\tstatic initStatusBar(context: ExtensionContext): void {\n\t\tStatusBar.statusbarItem = window.createStatusBarItem(StatusBarAlignment.Left, 0)\n\t\tStatusBar.statusbarItem.command = 'git-assistant.showOutput'\n\t\tcontext.subscriptions.push(StatusBar.statusbarItem)\n\t\tStatusBar.status = []\n\t\tStatusBar.tickCount = 0\n\t}\n\n\t/**\n\t * adds a status to the queue\n\t * @param status status to add\n\t */\n\tstatic addStatus(status: StatusItem): void {\n\t\tLogger.showMessage('[status] ' + status.toStringText())\n\t\tStatusBar.status.push(status)\n\t\tStatusBar.showLatestStatus()\n\t}\n\n\t/**\n\t * removes a status from the queue\n\t * @param status status to remove\n\t */\n\tstatic removeStatus(status: StatusItem): void {\n\t\tStatusBar.status = StatusBar.status.filter((stat) => stat !== status)\n\t\tStatusBar.showLatestStatus()\n\t}\n\n\t/**\n\t * animates a status over time\n\t * @param status status to animate\n\t */\n\tstatic animateStatus(status: StatusItem): void {\n\t\tif (!StatusBar.status.length || StatusBar.getPriorityStatusItem() !== status) {\n\t\t\treturn\n\t\t}\n\n\t\tlet text = `${status.toStringIcon()} `\n\t\ttext += new Array(StatusBar.iteration).fill('.').join('')\n\t\ttext += status.toStringText()\n\t\ttext += new Array(NR_OF_ANIMATION_DOTS - StatusBar.iteration).fill('.').join('')\n\n\t\tStatusBar.statusbarItem.text = text\n\n\t\tif (++StatusBar.iteration > NR_OF_ANIMATION_DOTS) {\n\t\t\tStatusBar.iteration = 0\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tStatusBar.animateStatus(status)\n\t\t}, ANIMATION_TIMEOUT)\n\t}\n\n\t/**\n\t * displays the status with the highest priority\n\t */\n\tprivate static showLatestStatus(): void {\n\t\tconst length = StatusBar.status.length\n\t\tif (!length) {\n\t\t\tStatusBar.statusbarItem.hide()\n\n\t\t\treturn\n\t\t}\n\n\t\tlet status = StatusBar.status[length - 1]\n\n\t\tconst temp = StatusBar.getPriorityStatusItem()\n\t\tif (temp) {\n\t\t\tstatus = temp\n\t\t}\n\n\t\tStatusBar.statusbarItem.text = status.toString()\n\t\tStatusBar.statusbarItem.show()\n\t\tif (status.isAnimated()) {\n\t\t\tStatusBar.animateStatus(status)\n\t\t}\n\t\tif (status.isTemporary()) {\n\t\t\tStatusBar.nextTick(status, ++StatusBar.tickCount)\n\t\t}\n\t}\n\n\t/**\n\t * returns a StatusItem with priority if it exists in the queue\n\t */\n\tprivate static getPriorityStatusItem(): StatusItem | undefined {\n\t\tconst animated = StatusBar.status.filter((statusItem: StatusItem) => statusItem.isAnimated())\n\t\tif (animated.length) {\n\t\t\treturn animated.reverse()[0]\n\t\t}\n\t\tconst temporary = StatusBar.status.filter((statusItem: StatusItem) => statusItem.isTemporary())\n\t\tif (temporary.length) {\n\t\t\treturn temporary[0]\n\t\t}\n\n\t\treturn undefined\n\t}\n\n\t/**\n\t * displays a status for a temporary time\n\t * @param status status to display\n\t * @param tickCount incrementing tick count\n\t */\n\tprivate static nextTick(status: StatusItem, tickCount: number): void {\n\t\tif (StatusBar.tickCount !== tickCount || StatusBar.getPriorityStatusItem() !== status) {\n\t\t\treturn\n\t\t}\n\t\tconst finished = status.reduceDisplayTime()\n\n\t\tif (!finished) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tStatusBar.nextTick(status, tickCount)\n\t\t\t}, TICK_TIME)\n\n\t\t\treturn\n\t\t}\n\t\tStatusBar.removeStatus(status)\n\t}\n}\n","'use strict'\n\nimport StatusItem from './StatusItem'\nimport { getRepositoryName } from '../application/Helper'\n\n/**\n * this class generates all Status Messages\n */\nexport default class Status {\n\tstatic startingExtension(): StatusItem {\n\t\treturn StatusItem.newAnimatedStatusItem(`loading git-assistant`)\n\t}\n\tstatic watcherRunning(): StatusItem {\n\t\treturn new StatusItem('git-assistant running')\n\t}\n\tstatic watcherRestarted(): StatusItem {\n\t\treturn StatusItem.newTemporaryStatusItem('git-assistant restarted')\n\t}\n\tstatic configVariableSet(variable: string, input: string): StatusItem {\n\t\treturn StatusItem.newTemporaryStatusItem(`git-config variable '${variable}' set to '${input}'`)\n\t}\n\tstatic allConfigVariablesChecked(): StatusItem {\n\t\treturn StatusItem.newTemporaryStatusItem(`all git-config variables checked`)\n\t}\n\n\tstatic autoCheckoutForDetachedHead(repositoryPath: string, branch: string) {\n\t\tconst message = `DetachedHEAD detected: auto-checked out '${branch}'`\n\n\t\treturn StatusItem.newTemporaryStatusItem(addSubmoduleText(message, repositoryPath))\n\t}\n\n\tstatic updatingGitModel(repositoryPath: string): StatusItem {\n\t\treturn StatusItem.newAnimatedStatusItem(`checking repository '${getRepositoryName(repositoryPath)}'`)\n\t}\n\n\tstatic publishBranch(repositoryPath: string, remote: string, branch: string): StatusItem {\n\t\treturn StatusItem.newAnimatedStatusItem(\n\t\t\t`publishing branch '${branch}' to remote '${remote}' for '${getRepositoryName(repositoryPath)}'`,\n\t\t)\n\t}\n\n\tstatic branchIsUpToDate(repositoryPath: string, remote: string, branch: string): StatusItem {\n\t\tconst message = `branch '${getBranchName(remote, branch)}' is up-to-date`\n\n\t\treturn StatusItem.newTemporaryStatusItem(addSubmoduleText(message, repositoryPath))\n\t}\n\tstatic commitsPushed(repositoryPath: string, remote: string, branch: string, ahead: number = 0): StatusItem {\n\t\tconst message = `${ahead} commits pushed to '${getBranchName(remote, branch)}'`\n\n\t\treturn StatusItem.newTemporaryStatusItem(addSubmoduleText(message, repositoryPath))\n\t}\n\tstatic commitsPushing(repositoryPath: string, remote: string, branch: string, ahead: number = 0): StatusItem {\n\t\tconst message = `pushing ${ahead} commits to '${getBranchName(remote, branch)}'`\n\n\t\treturn StatusItem.newAnimatedStatusItem(addSubmoduleText(message, repositoryPath))\n\t}\n\tstatic commitsPulled(repositoryPath: string, remote: string, branch: string, behind: number = 0): StatusItem {\n\t\tconst message = `${behind} commits pulled from '${getBranchName(remote, branch)}'`\n\n\t\treturn StatusItem.newTemporaryStatusItem(addSubmoduleText(message, repositoryPath))\n\t}\n\tstatic commitsPulling(repositoryPath: string, remote: string, branch: string, behind: number = 0): StatusItem {\n\t\tconst message = `pulling ${behind} commits from '${getBranchName(remote, branch)}'`\n\n\t\treturn StatusItem.newAnimatedStatusItem(addSubmoduleText(message, repositoryPath))\n\t}\n\tstatic commitsMerged(\n\t\trepositoryPath: string,\n\t\tremote: string,\n\t\tbranch: string,\n\t\tahead: number = 0,\n\t\tbehind: number = 0,\n\t): StatusItem {\n\t\tconst message = `${ahead} / ${behind} commits merged on '${getBranchName(remote, branch)}'`\n\n\t\treturn StatusItem.newTemporaryStatusItem(addSubmoduleText(message, repositoryPath))\n\t}\n\tstatic commitsMerging(\n\t\trepositoryPath: string,\n\t\tremote: string,\n\t\tbranch: string,\n\t\tahead: number = 0,\n\t\tbehind: number = 0,\n\t): StatusItem {\n\t\tconst message = `merging ${ahead} / ${behind} commits on '${getBranchName(remote, branch)}'`\n\n\t\treturn StatusItem.newAnimatedStatusItem(addSubmoduleText(message, repositoryPath))\n\t}\n\n\tstatic checkedOutRepositoryBranch(repositoryPath: string, branch: string): StatusItem {\n\t\tconst message = `Checked out '${branch}'`\n\n\t\treturn StatusItem.newTemporaryStatusItem(addSubmoduleText(message, repositoryPath))\n\t}\n\n\tstatic stashSaveChanges(): StatusItem {\n\t\treturn StatusItem.newTemporaryStatusItem(`changes saved to stash`)\n\t}\n\tstatic stashPopChanges(): StatusItem {\n\t\treturn StatusItem.newTemporaryStatusItem(`changes popped from stash`)\n\t}\n\n\tstatic branchCreated(branch: string): StatusItem {\n\t\treturn StatusItem.newTemporaryStatusItem(`new branch '${branch}' created`)\n\t}\n\n\tstatic submoduleUpdated(): StatusItem {\n\t\treturn StatusItem.newTemporaryStatusItem(`Submodules updated`)\n\t}\n\n\tstatic messageAutoResolved(): StatusItem {\n\t\treturn StatusItem.newTemporaryStatusItem(`message was already auto-resolved - no action performed`)\n\t}\n}\n\nconst addSubmoduleText = (message: string, repositoryPath: string): string => {\n\tif (repositoryPath.length) {\n\t\tmessage += ` in Submodule '${repositoryPath}'`\n\t}\n\n\treturn message\n}\n\nconst getBranchName = (remote: string, branch: string): string => (remote ? `${remote}/` : '') + branch\n","'use strict'\n\nimport { DEFAULT_TIMEOUT, TICK_TIME } from './StatusBar'\n\nexport enum Octicon {\n\t'comment' = '$(comment)',\n\t'sync' = '$(sync)',\n\t'code' = '$(code)',\n}\n\n/**\n * this class is a wrapper for a message displayed in the StatusBar\n */\nexport default class StatusItem {\n\tprivate text: string\n\tprivate icon: Octicon\n\tprivate animated: boolean\n\tprivate temporary: boolean\n\tprivate displayTime: number\n\n\tconstructor(text: string = '', icon: Octicon = Octicon.comment, animated: boolean = false, displayTime: number = 0) {\n\t\tthis.icon = icon\n\t\tthis.text = text\n\t\tthis.animated = animated\n\t\tthis.temporary = displayTime > 0\n\t\tthis.displayTime = displayTime\n\t}\n\n\tstatic newTemporaryStatusItem(text: string): StatusItem {\n\t\treturn new StatusItem(text, Octicon.comment, false, DEFAULT_TIMEOUT)\n\t}\n\n\tstatic newAnimatedStatusItem(text: string): StatusItem {\n\t\treturn new StatusItem(text, Octicon.sync, true)\n\t}\n\n\tisAnimated(): boolean {\n\t\treturn this.animated\n\t}\n\n\tisTemporary(): boolean {\n\t\treturn this.temporary\n\t}\n\n\treduceDisplayTime(): boolean {\n\t\tthis.displayTime -= TICK_TIME\n\n\t\treturn this.displayTime < 0\n\t}\n\n\ttoString(): string {\n\t\treturn `${this.toStringIcon()} ${this.toStringText()}`\n\t}\n\n\ttoStringIcon(): string {\n\t\treturn `${this.icon}`\n\t}\n\n\ttoStringText(): string {\n\t\treturn this.text\n\t}\n}\n","'use strict'\n\nimport { workspace } from 'vscode'\n\n/**\n * returns the path opf the current opened Workspace\n */\nexport const getWorkspacePath = (): string => {\n\tif (!workspace.workspaceFolders) {\n\t\treturn ''\n\t}\n\n\treturn workspace.workspaceFolders[0].uri.fsPath\n}\n\n/**\n * returns the name of the repository folder\n * @param repositoryPath relative path of the repository\n */\nexport const getRepositoryName = (repositoryPath: string): string => {\n\tlet name = repositoryPath\n\t// if the root-folder is passed, find and return its name\n\tif (!name.length) {\n\t\tif (workspace.workspaceFolders) {\n\t\t\tname = workspace.workspaceFolders[0].name\n\t\t}\n\t}\n\n\treturn name\n}\n\n/**\n * creates a diff of two objects\n * @param target target-object\n * @param source source-object\n */\nexport const deepmerge = (target: any, source: any) => {\n\t// Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\n\tfor (const key of Object.keys(source)) {\n\t\tif (source[key] instanceof Object && key in target) {\n\t\t\tObject.assign(source[key], deepmerge(target[key], source[key]))\n\t\t}\n\t}\n\t// Join `target` and modified `source`\n\tObject.assign(target || {}, source)\n\n\treturn target\n}\n","'use strict'\nimport { WorkspaceConfiguration, ConfigurationTarget, workspace } from 'vscode'\n\nexport enum ConfigOptions {\n\t'enabled' = 'enabled',\n\t'auto' = 'auto',\n\t'disabled' = 'disabled',\n}\n\n/**\n * this class is responsible for reading the Configuration-Settings of the Extension\n */\nexport default class Config {\n\tprivate static config: WorkspaceConfiguration\n\n\t/**\n\t * loads the current config of the extension\n\t */\n\tstatic loadConfig() {\n\t\tthis.config = workspace.getConfiguration('git-assistant')\n\t}\n\n\t/**\n\t * gets the value of a specific config-key\n\t * @param value config-key\n\t */\n\tstatic getValue(value: string): any {\n\t\treturn Config.config?.get(value)\n\t}\n\n\t/**\n\t * checks if a feature is enabled\n\t * @param value config-key\n\t */\n\tstatic isEnabled(value: string): boolean {\n\t\tconst val = Config.getValue(value)\n\t\tif (!val || val === ConfigOptions.disabled) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t}\n\n\t/**\n\t * disables a feature in the global-configs\n\t * @param value config-key\n\t */\n\tstatic disable(value: string) {\n\t\tConfig.config.update(value, 'disabled', ConfigurationTarget.Global)\n\t}\n}\n","'use strict'\n\nimport { ExtensionContext, commands } from 'vscode'\nimport Logger from '../UI/Logger'\n\n/**\n * this class is the template for a Command\n */\nexport default abstract class Command {\n\t/**\n\t * registers a Command in VS Code\n\t * @param context VS Code ExtensionContext\n\t * @param commandString name of the Command to register\n\t * @param command command that should be executed\n\t */\n\tprotected static register(context: ExtensionContext, commandString: string, command: any): void {\n\t\tcontext.subscriptions.push(commands.registerCommand('git-assistant.' + commandString, command))\n\t\tLogger.showMessage(`[command] ${commandString} registered`)\n\t}\n\n\t/**\n\t * this method is called when the Command should register\n\t * @param context VS Code ExtensionContext\n\t */\n\tstatic registerCommand(_context: ExtensionContext): void {\n\t\tthrow new TypeError('Must override method')\n\t}\n\n\t/**\n\t * this method is called when the dummy Command should register\n\t * @param context VS Code ExtensionContext\n\t */\n\tstatic registerDummyCommand(_context: ExtensionContext): void {\n\t\tthrow new TypeError('Must override method')\n\t}\n}\n","'use strict'\n\nimport { ExtensionContext } from 'vscode'\nimport Logger from '../UI/Logger'\nimport Command from './Command'\n\n/**\n * this class registers a Command to show the Output of the Logger\n */\nexport default class ShowOutputCommand extends Command {\n\tstatic registerCommand(context: ExtensionContext): void {\n\t\tCommand.register(context, 'showOutput', ShowOutputCommand.executeCommand)\n\t}\n\n\tstatic registerDummyCommand(context: ExtensionContext): void {\n\t\tCommand.register(\n\t\t\tcontext,\n\t\t\t'showOutput',\n\t\t\tLogger.showMessage.bind(null, 'you must open a git-repository in your workspace root', true),\n\t\t)\n\t}\n\n\tstatic executeCommand(): void {\n\t\tLogger.showOutput()\n\t}\n}\n","'use strict'\n\nimport { ExtensionContext } from 'vscode'\nimport Command from './Command'\nimport { startExtension } from '../extension'\nimport Logger from '../UI/Logger'\nimport EventHandler from '../handlers/EventHandler'\nimport Config from '../application/Config'\n\n/**\n * this class registers a Command to start the Extension\n */\nexport default class StartExtension extends Command {\n\tstatic registerCommand(context: ExtensionContext): void {\n\t\tCommand.register(context, 'startGitAssisitant', StartExtension.startExtension)\n\t}\n\n\tstatic registerDummyCommand(context: ExtensionContext): void {\n\t\tCommand.register(\n\t\t\tcontext,\n\t\t\t'startGitAssisitant',\n\t\t\tLogger.showMessage.bind(null, 'you must open a git-repository in your workspace root', true),\n\t\t)\n\t}\n\n\tstatic async startExtension(): Promise<void> {\n\t\tLogger.showMessage('Git Assistant started manually')\n\n\t\tConfig.loadConfig()\n\t\tEventHandler.clearAllHandlers()\n\t\tstartExtension()\n\t}\n}\n","'use strict'\n\nimport { ExtensionContext } from 'vscode'\nimport Command from './Command'\nimport Watcher from '../application/Watcher'\nimport Logger from '../UI/Logger'\n\n/**\n * this class registers a Command to stop the Extension\n */\nexport default class StopExtension extends Command {\n\tstatic registerCommand(context: ExtensionContext): void {\n\t\tCommand.register(context, 'stopGitAssisitant', StopExtension.stopExtension)\n\t}\n\n\tstatic registerDummyCommand(context: ExtensionContext): void {\n\t\tCommand.register(\n\t\t\tcontext,\n\t\t\t'stopGitAssisitant',\n\t\t\tLogger.showMessage.bind(null, 'you must open a git-repository in your workspace root', true),\n\t\t)\n\t}\n\n\tstatic async stopExtension(): Promise<void> {\n\t\tLogger.showMessage('Git Assistant stopped manually')\n\t\tWatcher.stop()\n\t}\n}\n","'use strict'\n\nimport { FSWatcher, watch } from 'fs'\nimport Event from '../models/Event'\nimport EventHandler from '../handlers/EventHandler'\nimport Logger from '../UI/Logger'\nimport Status from '../UI/Status'\nimport StatusBar from '../UI/StatusBar'\nimport GitRepository from './GitRepository'\nimport { getWorkspacePath } from './Helper'\nimport Config from './Config'\n\nconst TIME_TO_WAIT_FOR_ALL_CHANGES = 1000\n\n/**\n * this class handles changes in the curretnt Workspace-folder\n */\nexport default class Watcher {\n\tprivate static fsWatcher: FSWatcher\n\tprivate static lastChange: Map<Event, number>\n\tprivate static changedFiles: Map<Event, Set<string>>\n\tprivate static excludePaths: string[]\n\tprivate static status = Status.watcherRunning()\n\n\t/**\n\t * starts listening in the current Workspace-folder\n\t */\n\tstatic async start(): Promise<void> {\n\t\tWatcher.fsWatcher = watch(getWorkspacePath(), { recursive: true }, (_event: string, filename: any) => {\n\t\t\tWatcher.handleFileChange(filename)\n\t\t})\n\n\t\tWatcher.lastChange = new Map()\n\t\tWatcher.changedFiles = new Map()\n\t\tWatcher.excludePaths = Config.getValue('watcher-excludePaths') || []\n\n\t\tStatusBar.addStatus(Watcher.status)\n\t}\n\n\t/**\n\t * restarts the watcher\n\t */\n\tstatic restart(): void {\n\t\tWatcher.stop()\n\t\tGitRepository.reset()\n\t\tStatusBar.addStatus(Status.watcherRestarted())\n\t\tLogger.showMessage('Watcher restarted')\n\t\tWatcher.start()\n\t}\n\n\t/**\n\t * stops listening for file changes\n\t */\n\tstatic stop(): void {\n\t\tif (Watcher.fsWatcher) {\n\t\t\tWatcher.fsWatcher.close()\n\t\t}\n\t\tStatusBar.removeStatus(Watcher.status)\n\t}\n\n\t/*******************************************************************************************/\n\t/* HANDLE FILE CHANGES */\n\t/*******************************************************************************************/\n\n\t/**\n\t * handles what to do next when a file was changed\n\t * @param filename file that was changed\n\t */\n\tprivate static async handleFileChange(filename: string): Promise<void> {\n\t\tif (!filename) {\n\t\t\treturn\n\t\t}\n\t\t// do nothing when the extension currently executes some Git-Commands\n\t\tif (GitRepository.isCurrentlyUpdating()) {\n\t\t\treturn\n\t\t}\n\n\t\t// relpace Windows- with Unix-paths\n\t\tfilename = filename.replace(/\\\\/gi, '/')\n\n\t\tlet event\n\t\tif (filename.substring(0, 4) === '.git') {\n\t\t\tif (!(await GitRepository.isUnimportantGitFile(filename))) {\n\t\t\t\t// file in .git changed\n\t\t\t\tevent = GitRepository.isChangeInSubmodule(filename) ? (event = Event.SUBMODULE) : (event = Event.GIT)\n\t\t\t}\n\t\t} else if (Watcher.isExcludedFile(filename)) {\n\t\t\t// something changed that was excluded\n\t\t\treturn\n\t\t} else if ((await GitRepository.isFileInSubmodule(filename)).length) {\n\t\t\t// a file in a submodule has changed\n\t\t\tevent = Event.FILE_SUBMODULE\n\t\t} else {\n\t\t\t// some otehr file has changed\n\t\t\tevent = Event.FILE\n\t\t}\n\t\tif (event) {\n\t\t\tWatcher.fireChange(event, filename)\n\t\t}\n\t}\n\n\t/**\n\t * waits for multiple changed files in a short period and calls the Event-Handler\n\t * @param event Event the changed file belongs to\n\t * @param filename name of the changed file\n\t */\n\tprivate static async fireChange(event: Event, filename: string): Promise<void> {\n\t\tconst changedFiles = await Watcher.waitForLastChange(event, filename)\n\t\tEventHandler.handle(event, changedFiles)\n\t}\n\n\t/**\n\t * checks if the file is excluded to trigger a change\n\t * @param filename filename to check\n\t */\n\tprivate static isExcludedFile(filename: string): boolean {\n\t\treturn Watcher.excludePaths.some((path: string) => new RegExp(path, 'gi').test(filename))\n\t}\n\n\t/**\n\t * returns all changed files for a specific Event\n\t * @param event Event to get changed files\n\t */\n\tprivate static getChangedFiles(event: Event): Set<string> {\n\t\tconst ret = Watcher.changedFiles.get(event)\n\t\tif (ret) {\n\t\t\treturn ret\n\t\t}\n\n\t\t// nothing registered yet for this event => create new Set for it\n\t\tconst set = new Set<string>()\n\t\tWatcher.changedFiles.set(event, set)\n\n\t\treturn set\n\t}\n\n\t/**\n\t * delays the return of the changed files for a specific Event\n\t * @param event Event the changed file belongs to\n\t * @param filename name of the changed file\n\t */\n\tprivate static waitForLastChange(event: Event, filename: string): Promise<string[]> {\n\t\tconst increased = Watcher.addChange(event, filename)\n\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst lastUpdate = Watcher.getLastChange(event)\n\t\t\t\t// if the file of this call was the last changed file for this Event => return all changed files\n\t\t\t\tif (lastUpdate === increased) {\n\t\t\t\t\tlet changedFiles: string[] = []\n\t\t\t\t\tchangedFiles = [...Watcher.getChangedFiles(event)]\n\t\t\t\t\tWatcher.changedFiles.set(event, new Set())\n\t\t\t\t\tLogger.showMessage(`[changedFiles] ${event}: ${changedFiles.length} files changed`)\n\n\t\t\t\t\tresolve(changedFiles)\n\t\t\t\t}\n\t\t\t}, TIME_TO_WAIT_FOR_ALL_CHANGES)\n\t\t})\n\t}\n\n\t/**\n\t * add a file to the changed files and update its lastChanged-counter\n\t * @param event Event the changed file belongs to\n\t * @param filename name of the changed file\n\t */\n\tprivate static addChange(event: Event, filename: string): number {\n\t\tWatcher.getChangedFiles(event).add(filename)\n\n\t\tconst incremented = Watcher.getLastChange(event) + 1\n\t\tWatcher.lastChange.set(event, incremented)\n\n\t\treturn incremented\n\t}\n\n\t/**\n\t * returns the number of the last iteration a file was changed for a specific Event\n\t * @param event Event to get the last iteration from\n\t */\n\tprivate static getLastChange(event: Event): number {\n\t\tconst ret = Watcher.lastChange.get(event)\n\n\t\treturn ret ? ret : 0\n\t}\n}\n","module.exports = require(\"fs\");","'use strict'\n\nimport { join } from 'path'\nimport { readFile } from 'fs'\nimport Git from '../models/Git'\nimport Submodule from '../models/Submodule'\nimport Logger from '../UI/Logger'\nimport Status from '../UI/Status'\nimport StatusBar from '../UI/StatusBar'\nimport StatusItem from '../UI/StatusItem'\nimport CMD from './CMD'\nimport { diff as deepdiff } from 'deep-diff'\nimport { getWorkspacePath, deepmerge } from './Helper'\n\nconst unimportantGitFiles: string[] = ['lock', 'FETCH_HEAD', '.git/objects/']\n\n/**\n * this class handles the communication with the Git-Repository\n */\nexport default class GitRepository {\n\tprivate static gitModels: Map<string, Git> = new Map()\n\tprivate static simplegits: Map<string, any> = new Map()\n\n\tprivate static isUpdating: boolean = false\n\n\t/**\n\t * deletes all Git-Models and simple-git instances\n\t */\n\tstatic reset(): void {\n\t\tGitRepository.gitModels = new Map()\n\t\tGitRepository.simplegits = new Map()\n\t}\n\n\t/**\n\t * creates a new simple-git instance or returns a existing one\n\t * @param repositoryPath relative path of the Repsoitory\n\t */\n\tprivate static getSimplegit(repositoryPath: string = ''): any {\n\t\tif (GitRepository.simplegits.has(repositoryPath)) {\n\t\t\treturn GitRepository.simplegits.get(repositoryPath)\n\t\t}\n\t\tconst simplegit = require('simple-git/promise')(join(getWorkspacePath(), repositoryPath))\n\t\tGitRepository.simplegits.set(repositoryPath, simplegit)\n\n\t\treturn simplegit\n\t}\n\n\t/**\n\t * returns the current status as Git-Model\n\t * @param repositoryPath relative path of the Repsoitory\n\t */\n\tstatic async getGitModel(repositoryPath: string = '', mainRepositoryPath: string = ''): Promise<Git> {\n\t\trepositoryPath = repositoryPath.replace(/\\\\/gi, '/')\n\n\t\tlet gitModel = GitRepository.gitModels.get(repositoryPath)\n\t\tif (gitModel) {\n\t\t\treturn gitModel\n\t\t}\n\n\t\t// no Git-Model was created yet => create a new one\n\t\tgitModel = await GitRepository.updateGitModel(repositoryPath, mainRepositoryPath)\n\n\t\treturn gitModel\n\t}\n\n\t/**\n\t * sets a Git-Model as current status of the Repository\n\t * @param repositoryPath relative path of the Repsoitory\n\t * @param gitModel Git-Model to set as current\n\t */\n\tprivate static setGitModel(repositoryPath: string = '', gitModel: Git): void {\n\t\trepositoryPath = repositoryPath.replace(/\\\\/gi, '/')\n\t\tconst oldModel = GitRepository.gitModels.get(repositoryPath)\n\t\tGitRepository.gitModels.set(repositoryPath, gitModel)\n\n\t\t// store the old Git-Model in the new one\n\t\tif (oldModel) {\n\t\t\tgitModel.setOldModel(oldModel)\n\t\t}\n\t}\n\n\t/**\n\t * checks if a given file is an unimportant file that contains no Status-change-infomrmation\n\t * @param filename file to check\n\t */\n\tstatic async isUnimportantGitFile(filename: string): Promise<boolean> {\n\t\t// root git folder\n\t\tif (filename.length === 4) {\n\t\t\treturn true\n\t\t}\n\t\t// unimportant file\n\t\tif (unimportantGitFiles.some((file: string) => new RegExp(file, 'gi').test(filename))) {\n\t\t\treturn true\n\t\t}\n\t\t// submodule references\n\t\tconst subModuleRoots = (await GitRepository.getGitModel())\n\t\t\t.getSubmodules()\n\t\t\t.filter((submodule) => '.git/modules/' + submodule.getPath() === filename)\n\t\tif (subModuleRoots.length) {\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\t/**\n\t * checks if a change occured in a Submodule-Repsoitory\n\t * @param filename file to check\n\t */\n\tstatic isChangeInSubmodule(filename: string): boolean {\n\t\treturn new RegExp('.git/modules/', 'gi').test(filename)\n\t}\n\n\t/**\n\t * checks if a file is located in a Submodule\n\t * @param filename file to check\n\t */\n\tstatic async isFileInSubmodule(filename: string): Promise<string> {\n\t\tconst submodule = (await GitRepository.getGitModel())\n\t\t\t.getSubmodules()\n\t\t\t.find((submodule: Submodule) => new RegExp(submodule.getPath(), 'gi').test(filename))\n\n\t\treturn submodule ? submodule.getPath() : ''\n\t}\n\n\t/**\n\t * checks if the Extension is currently executing a Git-Command\n\t */\n\tstatic isCurrentlyUpdating(): boolean {\n\t\treturn GitRepository.isUpdating\n\t}\n\n\t/**\n\t * marks the begin of a Git-Command\n\t */\n\tprivate static updatingStart(): void {\n\t\tGitRepository.isUpdating = true\n\t}\n\n\t/**\n\t * marks the end of a Git-Command\n\t * @param repositoryPath relative path of the Repsoitory\n\t * @param branch current Branch of the Repository\n\t */\n\tprivate static updatingEnd(repositoryPath: string, branch?: string): void {\n\t\tGitRepository.updateGUI(repositoryPath, branch)\n\t\tGitRepository.isUpdating = false\n\t}\n\n\t/**\n\t * hack for updating the VS Code GUI\n\t * @param repositoryPath relative path of the Repsoitory\n\t * @param branch current Branch of the repository\n\t */\n\tstatic async updateGUI(repositoryPath: string, branch?: string): Promise<void> {\n\t\tif (!repositoryPath.length) {\n\t\t\treturn\n\t\t}\n\n\t\tconst simplegit = GitRepository.getSimplegit(repositoryPath)\n\n\t\tconst oldBranch = branch ? branch : (await GitRepository.getGitModel(repositoryPath)).getBranch()\n\t\tconst helperBranch = oldBranch !== 'master' ? 'master' : 'development'\n\t\tlet helperBranchExists = false\n\n\t\t// checkout other Branch\n\t\tawait simplegit.checkoutLocalBranch(helperBranch).catch(() => (helperBranchExists = true))\n\t\tif (helperBranchExists) {\n\t\t\tawait simplegit.checkout(helperBranch)\n\t\t}\n\n\t\t// wait a short time to switch back to the original Branch\n\t\tsetTimeout(async () => {\n\t\t\tawait simplegit.checkout(oldBranch)\n\n\t\t\tif (!helperBranchExists) {\n\t\t\t\tsimplegit.deleteLocalBranch(helperBranch)\n\t\t\t}\n\n\t\t\tLogger.showMessage('VS Code SCM-GUI updated')\n\t\t}, 10)\n\t}\n\n\t/*******************************************************************************************/\n\t/* UPDATE GIT MODEL */\n\t/*******************************************************************************************/\n\n\t/**\n\t * reads the current Status of the Repsoitory\n\t * @param repositoryPath relative path of the Repsoitory\n\t */\n\tstatic async updateGitModel(repositoryPath: string = '', mainRepositoryPath: string = ''): Promise<Git> {\n\t\tlet simplegit\n\t\ttry {\n\t\t\tsimplegit = GitRepository.getSimplegit(repositoryPath)\n\t\t} catch (error) {\n\t\t\tLogger.showMessage(`Repository path ${repositoryPath} not found`)\n\n\t\t\treturn new Git()\n\t\t}\n\t\tconst gitModel = new Git(repositoryPath)\n\n\t\ttry {\n\t\t\t// fetch latest changes from Remote\n\t\t\tawait simplegit.fetch()\n\t\t} catch (error) {\n\t\t\tif (error.message.indexOf('unable to access')) {\n\t\t\t\tLogger.showMessage(`[repository] could not connect to Server`)\n\t\t\t} else {\n\t\t\t\tLogger.showMessage(`[repository] No remote repository found for ${repositoryPath}`)\n\t\t\t}\n\t\t}\n\n\t\tif (mainRepositoryPath) {\n\t\t\tgitModel.setMainRepositoryPath(mainRepositoryPath)\n\t\t}\n\n\t\tconst stat = Status.updatingGitModel(repositoryPath)\n\t\tStatusBar.addStatus(stat)\n\n\t\tconst status = await simplegit.status()\n\n\t\tgitModel.setBehind(status.behind)\n\t\tgitModel.setAhead(status.ahead)\n\t\tgitModel.setBranch(status.current)\n\t\tif (status.tracking) {\n\t\t\tgitModel.setRemote(status.tracking.split('/')[0])\n\t\t}\n\n\t\tconst branches = await simplegit.branch()\n\t\tif (gitModel.getBranch() === 'HEAD') {\n\t\t\tgitModel.setBranch(branches.current)\n\t\t}\n\t\tgitModel.setDetachedHEAD(branches.detached)\n\n\t\tgitModel.setBranches(branches.branches)\n\n\t\tconst remotes = await simplegit.getRemotes()\n\t\tgitModel.setRemotes(remotes)\n\n\t\tconst result = await CMD.executeCommand('git submodule', gitModel.getPath())\n\t\tgitModel.setSubmodules(result.replace(/\\r?\\n|\\r/g, ' ').replace('  ', ' '))\n\n\t\tGitRepository.setGitModel(repositoryPath, gitModel)\n\n\t\tStatusBar.removeStatus(stat)\n\n\t\treturn gitModel\n\t}\n\n\t/*******************************************************************************************/\n\t/* GIT MODEL DIFF */\n\t/*******************************************************************************************/\n\n\t/**\n\t * returns a diff of the last two Git-Models\n\t * @param repositoryPath relative path of the Repsoitory\n\t */\n\tstatic async getModelDiff(repositoryPath: string = ''): Promise<any> {\n\t\tconst newModel = await GitRepository.getGitModel(repositoryPath)\n\t\tconst oldModel = newModel.getOldModel()\n\n\t\tif (!oldModel) {\n\t\t\treturn newModel\n\t\t}\n\n\t\tconst tempDiff = deepdiff(newModel, oldModel) || []\n\n\t\tlet diff: any = {}\n\t\t// converts the deep-diff object to a Git-Model\n\t\ttempDiff.forEach((object: any) => {\n\t\t\tif (object.path[0] === 'oldModel') {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tlet pathPointer = object.lhs\n\t\t\tobject.path.reverse().forEach((pathSegment: string) => {\n\t\t\t\tconst obj: any = {}\n\t\t\t\tobj[pathSegment] = pathPointer\n\t\t\t\tpathPointer = obj\n\t\t\t})\n\n\t\t\tif (pathPointer.branches) {\n\t\t\t\tpathPointer.branches = undefined\n\t\t\t}\n\n\t\t\tdiff = deepmerge(diff, pathPointer)\n\t\t})\n\n\t\treturn diff\n\t}\n\n\t/*******************************************************************************************/\n\t/* INIT */\n\t/*******************************************************************************************/\n\n\t/**\n\t * inits a new Git-Repository\n\t */\n\tstatic async init(): Promise<void> {\n\t\tconst gitInstance = GitRepository.getSimplegit()\n\t\tawait gitInstance.init()\n\t\tawait gitInstance.add('./*')\n\t\tawait gitInstance.commit('first commit')\n\t}\n\n\t/*******************************************************************************************/\n\t/* CONFIG-VARIABLES */\n\t/*******************************************************************************************/\n\n\t/**\n\t * returns the value of a given config-variable-name\n\t * @param variable name of the config-variable\n\t */\n\tstatic getConfigVariable(variable: string): Promise<string> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tCMD.executeCommand(`git config --get ${variable}`)\n\t\t\t\t.then((result) => {\n\t\t\t\t\tif (!result.length) {\n\t\t\t\t\t\treturn reject()\n\t\t\t\t\t}\n\t\t\t\t\tresolve(result)\n\t\t\t\t})\n\t\t\t\t.catch(reject)\n\t\t})\n\t}\n\n\t/**\n\t * sets the value of a Git config-variable\n\t * @param variable name of the config-variable\n\t * @param value value to set\n\t * @param scope global or local scope\n\t */\n\tstatic async setConfigVariable(\n\t\tvariable: string,\n\t\tvalue: string,\n\t\tscope: 'global' | 'local' = 'global',\n\t): Promise<void> {\n\t\tawait CMD.executeCommand(`git config --${scope} ${variable} ${value}`).catch(() => {\n\t\t\tLogger.showError(`An Error occured while trying to set '${variable}'`)\n\n\t\t\treturn\n\t\t})\n\n\t\tStatusBar.addStatus(Status.configVariableSet(variable, value))\n\t}\n\n\t/*******************************************************************************************/\n\t/* PUBLISH BRANCH */\n\t/*******************************************************************************************/\n\n\t/**\n\t * publishes a Branch to a given remote\n\t * @param repositoryPath relative path of the Repsoitory\n\t * @param remote remote to publish\n\t * @param branch branch to publish\n\t */\n\tstatic async publishBranch(repositoryPath: string, remote: string, branch: string): Promise<void> {\n\t\tconst status = Status.publishBranch(repositoryPath, remote, branch)\n\t\tStatusBar.addStatus(status)\n\t\tGitRepository.updatingStart()\n\n\t\tawait GitRepository.getSimplegit(repositoryPath).push(remote, branch, { '-u': null }).catch()\n\n\t\tGitRepository.updatingEnd(repositoryPath)\n\t\tStatusBar.removeStatus(status)\n\t}\n\n\t/*******************************************************************************************/\n\t/* BRANCHES */\n\t/*******************************************************************************************/\n\n\t/**\n\t * creates a new Branch\n\t * @param repositoryPath relative path of the Repsoitory\n\t * @param branch Branch to create\n\t */\n\tstatic async createNewBranch(repositoryPath: string = '', branch: string): Promise<void> {\n\t\tawait GitRepository.getSimplegit(repositoryPath).checkoutLocalBranch(branch)\n\t\tStatus.branchCreated(branch)\n\t}\n\n\t/**\n\t * checks out a branch\n\t * @param repositoryPath relative path of the Repsoitory\n\t * @param branch name of the Branch\n\t */\n\tstatic async checkoutBranchForRepository(repositoryPath: string, branch: string): Promise<void> {\n\t\tGitRepository.updatingStart()\n\n\t\tawait GitRepository.getSimplegit(repositoryPath)\n\t\t\t.checkout(branch)\n\t\t\t.catch(() => {\n\t\t\t\tlet message = `could not checkout branch '${branch}'`\n\t\t\t\tif (repositoryPath.length) {\n\t\t\t\t\tmessage += ` in Submodule '${repositoryPath}'`\n\t\t\t\t}\n\t\t\t\tLogger.showError(message)\n\t\t\t\tGitRepository.updatingEnd(repositoryPath, branch)\n\n\t\t\t\treturn\n\t\t\t})\n\n\t\tStatusBar.addStatus(Status.checkedOutRepositoryBranch(repositoryPath, branch))\n\t\tGitRepository.updatingEnd(repositoryPath, branch)\n\t}\n\n\t/**\n\t * add changes to Stash\n\t * @param repositoryPath relative path of the Repsoitory\n\t */\n\tstatic async stashSaveChanges(repositoryPath: string): Promise<void> {\n\t\tGitRepository.updatingStart()\n\t\tawait CMD.executeCommand('git stash save', repositoryPath).catch(() => {\n\t\t\tGitRepository.updatingEnd(repositoryPath)\n\t\t\tLogger.showError(`An Error occured while stash changes`, true)\n\n\t\t\treturn\n\t\t})\n\n\t\tStatusBar.addStatus(Status.stashSaveChanges())\n\t\tGitRepository.updatingEnd(repositoryPath)\n\t}\n\n\t/**\n\t * restores changes from Stash\n\t * @param repositoryPath relative path of the Repsoitory\n\t */\n\tstatic async stashPopChanges(repositoryPath: string): Promise<void> {\n\t\tGitRepository.updatingStart()\n\t\tawait CMD.executeCommand('git stash pop', repositoryPath).catch(() => {\n\t\t\tGitRepository.updatingEnd(repositoryPath)\n\t\t\tLogger.showError(`An Error occured while trying to pop from stash`, true)\n\n\t\t\treturn\n\t\t})\n\n\t\tStatusBar.addStatus(Status.stashPopChanges())\n\t\tGitRepository.updatingEnd(repositoryPath)\n\t}\n\n\t/**\n\t * checks the '.gitmodules' file for a configured branch\n\t * @param gitModel Git-Model of Submodule\n\t */\n\tstatic async getConfiguredBranchForSubmodule(gitModel: Git): Promise<string> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst mainRepsoitoryPath = gitModel.getMainRepositoryPath()\n\t\t\tconst submodulePath = gitModel.getRelativePath()\n\n\t\t\treadFile(join(mainRepsoitoryPath, '/.gitmodules'), 'utf8', (err, data: string) => {\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn resolve('')\n\t\t\t\t}\n\n\t\t\t\tconst lines = data.match(/[^\\r\\n]+/g) || ([] as RegExpMatchArray)\n\t\t\t\tlet foundSubmodule = false\n\t\t\t\tlines.forEach((line) => {\n\t\t\t\t\tif (line.includes('[submodule')) {\n\t\t\t\t\t\tfoundSubmodule = line.includes(submodulePath)\n\t\t\t\t\t} else if (foundSubmodule) {\n\t\t\t\t\t\tif (line.includes('branch')) {\n\t\t\t\t\t\t\treturn resolve(line.replace('branch =', '').trim())\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tresolve('')\n\t\t\t})\n\t\t})\n\t}\n\n\t/*******************************************************************************************/\n\t/* PULL */\n\t/*******************************************************************************************/\n\n\t/**\n\t * pulls changes from Remote\n\t * @param repositoryPath relative path of the Repsoitory\n\t * @param remote name of the Remote\n\t * @param branch name of the Branch\n\t * @param behind number of commits behind\n\t * @param silent iff true => don't show messages\n\t */\n\tstatic async pullRepository(\n\t\trepositoryPath: string,\n\t\tremote: string,\n\t\tbranch: string,\n\t\tbehind: number = 0,\n\t\tsilent: boolean = false,\n\t): Promise<void> {\n\t\tconst status = Status.commitsPulling(repositoryPath, remote, branch, behind)\n\t\tif (!silent) {\n\t\t\tGitRepository.updatingStart()\n\t\t\tStatusBar.addStatus(status)\n\t\t}\n\t\tawait GitRepository.getSimplegit(repositoryPath)\n\t\t\t.pull(remote, branch)\n\t\t\t.catch((error: any) => {\n\t\t\t\tLogger.showError(`Failed to Pull changes from '${remote}/${branch}'`, true)\n\t\t\t\tLogger.showError(error, true)\n\t\t\t\tif (!silent) {\n\t\t\t\t\tStatusBar.removeStatus(status)\n\t\t\t\t\tGitRepository.updatingEnd(repositoryPath)\n\t\t\t\t}\n\n\t\t\t\treturn\n\t\t\t})\n\n\t\tif (!silent) {\n\t\t\tStatusBar.addStatus(Status.commitsPulled(repositoryPath, remote, branch, behind))\n\t\t\tStatusBar.removeStatus(status)\n\t\t\tGitRepository.updatingEnd(repositoryPath)\n\t\t}\n\t}\n\n\t/*******************************************************************************************/\n\t/* PUSH */\n\t/*******************************************************************************************/\n\n\t/**\n\t * pushes changes to Remote\n\t * @param repositoryPath relative path of the Repsoitory\n\t * @param remote name of the Remote\n\t * @param branch name of the Branch\n\t * @param ahead number of commits ahead\n\t * @param silent iff true => don't show messages\n\t */\n\tstatic async pushRepository(\n\t\trepositoryPath: string,\n\t\tremote: string,\n\t\tbranch: string,\n\t\tahead: number = 0,\n\t\tsilent: boolean = false,\n\t): Promise<any> {\n\t\tconst status = Status.commitsPushing(repositoryPath, remote, branch, ahead)\n\t\tif (!silent) {\n\t\t\tGitRepository.updatingStart()\n\t\t\tStatusBar.addStatus(status)\n\t\t}\n\t\tawait GitRepository.getSimplegit(repositoryPath)\n\t\t\t.push(remote, branch)\n\t\t\t.catch((error: any) => {\n\t\t\t\tLogger.showError(`Failed to Push changes to '${remote}/${branch}'`, true)\n\t\t\t\tLogger.showError(error, true)\n\t\t\t\tif (!silent) {\n\t\t\t\t\tStatusBar.removeStatus(status)\n\t\t\t\t\tGitRepository.updatingEnd(repositoryPath)\n\t\t\t\t}\n\n\t\t\t\treturn\n\t\t\t})\n\n\t\tif (!silent) {\n\t\t\tStatusBar.addStatus(Status.commitsPushed(repositoryPath, remote, branch, ahead))\n\t\t\tStatusBar.removeStatus(status)\n\t\t\tGitRepository.updatingEnd(repositoryPath)\n\t\t}\n\t}\n\n\t/**\n\t * pushes the changes from the root-Repository\n\t */\n\tstatic async pushRootRepository(): Promise<any> {\n\t\tconst gitModel = await GitRepository.getGitModel()\n\n\t\treturn GitRepository.pushRepository(\n\t\t\tgitModel.getRelativePath(),\n\t\t\tgitModel.getRemote(),\n\t\t\tgitModel.getBranch(),\n\t\t\tgitModel.getAhead(),\n\t\t)\n\t}\n\n\t/*******************************************************************************************/\n\t/* MERGE */\n\t/*******************************************************************************************/\n\n\t/**\n\t * pulls, merges and pushes changes to the Remote\n\t * @param repositoryPath relative path of the Repsoitory\n\t * @param remote name of the Remote\n\t * @param branch name of the Branch\n\t * @param ahead number of commits ahead\n\t * @param behind number of commits behind\n\t */\n\tstatic async pullAndPushRepository(\n\t\trepositoryPath: string,\n\t\tremote: string,\n\t\tbranch: string,\n\t\tahead: number = 0,\n\t\tbehind: number = 0,\n\t): Promise<any> {\n\t\tGitRepository.updatingStart()\n\t\tconst status = Status.commitsMerging(repositoryPath, remote, branch, ahead, behind)\n\t\tStatusBar.addStatus(status)\n\n\t\tawait GitRepository.pullRepository(repositoryPath, remote, branch, behind, true).catch((error: any) =>\n\t\t\tGitRepository.catchPushAndPullRepositoryError(error, repositoryPath, remote, branch, status),\n\t\t)\n\n\t\tawait GitRepository.pushRepository(repositoryPath, remote, branch, ahead, true).catch((error: any) =>\n\t\t\tGitRepository.catchPushAndPullRepositoryError(error, repositoryPath, remote, branch, status),\n\t\t)\n\n\t\tStatusBar.addStatus(Status.commitsMerged(repositoryPath, remote, branch, ahead, behind))\n\t\tStatusBar.removeStatus(status)\n\t\tGitRepository.updatingEnd(repositoryPath)\n\t}\n\n\t/**\n\t * handles Errors that occure when merging changes\n\t * @param error Error that occurred\n\t * @param repositoryPath relative path of the Repsoitory\n\t * @param remote name of the Remote\n\t * @param branch name of the Branch\n\t * @param status StatusItem\n\t */\n\tprivate static catchPushAndPullRepositoryError(\n\t\terror: any,\n\t\trepositoryPath: string,\n\t\tremote: string,\n\t\tbranch: string,\n\t\tstatus: StatusItem,\n\t): void {\n\t\tLogger.showError(`Failed to Merge changes on '${remote}/${branch}'`, true)\n\t\tLogger.showError(error, true)\n\t\tStatusBar.removeStatus(status)\n\t\tGitRepository.updatingEnd(repositoryPath)\n\t}\n\n\t/*******************************************************************************************/\n\t/* SUBMODULE UPDATE INIT */\n\t/*******************************************************************************************/\n\n\t/**\n\t * updates and inits Submodules\n\t */\n\tstatic async submoduleUpdateInit(): Promise<void> {\n\t\tawait CMD.executeCommand('git submodule update --init').catch(() => {\n\t\t\tLogger.showError(`An Error occured while trying to update submodules`, true)\n\n\t\t\treturn\n\t\t})\n\t}\n}\n","module.exports = require(\"path\");","'use strict'\n\nimport { isAbsolute, join } from 'path'\nimport Branch from './Branch'\nimport Submodule from './Submodule'\nimport { getWorkspacePath } from '../application/Helper'\n\nexport default class Git {\n\tprivate dirpath: string\n\tprivate timestamp: number\n\tprivate branch: string\n\tprivate remote: string\n\tprivate detachedHEAD: boolean\n\tprivate branches: Branch[]\n\tprivate remotes: string[]\n\tprivate ahead: number\n\tprivate behind: number\n\tprivate submodules: Submodule[]\n\tprivate mainRepositoryPath: string\n\tprivate oldModel: Git | null\n\n\tconstructor(dirpath: string = '') {\n\t\tdirpath = dirpath.replace(/\\\\/gi, '/')\n\t\tthis.dirpath = join(getWorkspacePath(), dirpath)\n\t\tthis.timestamp = Date.now()\n\t\tthis.branch = ''\n\t\tthis.remote = ''\n\t\tthis.detachedHEAD = false\n\t\tthis.branches = []\n\t\tthis.remotes = []\n\t\tthis.ahead = 0\n\t\tthis.behind = 0\n\t\tthis.submodules = []\n\t\tthis.mainRepositoryPath = ''\n\t\tthis.oldModel = null\n\t}\n\n\tgetPath(): string {\n\t\treturn this.dirpath\n\t}\n\n\tgetRelativePath(): string {\n\t\tconst relativePath = this.dirpath.replace(getWorkspacePath(), '').replace(/\\\\/gi, '/')\n\t\tif (isAbsolute(relativePath)) {\n\t\t\treturn relativePath.substr(1)\n\t\t}\n\n\t\treturn relativePath\n\t}\n\n\tisRootGit(): boolean {\n\t\treturn this.dirpath === getWorkspacePath()\n\t}\n\n\tgetTimestamp(): number {\n\t\treturn this.timestamp\n\t}\n\n\tgetBranch(): string {\n\t\treturn this.branch\n\t}\n\n\tsetBranch(branch: string): void {\n\t\tthis.branch = branch\n\t}\n\n\tgetRemote(): string {\n\t\treturn this.remote\n\t}\n\n\tsetRemote(remote: string): void {\n\t\tthis.remote = remote\n\t}\n\n\tisHeadDetached(): boolean {\n\t\treturn this.detachedHEAD\n\t}\n\n\tsetDetachedHEAD(detachedHEAD: boolean): void {\n\t\tthis.detachedHEAD = detachedHEAD\n\t}\n\n\tsetBranches(branches: any): void {\n\t\tthis.branches = Object.keys(branches)\n\t\t\t.map((key) => branches[key])\n\t\t\t.map((branch: any) => new Branch(branch.name, branch.commit))\n\t}\n\n\tgetBranches(): Branch[] {\n\t\treturn this.branches\n\t}\n\n\tgetLocalBranches(): Branch[] {\n\t\treturn this.branches.filter((branch: Branch) => !branch.isRemote())\n\t}\n\n\tgetRemoteBranches(): Branch[] {\n\t\treturn this.branches.filter((branch: Branch) => branch.isRemote())\n\t}\n\n\tsetRemotes(remotes: any): void {\n\t\tthis.remotes = remotes.map((remote: any) => remote.name)\n\t}\n\n\tgetRemotes(): string[] {\n\t\treturn this.remotes\n\t}\n\n\tgetAhead(): number {\n\t\treturn this.ahead\n\t}\n\n\tsetAhead(ahead: number): void {\n\t\tthis.ahead = ahead\n\t}\n\n\tgetBehind(): number {\n\t\treturn this.behind\n\t}\n\n\tsetBehind(behind: number): void {\n\t\tthis.behind = behind\n\t}\n\n\tsetSubmodules(CMDoutput: string): void {\n\t\tthis.submodules = []\n\t\tif (!CMDoutput.length) {\n\t\t\treturn\n\t\t}\n\t\tconst split = CMDoutput.split(' ')\n\t\tfor (let i = 0; i < split.length; ) {\n\t\t\tif (!split[i].length) {\n\t\t\t\ti++\n\t\t\t}\n\t\t\tconst hash = split[i]\n\t\t\tconst path = split[i + 1]\n\t\t\tlet branch = split[i + 2] || ''\n\n\t\t\tif (branch.indexOf('(') < 0) {\n\t\t\t\tbranch = ''\n\t\t\t\ti--\n\t\t\t}\n\t\t\ti += 3\n\t\t\tthis.submodules.push(new Submodule(hash, path, branch))\n\t\t}\n\t}\n\n\tgetSubmodules(): Submodule[] {\n\t\treturn this.submodules\n\t}\n\n\tsetMainRepositoryPath(mainRepositoryPath: string): void {\n\t\tthis.mainRepositoryPath = mainRepositoryPath\n\t}\n\n\tgetMainRepositoryPath(): string {\n\t\treturn this.mainRepositoryPath\n\t}\n\n\tsetOldModel(oldModel: Git): void {\n\t\tthis.oldModel = oldModel\n\t}\n\n\tgetOldModel(): Git | null {\n\t\treturn this.oldModel\n\t}\n}\n","'use strict'\n\nexport default class Branch {\n\tprivate name: string\n\tprivate commit: string\n\n\tconstructor(name: string, commit: string) {\n\t\tthis.name = name\n\t\tthis.commit = commit\n\t}\n\n\tgetName(): string {\n\t\treturn this.name.replace(/remotes\\//, '')\n\t}\n\n\tgetCommit(): string {\n\t\treturn this.commit\n\t}\n\n\tisRemote(): boolean {\n\t\treturn this.name.match(/remotes\\//) ? true : false\n\t}\n}\n","'use strict'\n\nexport default class Submodule {\n\tprivate commitHash: string\n\tprivate path: string\n\tprivate branch: string\n\n\tconstructor(commitHash: string, path: string, branch: string) {\n\t\tthis.commitHash = commitHash\n\t\tthis.path = path\n\t\tthis.branch = branch\n\t}\n\n\tgetCommitHash(): string {\n\t\treturn this.commitHash\n\t}\n\n\tgetPath(): string {\n\t\treturn this.path\n\t}\n\n\tgetBranch(): string {\n\t\treturn this.branch\n\t}\n}\n","'use strict'\n\nimport { exec } from 'child_process'\nimport Logger from '../UI/Logger'\nimport { getWorkspacePath } from './Helper'\n\n/**\n * this class allows to execute commands in the OS-shell\n */\nexport default class CMD {\n\t// filter to validate the input\n\tprivate static commandInjectionRegexp = new RegExp(/^[a-zA-Z 0-9\\.\\-\\@]*$/)\n\n\t/**\n\t * executes a given command in the shell\n\t * @param command command to execute\n\t * @param workspace path where the command should be executed\n\t */\n\tstatic executeCommand(command: string, workspace: string = getWorkspacePath()): Promise<string> {\n\t\t// input is validated to prevent command-injection\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!CMD.commandInjectionRegexp.test(command)) {\n\t\t\t\tLogger.showError(`Command '${command}' not allowed`, true)\n\n\t\t\t\treturn reject()\n\t\t\t}\n\t\t\t// execute the passed command\n\t\t\texec(command, { cwd: workspace }, (error: any, stdout: any, _stderr: any) => {\n\t\t\t\tif (error !== null) {\n\t\t\t\t\treturn reject(error)\n\t\t\t\t}\n\t\t\t\tresolve(stdout.trim())\n\t\t\t})\n\t\t})\n\t}\n}\n","module.exports = require(\"child_process\");",";(function(root, factory) { // eslint-disable-line no-extra-semi\n  var deepDiff = factory(root);\n  // eslint-disable-next-line no-undef\n  if (typeof define === 'function' && define.amd) {\n      // AMD\n      define('DeepDiff', function() { // eslint-disable-line no-undef\n          return deepDiff;\n      });\n  } else if (typeof exports === 'object' || typeof navigator === 'object' && navigator.product.match(/ReactNative/i)) {\n      // Node.js or ReactNative\n      module.exports = deepDiff;\n  } else {\n      // Browser globals\n      var _deepdiff = root.DeepDiff;\n      deepDiff.noConflict = function() {\n          if (root.DeepDiff === deepDiff) {\n              root.DeepDiff = _deepdiff;\n          }\n          return deepDiff;\n      };\n      root.DeepDiff = deepDiff;\n  }\n}(this, function(root) {\n  var validKinds = ['N', 'E', 'A', 'D'];\n\n  // nodejs compatible on server side and in the browser.\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  }\n\n  function Diff(kind, path) {\n    Object.defineProperty(this, 'kind', {\n      value: kind,\n      enumerable: true\n    });\n    if (path && path.length) {\n      Object.defineProperty(this, 'path', {\n        value: path,\n        enumerable: true\n      });\n    }\n  }\n\n  function DiffEdit(path, origin, value) {\n    DiffEdit.super_.call(this, 'E', path);\n    Object.defineProperty(this, 'lhs', {\n      value: origin,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffEdit, Diff);\n\n  function DiffNew(path, value) {\n    DiffNew.super_.call(this, 'N', path);\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffNew, Diff);\n\n  function DiffDeleted(path, value) {\n    DiffDeleted.super_.call(this, 'D', path);\n    Object.defineProperty(this, 'lhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffDeleted, Diff);\n\n  function DiffArray(path, index, item) {\n    DiffArray.super_.call(this, 'A', path);\n    Object.defineProperty(this, 'index', {\n      value: index,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'item', {\n      value: item,\n      enumerable: true\n    });\n  }\n  inherits(DiffArray, Diff);\n\n  function arrayRemove(arr, from, to) {\n    var rest = arr.slice((to || from) + 1 || arr.length);\n    arr.length = from < 0 ? arr.length + from : from;\n    arr.push.apply(arr, rest);\n    return arr;\n  }\n\n  function realTypeOf(subject) {\n    var type = typeof subject;\n    if (type !== 'object') {\n      return type;\n    }\n\n    if (subject === Math) {\n      return 'math';\n    } else if (subject === null) {\n      return 'null';\n    } else if (Array.isArray(subject)) {\n      return 'array';\n    } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n      return 'date';\n    } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n      return 'regexp';\n    }\n    return 'object';\n  }\n\n  // http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n  function hashThisString(string) {\n    var hash = 0;\n    if (string.length === 0) { return hash; }\n    for (var i = 0; i < string.length; i++) {\n      var char = string.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n  }\n\n  // Gets a hash of the given object in an array order-independent fashion\n  // also object key order independent (easier since they can be alphabetized)\n  function getOrderIndependentHash(object) {\n    var accum = 0;\n    var type = realTypeOf(object);\n\n    if (type === 'array') {\n      object.forEach(function (item) {\n        // Addition is commutative so this is order indep\n        accum += getOrderIndependentHash(item);\n      });\n\n      var arrayString = '[type: array, hash: ' + accum + ']';\n      return accum + hashThisString(arrayString);\n    }\n\n    if (type === 'object') {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          var keyValueString = '[ type: object, key: ' + key + ', value hash: ' + getOrderIndependentHash(object[key]) + ']';\n          accum += hashThisString(keyValueString);\n        }\n      }\n\n      return accum;\n    }\n\n    // Non object, non array...should be good?\n    var stringToHash = '[ type: ' + type + ' ; value: ' + object + ']';\n    return accum + hashThisString(stringToHash);\n  }\n\n  function deepDiff(lhs, rhs, changes, prefilter, path, key, stack, orderIndependent) {\n    changes = changes || [];\n    path = path || [];\n    stack = stack || [];\n    var currentPath = path.slice(0);\n    if (typeof key !== 'undefined' && key !== null) {\n      if (prefilter) {\n        if (typeof (prefilter) === 'function' && prefilter(currentPath, key)) {\n          return;\n        } else if (typeof (prefilter) === 'object') {\n          if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n            return;\n          }\n          if (prefilter.normalize) {\n            var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n            if (alt) {\n              lhs = alt[0];\n              rhs = alt[1];\n            }\n          }\n        }\n      }\n      currentPath.push(key);\n    }\n\n    // Use string comparison for regexes\n    if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n      lhs = lhs.toString();\n      rhs = rhs.toString();\n    }\n\n    var ltype = typeof lhs;\n    var rtype = typeof rhs;\n    var i, j, k, other;\n\n    var ldefined = ltype !== 'undefined' ||\n      (stack && (stack.length > 0) && stack[stack.length - 1].lhs &&\n        Object.getOwnPropertyDescriptor(stack[stack.length - 1].lhs, key));\n    var rdefined = rtype !== 'undefined' ||\n      (stack && (stack.length > 0) && stack[stack.length - 1].rhs &&\n        Object.getOwnPropertyDescriptor(stack[stack.length - 1].rhs, key));\n\n    if (!ldefined && rdefined) {\n      changes.push(new DiffNew(currentPath, rhs));\n    } else if (!rdefined && ldefined) {\n      changes.push(new DiffDeleted(currentPath, lhs));\n    } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n      for (i = stack.length - 1; i > -1; --i) {\n        if (stack[i].lhs === lhs) {\n          other = true;\n          break;\n        }\n      }\n      if (!other) {\n        stack.push({ lhs: lhs, rhs: rhs });\n        if (Array.isArray(lhs)) {\n          // If order doesn't matter, we need to sort our arrays\n          if (orderIndependent) {\n            lhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n\n            rhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n          }\n          i = rhs.length - 1;\n          j = lhs.length - 1;\n          while (i > j) {\n            changes.push(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i--])));\n          }\n          while (j > i) {\n            changes.push(new DiffArray(currentPath, j, new DiffDeleted(undefined, lhs[j--])));\n          }\n          for (; i >= 0; --i) {\n            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack, orderIndependent);\n          }\n        } else {\n          var akeys = Object.keys(lhs);\n          var pkeys = Object.keys(rhs);\n          for (i = 0; i < akeys.length; ++i) {\n            k = akeys[i];\n            other = pkeys.indexOf(k);\n            if (other >= 0) {\n              deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n              pkeys[other] = null;\n            } else {\n              deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n          for (i = 0; i < pkeys.length; ++i) {\n            k = pkeys[i];\n            if (k) {\n              deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n        }\n        stack.length = stack.length - 1;\n      } else if (lhs !== rhs) {\n        // lhs is contains a cycle at this element and it differs from rhs\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    } else if (lhs !== rhs) {\n      if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    }\n  }\n\n  function observableDiff(lhs, rhs, observer, prefilter, orderIndependent) {\n    var changes = [];\n    deepDiff(lhs, rhs, changes, prefilter, null, null, null, orderIndependent);\n    if (observer) {\n      for (var i = 0; i < changes.length; ++i) {\n        observer(changes[i]);\n      }\n    }\n    return changes;\n  }\n\n  function orderIndependentDeepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n    return deepDiff(lhs, rhs, changes, prefilter, path, key, stack, true);\n  }\n\n  function accumulateDiff(lhs, rhs, prefilter, accum) {\n    var observer = (accum) ?\n      function (difference) {\n        if (difference) {\n          accum.push(difference);\n        }\n      } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter);\n    return (accum) ? accum : (changes.length) ? changes : undefined;\n  }\n\n  function accumulateOrderIndependentDiff(lhs, rhs, prefilter, accum) {\n    var observer = (accum) ?\n      function (difference) {\n        if (difference) {\n          accum.push(difference);\n        }\n      } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter, true);\n    return (accum) ? accum : (changes.length) ? changes : undefined;\n  }\n\n  function applyArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      var it = arr[index],\n        i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    } else {\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr = arrayRemove(arr, index);\n          break;\n        case 'E':\n        case 'N':\n          arr[index] = change.rhs;\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function applyChange(target, source, change) {\n    if (typeof change === 'undefined' && source && ~validKinds.indexOf(source.kind)) {\n      change = source;\n    }\n    if (target && change && change.kind) {\n      var it = target,\n        i = -1,\n        last = change.path ? change.path.length - 1 : 0;\n      while (++i < last) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = (typeof change.path[i + 1] !== 'undefined' && typeof change.path[i + 1] === 'number') ? [] : {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          if (change.path && typeof it[change.path[i]] === 'undefined') {\n            it[change.path[i]] = [];\n          }\n          applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    }\n  }\n\n  function revertArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      // the structure of the object at the index has changed...\n      var it = arr[index],\n        i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          delete it[change.path[i]];\n          break;\n      }\n    } else {\n      // the array item is different...\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr[index] = change.lhs;\n          break;\n        case 'E':\n          arr[index] = change.lhs;\n          break;\n        case 'N':\n          arr = arrayRemove(arr, index);\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function revertChange(target, source, change) {\n    if (target && source && change && change.kind) {\n      var it = target,\n        i, u;\n      u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          // Array was modified...\n          // it will be an array...\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          // Item was deleted...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          // Item was edited...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          // Item is new...\n          delete it[change.path[i]];\n          break;\n      }\n    }\n  }\n\n  function applyDiff(target, source, filter) {\n    if (target && source) {\n      var onChange = function (change) {\n        if (!filter || filter(target, source, change)) {\n          applyChange(target, source, change);\n        }\n      };\n      observableDiff(target, source, onChange);\n    }\n  }\n\n  Object.defineProperties(accumulateDiff, {\n\n    diff: {\n      value: accumulateDiff,\n      enumerable: true\n    },\n    orderIndependentDiff: {\n      value: accumulateOrderIndependentDiff,\n      enumerable: true\n    },\n    observableDiff: {\n      value: observableDiff,\n      enumerable: true\n    },\n    orderIndependentObservableDiff: {\n      value: orderIndependentDeepDiff,\n      enumerable: true\n    },\n    orderIndepHash: {\n      value: getOrderIndependentHash,\n      enumerable: true\n    },\n    applyDiff: {\n      value: applyDiff,\n      enumerable: true\n    },\n    applyChange: {\n      value: applyChange,\n      enumerable: true\n    },\n    revertChange: {\n      value: revertChange,\n      enumerable: true\n    },\n    isConflict: {\n      value: function () {\n        return typeof $conflict !== 'undefined';\n      },\n      enumerable: true\n    }\n  });\n\n  // hackish...\n  accumulateDiff.DeepDiff = accumulateDiff;\n  // ...but works with:\n  // import DeepDiff from 'deep-diff'\n  // import { DeepDiff } from 'deep-diff'\n  // const DeepDiff = require('deep-diff');\n  // const { DeepDiff } = require('deep-diff');\n\n  if (root) {\n    root.DeepDiff = accumulateDiff;\n  }\n\n  return accumulateDiff;\n}));\n","\nif (typeof Promise === 'undefined') {\n   throw new ReferenceError(\"Promise wrappers must be enabled to use the promise API\");\n}\n\nfunction isAsyncCall (fn) {\n   return /^[^)]+then\\s*\\)/.test(fn) || /\\._run\\(/.test(fn);\n}\n\nmodule.exports = function (baseDir) {\n\n   var Git = require('./src/git');\n   var gitFactory = require('./src');\n   var git;\n\n\n   var chain = Promise.resolve();\n\n   try {\n      git = gitFactory(baseDir);\n   }\n   catch (e) {\n      chain = Promise.reject(e);\n   }\n\n   return Object.keys(Git.prototype).reduce(function (promiseApi, fn) {\n      if (/^_|then/.test(fn)) {\n         return promiseApi;\n      }\n\n      if (isAsyncCall(Git.prototype[fn])) {\n         promiseApi[fn] = git ? asyncWrapper(fn, git) : function () {\n            return chain;\n         };\n      }\n\n      else {\n         promiseApi[fn] = git ? syncWrapper(fn, git, promiseApi) : function () {\n            return promiseApi;\n         };\n      }\n\n      return promiseApi;\n\n   }, {});\n\n   function asyncWrapper (fn, git) {\n      return function () {\n         var args = [].slice.call(arguments);\n\n         if (typeof args[args.length] === 'function') {\n            throw new TypeError(\n               \"Promise interface requires that handlers are not supplied inline, \" +\n               \"trailing function not allowed in call to \" + fn);\n         }\n\n         return chain.then(function () {\n            return new Promise(function (resolve, reject) {\n               args.push(function (err, result) {\n                  if (err) {\n                     return reject(toError(err));\n                  }\n\n                  resolve(result);\n               });\n\n               git[fn].apply(git, args);\n            });\n         });\n      };\n   }\n\n   function syncWrapper (fn, git, api) {\n      return function () {\n         git[fn].apply(git, arguments);\n\n         return api;\n      };\n   }\n\n};\n\nfunction toError (error) {\n\n   if (error instanceof Error) {\n      return error;\n   }\n\n   if (typeof error === 'string') {\n      return new Error(error);\n   }\n\n   return Object.create(new Error(error), {\n      git: { value: error },\n   });\n}\n","(function () {\n\n   'use strict';\n\n   var debug = require('debug')('simple-git');\n   var deferred = require('./util/deferred');\n   var exists = require('./util/exists');\n   var NOOP = function () {};\n   var responses = require('./responses');\n\n   /**\n    * Git handling for node. All public functions can be chained and all `then` handlers are optional.\n    *\n    * @param {string} baseDir base directory for all processes to run\n    *\n    * @param {Object} ChildProcess The ChildProcess module\n    * @param {Function} Buffer The Buffer implementation to use\n    *\n    * @constructor\n    */\n   function Git (baseDir, ChildProcess, Buffer) {\n      this._baseDir = baseDir;\n      this._runCache = [];\n\n      this.ChildProcess = ChildProcess;\n      this.Buffer = Buffer;\n   }\n\n   /**\n    * @type {string} The command to use to reference the git binary\n    */\n   Git.prototype._command = 'git';\n\n   /**\n    * @type {[key: string]: string} An object of key=value pairs to be passed as environment variables to the\n    *                               spawned child process.\n    */\n   Git.prototype._env = null;\n\n   /**\n    * @type {Function} An optional handler to use when a child process is created\n    */\n   Git.prototype._outputHandler = null;\n\n   /**\n    * @type {boolean} Property showing whether logging will be silenced - defaults to true in a production environment\n    */\n   Git.prototype._silentLogging = /prod/.test(process.env.NODE_ENV);\n\n   /**\n    * Sets the path to a custom git binary, should either be `git` when there is an installation of git available on\n    * the system path, or a fully qualified path to the executable.\n    *\n    * @param {string} command\n    * @returns {Git}\n    */\n   Git.prototype.customBinary = function (command) {\n      this._command = command;\n      return this;\n   };\n\n   /**\n    * Sets an environment variable for the spawned child process, either supply both a name and value as strings or\n    * a single object to entirely replace the current environment variables.\n    *\n    * @param {string|Object} name\n    * @param {string} [value]\n    * @returns {Git}\n    */\n   Git.prototype.env = function (name, value) {\n      if (arguments.length === 1 && typeof name === 'object') {\n         this._env = name;\n      }\n      else {\n         (this._env = this._env || {})[name] = value;\n      }\n\n      return this;\n   };\n\n   /**\n    * Sets the working directory of the subsequent commands.\n    *\n    * @param {string} workingDirectory\n    * @param {Function} [then]\n    * @returns {Git}\n    */\n   Git.prototype.cwd = function (workingDirectory, then) {\n      var git = this;\n      var next = Git.trailingFunctionArgument(arguments);\n\n      return this.exec(function () {\n         git._baseDir = workingDirectory;\n         if (!exists(workingDirectory, exists.FOLDER)) {\n            Git.exception(git, 'Git.cwd: cannot change to non-directory \"' + workingDirectory + '\"', next);\n         }\n         else {\n            next && next(null, workingDirectory);\n         }\n      });\n   };\n\n   /**\n    * Sets a handler function to be called whenever a new child process is created, the handler function will be called\n    * with the name of the command being run and the stdout & stderr streams used by the ChildProcess.\n    *\n    * @example\n    * require('simple-git')\n    *    .outputHandler(function (command, stdout, stderr) {\n    *       stdout.pipe(process.stdout);\n    *    })\n    *    .checkout('https://github.com/user/repo.git');\n    *\n    * @see https://nodejs.org/api/child_process.html#child_process_class_childprocess\n    * @see https://nodejs.org/api/stream.html#stream_class_stream_readable\n    * @param {Function} outputHandler\n    * @returns {Git}\n    */\n   Git.prototype.outputHandler = function (outputHandler) {\n      this._outputHandler = outputHandler;\n      return this;\n   };\n\n   /**\n    * Initialize a git repo\n    *\n    * @param {Boolean} [bare=false]\n    * @param {Function} [then]\n    */\n   Git.prototype.init = function (bare, then) {\n      var commands = ['init'];\n      var next = Git.trailingFunctionArgument(arguments);\n\n      if (bare === true) {\n         commands.push('--bare');\n      }\n\n      return this._run(commands, function (err) {\n         next && next(err);\n      });\n   };\n\n   /**\n    * Check the status of the local repo\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.status = function (then) {\n      return this._run(\n         ['status', '--porcelain', '-b', '-u'],\n         Git._responseHandler(then, 'StatusSummary')\n      );\n   };\n\n   /**\n    * List the stash(s) of the local repo\n    *\n    * @param {Object|Array} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.stashList = function (options, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n      var opt = (handler === then ? options : null) || {};\n\n      var splitter = opt.splitter || requireResponseHandler('ListLogSummary').SPLITTER;\n      var command = [\"stash\", \"list\", \"--pretty=format:\"\n         + requireResponseHandler('ListLogSummary').START_BOUNDARY\n         + \"%H %ai %s%d %aN %ae\".replace(/\\s+/g, splitter)\n         + requireResponseHandler('ListLogSummary').COMMIT_BOUNDARY\n      ];\n\n      if (Array.isArray(opt)) {\n         command = command.concat(opt);\n      }\n\n      return this._run(command,\n         Git._responseHandler(handler, 'ListLogSummary', splitter)\n      );\n   };\n\n   /**\n    * Stash the local repo\n    *\n    * @param {Object|Array} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.stash = function (options, then) {\n      var command = ['stash'];\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n      command.push.apply(command, Git.trailingArrayArgument(arguments));\n\n      return this._run(command, Git._responseHandler(Git.trailingFunctionArgument(arguments)));\n   };\n\n   /**\n    * Clone a git repo\n    *\n    * @param {string} repoPath\n    * @param {string} localPath\n    * @param {String[]} [options] Optional array of options to pass through to the clone command\n    * @param {Function} [then]\n    */\n   Git.prototype.clone = function (repoPath, localPath, options, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = ['clone'].concat(Git.trailingArrayArgument(arguments));\n\n      for (var i = 0, iMax = arguments.length; i < iMax; i++) {\n         if (typeof arguments[i] === 'string') {\n            command.push(arguments[i]);\n         }\n      }\n\n      return this._run(command, function (err, data) {\n         next && next(err, data);\n      });\n   };\n\n   /**\n    * Mirror a git repo\n    *\n    * @param {string} repoPath\n    * @param {string} localPath\n    * @param {Function} [then]\n    */\n   Git.prototype.mirror = function (repoPath, localPath, then) {\n      return this.clone(repoPath, localPath, ['--mirror'], then);\n   };\n\n   /**\n    * Moves one or more files to a new destination.\n    *\n    * @see https://git-scm.com/docs/git-mv\n    *\n    * @param {string|string[]} from\n    * @param {string} to\n    * @param {Function} [then]\n    */\n   Git.prototype.mv = function (from, to, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n\n      var command = [].concat(from);\n      command.unshift('mv', '-v');\n      command.push(to);\n\n      this._run(command, Git._responseHandler(handler, 'MoveSummary'))\n   };\n\n   /**\n    * Internally uses pull and tags to get the list of tags then checks out the latest tag.\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.checkoutLatestTag = function (then) {\n      var git = this;\n      return this.pull(function () {\n         git.tags(function (err, tags) {\n            git.checkout(tags.latest, then);\n         });\n      });\n   };\n\n   /**\n    * Adds one or more files to source control\n    *\n    * @param {string|string[]} files\n    * @param {Function} [then]\n    */\n   Git.prototype.add = function (files, then) {\n      return this._run(['add'].concat(files), function (err, data) {\n         then && then(err);\n      });\n   };\n\n   /**\n    * Commits changes in the current working directory - when specific file paths are supplied, only changes on those\n    * files will be committed.\n    *\n    * @param {string|string[]} message\n    * @param {string|string[]} [files]\n    * @param {Object} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.commit = function (message, files, options, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n\n      var command = ['commit'];\n\n      [].concat(message).forEach(function (message) {\n         command.push('-m', message);\n      });\n\n      [].push.apply(command, [].concat(typeof files === \"string\" || Array.isArray(files) ? files : []));\n\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      return this._run(\n         command,\n         Git._responseHandler(handler, 'CommitSummary')\n      );\n   };\n\n   /**\n    * Gets a function to be used for logging.\n    *\n    * @param {string} level\n    * @param {string} [message]\n    *\n    * @returns {Function}\n    * @private\n    */\n   Git.prototype._getLog = function (level, message) {\n      var log = this._silentLogging ? NOOP : console[level].bind(console);\n      if (arguments.length > 1) {\n         log(message);\n      }\n      return log;\n   };\n\n   /**\n    * Pull the updated contents of the current repo\n    *\n    * @param {string} [remote] When supplied must also include the branch\n    * @param {string} [branch] When supplied must also include the remote\n    * @param {Object} [options] Optionally include set of options to merge into the command\n    * @param {Function} [then]\n    */\n   Git.prototype.pull = function (remote, branch, options, then) {\n      var command = [\"pull\"];\n      var handler = Git.trailingFunctionArgument(arguments);\n\n      if (typeof remote === 'string' && typeof branch === 'string') {\n         command.push(remote, branch);\n      }\n\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      return this._run(command, Git._responseHandler(handler, 'PullSummary'));\n   };\n\n   /**\n    * Fetch the updated contents of the current repo.\n    *\n    * @example\n    *   .fetch('upstream', 'master') // fetches from master on remote named upstream\n    *   .fetch(function () {}) // runs fetch against default remote and branch and calls function\n    *\n    * @param {string} [remote]\n    * @param {string} [branch]\n    * @param {Function} [then]\n    */\n   Git.prototype.fetch = function (remote, branch, then) {\n      var command = [\"fetch\"];\n      var next = Git.trailingFunctionArgument(arguments);\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      if (typeof remote === 'string' && typeof branch === 'string') {\n         command.push(remote, branch);\n      }\n\n      if (Array.isArray(remote)) {\n         command = command.concat(remote);\n      }\n\n      return this._run(\n         command,\n         Git._responseHandler(next, 'FetchSummary'),\n         {\n            concatStdErr: true\n         }\n      );\n   };\n\n   /**\n    * Disables/enables the use of the console for printing warnings and errors, by default messages are not shown in\n    * a production environment.\n    *\n    * @param {boolean} silence\n    * @returns {Git}\n    */\n   Git.prototype.silent = function (silence) {\n      this._silentLogging = !!silence;\n      return this;\n   };\n\n   /**\n    * List all tags. When using git 2.7.0 or above, include an options object with `\"--sort\": \"property-name\"` to\n    * sort the tags by that property instead of using the default semantic versioning sort.\n    *\n    * Note, supplying this option when it is not supported by your Git version will cause the operation to fail.\n    *\n    * @param {Object} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.tags = function (options, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n\n      var command = ['-l'];\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      var hasCustomSort = command.some(function (option) {\n         return /^--sort=/.test(option);\n      });\n\n      return this.tag(\n         command,\n         Git._responseHandler(next, 'TagList', [hasCustomSort])\n      );\n   };\n\n   /**\n    * Rebases the current working copy. Options can be supplied either as an array of string parameters\n    * to be sent to the `git rebase` command, or a standard options object.\n    *\n    * @param {Object|String[]} [options]\n    * @param {Function} [then]\n    * @returns {Git}\n    */\n   Git.prototype.rebase = function (options, then) {\n      var command = ['rebase'];\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n      command.push.apply(command, Git.trailingArrayArgument(arguments));\n\n\n      return this._run(command, Git._responseHandler(Git.trailingFunctionArgument(arguments)));\n   };\n\n   /**\n    * Reset a repo\n    *\n    * @param {string|string[]} [mode=soft] Either an array of arguments supported by the 'git reset' command, or the\n    *                                        string value 'soft' or 'hard' to set the reset mode.\n    * @param {Function} [then]\n    */\n   Git.prototype.reset = function (mode, then) {\n      var command = ['reset'];\n      var next = Git.trailingFunctionArgument(arguments);\n      if (next === mode || typeof mode === 'string' || !mode) {\n         var modeStr = ['mixed', 'soft', 'hard'].includes(mode) ? mode : 'soft';\n         command.push('--' + modeStr);\n      }\n      else if (Array.isArray(mode)) {\n         command.push.apply(command, mode);\n      }\n\n      return this._run(command, function (err) {\n         next && next(err || null);\n      });\n   };\n\n   /**\n    * Revert one or more commits in the local working copy\n    *\n    * @param {string} commit The commit to revert. Can be any hash, offset (eg: `HEAD~2`) or range (eg: `master~5..master~2`)\n    * @param {Object} [options] Optional options object\n    * @param {Function} [then]\n    */\n   Git.prototype.revert = function (commit, options, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = ['revert'];\n\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      if (typeof commit !== 'string') {\n         return this.exec(function () {\n            next && next(new TypeError(\"Commit must be a string\"));\n         });\n      }\n\n      command.push(commit);\n      return this._run(command, function (err) {\n         next && next(err || null);\n      });\n   };\n\n   /**\n    * Add a lightweight tag to the head of the current branch\n    *\n    * @param {string} name\n    * @param {Function} [then]\n    */\n   Git.prototype.addTag = function (name, then) {\n      if (typeof name !== \"string\") {\n         return this.exec(function () {\n            then && then(new TypeError(\"Git.addTag requires a tag name\"));\n         });\n      }\n\n      var command = [name];\n      return then ? this.tag(command, then) : this.tag(command);\n   };\n\n   /**\n    * Add an annotated tag to the head of the current branch\n    *\n    * @param {string} tagName\n    * @param {string} tagMessage\n    * @param {Function} [then]\n    */\n   Git.prototype.addAnnotatedTag = function (tagName, tagMessage, then) {\n      return this.tag(['-a', '-m', tagMessage, tagName], function (err) {\n         then && then(err);\n      });\n   };\n\n   /**\n    * Check out a tag or revision, any number of additional arguments can be passed to the `git checkout` command\n    * by supplying either a string or array of strings as the `what` parameter.\n    *\n    * @param {string|string[]} what One or more commands to pass to `git checkout`\n    * @param {Function} [then]\n    */\n   Git.prototype.checkout = function (what, then) {\n      var command = ['checkout'];\n      command = command.concat(what);\n\n      return this._run(command, function (err, data) {\n         then && then(err, !err && this._parseCheckout(data));\n      });\n   };\n\n   /**\n    * Check out a remote branch\n    *\n    * @param {string} branchName name of branch\n    * @param {string} startPoint (e.g origin/development)\n    * @param {Function} [then]\n    */\n   Git.prototype.checkoutBranch = function (branchName, startPoint, then) {\n      return this.checkout(['-b', branchName, startPoint], then);\n   };\n\n   /**\n    * Check out a local branch\n    *\n    * @param {string} branchName of branch\n    * @param {Function} [then]\n    */\n   Git.prototype.checkoutLocalBranch = function (branchName, then) {\n      return this.checkout(['-b', branchName], then);\n   };\n\n   /**\n    * Delete a local branch\n    *\n    * @param {string} branchName name of branch\n    * @param {Function} [then]\n    */\n   Git.prototype.deleteLocalBranch = function (branchName, then) {\n      return this.branch(['-d', branchName], then);\n   };\n\n   /**\n    * List all branches\n    *\n    * @param {Object | string[]} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.branch = function (options, then) {\n      var isDelete, responseHandler;\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = ['branch'];\n\n      command.push.apply(command, Git.trailingArrayArgument(arguments));\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      if (!arguments.length || next === options) {\n         command.push('-a');\n      }\n\n      isDelete = ['-d', '-D', '--delete'].reduce(function (isDelete, flag) {\n         return isDelete || command.indexOf(flag) > 0;\n      }, false);\n\n      if (command.indexOf('-v') < 0) {\n         command.splice(1, 0, '-v');\n      }\n\n      responseHandler = isDelete\n         ? Git._responseHandler(next, 'BranchDeleteSummary', false)\n         : Git._responseHandler(next, 'BranchSummary');\n\n      return this._run(command, responseHandler);\n   };\n\n   /**\n    * Return list of local branches\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.branchLocal = function (then) {\n      return this.branch(['-v'], then);\n   };\n\n   /**\n    * Add config to local git instance\n    *\n    * @param {string} key configuration key (e.g user.name)\n    * @param {string} value for the given key (e.g your name)\n    * @param {Function} [then]\n    */\n   Git.prototype.addConfig = function (key, value, then) {\n      return this._run(['config', '--local', key, value], function (err, data) {\n         then && then(err, !err && data);\n      });\n   };\n\n   /**\n    * Executes any command against the git binary.\n    *\n    * @param {string[]|Object} commands\n    * @param {Function} [then]\n    *\n    * @returns {Git}\n    */\n   Git.prototype.raw = function (commands, then) {\n      var command = [];\n      if (Array.isArray(commands)) {\n         command = commands.slice(0);\n      }\n      else {\n         Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n      }\n\n      var next = Git.trailingFunctionArgument(arguments);\n\n      if (!command.length) {\n         return this.exec(function () {\n            next && next(new Error('Raw: must supply one or more command to execute'), null);\n         });\n      }\n\n      return this._run(command, function (err, data) {\n         next && next(err, !err && data || null);\n      });\n   };\n\n   /**\n    * Add a submodule\n    *\n    * @param {string} repo\n    * @param {string} path\n    * @param {Function} [then]\n    */\n   Git.prototype.submoduleAdd = function (repo, path, then) {\n      return this._run(['submodule', 'add', repo, path], function (err) {\n         then && then(err);\n      });\n   };\n\n   /**\n    * Update submodules\n    *\n    * @param {string[]} [args]\n    * @param {Function} [then]\n    */\n   Git.prototype.submoduleUpdate = function (args, then) {\n      if (typeof args === 'string') {\n         this._getLog('warn', 'Git#submoduleUpdate: args should be supplied as an array of individual arguments');\n      }\n\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = (args !== next) ? args : [];\n\n      return this.subModule(['update'].concat(command), function (err, args) {\n         next && next(err, args);\n      });\n   };\n\n   /**\n    * Initialize submodules\n    *\n    * @param {string[]} [args]\n    * @param {Function} [then]\n    */\n   Git.prototype.submoduleInit = function (args, then) {\n      if (typeof args === 'string') {\n         this._getLog('warn', 'Git#submoduleInit: args should be supplied as an array of individual arguments');\n      }\n\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = (args !== next) ? args : [];\n\n      return this.subModule(['init'].concat(command), function (err, args) {\n         next && next(err, args);\n      });\n   };\n\n   /**\n    * Call any `git submodule` function with arguments passed as an array of strings.\n    *\n    * @param {string[]} options\n    * @param {Function} [then]\n    */\n   Git.prototype.subModule = function (options, then) {\n      if (!Array.isArray(options)) {\n         return this.exec(function () {\n            then && then(new TypeError(\"Git.subModule requires an array of arguments\"));\n         });\n      }\n\n      if (options[0] !== 'submodule') {\n         options.unshift('submodule');\n      }\n\n      return this._run(options, function (err, data) {\n         then && then(err || null, err ? null : data);\n      });\n   };\n\n   /**\n    * List remote\n    *\n    * @param {string[]} [args]\n    * @param {Function} [then]\n    */\n   Git.prototype.listRemote = function (args, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n      var data = next === args || args === undefined ? [] : args;\n\n      if (typeof data === 'string') {\n         this._getLog('warn', 'Git#listRemote: args should be supplied as an array of individual arguments');\n      }\n\n      return this._run(['ls-remote'].concat(data), function (err, data) {\n         next && next(err, data);\n      });\n   };\n\n   /**\n    * Adds a remote to the list of remotes.\n    *\n    * @param {string} remoteName Name of the repository - eg \"upstream\"\n    * @param {string} remoteRepo Fully qualified SSH or HTTP(S) path to the remote repo\n    * @param {Function} [then]\n    * @returns {*}\n    */\n   Git.prototype.addRemote = function (remoteName, remoteRepo, then) {\n      return this._run(['remote', 'add', remoteName, remoteRepo], function (err) {\n         then && then(err);\n      });\n   };\n\n   /**\n    * Removes an entry from the list of remotes.\n    *\n    * @param {string} remoteName Name of the repository - eg \"upstream\"\n    * @param {Function} [then]\n    * @returns {*}\n    */\n   Git.prototype.removeRemote = function (remoteName, then) {\n      return this._run(['remote', 'remove', remoteName], function (err) {\n         then && then(err);\n      });\n   };\n\n   /**\n    * Gets the currently available remotes, setting the optional verbose argument to true includes additional\n    * detail on the remotes themselves.\n    *\n    * @param {boolean} [verbose=false]\n    * @param {Function} [then]\n    */\n   Git.prototype.getRemotes = function (verbose, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n      var args = verbose === true ? ['-v'] : [];\n\n      return this.remote(args, function (err, data) {\n         next && next(err, !err && function () {\n            return data.trim().split('\\n').filter(Boolean).reduce(function (remotes, remote) {\n               var detail = remote.trim().split(/\\s+/);\n               var name = detail.shift();\n\n               if (!remotes[name]) {\n                  remotes[name] = remotes[remotes.length] = {\n                     name: name,\n                     refs: {}\n                  };\n               }\n\n               if (detail.length) {\n                  remotes[name].refs[detail.pop().replace(/[^a-z]/g, '')] = detail.pop();\n               }\n\n               return remotes;\n            }, []).slice(0);\n         }());\n      });\n   };\n\n   /**\n    * Call any `git remote` function with arguments passed as an array of strings.\n    *\n    * @param {string[]} options\n    * @param {Function} [then]\n    */\n   Git.prototype.remote = function (options, then) {\n      if (!Array.isArray(options)) {\n         return this.exec(function () {\n            then && then(new TypeError(\"Git.remote requires an array of arguments\"));\n         });\n      }\n\n      if (options[0] !== 'remote') {\n         options.unshift('remote');\n      }\n\n      return this._run(options, function (err, data) {\n         then && then(err || null, err ? null : data);\n      });\n   };\n\n   /**\n    * Merges from one branch to another, equivalent to running `git merge ${from} $[to}`, the `options` argument can\n    * either be an array of additional parameters to pass to the command or null / omitted to be ignored.\n    *\n    * @param {string} from\n    * @param {string} to\n    * @param {string[]} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.mergeFromTo = function (from, to, options, then) {\n      var commands = [\n         from,\n         to\n      ];\n      var callback = Git.trailingFunctionArgument(arguments);\n\n      if (Array.isArray(options)) {\n         commands = commands.concat(options);\n      }\n\n      return this.merge(commands, callback);\n   };\n\n   /**\n    * Runs a merge, `options` can be either an array of arguments\n    * supported by the [`git merge`](https://git-scm.com/docs/git-merge)\n    * or an options object.\n    *\n    * Conflicts during the merge result in an error response,\n    * the response type whether it was an error or success will be a MergeSummary instance.\n    * When successful, the MergeSummary has all detail from a the PullSummary\n    *\n    * @param {Object | string[]} [options]\n    * @param {Function} [then]\n    * @returns {*}\n    *\n    * @see ./responses/MergeSummary.js\n    * @see ./responses/PullSummary.js\n    */\n   Git.prototype.merge = function (options, then) {\n      var self = this;\n      var userHandler = Git.trailingFunctionArgument(arguments) || NOOP;\n      var mergeHandler = function (err, mergeSummary) {\n         if (!err && mergeSummary.failed) {\n            return Git.fail(self, mergeSummary, userHandler);\n         }\n\n         userHandler(err, mergeSummary);\n      };\n\n      var command = [];\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n      command.push.apply(command, Git.trailingArrayArgument(arguments));\n\n      if (command[0] !== 'merge') {\n         command.unshift('merge');\n      }\n\n      if (command.length === 1) {\n         return this.exec(function () {\n            then && then(new TypeError(\"Git.merge requires at least one option\"));\n         });\n      }\n\n      return this._run(command, Git._responseHandler(mergeHandler, 'MergeSummary'), {\n         concatStdErr: true\n      });\n   };\n\n   /**\n    * Call any `git tag` function with arguments passed as an array of strings.\n    *\n    * @param {string[]} options\n    * @param {Function} [then]\n    */\n   Git.prototype.tag = function (options, then) {\n      var command = [];\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n      command.push.apply(command, Git.trailingArrayArgument(arguments));\n\n      if (command[0] !== 'tag') {\n         command.unshift('tag');\n      }\n\n      return this._run(command, Git._responseHandler(Git.trailingFunctionArgument(arguments)));\n   };\n\n   /**\n    * Updates repository server info\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.updateServerInfo = function (then) {\n      return this._run([\"update-server-info\"], function (err, data) {\n         then && then(err, !err && data);\n      });\n   };\n\n   /**\n    * Pushes the current committed changes to a remote, optionally specify the names of the remote and branch to use\n    * when pushing. Supply multiple options as an array of strings in the first argument - see examples below.\n    *\n    * @param {string|string[]} [remote]\n    * @param {string} [branch]\n    * @param {Function} [then]\n    */\n   Git.prototype.push = function (remote, branch, then) {\n      var command = [];\n      var handler = Git.trailingFunctionArgument(arguments);\n\n      if (typeof remote === 'string' && typeof branch === 'string') {\n         command.push(remote, branch);\n      }\n\n      if (Array.isArray(remote)) {\n         command = command.concat(remote);\n      }\n\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      if (command[0] !== 'push') {\n         command.unshift('push');\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, !err && data);\n      });\n   };\n\n   /**\n    * Pushes the current tag changes to a remote which can be either a URL or named remote. When not specified uses the\n    * default configured remote spec.\n    *\n    * @param {string} [remote]\n    * @param {Function} [then]\n    */\n   Git.prototype.pushTags = function (remote, then) {\n      var command = ['push'];\n      if (typeof remote === \"string\") {\n         command.push(remote);\n      }\n      command.push('--tags');\n\n      then = typeof arguments[arguments.length - 1] === \"function\" ? arguments[arguments.length - 1] : null;\n\n      return this._run(command, function (err, data) {\n         then && then(err, !err && data);\n      });\n   };\n\n   /**\n    * Removes the named files from source control.\n    *\n    * @param {string|string[]} files\n    * @param {Function} [then]\n    */\n   Git.prototype.rm = function (files, then) {\n      return this._rm(files, '-f', then);\n   };\n\n   /**\n    * Removes the named files from source control but keeps them on disk rather than deleting them entirely. To\n    * completely remove the files, use `rm`.\n    *\n    * @param {string|string[]} files\n    * @param {Function} [then]\n    */\n   Git.prototype.rmKeepLocal = function (files, then) {\n      return this._rm(files, '--cached', then);\n   };\n\n   /**\n    * Returns a list of objects in a tree based on commit hash. Passing in an object hash returns the object's content,\n    * size, and type.\n    *\n    * Passing \"-p\" will instruct cat-file to determine the object type, and display its formatted contents.\n    *\n    * @param {string[]} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.catFile = function (options, then) {\n      return this._catFile('utf-8', arguments);\n   };\n\n   /**\n    * Equivalent to `catFile` but will return the native `Buffer` of content from the git command's stdout.\n    *\n    * @param {string[]} options\n    * @param then\n    */\n   Git.prototype.binaryCatFile = function (options, then) {\n      return this._catFile('buffer', arguments);\n   };\n\n   Git.prototype._catFile = function (format, args) {\n      var handler = Git.trailingFunctionArgument(args);\n      var command = ['cat-file'];\n      var options = args[0];\n\n      if (typeof options === 'string') {\n         throw new TypeError('Git#catFile: options must be supplied as an array of strings');\n      }\n      else if (Array.isArray(options)) {\n         command.push.apply(command, options);\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, data);\n      }, {\n         format: format\n      });\n   };\n\n   /**\n    * Return repository changes.\n    *\n    * @param {string[]} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.diff = function (options, then) {\n      var command = ['diff'];\n\n      if (typeof options === 'string') {\n         command[0] += ' ' + options;\n         this._getLog('warn',\n            'Git#diff: supplying options as a single string is now deprecated, switch to an array of strings');\n      }\n      else if (Array.isArray(options)) {\n         command.push.apply(command, options);\n      }\n\n      if (typeof arguments[arguments.length - 1] === 'function') {\n         then = arguments[arguments.length - 1];\n      }\n\n      return this._run(command, function (err, data) {\n         then && then(err, data);\n      });\n   };\n\n   Git.prototype.diffSummary = function (options, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = ['--stat=4096'];\n\n      if (options && options !== next) {\n         command.push.apply(command, [].concat(options));\n      }\n\n      return this.diff(command, Git._responseHandler(next, 'DiffSummary'));\n   };\n\n   /**\n    * Wraps `git rev-parse`. Primarily used to convert friendly commit references (ie branch names) to SHA1 hashes.\n    *\n    * Options should be an array of string options compatible with the `git rev-parse`\n    *\n    * @param {string|string[]} [options]\n    * @param {Function} [then]\n    *\n    * @see https://git-scm.com/docs/git-rev-parse\n    */\n   Git.prototype.revparse = function (options, then) {\n      var command = ['rev-parse'];\n\n      if (typeof options === 'string') {\n         command = command + ' ' + options;\n         this._getLog('warn',\n            'Git#revparse: supplying options as a single string is now deprecated, switch to an array of strings');\n      }\n      else if (Array.isArray(options)) {\n         command.push.apply(command, options);\n      }\n\n      if (typeof arguments[arguments.length - 1] === 'function') {\n         then = arguments[arguments.length - 1];\n      }\n\n      return this._run(command, function (err, data) {\n         then && then(err, err ? null : String(data).trim());\n      });\n   };\n\n   /**\n    * Show various types of objects, for example the file at a certain commit\n    *\n    * @param {string[]} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.show = function (options, then) {\n      var args = [].slice.call(arguments, 0);\n      var handler = typeof args[args.length - 1] === \"function\" ? args.pop() : null;\n      var command = ['show'];\n      if (typeof options === 'string') {\n         command = command + ' ' + options;\n         this._getLog('warn',\n            'Git#show: supplying options as a single string is now deprecated, switch to an array of strings');\n      }\n      else if (Array.isArray(options)) {\n         command.push.apply(command, options);\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, !err && data);\n      });\n   };\n\n   /**\n    * @param {string} mode Required parameter \"n\" or \"f\"\n    * @param {string[]} options\n    * @param {Function} [then]\n    */\n   Git.prototype.clean = function (mode, options, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n\n      if (typeof mode !== 'string' || !/[nf]/.test(mode)) {\n         return this.exec(function () {\n            handler && handler(new TypeError('Git clean mode parameter (\"n\" or \"f\") is required'));\n         });\n      }\n\n      if (/[^dfinqxX]/.test(mode)) {\n         return this.exec(function () {\n            handler && handler(new TypeError('Git clean unknown option found in ' + JSON.stringify(mode)));\n         });\n      }\n\n      var command = ['clean', '-' + mode];\n      if (Array.isArray(options)) {\n         command = command.concat(options);\n      }\n\n      if (command.some(interactiveMode)) {\n         return this.exec(function () {\n            handler && handler(new TypeError('Git clean interactive mode is not supported'));\n         });\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, !err && data);\n      });\n\n      function interactiveMode (option) {\n         if (/^-[^\\-]/.test(option)) {\n            return option.indexOf('i') > 0;\n         }\n\n         return option === '--interactive';\n      }\n   };\n\n   /**\n    * Call a simple function at the next step in the chain.\n    * @param {Function} [then]\n    */\n   Git.prototype.exec = function (then) {\n      this._run([], function () {\n         typeof then === 'function' && then();\n      });\n      return this;\n   };\n\n   /**\n    * Deprecated means of adding a regular function call at the next step in the chain. Use the replacement\n    * Git#exec, the Git#then method will be removed in version 2.x\n    *\n    * @see exec\n    * @deprecated\n    */\n   Git.prototype.then = function (then) {\n      this._getLog(\n         'error', `\nGit#then is deprecated after version 1.72 and will be removed in version 2.x\nTo use promises switch to importing 'simple-git/promise'.`);\n\n      return this.exec(then);\n   };\n\n   /**\n    * Show commit logs from `HEAD` to the first commit.\n    * If provided between `options.from` and `options.to` tags or branch.\n    *\n    * Additionally you can provide options.file, which is the path to a file in your repository. Then only this file will be considered.\n    *\n    * To use a custom splitter in the log format, set `options.splitter` to be the string the log should be split on.\n    *\n    * Options can also be supplied as a standard options object for adding custom properties supported by the git log command.\n    * For any other set of options, supply options as an array of strings to be appended to the git log command.\n    *\n    * @param {Object|string[]} [options]\n    * @param {string} [options.from] The first commit to include\n    * @param {string} [options.to] The most recent commit to include\n    * @param {string} [options.file] A single file to include in the result\n    * @param {boolean} [options.multiLine] Optionally include multi-line commit messages\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.log = function (options, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n      var opt = (handler === then ? options : null) || {};\n\n      var splitter = opt.splitter || requireResponseHandler('ListLogSummary').SPLITTER;\n      var format = opt.format || {\n         hash: '%H',\n         date: '%ai',\n         message: '%s',\n         refs: '%D',\n         body: opt.multiLine ? '%B' : '%b',\n         author_name: '%aN',\n         author_email: '%ae'\n      };\n      var rangeOperator = (opt.symmetric !== false) ? '...' : '..';\n\n      var fields = Object.keys(format);\n      var formatstr = fields.map(function (k) {\n         return format[k];\n      }).join(splitter);\n      var suffix = [];\n      var command = [\"log\", \"--pretty=format:\"\n         + requireResponseHandler('ListLogSummary').START_BOUNDARY\n         + formatstr\n         + requireResponseHandler('ListLogSummary').COMMIT_BOUNDARY\n      ];\n\n      if (Array.isArray(opt)) {\n         command = command.concat(opt);\n         opt = {};\n      }\n      else if (typeof arguments[0] === \"string\" || typeof arguments[1] === \"string\") {\n         this._getLog('warn',\n            'Git#log: supplying to or from as strings is now deprecated, switch to an options configuration object');\n         opt = {\n            from: arguments[0],\n            to: arguments[1]\n         };\n      }\n\n      if (opt.n || opt['max-count']) {\n         command.push(\"--max-count=\" + (opt.n || opt['max-count']));\n      }\n\n      if (opt.from && opt.to) {\n         command.push(opt.from + rangeOperator + opt.to);\n      }\n\n      if (opt.file) {\n         suffix.push(\"--follow\", options.file);\n      }\n\n      'splitter n max-count file from to --pretty format symmetric multiLine'.split(' ').forEach(function (key) {\n         delete opt[key];\n      });\n\n      Git._appendOptions(command, opt);\n\n      return this._run(\n         command.concat(suffix),\n         Git._responseHandler(handler, 'ListLogSummary', [splitter, fields])\n      );\n   };\n\n   /**\n    * Clears the queue of pending commands and returns the wrapper instance for chaining.\n    *\n    * @returns {Git}\n    */\n   Git.prototype.clearQueue = function () {\n      this._runCache.length = 0;\n      return this;\n   };\n\n   /**\n    * Check if a pathname or pathnames are excluded by .gitignore\n    *\n    * @param {string|string[]} pathnames\n    * @param {Function} [then]\n    */\n   Git.prototype.checkIgnore = function (pathnames, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n      var command = [\"check-ignore\"];\n\n      if (handler !== pathnames) {\n         command = command.concat(pathnames);\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, !err && this._parseCheckIgnore(data));\n      });\n   };\n\n   /**\n    * Validates that the current repo is a Git repo.\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.checkIsRepo = function (then) {\n      function onError (exitCode, stdErr, done, fail) {\n         if (exitCode === 128 && /(Not a git repository|Kein Git-Repository)/i.test(stdErr)) {\n            return done(false);\n         }\n\n         fail(stdErr);\n      }\n\n      function handler (err, isRepo) {\n         then && then(err, String(isRepo).trim() === 'true');\n      }\n\n      return this._run(['rev-parse', '--is-inside-work-tree'], handler, {onError: onError});\n   };\n\n   Git.prototype._rm = function (_files, options, then) {\n      var files = [].concat(_files);\n      var args = ['rm', options];\n      args.push.apply(args, files);\n\n      return this._run(args, function (err) {\n         then && then(err);\n      });\n   };\n\n   Git.prototype._parseCheckout = function (checkout) {\n      // TODO\n   };\n\n   /**\n    * Parser for the `check-ignore` command - returns each\n    * @param {string} [files]\n    * @returns {string[]}\n    */\n   Git.prototype._parseCheckIgnore = function (files) {\n      return files.split(/\\n/g).filter(Boolean).map(function (file) {\n         return file.trim()\n      });\n   };\n\n   /**\n    * Schedules the supplied command to be run, the command should not include the name of the git binary and should\n    * be an array of strings passed as the arguments to the git binary.\n    *\n    * @param {string[]} command\n    * @param {Function} then\n    * @param {Object} [opt]\n    * @param {boolean} [opt.concatStdErr=false] Optionally concatenate stderr output into the stdout\n    * @param {boolean} [opt.format=\"utf-8\"] The format to use when reading the content of stdout\n    * @param {Function} [opt.onError] Optional error handler for this command - can be used to allow non-clean exits\n    *                                  without killing the remaining stack of commands\n    * @param {number} [opt.onError.exitCode]\n    * @param {string} [opt.onError.stdErr]\n    *\n    * @returns {Git}\n    */\n   Git.prototype._run = function (command, then, opt) {\n      if (typeof command === \"string\") {\n         command = command.split(\" \");\n      }\n      this._runCache.push([command, then, opt || {}]);\n      this._schedule();\n\n      return this;\n   };\n\n   Git.prototype._schedule = function () {\n      if (!this._childProcess && this._runCache.length) {\n         var git = this;\n         var Buffer = git.Buffer;\n         var task = git._runCache.shift();\n\n         var command = task[0];\n         var then = task[1];\n         var options = task[2];\n\n         debug(command);\n\n         var result = deferred();\n\n         var attempted = false;\n         var attemptClose = function attemptClose (e) {\n\n            // closing when there is content, terminate immediately\n            if (attempted || stdErr.length || stdOut.length) {\n               result.resolve(e);\n               attempted = true;\n            }\n\n            // first attempt at closing but no content yet, wait briefly for the close/exit that may follow\n            if (!attempted) {\n               attempted = true;\n               setTimeout(attemptClose.bind(this, e), 50);\n            }\n\n         };\n\n         var stdOut = [];\n         var stdErr = [];\n         var spawned = git.ChildProcess.spawn(git._command, command.slice(0), {\n            cwd: git._baseDir,\n            env: git._env,\n            windowsHide: true\n         });\n\n         spawned.stdout.on('data', function (buffer) {\n            stdOut.push(buffer);\n         });\n\n         spawned.stderr.on('data', function (buffer) {\n            stdErr.push(buffer);\n         });\n\n         spawned.on('error', function (err) {\n            stdErr.push(Buffer.from(err.stack, 'ascii'));\n         });\n\n         spawned.on('close', attemptClose);\n         spawned.on('exit', attemptClose);\n\n         result.promise.then(function (exitCode) {\n            function done (output) {\n               then.call(git, null, output);\n            }\n\n            function fail (error) {\n               Git.fail(git, error, then);\n            }\n\n            delete git._childProcess;\n\n            if (exitCode && stdErr.length && options.onError) {\n               options.onError(exitCode, Buffer.concat(stdErr).toString('utf-8'), done, fail);\n            }\n            else if (exitCode && stdErr.length) {\n               fail(Buffer.concat(stdErr).toString('utf-8'));\n            }\n            else {\n               if (options.concatStdErr) {\n                  [].push.apply(stdOut, stdErr);\n               }\n\n               var stdOutput = Buffer.concat(stdOut);\n               if (options.format !== 'buffer') {\n                  stdOutput = stdOutput.toString(options.format || 'utf-8');\n               }\n\n               done(stdOutput);\n            }\n\n            process.nextTick(git._schedule.bind(git));\n         });\n\n         git._childProcess = spawned;\n\n         if (git._outputHandler) {\n            git._outputHandler(command[0], git._childProcess.stdout, git._childProcess.stderr);\n         }\n      }\n   };\n\n   /**\n    * Handles an exception in the processing of a command.\n    */\n   Git.fail = function (git, error, handler) {\n      git._getLog('error', error);\n      git._runCache.length = 0;\n      if (typeof handler === 'function') {\n         handler.call(git, error, null);\n      }\n   };\n\n   /**\n    * Given any number of arguments, returns the last argument if it is a function, otherwise returns null.\n    * @returns {Function|null}\n    */\n   Git.trailingFunctionArgument = function (args) {\n      var trailing = args[args.length - 1];\n      return (typeof trailing === \"function\") ? trailing : null;\n   };\n\n   /**\n    * Given any number of arguments, returns the trailing options argument, ignoring a trailing function argument\n    * if there is one. When not found, the return value is null.\n    * @returns {Object|null}\n    */\n   Git.trailingOptionsArgument = function (args) {\n      var options = args[(args.length - (Git.trailingFunctionArgument(args) ? 2 : 1))];\n      return Object.prototype.toString.call(options) === '[object Object]' ? options : null;\n   };\n\n   /**\n    * Given any number of arguments, returns the trailing options array argument, ignoring a trailing function argument\n    * if there is one. When not found, the return value is an empty array.\n    * @returns {Array}\n    */\n   Git.trailingArrayArgument = function (args) {\n      var options = args[(args.length - (Git.trailingFunctionArgument(args) ? 2 : 1))];\n      return Object.prototype.toString.call(options) === '[object Array]' ? options : [];\n   };\n\n   /**\n    * Mutates the supplied command array by merging in properties in the options object. When the\n    * value of the item in the options object is a string it will be concatenated to the key as\n    * a single `name=value` item, otherwise just the name will be used.\n    *\n    * @param {string[]} command\n    * @param {Object} options\n    * @private\n    */\n   Git._appendOptions = function (command, options) {\n      if (options === null) {\n         return;\n      }\n\n      Object.keys(options).forEach(function (key) {\n         var value = options[key];\n         if (typeof value === 'string') {\n            command.push(key + '=' + value);\n         }\n         else {\n            command.push(key);\n         }\n      });\n   };\n\n   /**\n    * Given the type of response and the callback to receive the parsed response,\n    * uses the correct parser and calls back the callback.\n    *\n    * @param {Function} callback\n    * @param {string} [type]\n    * @param {Object[]} [args]\n    *\n    * @private\n    */\n   Git._responseHandler = function (callback, type, args) {\n      return function (error, data) {\n         if (typeof callback !== 'function') {\n            return;\n         }\n\n         if (error) {\n            return callback(error, null);\n         }\n\n         if (!type) {\n            return callback(null, data);\n         }\n\n         var handler = requireResponseHandler(type);\n         var result = handler.parse.apply(handler, [data].concat(args === undefined ? [] : args));\n\n         callback(null, result);\n      };\n\n   };\n\n   /**\n    * Marks the git instance as having had a fatal exception by clearing the pending queue of tasks and\n    * logging to the console.\n    *\n    * @param git\n    * @param error\n    * @param callback\n    */\n   Git.exception = function (git, error, callback) {\n      git._runCache.length = 0;\n      if (typeof callback === 'function') {\n         callback(error instanceof Error ? error : new Error(error));\n      }\n\n      git._getLog('error', error);\n   };\n\n   module.exports = Git;\n\n   /**\n    * Requires and returns a response handler based on its named type\n    * @param {string} type\n    */\n   function requireResponseHandler (type) {\n      return responses[type];\n   }\n\n}());\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","module.exports = require(\"tty\");","module.exports = require(\"util\");","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","module.exports = require(\"os\");","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","\nmodule.exports = function deferred () {\n   var d = {};\n   d.promise = new Promise(function (resolve, reject) {\n      d.resolve = resolve;\n      d.reject = reject\n   });\n\n   return d;\n};\n","\nvar fs = require('fs');\n\nfunction exists (path, isFile, isDirectory) {\n   try {\n      var matches = false;\n      var stat = fs.statSync(path);\n\n      matches = matches || isFile && stat.isFile();\n      matches = matches || isDirectory && stat.isDirectory();\n\n      return matches;\n   }\n   catch (e) {\n      if (e.code === 'ENOENT') {\n         return false;\n      }\n\n      throw e;\n   }\n}\n\nmodule.exports = function (path, type) {\n   if (!type) {\n      return exists(path, true, true);\n   }\n\n   return exists(path, type & 1, type & 2);\n};\n\nmodule.exports.FILE = 1;\n\nmodule.exports.FOLDER = 2;\n","\nmodule.exports = {\n   BranchDeleteSummary: require('./BranchDeleteSummary'),\n   BranchSummary: require('./BranchSummary'),\n   CommitSummary: require('./CommitSummary'),\n   DiffSummary: require('./DiffSummary'),\n   FetchSummary: require('./FetchSummary'),\n   FileStatusSummary: require('./FileStatusSummary'),\n   ListLogSummary: require('./ListLogSummary'),\n   MergeSummary: require('./MergeSummary'),\n   MoveSummary: require('./MoveSummary'),\n   PullSummary: require('./PullSummary'),\n   StatusSummary: require('./StatusSummary'),\n   TagList: require('./TagList'),\n};\n","\nmodule.exports = BranchDeletion;\n\nfunction BranchDeletion (branch, hash) {\n   this.branch = branch;\n   this.hash = hash;\n   this.success = hash !== null;\n}\n\nBranchDeletion.deleteSuccessRegex = /(\\S+)\\s+\\(\\S+\\s([^\\)]+)\\)/;\nBranchDeletion.deleteErrorRegex = /^error[^']+'([^']+)'/;\n\nBranchDeletion.parse = function (data, asArray) {\n   var result;\n   var branchDeletions = data.trim().split('\\n').map(function (line) {\n         if (result = BranchDeletion.deleteSuccessRegex.exec(line)) {\n            return new BranchDeletion(result[1], result[2]);\n         }\n         else if (result = BranchDeletion.deleteErrorRegex.exec(line)) {\n            return new BranchDeletion(result[1], null);\n         }\n      })\n      .filter(Boolean);\n\n   return asArray ? branchDeletions : branchDeletions.pop();\n};\n","\nmodule.exports = BranchSummary;\n\nfunction BranchSummary () {\n   this.detached = false;\n   this.current = '';\n   this.all = [];\n   this.branches = {};\n}\n\nBranchSummary.prototype.push = function (current, detached, name, commit, label) {\n   if (current) {\n      this.detached = detached;\n      this.current = name;\n   }\n   this.all.push(name);\n   this.branches[name] = {\n      current: current,\n      name: name,\n      commit: commit,\n      label: label\n   };\n};\n\nBranchSummary.detachedRegex = /^(\\*?\\s+)\\((?:HEAD )?detached (?:from|at) (\\S+)\\)\\s+([a-z0-9]+)\\s(.*)$/;\nBranchSummary.branchRegex = /^(\\*?\\s+)(\\S+)\\s+([a-z0-9]+)\\s(.*)$/;\n\nBranchSummary.parse = function (commit) {\n   var branchSummary = new BranchSummary();\n\n   commit.split('\\n')\n      .forEach(function (line) {\n         var detached = true;\n         var branch = BranchSummary.detachedRegex.exec(line);\n         if (!branch) {\n            detached = false;\n            branch = BranchSummary.branchRegex.exec(line);\n         }\n\n         if (branch) {\n            branchSummary.push(\n               branch[1].charAt(0) === '*',\n               detached,\n               branch[2],\n               branch[3],\n               branch[4]\n            );\n         }\n      });\n\n   return branchSummary;\n};\n","\nmodule.exports = CommitSummary;\n\nfunction CommitSummary () {\n   this.branch = '';\n   this.commit = '';\n   this.summary = {\n      changes: 0,\n      insertions: 0,\n      deletions: 0\n   };\n   this.author = null;\n}\n\nvar COMMIT_BRANCH_MESSAGE_REGEX = /\\[([^\\s]+) ([^\\]]+)/;\nvar COMMIT_AUTHOR_MESSAGE_REGEX = /\\s*Author:\\s(.+)/i;\n\nfunction setBranchFromCommit (commitSummary, commitData) {\n   if (commitData) {\n      commitSummary.branch = commitData[1];\n      commitSummary.commit = commitData[2];\n   }\n}\n\nfunction setSummaryFromCommit (commitSummary, commitData) {\n   if (commitSummary.branch && commitData) {\n      commitSummary.summary.changes = commitData[1] || 0;\n      commitSummary.summary.insertions = commitData[2] || 0;\n      commitSummary.summary.deletions = commitData[3] || 0;\n   }\n}\n\nfunction setAuthorFromCommit (commitSummary, commitData) {\n   var parts = commitData[1].split('<');\n   var email = parts.pop();\n\n   if (email.indexOf('@') <= 0) {\n      return;\n   }\n\n   commitSummary.author = {\n      email: email.substr(0, email.length - 1),\n      name: parts.join('<').trim()\n   };\n}\n\nCommitSummary.parse = function (commit) {\n   var lines = commit.trim().split('\\n');\n   var commitSummary = new CommitSummary();\n\n   setBranchFromCommit(commitSummary, COMMIT_BRANCH_MESSAGE_REGEX.exec(lines.shift()));\n\n   if (COMMIT_AUTHOR_MESSAGE_REGEX.test(lines[0])) {\n      setAuthorFromCommit(commitSummary, COMMIT_AUTHOR_MESSAGE_REGEX.exec(lines.shift()));\n   }\n\n   setSummaryFromCommit(commitSummary, /(\\d+)[^,]*(?:,\\s*(\\d+)[^,]*)?(?:,\\s*(\\d+))?/g.exec(lines.shift()));\n\n   return commitSummary;\n};\n","\nmodule.exports = DiffSummary;\n\n/**\n * The DiffSummary is returned as a response to getting `git().status()`\n *\n * @constructor\n */\nfunction DiffSummary () {\n   this.files = [];\n   this.insertions = 0;\n   this.deletions = 0;\n   this.changed = 0;\n}\n\n/**\n * Number of lines added\n * @type {number}\n */\nDiffSummary.prototype.insertions = 0;\n\n/**\n * Number of lines deleted\n * @type {number}\n */\nDiffSummary.prototype.deletions = 0;\n\n/**\n * Number of files changed\n * @type {number}\n */\nDiffSummary.prototype.changed = 0;\n\nDiffSummary.parse = function (text) {\n   var line, handler;\n\n   var lines = text.trim().split('\\n');\n   var status = new DiffSummary();\n\n   var summary = lines.pop();\n   if (summary) {\n      summary.trim().split(', ').forEach(function (text) {\n         var summary = /(\\d+)\\s([a-z]+)/.exec(text);\n         if (!summary) {\n            return;\n         }\n\n         if (/files?/.test(summary[2])) {\n            status.changed = parseInt(summary[1], 10);\n         }\n         else {\n            status[summary[2].replace(/s$/, '') + 's'] = parseInt(summary[1], 10);\n         }\n      });\n   }\n\n   while (line = lines.shift()) {\n      textFileChange(line, status.files) || binaryFileChange(line, status.files);\n   }\n\n   return status;\n};\n\nfunction textFileChange (line, files) {\n   line = line.trim().match(/^(.+)\\s+\\|\\s+(\\d+)(\\s+[+\\-]+)?$/);\n\n   if (line) {\n      var alterations = (line[3] || '').trim();\n      files.push({\n         file: line[1].trim(),\n         changes: parseInt(line[2], 10),\n         insertions: alterations.replace(/-/g, '').length,\n         deletions: alterations.replace(/\\+/g, '').length,\n         binary: false\n      });\n\n      return true;\n   }\n}\n\nfunction binaryFileChange (line, files) {\n   line = line.match(/^(.+) \\|\\s+Bin ([0-9.]+) -> ([0-9.]+) ([a-z]+)$/);\n   if (line) {\n      files.push({\n         file: line[1].trim(),\n         before: +line[2],\n         after: +line[3],\n         binary: true\n      });\n      return true;\n   }\n}\n","'use strict';\n\nfunction FetchSummary (raw) {\n   this.raw = raw;\n\n   this.remote = null;\n   this.branches = [];\n   this.tags = [];\n}\n\nFetchSummary.parsers = [\n   [\n      /From (.+)$/, function (fetchSummary, matches) {\n         fetchSummary.remote = matches[0];\n      }\n   ],\n   [\n      /\\* \\[new branch\\]\\s+(\\S+)\\s*\\-> (.+)$/, function (fetchSummary, matches) {\n         fetchSummary.branches.push({\n            name: matches[0],\n            tracking: matches[1]\n         });\n      }\n   ],\n   [\n      /\\* \\[new tag\\]\\s+(\\S+)\\s*\\-> (.+)$/, function (fetchSummary, matches) {\n         fetchSummary.tags.push({\n            name: matches[0],\n            tracking: matches[1]\n         });\n      }\n   ]\n];\n\nFetchSummary.parse = function (data) {\n   var fetchSummary = new FetchSummary(data);\n\n   String(data)\n      .trim()\n      .split('\\n')\n      .forEach(function (line) {\n         var original = line.trim();\n         FetchSummary.parsers.some(function (parser) {\n            var parsed = parser[0].exec(original);\n            if (parsed) {\n               parser[1](fetchSummary, parsed.slice(1));\n               return true;\n            }\n         });\n      });\n\n   return fetchSummary;\n};\n\nmodule.exports = FetchSummary;\n","'use strict';\n\nfunction FileStatusSummary (path, index, working_dir) {\n   this.path = path;\n   this.index = index;\n   this.working_dir = working_dir;\n\n   if ('R' === index + working_dir) {\n      var detail = FileStatusSummary.fromPathRegex.exec(path) || [null, path, path];\n      this.from = detail[1];\n      this.path = detail[2];\n   }\n}\n\nFileStatusSummary.fromPathRegex = /^(.+) -> (.+)$/;\n\nFileStatusSummary.prototype = {\n   path: '',\n   from: ''\n};\n\nmodule.exports = FileStatusSummary;\n","\nmodule.exports = ListLogSummary;\n\nvar DiffSummary = require('./DiffSummary');\n\n/**\n * The ListLogSummary is returned as a response to getting `git().log()` or `git().stashList()`\n *\n * @constructor\n */\nfunction ListLogSummary (all) {\n   this.all = all;\n   this.latest = all.length && all[0] || null;\n   this.total = all.length;\n}\n\n/**\n * Detail for each of the log lines\n * @type {ListLogLine[]}\n */\nListLogSummary.prototype.all = null;\n\n/**\n * Most recent entry in the log\n * @type {ListLogLine}\n */\nListLogSummary.prototype.latest = null;\n\n/**\n * Number of items in the log\n * @type {number}\n */\nListLogSummary.prototype.total = 0;\n\nfunction ListLogLine (line, fields) {\n   for (var k = 0; k < fields.length; k++) {\n      this[fields[k]] = line[k] || '';\n   }\n}\n\n/**\n * When the log was generated with a summary, the `diff` property contains as much detail\n * as was provided in the log (whether generated with `--stat` or `--shortstat`.\n * @type {DiffSummary}\n */\nListLogLine.prototype.diff = null;\n\nListLogSummary.START_BOUNDARY = 'òòòòòò ';\n\nListLogSummary.COMMIT_BOUNDARY = ' òò';\n\nListLogSummary.SPLITTER = ' ò ';\n\nListLogSummary.parse = function (text, splitter, fields) {\n   fields = fields || ['hash', 'date', 'message', 'refs', 'author_name', 'author_email'];\n   return new ListLogSummary(\n      text\n         .trim()\n         .split(ListLogSummary.START_BOUNDARY)\n         .filter(function(item) { return !!item.trim(); })\n         .map(function (item) {\n            var lineDetail = item.trim().split(ListLogSummary.COMMIT_BOUNDARY);\n            var listLogLine = new ListLogLine(lineDetail[0].trim().split(splitter), fields);\n\n            if (lineDetail.length > 1 && !!lineDetail[1].trim()) {\n               listLogLine.diff = DiffSummary.parse(lineDetail[1]);\n            }\n\n            return listLogLine;\n         })\n   );\n};\n","module.exports = MergeSummary;\nmodule.exports.MergeConflict = MergeConflict;\n\nvar PullSummary = require('./PullSummary');\n\nfunction MergeConflict (reason, file, meta) {\n   this.reason = reason;\n   this.file = file;\n   if (meta) {\n      this.meta = meta;\n   }\n}\n\nMergeConflict.prototype.meta = null;\n\nMergeConflict.prototype.toString = function () {\n   return this.file + ':' + this.reason;\n};\n\nfunction MergeSummary () {\n   PullSummary.call(this);\n\n   this.conflicts = [];\n   this.merges = [];\n}\n\nMergeSummary.prototype = Object.create(PullSummary.prototype);\n\nMergeSummary.prototype.result = 'success';\n\nMergeSummary.prototype.toString = function () {\n   if (this.conflicts.length) {\n      return 'CONFLICTS: ' + this.conflicts.join(', ');\n   }\n   return 'OK';\n};\n\nObject.defineProperty(MergeSummary.prototype, 'failed', {\n   get: function () {\n      return this.conflicts.length > 0;\n   }\n});\n\nMergeSummary.parsers = [\n   {\n      test: /^Auto-merging\\s+(.+)$/,\n      handle: function (result, mergeSummary) {\n         mergeSummary.merges.push(result[1]);\n      }\n   },\n   {\n      // Parser for standard merge conflicts\n      test: /^CONFLICT\\s+\\((.+)\\): Merge conflict in (.+)$/,\n      handle: function (result, mergeSummary) {\n         mergeSummary.conflicts.push(new MergeConflict(result[1], result[2]));\n      }\n   },\n   {\n      // Parser for modify/delete merge conflicts (modified by us/them, deleted by them/us)\n      test: /^CONFLICT\\s+\\((.+\\/delete)\\): (.+) deleted in (.+) and/,\n      handle: function (result, mergeSummary) {\n         mergeSummary.conflicts.push(\n            new MergeConflict(result[1], result[2], {deleteRef: result[3]})\n         );\n      }\n   },\n   {\n      // Catch-all parser for unknown/unparsed conflicts\n      test: /^CONFLICT\\s+\\((.+)\\):/,\n      handle: function (result, mergeSummary) {\n         mergeSummary.conflicts.push(new MergeConflict(result[1], null));\n      }\n   },\n   {\n      test: /^Automatic merge failed;\\s+(.+)$/,\n      handle: function (result, mergeSummary) {\n         mergeSummary.reason = mergeSummary.result = result[1];\n      }\n   }\n];\n\nMergeSummary.parse = function (output) {\n   let mergeSummary = new MergeSummary();\n\n   output.trim().split('\\n').forEach(function (line) {\n      for (var i = 0, iMax = MergeSummary.parsers.length; i < iMax; i++) {\n         let parser = MergeSummary.parsers[i];\n\n         var result = parser.test.exec(line);\n         if (result) {\n            parser.handle(result, mergeSummary);\n            break;\n         }\n      }\n   });\n\n   let pullSummary = PullSummary.parse(output);\n   if (pullSummary.summary.changes) {\n      Object.assign(mergeSummary, pullSummary);\n   }\n\n   return mergeSummary;\n};\n","\nmodule.exports = PullSummary;\n\n/**\n * The PullSummary is returned as a response to getting `git().pull()`\n *\n * @constructor\n */\nfunction PullSummary () {\n   this.files = [];\n   this.insertions = {};\n   this.deletions = {};\n\n   this.summary = {\n      changes: 0,\n      insertions: 0,\n      deletions: 0\n   };\n\n   this.created = [];\n   this.deleted = [];\n}\n\n/**\n * Array of files that were created\n * @type {string[]}\n */\nPullSummary.prototype.created = null;\n\n/**\n * Array of files that were deleted\n * @type {string[]}\n */\nPullSummary.prototype.deleted = null;\n\n/**\n * The array of file paths/names that have been modified in any part of the pulled content\n * @type {string[]}\n */\nPullSummary.prototype.files = null;\n\n/**\n * A map of file path to number to show the number of insertions per file.\n * @type {Object}\n */\nPullSummary.prototype.insertions = null;\n\n/**\n * A map of file path to number to show the number of deletions per file.\n * @type {Object}\n */\nPullSummary.prototype.deletions = null;\n\n/**\n * Overall summary of changes/insertions/deletions and the number associated with each\n * across all content that was pulled.\n * @type {Object}\n */\nPullSummary.prototype.summary = null;\n\nPullSummary.FILE_UPDATE_REGEX = /^\\s*(.+?)\\s+\\|\\s+\\d+\\s*(\\+*)(-*)/;\nPullSummary.SUMMARY_REGEX = /(\\d+)\\D+((\\d+)\\D+\\(\\+\\))?(\\D+(\\d+)\\D+\\(-\\))?/;\nPullSummary.ACTION_REGEX = /(create|delete) mode \\d+ (.+)/;\n\nPullSummary.parse = function (text) {\n   var pullSummary = new PullSummary;\n   var lines = text.split('\\n');\n\n   while (lines.length) {\n      var line = lines.shift().trim();\n      if (!line) {\n         continue;\n      }\n\n      update(pullSummary, line) || summary(pullSummary, line) || action(pullSummary, line);\n   }\n\n   return pullSummary;\n};\n\nfunction update (pullSummary, line) {\n\n   var update = PullSummary.FILE_UPDATE_REGEX.exec(line);\n   if (!update) {\n      return false;\n   }\n\n   pullSummary.files.push(update[1]);\n\n   var insertions = update[2].length;\n   if (insertions) {\n      pullSummary.insertions[update[1]] = insertions;\n   }\n\n   var deletions = update[3].length;\n   if (deletions) {\n      pullSummary.deletions[update[1]] = deletions;\n   }\n\n   return true;\n}\n\nfunction summary (pullSummary, line) {\n   if (!pullSummary.files.length) {\n      return false;\n   }\n\n   var update = PullSummary.SUMMARY_REGEX.exec(line);\n   if (!update || (update[3] === undefined && update[5] === undefined)) {\n      return false;\n   }\n\n   pullSummary.summary.changes = +update[1] || 0;\n   pullSummary.summary.insertions = +update[3] || 0;\n   pullSummary.summary.deletions = +update[5] || 0;\n\n   return true;\n}\n\nfunction action (pullSummary, line) {\n\n   var match = PullSummary.ACTION_REGEX.exec(line);\n   if (!match) {\n      return false;\n   }\n\n   var file = match[2];\n\n   if (pullSummary.files.indexOf(file) < 0) {\n      pullSummary.files.push(file);\n   }\n\n   var container = (match[1] === 'create') ? pullSummary.created : pullSummary.deleted;\n   container.push(file);\n\n   return true;\n}\n","\nmodule.exports = MoveSummary;\n\n/**\n * The MoveSummary is returned as a response to getting `git().status()`\n *\n * @constructor\n */\nfunction MoveSummary () {\n   this.moves = [];\n   this.sources = {};\n}\n\nMoveSummary.SUMMARY_REGEX = /^Renaming (.+) to (.+)$/;\n\nMoveSummary.parse = function (text) {\n   var lines = text.split('\\n');\n   var summary = new MoveSummary();\n\n   for (var i = 0, iMax = lines.length, line; i < iMax; i++) {\n      line = MoveSummary.SUMMARY_REGEX.exec(lines[i].trim());\n\n      if (line) {\n         summary.moves.push({\n            from: line[1],\n            to: line[2]\n         });\n      }\n   }\n\n   return summary;\n};\n","\n\n\nvar FileStatusSummary = require('./FileStatusSummary');\n\nmodule.exports = StatusSummary;\n\n/**\n * The StatusSummary is returned as a response to getting `git().status()`\n *\n * @constructor\n */\nfunction StatusSummary () {\n   this.not_added = [];\n   this.conflicted = [];\n   this.created = [];\n   this.deleted = [];\n   this.modified = [];\n   this.renamed = [];\n   this.files = [];\n   this.staged = [];\n}\n\n\n/**\n * Number of commits ahead of the tracked branch\n * @type {number}\n */\nStatusSummary.prototype.ahead = 0;\n\n/**\n * Number of commits behind the tracked branch\n * @type {number}\n */\nStatusSummary.prototype.behind = 0;\n\n/**\n * Name of the current branch\n * @type {null}\n */\nStatusSummary.prototype.current = null;\n\n/**\n * Name of the branch being tracked\n * @type {string}\n */\nStatusSummary.prototype.tracking = null;\n\n/**\n * All files represented as an array of objects containing the `path` and status in `index` and\n * in the `working_dir`.\n *\n * @type {Array}\n */\nStatusSummary.prototype.files = null;\n\n/**\n * Gets whether this StatusSummary represents a clean working branch.\n *\n * @return {boolean}\n */\nStatusSummary.prototype.isClean = function () {\n   return 0 === Object.keys(this).filter(function (name) {\n      return Array.isArray(this[name]) && this[name].length;\n   }, this).length;\n};\n\nStatusSummary.parsers = {\n   '##': function (line, status) {\n      var aheadReg = /ahead (\\d+)/;\n      var behindReg = /behind (\\d+)/;\n      var currentReg = /^(.+?(?=(?:\\.{3}|\\s|$)))/;\n      var trackingReg = /\\.{3}(\\S*)/;\n      var regexResult;\n\n      regexResult = aheadReg.exec(line);\n      status.ahead = regexResult && +regexResult[1] || 0;\n\n      regexResult = behindReg.exec(line);\n      status.behind = regexResult && +regexResult[1] || 0;\n\n      regexResult = currentReg.exec(line);\n      status.current = regexResult && regexResult[1];\n\n      regexResult = trackingReg.exec(line);\n      status.tracking = regexResult && regexResult[1];\n   },\n\n   '??': function (line, status) {\n      status.not_added.push(line);\n   },\n\n   A: function (line, status) {\n      status.created.push(line);\n   },\n\n   AM: function (line, status) {\n      status.created.push(line);\n   },\n\n   D: function (line, status) {\n      status.deleted.push(line);\n   },\n\n   M: function (line, status, indexState) {\n      status.modified.push(line);\n\n      if (indexState === 'M') {\n         status.staged.push(line);\n      }\n   },\n\n   R: function (line, status) {\n      var detail = /^(.+) -> (.+)$/.exec(line) || [null, line, line];\n\n      status.renamed.push({\n         from: detail[1],\n         to: detail[2]\n      });\n   },\n\n   UU: function (line, status) {\n      status.conflicted.push(line);\n   }\n};\n\nStatusSummary.parsers.MM = StatusSummary.parsers.M;\n\n/* Map all unmerged status code combinations to UU to mark as conflicted */\nStatusSummary.parsers.AA = StatusSummary.parsers.UU;\nStatusSummary.parsers.UD = StatusSummary.parsers.UU;\nStatusSummary.parsers.DU = StatusSummary.parsers.UU;\nStatusSummary.parsers.DD = StatusSummary.parsers.UU;\nStatusSummary.parsers.AU = StatusSummary.parsers.UU;\nStatusSummary.parsers.UA = StatusSummary.parsers.UU;\n\nStatusSummary.parse = function (text) {\n   var file;\n   var lines = text.trim().split('\\n');\n   var status = new StatusSummary();\n\n   for (var i = 0, l = lines.length; i < l; i++) {\n      file = splitLine(lines[i]);\n\n      if (!file) {\n         continue;\n      }\n\n      if (file.handler) {\n         file.handler(file.path, status, file.index, file.workingDir);\n      }\n\n      if (file.code !== '##') {\n         status.files.push(new FileStatusSummary(file.path, file.index, file.workingDir));\n      }\n   }\n\n   return status;\n};\n\n\nfunction splitLine (lineStr) {\n   var line = lineStr.trim().match(/(..?)(\\s+)(.*)/);\n   if (!line || !line[1].trim()) {\n      line = lineStr.trim().match(/(..?)\\s+(.*)/);\n   }\n\n   if (!line) {\n      return;\n   }\n\n   var code = line[1];\n   if (line[2].length > 1) {\n      code += ' ';\n   }\n   if (code.length === 1 && line[2].length === 1) {\n      code = ' ' + code;\n   }\n\n   return {\n      raw: code,\n      code: code.trim(),\n      index: code.charAt(0),\n      workingDir: code.charAt(1),\n      handler: StatusSummary.parsers[code.trim()],\n      path: line[3]\n   };\n}\n","\nmodule.exports = TagList;\n\nfunction TagList (tagList, latest) {\n   this.latest = latest;\n   this.all = tagList\n}\n\nTagList.parse = function (data, customSort) {\n   var number = function (input) {\n      if (typeof input === 'string') {\n         return parseInt(input.replace(/^\\D+/g, ''), 10) || 0;\n      }\n\n      return 0;\n   };\n\n   var tags = data\n      .trim()\n      .split('\\n')\n      .map(function (item) { return item.trim(); })\n      .filter(Boolean);\n\n   if (!customSort) {\n      tags.sort(function (tagA, tagB) {\n         var partsA = tagA.split('.');\n         var partsB = tagB.split('.');\n\n         if (partsA.length === 1 || partsB.length === 1) {\n            return tagA - tagB > 0 ? 1 : -1;\n         }\n\n         for (var i = 0, l = Math.max(partsA.length, partsB.length); i < l; i++) {\n            var a = number(partsA[i]);\n            var b = number(partsB[i]);\n\n            var diff = a - b;\n            if (diff) {\n               return diff > 0 ? 1 : -1;\n            }\n         }\n\n         return 0;\n      });\n   }\n\n   var latest = customSort ? tags[0] : tags.filter(function (tag) { return tag.indexOf('.') >= 0; }).pop();\n\n   return new TagList(tags, latest);\n};\n","\nvar Git = require('./git');\n\nmodule.exports = function (baseDir) {\n\n   var dependencies = require('./util/dependencies');\n\n   if (baseDir && !dependencies.exists(baseDir, dependencies.exists.FOLDER)) {\n       throw new Error(\"Cannot use simple-git on a directory that does not exist.\");\n    }\n\n    return new Git(baseDir || process.cwd(), dependencies.childProcess(), dependencies.buffer());\n};\n\n","/**\n * Exports the utilities `simple-git` depends upon to allow for mocking during a test\n */\nmodule.exports = {\n\n   buffer: function () { return require('buffer').Buffer; },\n\n   childProcess: function () { return require('child_process'); },\n\n   exists: require('./exists')\n\n};\n","module.exports = require(\"buffer\");","'use strict'\n\nimport PushBeforeClosingIDE from '../handlers/exit/PushBeforeClosingIDE.handler'\nimport GitHandler from '../handlers/git/GitHandler.handler'\nimport BranchWarn from '../handlers/git/branch_changed/BranchWarn.handler'\nimport CheckForRemote from '../handlers/git/branch_changed/CheckForRemote.handler'\nimport DetectDetachedHead from '../handlers/git/branch_changed/DetectDetachedHead.handler'\nimport MergeCommits from '../handlers/git/commits/MergeCommits.handler'\nimport PullCommits from '../handlers/git/commits/PullCommits.handler'\nimport PushCommits from '../handlers/git/commits/PushCommit.handler'\nimport PushSubmodulesFirst from '../handlers/git/push/PushSubmodulesFirst.handler'\nimport CheckConfigVariables from '../handlers/start/CheckConfigVariables.handler'\nimport CheckRemoteChanges from '../handlers/start/CheckRemoteChanges.handler'\nimport PerformStartupCheckOfRepositories from '../handlers/start/PerformStartupCheckOfRepositories.handler'\nimport UpdateInitSubmodules from '../handlers/start/UpdateInitSubmodules.handler'\nimport WatcherStart from '../handlers/start/WatcherStart.handler'\nimport HandleSubmoduleUpdate from '../handlers/submodule/update/HandleSubmoduleUpdate.handler'\nimport SubmoduleHandler from '../handlers/submodule/SubmoduleHandler.handler'\n\nconst HANDLERS = [\n\tPushBeforeClosingIDE,\n\tBranchWarn,\n\tCheckForRemote,\n\tDetectDetachedHead,\n\tMergeCommits,\n\tPullCommits,\n\tPushCommits,\n\tGitHandler,\n\tPushSubmodulesFirst,\n\tCheckRemoteChanges,\n\tPerformStartupCheckOfRepositories,\n\tUpdateInitSubmodules,\n\tWatcherStart,\n\tSubmoduleHandler,\n\tHandleSubmoduleUpdate,\n\tCheckConfigVariables,\n]\n/**\n * this class registers all feature-handler in the extension\n */\nexport default class Features {\n\t/**\n\t * registers all files matching the \"*.handler.js\"-name-pattern to the Event-Handler\n\t */\n\tstatic enableFeatures(): void {\n\t\tHANDLERS.forEach((handler) => {\n\t\t\thandler.registerEventHandler()\n\t\t})\n\t}\n}\n","'use strict'\n\nimport { commands, workspace } from 'vscode'\nimport Logger from '../../UI/Logger'\nimport QuickPick from '../../UI/QuickPick'\nimport QuickPickOption from '../../UI/QuickPickOption'\nimport GitRepository from '../../application/GitRepository'\nimport ChangeHandler from '../ChangeHandler'\nimport Event from '../../models/Event'\nimport EventHandler from '../EventHandler'\nimport Config from '../../application/Config'\n\n/**\n * this Handler is responsible for informing the user he hasn't pushed all changes when closing VS Code\n */\nexport default class PushBeforeClosingIDE extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('pushBeforeClosingIDE')) {\n\t\t\tEventHandler.registerHandler(Event.EXIT, this)\n\t\t}\n\t}\n\n\tstatic async handle(hardQuit: boolean): Promise<void> {\n\t\tif (!hardQuit) {\n\t\t\tcommands.executeCommand('workbench.action.closeActiveEditor')\n\t\t\tlet fileOpened = false\n\t\t\tconst rootPath =\n\t\t\t\t(workspace.workspaceFolders &&\n\t\t\t\t\tworkspace.workspaceFolders.length &&\n\t\t\t\t\tworkspace.workspaceFolders[0].uri.path) ||\n\t\t\t\t''\n\n\t\t\t// checks if no more files are opened in the current Window\n\t\t\tworkspace.textDocuments.forEach((doc) => {\n\t\t\t\tif (doc.fileName.includes(rootPath)) {\n\t\t\t\t\tfileOpened = true\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (fileOpened) {\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tif (!(await GitRepository.getGitModel()).getAhead()) {\n\t\t\tLogger.showMessage('Editor closed')\n\t\t\tcommands.executeCommand(hardQuit ? 'workbench.action.quit' : 'workbench.action.closeWindow')\n\n\t\t\treturn\n\t\t}\n\n\t\tconst command = await QuickPick.showQuickPick(\n\t\t\t'choose an option',\n\t\t\tnew QuickPickOption('Push all changes and close Window', 'pushChanges'),\n\t\t\tQuickPickOption.optionQUIT,\n\t\t\tQuickPickOption.optionCANCEL,\n\t\t)\n\t\tif (command) {\n\t\t\tif (command === 'pushChanges') {\n\t\t\t\tawait GitRepository.pushRootRepository()\n\t\t\t\tcommands.executeCommand(QuickPickOption.optionQUIT.command)\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tcommands.executeCommand(command)\n\t\t}\n\t}\n}\n","'use strict'\n\nimport { window } from 'vscode'\nimport Logger from './Logger'\nimport QuickPickOption from './QuickPickOption'\n\n/**\n * this class is a wrapper for the VS Code QuickPick-Panel\n */\nexport default class QuickPick {\n\t/**\n\t * shows a QuickPick-Panel in the VS Code Window\n\t * @param placeHolder text to display when nothing was chosen\n\t * @param options options to choose from\n\t */\n\tstatic async showQuickPick(placeHolder: string, ...options: QuickPickOption[]): Promise<string> {\n\t\tLogger.showMessage('Push-QuickPick shown')\n\n\t\tconst option = await window.showQuickPick(options, { placeHolder: placeHolder })\n\t\tif (option) {\n\t\t\treturn option.command\n\t\t}\n\n\t\tLogger.showMessage(`No option chosen`)\n\n\t\treturn ''\n\t}\n}\n","'use strict'\n\nimport { QuickPickItem } from 'vscode'\n\n/**\n * this class is a wrapper for the VS Code QuickPickOptions\n */\nexport default class QuickPickOption implements QuickPickItem {\n\tlabel: string\n\tcommand: string\n\tdescription: string\n\n\tconstructor(label: string, command: string, description: string = '') {\n\t\tthis.label = label\n\t\tthis.command = command\n\t\tthis.description = description\n\t}\n\n\tstatic optionCANCEL = new QuickPickOption('Cancel', 'search.action.focusActiveEditor', 'ESC')\n\tstatic optionQUIT = new QuickPickOption('Close Window', 'workbench.action.quit')\n}\n","/**\n * this class is the template for a ChangeHandler\n */\nexport default abstract class ChangeHandler {\n\t/**\n\t * function that is called when the Handler should register itself\n\t */\n\tstatic registerEventHandler(): void {\n\t\tthrow new TypeError('Must override method')\n\t}\n\n\t/**\n\t * function that is called when a Event was fired\n\t * @param payload some additional information for the Handlers\n\t */\n\tstatic async handle(_payload?: any): Promise<void> {\n\t\tthrow new TypeError('Must override method')\n\t}\n}\n","'use strict'\n\nimport Git from '../../models/Git'\nimport GitRepository from '../../application/GitRepository'\nimport ChangeHandler from '../ChangeHandler'\nimport Event from '../../models/Event'\nimport EventHandler from '../EventHandler'\n\n/**\n * this Handler is responsible for changes in the Git-Repository\n */\nexport default class GitHandler extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tEventHandler.registerHandler(Event.GIT, this)\n\t}\n\n\tstatic async handle(): Promise<void> {\n\t\tconst gitModel = await GitRepository.updateGitModel()\n\t\tawait GitHandler.handleRepositoryChange(gitModel)\n\t}\n\n\t/**\n\t * checks for changes in a given Git-Repository\n\t * @param gitModel gitModel to check for changes\n\t */\n\tstatic async handleRepositoryChange(gitModel: Git): Promise<Git> {\n\t\tconst repositoryPath = gitModel.getRelativePath()\n\t\tconst modelDiff = await GitRepository.getModelDiff(repositoryPath)\n\n\t\t// nothing important changed (except timestamp and oldGitModel)\n\t\tif (Object.keys(modelDiff).length < 2) {\n\t\t\treturn gitModel\n\t\t}\n\n\t\tconst ahead = modelDiff.ahead > 0\n\t\tconst behind = modelDiff.behind > 0\n\t\tif (!modelDiff.detachedHEAD) {\n\t\t\tif (ahead && behind) {\n\t\t\t\tawait EventHandler.handle(Event.GIT_COMMITS, repositoryPath)\n\t\t\t} else if (ahead) {\n\t\t\t\tawait EventHandler.handle(Event.GIT_COMMITS_LOCAL, repositoryPath)\n\t\t\t} else if (behind) {\n\t\t\t\tawait EventHandler.handle(Event.GIT_COMMITS_REMOTE, repositoryPath)\n\t\t\t}\n\t\t}\n\n\t\tif (modelDiff.branch !== undefined) {\n\t\t\tawait EventHandler.handle(Event.GIT_BRANCH_CHANGED, repositoryPath)\n\t\t}\n\n\t\tif (modelDiff.modifiedSubmodules && modelDiff.modifiedSubmodules.length) {\n\t\t\tawait EventHandler.handle(Event.SUBMODULE_UPDATE)\n\t\t}\n\n\t\treturn gitModel\n\t}\n}\n","'use strict'\n\nimport Git from '../../../models/Git'\nimport InformationMessage from '../../../UI/InformationMessage'\nimport InputBox from '../../../UI/InputBox'\nimport MessageOption from '../../../UI/MessageOption'\nimport QuickPick from '../../../UI/QuickPick'\nimport QuickPickOption from '../../../UI/QuickPickOption'\nimport GitRepository from '../../../application/GitRepository'\nimport ChangeHandler from '../../ChangeHandler'\nimport Event from '../../../models/Event'\nimport EventHandler from '../../EventHandler'\nimport Config, { ConfigOptions } from '../../../application/Config'\n\n/**\n * this Handler is responsible to check if the user works on a wrong Branch\n */\nexport default class BranchWarn extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('branchWarn')) {\n\t\t\tEventHandler.registerHandler(Event.GIT_BRANCH_CHANGED, this)\n\t\t}\n\t}\n\n\tstatic async handle(repositoryPath: string): Promise<void> {\n\t\tconst gitModel = await GitRepository.getGitModel(repositoryPath)\n\t\tconst currentBranch = gitModel.getBranch()\n\n\t\tif (gitModel.isHeadDetached()) {\n\t\t\treturn\n\t\t}\n\n\t\tif (Config.getValue('branchWarn-illegalBranches').indexOf(currentBranch) < 0) {\n\t\t\treturn\n\t\t}\n\n\t\tlet message = `You are currently on branch \"${currentBranch}\"`\n\t\tif (!gitModel.isRootGit()) {\n\t\t\tmessage += ` in Submodule \"${repositoryPath}\"`\n\t\t}\n\t\tmessage += `. You should not commit on this branch. Would you like to switch branch?`\n\t\tconst action = await InformationMessage.showInformationMessage(\n\t\t\tmessage,\n\t\t\tMessageOption.optionYES,\n\t\t\tMessageOption.optionNO,\n\t\t)\n\n\t\tif (action !== MessageOption.YES) {\n\t\t\treturn\n\t\t}\n\n\t\t// let the user choose a branch to checkout\n\t\tconst localBranches = gitModel.getLocalBranches()\n\t\tconst createNewBranchCommand = '[git-assistant][create-new-branch]'\n\t\tlet branch = ''\n\t\tif (localBranches.length > 1) {\n\t\t\tconst options: QuickPickOption[] = []\n\t\t\tlocalBranches.forEach((branch) => {\n\t\t\t\tconst branchName = branch.getName()\n\t\t\t\tif (branchName !== currentBranch) {\n\t\t\t\t\toptions.push(new QuickPickOption(branchName, branchName))\n\t\t\t\t}\n\t\t\t})\n\t\t\toptions.push(new QuickPickOption('+ create a new branch', createNewBranchCommand))\n\n\t\t\tbranch = await QuickPick.showQuickPick('choose the branch to checkout', ...options)\n\t\t}\n\n\t\tif (!branch.length || branch === createNewBranchCommand) {\n\t\t\tbranch = await InputBox.showInputBox('enter name of the new branch')\n\t\t\tawait GitRepository.createNewBranch(repositoryPath, branch)\n\t\t}\n\n\t\tBranchWarn.checkoutWithoutStash(gitModel, branch)\n\t}\n\n\t// tries to checkout a branch\n\t// iff checkout fails => try to stash before checkout\n\tprivate static checkoutWithoutStash = async (gitModel: Git, branch: string): Promise<void> => {\n\t\tGitRepository.checkoutBranchForRepository(gitModel.getRelativePath(), branch).catch(() =>\n\t\t\tBranchWarn.checkoutWithStash(gitModel, branch),\n\t\t)\n\t}\n\n\t// stashes changes => then checkout\n\t// asks user in the end if it should pop the latest changes from stash\n\tprivate static checkoutWithStash = async (gitModel: Git, branch: string): Promise<void> => {\n\t\tconst stashed = await BranchWarn.stashBeforeCheckout(gitModel.getPath(), branch)\n\t\tif (!stashed) {\n\t\t\treturn\n\t\t}\n\n\t\tawait GitRepository.checkoutBranchForRepository(gitModel.getRelativePath(), branch)\n\n\t\tBranchWarn.stashPopAfterCheckout(gitModel.getPath())\n\t}\n\n\tprivate static stashBeforeCheckout = async (repositoryPath: string, branch: string): Promise<boolean> => {\n\t\tconst stashChanges = Config.getValue('branchWarn-stashChanges')\n\t\tif (stashChanges === ConfigOptions.disabled) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (stashChanges === ConfigOptions.auto) {\n\t\t\tGitRepository.stashSaveChanges(repositoryPath)\n\t\t\t\t.then(() => true)\n\t\t\t\t.catch(() => false)\n\t\t}\n\n\t\tconst action = await InformationMessage.showInformationMessage(\n\t\t\t`would you like to stash the current changes before checking out branch '${branch}'? The current changes will be lost`,\n\t\t\tMessageOption.optionYES,\n\t\t\tMessageOption.optionNO,\n\t\t)\n\n\t\tif (action === MessageOption.NO) {\n\t\t\treturn false\n\t\t}\n\n\t\tawait GitRepository.stashSaveChanges(repositoryPath)\n\n\t\treturn true\n\t}\n\n\tprivate static stashPopAfterCheckout = async (repositoryPath: string): Promise<void> => {\n\t\tconst action = await InformationMessage.showInformationMessage(\n\t\t\t`would you like to unstash the changes?`,\n\t\t\tMessageOption.optionYES,\n\t\t\tMessageOption.optionNO,\n\t\t)\n\t\tif (action !== MessageOption.YES) {\n\t\t\treturn\n\t\t}\n\t\tawait GitRepository.stashPopChanges(repositoryPath)\n\t}\n}\n","'use strict'\n\nimport { window } from 'vscode'\nimport Logger from './Logger'\n\nexport class InputValidation {\n\tstatic NOTEMPTY(text: string): string | undefined {\n\t\tif (!text || text.length === 0) {\n\t\t\treturn 'You must enter something'\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n}\n\n/**\n * this class is a wrapper for the VS Code InputBox\n */\nexport default class InputBox {\n\t/**\n\t * shows a InputBox in the VS Code Window\n\t * @param message message to display\n\t * @param validationFunction a function that validates the Input\n\t */\n\tstatic async showInputBox(message: string, validationFunction: any = InputValidation.NOTEMPTY): Promise<string> {\n\t\tconst input = await window.showInputBox({\n\t\t\tprompt: message,\n\t\t\tvalidateInput: validationFunction,\n\t\t})\n\t\tif (input) {\n\t\t\treturn input\n\t\t}\n\t\tLogger.showMessage(`Message not resolved: '${message}'`)\n\n\t\treturn ''\n\t}\n}\n","'use strict'\n\nimport { MessageItem } from 'vscode'\n\n/**\n * this class is a wrapper for VS Code MessageOptions\n */\nexport default class MessageOption implements MessageItem {\n\ttitle: string\n\taction: string\n\n\tconstructor(title: string, action: string = title) {\n\t\tthis.title = title\n\t\tthis.action = action\n\t}\n\n\tstatic YES = 'y'\n\tstatic NO = 'n'\n\tstatic NEVER = 'never'\n\tstatic ALWAYS = 'always'\n\tstatic optionYES = new MessageOption('yes', MessageOption.YES)\n\tstatic optionNO = new MessageOption('no', MessageOption.NO)\n\tstatic optionNEVERASKAGAIN = new MessageOption('never ask again', MessageOption.NEVER)\n\tstatic optionALWAYS = new MessageOption('always', MessageOption.ALWAYS)\n}\n","'use static'\n\nimport InformationMessage from '../../../UI/InformationMessage'\nimport MessageOption from '../../../UI/MessageOption'\nimport QuickPick from '../../../UI/QuickPick'\nimport QuickPickOption from '../../../UI/QuickPickOption'\nimport GitRepository from '../../../application/GitRepository'\nimport ChangeHandler from '../../ChangeHandler'\nimport Event from '../../../models/Event'\nimport EventHandler from '../../EventHandler'\nimport Config, { ConfigOptions } from '../../../application/Config'\nimport { getRepositoryName } from '../../../application/Helper'\n\n/**\n * this Handler is responsible for checking if a Remote exists for the current Branch\n */\nexport default class CheckForRemote extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('checkForRemote')) {\n\t\t\tEventHandler.registerHandler(Event.GIT_BRANCH_CHANGED, this)\n\t\t}\n\t}\n\n\tstatic async handle(repositoryPath: string): Promise<void> {\n\t\tconst gitModel = await GitRepository.getGitModel(repositoryPath)\n\t\tconst branch = gitModel.getBranch()\n\t\tlet remote = gitModel.getRemote()\n\n\t\tif (gitModel.isHeadDetached() || remote || remote === null) {\n\t\t\treturn\n\t\t}\n\n\t\tconst remotes = gitModel.getRemotes()\n\n\t\tif (remotes.length && Config.getValue('checkForRemote') !== ConfigOptions.auto) {\n\t\t\tconst option = await InformationMessage.showInformationMessage(\n\t\t\t\t`No remote found for '${getRepositoryName(\n\t\t\t\t\trepositoryPath,\n\t\t\t\t)}' on branch '${branch}' Would you like to publish this branch to the remote Server?`,\n\t\t\t\tMessageOption.optionYES,\n\t\t\t\tMessageOption.optionNO,\n\t\t\t)\n\n\t\t\tif (option !== MessageOption.YES) {\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\t// only one Remote exists => choose it\n\t\tif (remotes.length === 1) {\n\t\t\tremote = remotes[0]\n\t\t} else {\n\t\t\t// a default-Remote is set => choose it\n\t\t\tremote = Config.getValue('checkForRemote-defaultRemote')\n\t\t\tif (!remote) {\n\t\t\t\t// let the user decide wich Remote he wants to publish the Branch\n\t\t\t\tconst options = remotes.map((remote: string) => new QuickPickOption(remote, remote))\n\n\t\t\t\tif (!options.length) {\n\t\t\t\t\treturn CheckForRemote.noRemoteUpstreamSet(repositoryPath)\n\t\t\t\t}\n\t\t\t\tremote = await QuickPick.showQuickPick(`choose a remote to publish the branch '${branch}'`, ...options)\n\t\t\t}\n\t\t}\n\n\t\tif (!remote) {\n\t\t\treturn\n\t\t}\n\n\t\tawait GitRepository.publishBranch(repositoryPath, remote, branch)\n\t}\n\n\tprivate static noRemoteUpstreamSet(repositoryPath: string): void {\n\t\tInformationMessage.showInformationMessage(\n\t\t\t`No Remotes found for your Repository '${getRepositoryName(\n\t\t\t\trepositoryPath,\n\t\t\t)}'. You should add a Remote to have a backup in case of data loss.`,\n\t\t)\n\t}\n}\n","'use strict'\n\nimport Branch from '../../../models/Branch'\nimport Git from '../../../models/Git'\nimport InformationMessage from '../../../UI/InformationMessage'\nimport Logger from '../../../UI/Logger'\nimport MessageOption from '../../../UI/MessageOption'\nimport Status from '../../../UI/Status'\nimport StatusBar from '../../../UI/StatusBar'\nimport GitRepository from '../../../application/GitRepository'\nimport ChangeHandler from '../../ChangeHandler'\nimport Event from '../../../models/Event'\nimport EventHandler from '../../EventHandler'\nimport Config, { ConfigOptions } from '../../../application/Config'\nimport QuickPickOption from '../../../UI/QuickPickOption'\nimport QuickPick from '../../../UI/QuickPick'\n\n/**\n * this Handler is responsible for resolving the \"detached HEAD\" status\n */\nexport default class DetectDetachedHead extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('detectDetachedHead')) {\n\t\t\tEventHandler.registerHandler(Event.GIT_BRANCH_CHANGED, this)\n\t\t}\n\t}\n\n\tstatic async handle(repositoryPath: string): Promise<void> {\n\t\tconst gitModel = await GitRepository.getGitModel(repositoryPath)\n\t\tif (!gitModel.isHeadDetached()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst branch = await DetectDetachedHead.getRealBranchForHash(gitModel)\n\n\t\tif (!branch.length) {\n\t\t\treturn\n\t\t}\n\n\t\tif (Config.getValue('detectDetachedHead') === ConfigOptions.auto) {\n\t\t\tawait GitRepository.checkoutBranchForRepository(gitModel.getRelativePath(), branch)\n\t\t\tStatusBar.addStatus(Status.autoCheckoutForDetachedHead(gitModel.getRelativePath(), branch))\n\n\t\t\treturn\n\t\t}\n\n\t\tlet message = `the HEAD of your Repository is detached. Would you like to checkout its corresponding branch '${branch}'?`\n\n\t\tif (!gitModel.isRootGit()) {\n\t\t\tmessage = `The HEAD of the Submodule '${gitModel.getRelativePath()}' in your Repisotory is detached. Would you like to checkout its corresponding branch '${branch}'?`\n\t\t}\n\n\t\tconst action = await InformationMessage.showInformationMessage(\n\t\t\tmessage,\n\t\t\tMessageOption.optionYES,\n\t\t\tMessageOption.optionNO,\n\t\t)\n\t\tif (action !== MessageOption.YES) {\n\t\t\treturn\n\t\t}\n\n\t\tawait GitRepository.checkoutBranchForRepository(gitModel.getRelativePath(), branch)\n\t}\n\n\t/**\n\t * finds the corresponding Branch for a Commit-Hash\n\t */\n\tprivate static getRealBranchForHash = async (gitModel: Git): Promise<string> => {\n\t\t// the first one in the list is the current \"detached HEAD\"\n\t\tconst branches = gitModel.getLocalBranches().filter((branch, index) => index > 1)\n\t\tconst current = gitModel.getBranch()\n\n\t\tconst realBranches: string[] = []\n\t\tbranches.forEach((branch: Branch) => {\n\t\t\tif (current === branch.getCommit() || current === branch.getName()) {\n\t\t\t\trealBranches.push(branch.getName())\n\t\t\t}\n\t\t})\n\n\t\tif (realBranches.length) {\n\t\t\tif (realBranches.length === 1) {\n\t\t\t\treturn realBranches[0]\n\t\t\t}\n\n\t\t\tif (gitModel.getMainRepositoryPath()) {\n\t\t\t\tconst configuredBranch = await GitRepository.getConfiguredBranchForSubmodule(gitModel)\n\t\t\t\tif (configuredBranch && realBranches.includes(configuredBranch)) {\n\t\t\t\t\treturn configuredBranch\n\t\t\t\t}\n\n\t\t\t\tconst options: QuickPickOption[] = realBranches.map((branch) => new QuickPickOption(branch, branch))\n\n\t\t\t\tconst selectedBranch = await QuickPick.showQuickPick('choose the branch to check out', ...options)\n\t\t\t\tif (selectedBranch) {\n\t\t\t\t\treturn selectedBranch\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tLogger.showError(\n\t\t\t`could not find branch for '${current}' ${\n\t\t\t\t!gitModel.isRootGit() ? ` in Submodule '${gitModel.getRelativePath()}'` : ''\n\t\t\t}. You have to checkout the branch manually.`,\n\t\t\ttrue,\n\t\t)\n\n\t\treturn ''\n\t}\n}\n","'use strict'\n\nimport InformationMessage from '../../../UI/InformationMessage'\nimport MessageOption from '../../../UI/MessageOption'\nimport GitRepository from '../../../application/GitRepository'\nimport ChangeHandler from '../../ChangeHandler'\nimport Event from '../../../models/Event'\nimport EventHandler from '../../EventHandler'\nimport Config, { ConfigOptions } from '../../../application/Config'\nimport { getRepositoryName } from '../../../application/Helper'\n\n/**\n * this Handler is responsible to pull Commits from Remote, merge them and push them to the Remote\n */\nexport default class MergeCommits extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('mergeCommits')) {\n\t\t\tEventHandler.registerHandler(Event.GIT_COMMITS, this)\n\t\t}\n\t}\n\n\tstatic async handle(repositoryPath: string): Promise<void> {\n\t\tconst gitModel = await GitRepository.getGitModel(repositoryPath)\n\t\tconst ahead = gitModel.getAhead()\n\t\tconst behind = gitModel.getBehind()\n\t\tconst remote = gitModel.getRemote()\n\t\tconst branch = gitModel.getBranch()\n\n\t\tif (!(ahead && behind)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (Config.getValue('mergeCommits') === ConfigOptions.auto) {\n\t\t\tawait GitRepository.pullAndPushRepository(repositoryPath, remote, branch, ahead, behind)\n\n\t\t\treturn\n\t\t}\n\n\t\tconst action = await InformationMessage.showInformationMessage(\n\t\t\t`You are currently behind ${behind} commits. But you also have ${ahead} changes that are currently not on the server for ${getRepositoryName(\n\t\t\t\trepositoryPath,\n\t\t\t)}. Would you like to merge the changes?`,\n\t\t\tMessageOption.optionYES,\n\t\t\tMessageOption.optionNO,\n\t\t)\n\n\t\tif (action !== MessageOption.YES) {\n\t\t\treturn\n\t\t}\n\n\t\tawait GitRepository.pullAndPushRepository(repositoryPath, remote, branch, ahead, behind)\n\t}\n}\n","'use strict'\n\nimport InformationMessage from '../../../UI/InformationMessage'\nimport MessageOption from '../../../UI/MessageOption'\nimport GitRepository from '../../../application/GitRepository'\nimport ChangeHandler from '../../ChangeHandler'\nimport Event from '../../../models/Event'\nimport EventHandler from '../../EventHandler'\nimport Config, { ConfigOptions } from '../../../application/Config'\nimport { getRepositoryName } from '../../../application/Helper'\n\n/**\n * this Handler is responsible for pulling changes from a Remote\n */\nexport default class PullCommits extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('pullCommits')) {\n\t\t\tEventHandler.registerHandler(Event.GIT_COMMITS_REMOTE, this)\n\t\t}\n\t}\n\n\tstatic async handle(repositoryPath: string): Promise<void> {\n\t\tconst gitModel = await GitRepository.getGitModel(repositoryPath)\n\t\tconst behind = gitModel.getBehind()\n\t\tconst remote = gitModel.getRemote()\n\t\tconst branch = gitModel.getBranch()\n\n\t\tif (!behind) {\n\t\t\treturn\n\t\t}\n\n\t\tif (Config.getValue('pullCommits') === ConfigOptions.auto) {\n\t\t\tawait GitRepository.pullRepository(repositoryPath, remote, branch, behind)\n\n\t\t\treturn\n\t\t}\n\n\t\tconst action = await InformationMessage.showInformationMessage(\n\t\t\t`You are currently ${behind} commits behind in '${getRepositoryName(\n\t\t\t\trepositoryPath,\n\t\t\t)}'. Would you like to pull these changes?`,\n\t\t\tMessageOption.optionYES,\n\t\t\tMessageOption.optionNO,\n\t\t)\n\n\t\tif (action !== MessageOption.YES) {\n\t\t\treturn\n\t\t}\n\n\t\tawait GitRepository.pullRepository(repositoryPath, remote, branch, behind)\n\t}\n}\n","'use strict'\n\nimport InformationMessage from '../../../UI/InformationMessage'\nimport MessageOption from '../../../UI/MessageOption'\nimport GitRepository from '../../../application/GitRepository'\nimport ChangeHandler from '../../ChangeHandler'\nimport Event from '../../../models/Event'\nimport EventHandler from '../../EventHandler'\nimport Config, { ConfigOptions } from '../../../application/Config'\nimport { getRepositoryName } from '../../../application/Helper'\n\n/**\n * this Handler is responsible for pushing changes to the Remote\n */\nexport default class PushCommits extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('pushCommits')) {\n\t\t\tEventHandler.registerHandler(Event.GIT_COMMITS_LOCAL, this)\n\t\t}\n\t}\n\n\tstatic async handle(repositoryPath: string): Promise<void> {\n\t\tconst gitModel = await GitRepository.getGitModel(repositoryPath)\n\t\tconst ahead = gitModel.getAhead()\n\t\tconst remote = gitModel.getRemote()\n\t\tconst branch = gitModel.getBranch()\n\n\t\tif (!ahead) {\n\t\t\treturn\n\t\t}\n\n\t\tif (Config.getValue('pushCommits') === ConfigOptions.auto) {\n\t\t\tawait PushCommits.push(repositoryPath, remote, branch, ahead)\n\n\t\t\treturn\n\t\t}\n\n\t\tconst action = await InformationMessage.showInformationMessage(\n\t\t\t`You have ${ahead} changes that are currently not on the server for ${getRepositoryName(\n\t\t\t\trepositoryPath,\n\t\t\t)}. Would you like to push the changes?`,\n\t\t\tMessageOption.optionYES,\n\t\t\tMessageOption.optionNO,\n\t\t).catch(() => {})\n\n\t\tif (action !== MessageOption.YES) {\n\t\t\treturn\n\t\t}\n\n\t\tawait PushCommits.push(repositoryPath, remote, branch, ahead)\n\t}\n\n\tprivate static async push(repositoryPath: string, remote: string, branch: string, ahead: number): Promise<void> {\n\t\tawait EventHandler.handle(Event['GIT_PUSH'], repositoryPath)\n\t\tawait GitRepository.pushRepository(repositoryPath, remote, branch, ahead)\n\t}\n}\n","'use strict'\n\nimport GitRepository from '../../../application/GitRepository'\nimport ChangeHandler from '../../ChangeHandler'\nimport Event from '../../../models/Event'\nimport EventHandler from '../../EventHandler'\nimport PushCommits from '../commits/PushCommit.handler'\nimport Config from '../../../application/Config'\n\n/**\n * this Handler is responsible to push all Submodules for a Repository\n */\nexport default class PushSubmodulesFirst extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('pushSubmodulesFirst')) {\n\t\t\tEventHandler.registerHandler(Event.GIT_PUSH, this)\n\t\t}\n\t}\n\n\tstatic async handle(repositoryPath: string): Promise<void> {\n\t\tconst gitModel = await GitRepository.getGitModel(repositoryPath)\n\n\t\tfor (const submodule of gitModel.getSubmodules()) {\n\t\t\tawait PushCommits.handle(submodule.getPath())\n\t\t}\n\t}\n}\n","'use strict'\n\nimport InputBox from '../../UI/InputBox'\nimport Logger from '../../UI/Logger'\nimport Status from '../../UI/Status'\nimport StatusBar from '../../UI/StatusBar'\nimport GitRepository from '../../application/GitRepository'\nimport ChangeHandler from '../ChangeHandler'\nimport Event from '../../models/Event'\nimport EventHandler from '../EventHandler'\nimport Config from '../../application/Config'\n\n/**\n * this Handler checks for missing config-Variables\n */\nexport default class CheckConfigVariables extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('checkConfigVariables')) {\n\t\t\tEventHandler.registerHandler(Event.START, this)\n\t\t}\n\t}\n\n\tstatic async handle(): Promise<void> {\n\t\t// wich variables should be checked for\n\t\tconst toCheck = Config.getValue('checkConfigVariables-variablesToCheck')\n\n\t\tlet failed: boolean = false\n\t\tfor (const variable of toCheck) {\n\t\t\tconst result = await GitRepository.getConfigVariable(variable).catch(async () => {\n\t\t\t\tfailed = true\n\t\t\t\tconst input = await InputBox.showInputBox(`Config Variable '${variable}' not set. Please enter a value`)\n\t\t\t\tif (input.length) {\n\t\t\t\t\tawait GitRepository.setConfigVariable(variable, input, Config.getValue('checkConfigVariables-scope'))\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (result) {\n\t\t\t\tLogger.showMessage(`Config Variable '${variable}' is '${result}'`)\n\t\t\t}\n\t\t}\n\n\t\tStatusBar.addStatus(Status.allConfigVariablesChecked())\n\t\t// if all variables were set => disable this Feature\n\t\tif (!failed) {\n\t\t\tConfig.disable('checkConfigVariables')\n\t\t}\n\t}\n}\n","'use strict'\n\nimport ChangeHandler from '../ChangeHandler'\nimport EventHandler from '../EventHandler'\nimport Event from '../../models/Event'\nimport GitRepository from '../../application/GitRepository'\nimport StatusBar from '../../UI/StatusBar'\nimport Status from '../../UI/Status'\nimport Git from '../../models/Git'\nimport GitHandler from '../git/GitHandler.handler'\nimport Config from '../../application/Config'\n\n/**\n * this Handler checks periodically for new Commits on the Remote\n */\nexport default class CheckRemoteChanges extends ChangeHandler {\n\tstatic iterations = 0\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('checkRemoteChanges')) {\n\t\t\tEventHandler.registerHandler(Event.START, this)\n\t\t}\n\t}\n\n\tstatic async handle(repositoryPath: string = ''): Promise<void> {\n\t\tconst gitModel = !CheckRemoteChanges.iterations\n\t\t\t? await GitRepository.getGitModel(repositoryPath)\n\t\t\t: await GitRepository.updateGitModel(repositoryPath)\n\n\t\tCheckRemoteChanges.nextCheck(gitModel)\n\n\t\t// do nothing on first call, because there exist other Handlers for that\n\t\tif (!CheckRemoteChanges.iterations++) {\n\t\t\treturn\n\t\t}\n\n\t\tawait GitHandler.handleRepositoryChange(gitModel)\n\n\t\tconst ahead = gitModel.getAhead()\n\t\tconst behind = gitModel.getBehind()\n\t\tconst remote = gitModel.getRemote()\n\t\tconst branch = gitModel.getBranch()\n\n\t\tif (!remote.length) {\n\t\t\treturn CheckRemoteChanges.nextCheck(gitModel)\n\t\t}\n\n\t\t// display message that all is up-to-date\n\t\tif (!ahead && !behind) {\n\t\t\tStatusBar.addStatus(Status.branchIsUpToDate(gitModel.getRelativePath(), remote, branch))\n\t\t}\n\n\t\t// check all Submodules\n\t\tfor (const submodulePath of gitModel.getSubmodules().map((submodule) => submodule.getPath())) {\n\t\t\tawait CheckRemoteChanges.handle(submodulePath)\n\t\t}\n\t}\n\n\t/**\n\t * plans the next execution of the check if it is the root-Repository\n\t * @param gitModel current Model of a Repository\n\t */\n\tprivate static nextCheck(gitModel: Git): void {\n\t\tif (!gitModel.isRootGit()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst checkEveryNMinutes = Config.getValue('checkRemoteChanges-checkEveryNMinutes')\n\t\tif (checkEveryNMinutes) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!GitRepository.isCurrentlyUpdating()) {\n\t\t\t\t\tCheckRemoteChanges.handle()\n\t\t\t\t}\n\t\t\t}, checkEveryNMinutes * 1000 * 60)\n\t\t}\n\t}\n}\n","'use strict'\n\nimport ChangeHandler from '../ChangeHandler'\nimport EventHandler from '../EventHandler'\nimport Event from '../../models/Event'\nimport GitRepository from '../../application/GitRepository'\nimport GitHandler from '../git/GitHandler.handler'\nimport Submodule from '../../models/Submodule'\n\n/**\n * this Hanlder initializes all information for each Repository\n */\nexport default class PerformStartupCheckOfRepositories extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tEventHandler.registerHandler(Event.START, this)\n\t}\n\n\tstatic async handle(): Promise<void> {\n\t\tconst gitModel = await GitRepository.getGitModel()\n\t\tawait GitHandler.handleRepositoryChange(gitModel)\n\n\t\tconst submodulePaths = gitModel.getSubmodules().map((submodule: Submodule) => submodule.getPath())\n\t\tfor (const submodulePath of submodulePaths) {\n\t\t\tconst submoduleModel = await GitRepository.getGitModel(submodulePath, gitModel.getPath())\n\t\t\tawait GitHandler.handleRepositoryChange(submoduleModel)\n\t\t}\n\t}\n}\n","'use strict'\n\nimport ChangeHandler from '../ChangeHandler'\nimport EventHandler from '../EventHandler'\nimport Event from '../../models/Event'\nimport Config from '../../application/Config'\nimport GitRepository from '../../application/GitRepository'\n\n/**\n * this Hanlder updates all Submodules on Extension-start\n */\nexport default class UpdateInitSubmodules extends ChangeHandler {\n\tstatic iterations = 0\n\tstatic registerEventHandler(): void {\n\t\tif (Config.isEnabled('updateSubmodules')) {\n\t\t\tEventHandler.registerHandler(Event.START, this)\n\t\t}\n\t}\n\n\tstatic async handle(): Promise<void> {\n\t\tawait GitRepository.submoduleUpdateInit()\n\t}\n}\n","'use strict'\n\nimport Watcher from '../../application/Watcher'\nimport ChangeHandler from '../ChangeHandler'\nimport Event from '../../models/Event'\nimport EventHandler from '../EventHandler'\n\n/**\n * this Handler starts the Watcher on Extension-start\n */\nexport default class WatcherStart extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tEventHandler.registerHandler(Event.START, this)\n\t}\n\n\tstatic async handle(): Promise<void> {\n\t\treturn Watcher.start()\n\t}\n}\n","'use strict'\n\nimport InformationMessage from '../../../UI/InformationMessage'\nimport MessageOption from '../../../UI/MessageOption'\nimport GitRepository from '../../../application/GitRepository'\nimport ChangeHandler from '../../ChangeHandler'\nimport Event from '../../../models/Event'\nimport EventHandler from '../../EventHandler'\nimport Config, { ConfigOptions } from '../../../application/Config'\nimport StatusBar from '../../../UI/StatusBar'\nimport Status from '../../../UI/Status'\n\n/**\n * this Handler is reponsible for updating Submodule references\n */\nexport default class HandleSubmoduleUpdate extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tEventHandler.registerHandler(Event.SUBMODULE_UPDATE, this)\n\t}\n\n\tstatic async handle(): Promise<void> {\n\t\tif (Config.getValue('updateSubmodules') === ConfigOptions.auto) {\n\t\t\tawait GitRepository.submoduleUpdateInit()\n\t\t\tStatusBar.addStatus(Status.submoduleUpdated())\n\n\t\t\treturn\n\t\t}\n\n\t\tconst action = await InformationMessage.showInformationMessage(\n\t\t\t`Your submodues have updated. Would you like to checkout these commits?`,\n\t\t\tMessageOption.optionYES,\n\t\t\tMessageOption.optionNO,\n\t\t)\n\n\t\tif (action !== MessageOption.YES) {\n\t\t\treturn\n\t\t}\n\n\t\tawait GitRepository.submoduleUpdateInit()\n\n\t\tStatusBar.addStatus(Status.submoduleUpdated())\n\t}\n}\n","'use strict'\n\nimport GitRepository from '../../application/GitRepository'\nimport ChangeHandler from '../ChangeHandler'\nimport Event from '../../models/Event'\nimport EventHandler from '../EventHandler'\nimport GitHandler from '../git/GitHandler.handler'\n\n/**\n * this Handler is responsible for whenever something changed in a Submodule\n */\nexport default class SubmoduleHandler extends ChangeHandler {\n\tstatic registerEventHandler(): void {\n\t\tEventHandler.registerHandler(Event.SUBMODULE, this)\n\t}\n\n\tstatic async handle(changedFiles: string[]): Promise<void> {\n\t\tif (!changedFiles) {\n\t\t\treturn\n\t\t}\n\n\t\t// get submodulePaths of files that have changed\n\t\tconst gitModel = await GitRepository.getGitModel()\n\t\tconst submodules = gitModel.getSubmodules()\n\t\tconst submodulePaths: Set<string> = new Set()\n\t\tchangedFiles.forEach((changedFile) => {\n\t\t\tconst founds = submodules\n\t\t\t\t.filter((submodule) => new RegExp(submodule.getPath(), 'gi').test(changedFile))\n\t\t\t\t.map((submodule) => submodule.getPath())\n\t\t\tfounds.forEach((found) => submodulePaths.add(found))\n\t\t})\n\n\t\tfor (const submodulePath of submodulePaths) {\n\t\t\tconst submoduleModel = await GitRepository.updateGitModel(submodulePath, gitModel.getPath())\n\t\t\tawait GitHandler.handleRepositoryChange(submoduleModel)\n\t\t}\n\t}\n}\n"],"sourceRoot":""}