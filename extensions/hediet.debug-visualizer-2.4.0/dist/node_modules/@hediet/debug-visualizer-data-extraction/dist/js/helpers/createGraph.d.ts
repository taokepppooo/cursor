import { GraphEdge, GraphNode, GraphVisualizationData } from "../../CommonDataTypes";
export declare type CreateGraphEdge<T> = ({
    to: T;
} | {
    from: T;
} | {
    include: T;
}) & Omit<GraphEdge, "from" | "to">;
/**
 * Given a list of roots, it creates a graph by following their edges recursively.
 * Tracks cycles.
 */
export declare function createGraph<T>(roots: T[], infoSelector: (item: T) => {
    id?: string | number;
    edges: CreateGraphEdge<T>[];
} & Omit<GraphNode, "id">, options?: {
    maxSize?: number;
}): GraphVisualizationData;
//# sourceMappingURL=createGraph.d.ts.map