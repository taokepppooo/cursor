"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/safe-buffer/index.js
var require_safe_buffer = __commonJS({
  "node_modules/safe-buffer/index.js"(exports2, module2) {
    var buffer = require("buffer");
    var Buffer2 = buffer.Buffer;
    function copyProps(src, dst) {
      for (var key in src) {
        dst[key] = src[key];
      }
    }
    if (Buffer2.from && Buffer2.alloc && Buffer2.allocUnsafe && Buffer2.allocUnsafeSlow) {
      module2.exports = buffer;
    } else {
      copyProps(buffer, exports2);
      exports2.Buffer = SafeBuffer;
    }
    function SafeBuffer(arg, encodingOrOffset, length) {
      return Buffer2(arg, encodingOrOffset, length);
    }
    SafeBuffer.prototype = Object.create(Buffer2.prototype);
    copyProps(Buffer2, SafeBuffer);
    SafeBuffer.from = function(arg, encodingOrOffset, length) {
      if (typeof arg === "number") {
        throw new TypeError("Argument must not be a number");
      }
      return Buffer2(arg, encodingOrOffset, length);
    };
    SafeBuffer.alloc = function(size, fill, encoding) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      var buf = Buffer2(size);
      if (fill !== void 0) {
        if (typeof encoding === "string") {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
      } else {
        buf.fill(0);
      }
      return buf;
    };
    SafeBuffer.allocUnsafe = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return Buffer2(size);
    };
    SafeBuffer.allocUnsafeSlow = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return buffer.SlowBuffer(size);
    };
  }
});

// node_modules/jws/lib/data-stream.js
var require_data_stream = __commonJS({
  "node_modules/jws/lib/data-stream.js"(exports2, module2) {
    var Buffer2 = require_safe_buffer().Buffer;
    var Stream = require("stream");
    var util = require("util");
    function DataStream(data) {
      this.buffer = null;
      this.writable = true;
      this.readable = true;
      if (!data) {
        this.buffer = Buffer2.alloc(0);
        return this;
      }
      if (typeof data.pipe === "function") {
        this.buffer = Buffer2.alloc(0);
        data.pipe(this);
        return this;
      }
      if (data.length || typeof data === "object") {
        this.buffer = data;
        this.writable = false;
        process.nextTick(function() {
          this.emit("end", data);
          this.readable = false;
          this.emit("close");
        }.bind(this));
        return this;
      }
      throw new TypeError("Unexpected data type (" + typeof data + ")");
    }
    util.inherits(DataStream, Stream);
    DataStream.prototype.write = function write(data) {
      this.buffer = Buffer2.concat([this.buffer, Buffer2.from(data)]);
      this.emit("data", data);
    };
    DataStream.prototype.end = function end(data) {
      if (data)
        this.write(data);
      this.emit("end", data);
      this.emit("close");
      this.writable = false;
      this.readable = false;
    };
    module2.exports = DataStream;
  }
});

// node_modules/buffer-equal-constant-time/index.js
var require_buffer_equal_constant_time = __commonJS({
  "node_modules/buffer-equal-constant-time/index.js"(exports2, module2) {
    "use strict";
    var Buffer2 = require("buffer").Buffer;
    var SlowBuffer = require("buffer").SlowBuffer;
    module2.exports = bufferEq;
    function bufferEq(a, b) {
      if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b)) {
        return false;
      }
      if (a.length !== b.length) {
        return false;
      }
      var c = 0;
      for (var i = 0; i < a.length; i++) {
        c |= a[i] ^ b[i];
      }
      return c === 0;
    }
    bufferEq.install = function() {
      Buffer2.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {
        return bufferEq(this, that);
      };
    };
    var origBufEqual = Buffer2.prototype.equal;
    var origSlowBufEqual = SlowBuffer.prototype.equal;
    bufferEq.restore = function() {
      Buffer2.prototype.equal = origBufEqual;
      SlowBuffer.prototype.equal = origSlowBufEqual;
    };
  }
});

// node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js
var require_param_bytes_for_alg = __commonJS({
  "node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js"(exports2, module2) {
    "use strict";
    function getParamSize(keySize) {
      var result = (keySize / 8 | 0) + (keySize % 8 === 0 ? 0 : 1);
      return result;
    }
    var paramBytesForAlg = {
      ES256: getParamSize(256),
      ES384: getParamSize(384),
      ES512: getParamSize(521)
    };
    function getParamBytesForAlg(alg) {
      var paramBytes = paramBytesForAlg[alg];
      if (paramBytes) {
        return paramBytes;
      }
      throw new Error('Unknown algorithm "' + alg + '"');
    }
    module2.exports = getParamBytesForAlg;
  }
});

// node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js
var require_ecdsa_sig_formatter = __commonJS({
  "node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js"(exports2, module2) {
    "use strict";
    var Buffer2 = require_safe_buffer().Buffer;
    var getParamBytesForAlg = require_param_bytes_for_alg();
    var MAX_OCTET = 128;
    var CLASS_UNIVERSAL = 0;
    var PRIMITIVE_BIT = 32;
    var TAG_SEQ = 16;
    var TAG_INT = 2;
    var ENCODED_TAG_SEQ = TAG_SEQ | PRIMITIVE_BIT | CLASS_UNIVERSAL << 6;
    var ENCODED_TAG_INT = TAG_INT | CLASS_UNIVERSAL << 6;
    function base64Url(base64) {
      return base64.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    function signatureAsBuffer(signature) {
      if (Buffer2.isBuffer(signature)) {
        return signature;
      } else if ("string" === typeof signature) {
        return Buffer2.from(signature, "base64");
      }
      throw new TypeError("ECDSA signature must be a Base64 string or a Buffer");
    }
    function derToJose(signature, alg) {
      signature = signatureAsBuffer(signature);
      var paramBytes = getParamBytesForAlg(alg);
      var maxEncodedParamLength = paramBytes + 1;
      var inputLength = signature.length;
      var offset = 0;
      if (signature[offset++] !== ENCODED_TAG_SEQ) {
        throw new Error('Could not find expected "seq"');
      }
      var seqLength = signature[offset++];
      if (seqLength === (MAX_OCTET | 1)) {
        seqLength = signature[offset++];
      }
      if (inputLength - offset < seqLength) {
        throw new Error('"seq" specified length of "' + seqLength + '", only "' + (inputLength - offset) + '" remaining');
      }
      if (signature[offset++] !== ENCODED_TAG_INT) {
        throw new Error('Could not find expected "int" for "r"');
      }
      var rLength = signature[offset++];
      if (inputLength - offset - 2 < rLength) {
        throw new Error('"r" specified length of "' + rLength + '", only "' + (inputLength - offset - 2) + '" available');
      }
      if (maxEncodedParamLength < rLength) {
        throw new Error('"r" specified length of "' + rLength + '", max of "' + maxEncodedParamLength + '" is acceptable');
      }
      var rOffset = offset;
      offset += rLength;
      if (signature[offset++] !== ENCODED_TAG_INT) {
        throw new Error('Could not find expected "int" for "s"');
      }
      var sLength = signature[offset++];
      if (inputLength - offset !== sLength) {
        throw new Error('"s" specified length of "' + sLength + '", expected "' + (inputLength - offset) + '"');
      }
      if (maxEncodedParamLength < sLength) {
        throw new Error('"s" specified length of "' + sLength + '", max of "' + maxEncodedParamLength + '" is acceptable');
      }
      var sOffset = offset;
      offset += sLength;
      if (offset !== inputLength) {
        throw new Error('Expected to consume entire buffer, but "' + (inputLength - offset) + '" bytes remain');
      }
      var rPadding = paramBytes - rLength, sPadding = paramBytes - sLength;
      var dst = Buffer2.allocUnsafe(rPadding + rLength + sPadding + sLength);
      for (offset = 0; offset < rPadding; ++offset) {
        dst[offset] = 0;
      }
      signature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);
      offset = paramBytes;
      for (var o = offset; offset < o + sPadding; ++offset) {
        dst[offset] = 0;
      }
      signature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);
      dst = dst.toString("base64");
      dst = base64Url(dst);
      return dst;
    }
    function countPadding(buf, start, stop) {
      var padding = 0;
      while (start + padding < stop && buf[start + padding] === 0) {
        ++padding;
      }
      var needsSign = buf[start + padding] >= MAX_OCTET;
      if (needsSign) {
        --padding;
      }
      return padding;
    }
    function joseToDer(signature, alg) {
      signature = signatureAsBuffer(signature);
      var paramBytes = getParamBytesForAlg(alg);
      var signatureBytes = signature.length;
      if (signatureBytes !== paramBytes * 2) {
        throw new TypeError('"' + alg + '" signatures must be "' + paramBytes * 2 + '" bytes, saw "' + signatureBytes + '"');
      }
      var rPadding = countPadding(signature, 0, paramBytes);
      var sPadding = countPadding(signature, paramBytes, signature.length);
      var rLength = paramBytes - rPadding;
      var sLength = paramBytes - sPadding;
      var rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;
      var shortLength = rsBytes < MAX_OCTET;
      var dst = Buffer2.allocUnsafe((shortLength ? 2 : 3) + rsBytes);
      var offset = 0;
      dst[offset++] = ENCODED_TAG_SEQ;
      if (shortLength) {
        dst[offset++] = rsBytes;
      } else {
        dst[offset++] = MAX_OCTET | 1;
        dst[offset++] = rsBytes & 255;
      }
      dst[offset++] = ENCODED_TAG_INT;
      dst[offset++] = rLength;
      if (rPadding < 0) {
        dst[offset++] = 0;
        offset += signature.copy(dst, offset, 0, paramBytes);
      } else {
        offset += signature.copy(dst, offset, rPadding, paramBytes);
      }
      dst[offset++] = ENCODED_TAG_INT;
      dst[offset++] = sLength;
      if (sPadding < 0) {
        dst[offset++] = 0;
        signature.copy(dst, offset, paramBytes);
      } else {
        signature.copy(dst, offset, paramBytes + sPadding);
      }
      return dst;
    }
    module2.exports = {
      derToJose,
      joseToDer
    };
  }
});

// node_modules/jwa/index.js
var require_jwa = __commonJS({
  "node_modules/jwa/index.js"(exports2, module2) {
    var bufferEqual = require_buffer_equal_constant_time();
    var Buffer2 = require_safe_buffer().Buffer;
    var crypto = require("crypto");
    var formatEcdsa = require_ecdsa_sig_formatter();
    var util = require("util");
    var MSG_INVALID_ALGORITHM = '"%s" is not a valid algorithm.\n  Supported algorithms are:\n  "HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "PS256", "PS384", "PS512", "ES256", "ES384", "ES512" and "none".';
    var MSG_INVALID_SECRET = "secret must be a string or buffer";
    var MSG_INVALID_VERIFIER_KEY = "key must be a string or a buffer";
    var MSG_INVALID_SIGNER_KEY = "key must be a string, a buffer or an object";
    var supportsKeyObjects = typeof crypto.createPublicKey === "function";
    if (supportsKeyObjects) {
      MSG_INVALID_VERIFIER_KEY += " or a KeyObject";
      MSG_INVALID_SECRET += "or a KeyObject";
    }
    function checkIsPublicKey(key) {
      if (Buffer2.isBuffer(key)) {
        return;
      }
      if (typeof key === "string") {
        return;
      }
      if (!supportsKeyObjects) {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key !== "object") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key.type !== "string") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key.asymmetricKeyType !== "string") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key.export !== "function") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
    }
    function checkIsPrivateKey(key) {
      if (Buffer2.isBuffer(key)) {
        return;
      }
      if (typeof key === "string") {
        return;
      }
      if (typeof key === "object") {
        return;
      }
      throw typeError(MSG_INVALID_SIGNER_KEY);
    }
    function checkIsSecretKey(key) {
      if (Buffer2.isBuffer(key)) {
        return;
      }
      if (typeof key === "string") {
        return key;
      }
      if (!supportsKeyObjects) {
        throw typeError(MSG_INVALID_SECRET);
      }
      if (typeof key !== "object") {
        throw typeError(MSG_INVALID_SECRET);
      }
      if (key.type !== "secret") {
        throw typeError(MSG_INVALID_SECRET);
      }
      if (typeof key.export !== "function") {
        throw typeError(MSG_INVALID_SECRET);
      }
    }
    function fromBase64(base64) {
      return base64.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    function toBase64(base64url) {
      base64url = base64url.toString();
      var padding = 4 - base64url.length % 4;
      if (padding !== 4) {
        for (var i = 0; i < padding; ++i) {
          base64url += "=";
        }
      }
      return base64url.replace(/\-/g, "+").replace(/_/g, "/");
    }
    function typeError(template) {
      var args = [].slice.call(arguments, 1);
      var errMsg = util.format.bind(util, template).apply(null, args);
      return new TypeError(errMsg);
    }
    function bufferOrString(obj) {
      return Buffer2.isBuffer(obj) || typeof obj === "string";
    }
    function normalizeInput(thing) {
      if (!bufferOrString(thing))
        thing = JSON.stringify(thing);
      return thing;
    }
    function createHmacSigner(bits) {
      return function sign(thing, secret) {
        checkIsSecretKey(secret);
        thing = normalizeInput(thing);
        var hmac = crypto.createHmac("sha" + bits, secret);
        var sig = (hmac.update(thing), hmac.digest("base64"));
        return fromBase64(sig);
      };
    }
    function createHmacVerifier(bits) {
      return function verify(thing, signature, secret) {
        var computedSig = createHmacSigner(bits)(thing, secret);
        return bufferEqual(Buffer2.from(signature), Buffer2.from(computedSig));
      };
    }
    function createKeySigner(bits) {
      return function sign(thing, privateKey) {
        checkIsPrivateKey(privateKey);
        thing = normalizeInput(thing);
        var signer = crypto.createSign("RSA-SHA" + bits);
        var sig = (signer.update(thing), signer.sign(privateKey, "base64"));
        return fromBase64(sig);
      };
    }
    function createKeyVerifier(bits) {
      return function verify(thing, signature, publicKey) {
        checkIsPublicKey(publicKey);
        thing = normalizeInput(thing);
        signature = toBase64(signature);
        var verifier = crypto.createVerify("RSA-SHA" + bits);
        verifier.update(thing);
        return verifier.verify(publicKey, signature, "base64");
      };
    }
    function createPSSKeySigner(bits) {
      return function sign(thing, privateKey) {
        checkIsPrivateKey(privateKey);
        thing = normalizeInput(thing);
        var signer = crypto.createSign("RSA-SHA" + bits);
        var sig = (signer.update(thing), signer.sign({
          key: privateKey,
          padding: crypto.constants.RSA_PKCS1_PSS_PADDING,
          saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST
        }, "base64"));
        return fromBase64(sig);
      };
    }
    function createPSSKeyVerifier(bits) {
      return function verify(thing, signature, publicKey) {
        checkIsPublicKey(publicKey);
        thing = normalizeInput(thing);
        signature = toBase64(signature);
        var verifier = crypto.createVerify("RSA-SHA" + bits);
        verifier.update(thing);
        return verifier.verify({
          key: publicKey,
          padding: crypto.constants.RSA_PKCS1_PSS_PADDING,
          saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST
        }, signature, "base64");
      };
    }
    function createECDSASigner(bits) {
      var inner = createKeySigner(bits);
      return function sign() {
        var signature = inner.apply(null, arguments);
        signature = formatEcdsa.derToJose(signature, "ES" + bits);
        return signature;
      };
    }
    function createECDSAVerifer(bits) {
      var inner = createKeyVerifier(bits);
      return function verify(thing, signature, publicKey) {
        signature = formatEcdsa.joseToDer(signature, "ES" + bits).toString("base64");
        var result = inner(thing, signature, publicKey);
        return result;
      };
    }
    function createNoneSigner() {
      return function sign() {
        return "";
      };
    }
    function createNoneVerifier() {
      return function verify(thing, signature) {
        return signature === "";
      };
    }
    module2.exports = function jwa(algorithm) {
      var signerFactories = {
        hs: createHmacSigner,
        rs: createKeySigner,
        ps: createPSSKeySigner,
        es: createECDSASigner,
        none: createNoneSigner
      };
      var verifierFactories = {
        hs: createHmacVerifier,
        rs: createKeyVerifier,
        ps: createPSSKeyVerifier,
        es: createECDSAVerifer,
        none: createNoneVerifier
      };
      var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);
      if (!match)
        throw typeError(MSG_INVALID_ALGORITHM, algorithm);
      var algo = (match[1] || match[3]).toLowerCase();
      var bits = match[2];
      return {
        sign: signerFactories[algo](bits),
        verify: verifierFactories[algo](bits)
      };
    };
  }
});

// node_modules/jws/lib/tostring.js
var require_tostring = __commonJS({
  "node_modules/jws/lib/tostring.js"(exports2, module2) {
    var Buffer2 = require("buffer").Buffer;
    module2.exports = function toString(obj) {
      if (typeof obj === "string")
        return obj;
      if (typeof obj === "number" || Buffer2.isBuffer(obj))
        return obj.toString();
      return JSON.stringify(obj);
    };
  }
});

// node_modules/jws/lib/sign-stream.js
var require_sign_stream = __commonJS({
  "node_modules/jws/lib/sign-stream.js"(exports2, module2) {
    var Buffer2 = require_safe_buffer().Buffer;
    var DataStream = require_data_stream();
    var jwa = require_jwa();
    var Stream = require("stream");
    var toString = require_tostring();
    var util = require("util");
    function base64url(string, encoding) {
      return Buffer2.from(string, encoding).toString("base64").replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    function jwsSecuredInput(header, payload, encoding) {
      encoding = encoding || "utf8";
      var encodedHeader = base64url(toString(header), "binary");
      var encodedPayload = base64url(toString(payload), encoding);
      return util.format("%s.%s", encodedHeader, encodedPayload);
    }
    function jwsSign(opts) {
      var header = opts.header;
      var payload = opts.payload;
      var secretOrKey = opts.secret || opts.privateKey;
      var encoding = opts.encoding;
      var algo = jwa(header.alg);
      var securedInput = jwsSecuredInput(header, payload, encoding);
      var signature = algo.sign(securedInput, secretOrKey);
      return util.format("%s.%s", securedInput, signature);
    }
    function SignStream(opts) {
      var secret = opts.secret || opts.privateKey || opts.key;
      var secretStream = new DataStream(secret);
      this.readable = true;
      this.header = opts.header;
      this.encoding = opts.encoding;
      this.secret = this.privateKey = this.key = secretStream;
      this.payload = new DataStream(opts.payload);
      this.secret.once("close", function() {
        if (!this.payload.writable && this.readable)
          this.sign();
      }.bind(this));
      this.payload.once("close", function() {
        if (!this.secret.writable && this.readable)
          this.sign();
      }.bind(this));
    }
    util.inherits(SignStream, Stream);
    SignStream.prototype.sign = function sign() {
      try {
        var signature = jwsSign({
          header: this.header,
          payload: this.payload.buffer,
          secret: this.secret.buffer,
          encoding: this.encoding
        });
        this.emit("done", signature);
        this.emit("data", signature);
        this.emit("end");
        this.readable = false;
        return signature;
      } catch (e) {
        this.readable = false;
        this.emit("error", e);
        this.emit("close");
      }
    };
    SignStream.sign = jwsSign;
    module2.exports = SignStream;
  }
});

// node_modules/jws/lib/verify-stream.js
var require_verify_stream = __commonJS({
  "node_modules/jws/lib/verify-stream.js"(exports2, module2) {
    var Buffer2 = require_safe_buffer().Buffer;
    var DataStream = require_data_stream();
    var jwa = require_jwa();
    var Stream = require("stream");
    var toString = require_tostring();
    var util = require("util");
    var JWS_REGEX = /^[a-zA-Z0-9\-_]+?\.[a-zA-Z0-9\-_]+?\.([a-zA-Z0-9\-_]+)?$/;
    function isObject(thing) {
      return Object.prototype.toString.call(thing) === "[object Object]";
    }
    function safeJsonParse(thing) {
      if (isObject(thing))
        return thing;
      try {
        return JSON.parse(thing);
      } catch (e) {
        return void 0;
      }
    }
    function headerFromJWS(jwsSig) {
      var encodedHeader = jwsSig.split(".", 1)[0];
      return safeJsonParse(Buffer2.from(encodedHeader, "base64").toString("binary"));
    }
    function securedInputFromJWS(jwsSig) {
      return jwsSig.split(".", 2).join(".");
    }
    function signatureFromJWS(jwsSig) {
      return jwsSig.split(".")[2];
    }
    function payloadFromJWS(jwsSig, encoding) {
      encoding = encoding || "utf8";
      var payload = jwsSig.split(".")[1];
      return Buffer2.from(payload, "base64").toString(encoding);
    }
    function isValidJws(string) {
      return JWS_REGEX.test(string) && !!headerFromJWS(string);
    }
    function jwsVerify(jwsSig, algorithm, secretOrKey) {
      if (!algorithm) {
        var err = new Error("Missing algorithm parameter for jws.verify");
        err.code = "MISSING_ALGORITHM";
        throw err;
      }
      jwsSig = toString(jwsSig);
      var signature = signatureFromJWS(jwsSig);
      var securedInput = securedInputFromJWS(jwsSig);
      var algo = jwa(algorithm);
      return algo.verify(securedInput, signature, secretOrKey);
    }
    function jwsDecode(jwsSig, opts) {
      opts = opts || {};
      jwsSig = toString(jwsSig);
      if (!isValidJws(jwsSig))
        return null;
      var header = headerFromJWS(jwsSig);
      if (!header)
        return null;
      var payload = payloadFromJWS(jwsSig);
      if (header.typ === "JWT" || opts.json)
        payload = JSON.parse(payload, opts.encoding);
      return {
        header,
        payload,
        signature: signatureFromJWS(jwsSig)
      };
    }
    function VerifyStream(opts) {
      opts = opts || {};
      var secretOrKey = opts.secret || opts.publicKey || opts.key;
      var secretStream = new DataStream(secretOrKey);
      this.readable = true;
      this.algorithm = opts.algorithm;
      this.encoding = opts.encoding;
      this.secret = this.publicKey = this.key = secretStream;
      this.signature = new DataStream(opts.signature);
      this.secret.once("close", function() {
        if (!this.signature.writable && this.readable)
          this.verify();
      }.bind(this));
      this.signature.once("close", function() {
        if (!this.secret.writable && this.readable)
          this.verify();
      }.bind(this));
    }
    util.inherits(VerifyStream, Stream);
    VerifyStream.prototype.verify = function verify() {
      try {
        var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);
        var obj = jwsDecode(this.signature.buffer, this.encoding);
        this.emit("done", valid, obj);
        this.emit("data", valid);
        this.emit("end");
        this.readable = false;
        return valid;
      } catch (e) {
        this.readable = false;
        this.emit("error", e);
        this.emit("close");
      }
    };
    VerifyStream.decode = jwsDecode;
    VerifyStream.isValid = isValidJws;
    VerifyStream.verify = jwsVerify;
    module2.exports = VerifyStream;
  }
});

// node_modules/jws/index.js
var require_jws = __commonJS({
  "node_modules/jws/index.js"(exports2) {
    var SignStream = require_sign_stream();
    var VerifyStream = require_verify_stream();
    var ALGORITHMS = [
      "HS256",
      "HS384",
      "HS512",
      "RS256",
      "RS384",
      "RS512",
      "PS256",
      "PS384",
      "PS512",
      "ES256",
      "ES384",
      "ES512"
    ];
    exports2.ALGORITHMS = ALGORITHMS;
    exports2.sign = SignStream.sign;
    exports2.verify = VerifyStream.verify;
    exports2.decode = VerifyStream.decode;
    exports2.isValid = VerifyStream.isValid;
    exports2.createSign = function createSign(opts) {
      return new SignStream(opts);
    };
    exports2.createVerify = function createVerify(opts) {
      return new VerifyStream(opts);
    };
  }
});

// node_modules/jsonwebtoken/decode.js
var require_decode = __commonJS({
  "node_modules/jsonwebtoken/decode.js"(exports2, module2) {
    var jws = require_jws();
    module2.exports = function(jwt, options) {
      options = options || {};
      var decoded = jws.decode(jwt, options);
      if (!decoded) {
        return null;
      }
      var payload = decoded.payload;
      if (typeof payload === "string") {
        try {
          var obj = JSON.parse(payload);
          if (obj !== null && typeof obj === "object") {
            payload = obj;
          }
        } catch (e) {
        }
      }
      if (options.complete === true) {
        return {
          header: decoded.header,
          payload,
          signature: decoded.signature
        };
      }
      return payload;
    };
  }
});

// node_modules/jsonwebtoken/lib/JsonWebTokenError.js
var require_JsonWebTokenError = __commonJS({
  "node_modules/jsonwebtoken/lib/JsonWebTokenError.js"(exports2, module2) {
    var JsonWebTokenError = function(message, error) {
      Error.call(this, message);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      }
      this.name = "JsonWebTokenError";
      this.message = message;
      if (error) this.inner = error;
    };
    JsonWebTokenError.prototype = Object.create(Error.prototype);
    JsonWebTokenError.prototype.constructor = JsonWebTokenError;
    module2.exports = JsonWebTokenError;
  }
});

// node_modules/jsonwebtoken/lib/NotBeforeError.js
var require_NotBeforeError = __commonJS({
  "node_modules/jsonwebtoken/lib/NotBeforeError.js"(exports2, module2) {
    var JsonWebTokenError = require_JsonWebTokenError();
    var NotBeforeError = function(message, date) {
      JsonWebTokenError.call(this, message);
      this.name = "NotBeforeError";
      this.date = date;
    };
    NotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);
    NotBeforeError.prototype.constructor = NotBeforeError;
    module2.exports = NotBeforeError;
  }
});

// node_modules/jsonwebtoken/lib/TokenExpiredError.js
var require_TokenExpiredError = __commonJS({
  "node_modules/jsonwebtoken/lib/TokenExpiredError.js"(exports2, module2) {
    var JsonWebTokenError = require_JsonWebTokenError();
    var TokenExpiredError = function(message, expiredAt) {
      JsonWebTokenError.call(this, message);
      this.name = "TokenExpiredError";
      this.expiredAt = expiredAt;
    };
    TokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);
    TokenExpiredError.prototype.constructor = TokenExpiredError;
    module2.exports = TokenExpiredError;
  }
});

// node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/ms/index.js"(exports2, module2) {
    var s = 1e3;
    var m = s * 60;
    var h = m * 60;
    var d = h * 24;
    var w = d * 7;
    var y = d * 365.25;
    module2.exports = function(val, options) {
      options = options || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse(val);
      } else if (type === "number" && isFinite(val)) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
      );
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
        str
      );
      if (!match) {
        return;
      }
      var n = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n * y;
        case "weeks":
        case "week":
        case "w":
          return n * w;
        case "days":
        case "day":
        case "d":
          return n * d;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n * h;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n * s;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n;
        default:
          return void 0;
      }
    }
    function fmtShort(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return Math.round(ms / d) + "d";
      }
      if (msAbs >= h) {
        return Math.round(ms / h) + "h";
      }
      if (msAbs >= m) {
        return Math.round(ms / m) + "m";
      }
      if (msAbs >= s) {
        return Math.round(ms / s) + "s";
      }
      return ms + "ms";
    }
    function fmtLong(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return plural(ms, msAbs, d, "day");
      }
      if (msAbs >= h) {
        return plural(ms, msAbs, h, "hour");
      }
      if (msAbs >= m) {
        return plural(ms, msAbs, m, "minute");
      }
      if (msAbs >= s) {
        return plural(ms, msAbs, s, "second");
      }
      return ms + " ms";
    }
    function plural(ms, msAbs, n, name) {
      var isPlural = msAbs >= n * 1.5;
      return Math.round(ms / n) + " " + name + (isPlural ? "s" : "");
    }
  }
});

// node_modules/jsonwebtoken/lib/timespan.js
var require_timespan = __commonJS({
  "node_modules/jsonwebtoken/lib/timespan.js"(exports2, module2) {
    var ms = require_ms();
    module2.exports = function(time, iat) {
      var timestamp = iat || Math.floor(Date.now() / 1e3);
      if (typeof time === "string") {
        var milliseconds = ms(time);
        if (typeof milliseconds === "undefined") {
          return;
        }
        return Math.floor(timestamp + milliseconds / 1e3);
      } else if (typeof time === "number") {
        return timestamp + time;
      } else {
        return;
      }
    };
  }
});

// node_modules/jsonwebtoken/node_modules/semver/internal/constants.js
var require_constants = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/internal/constants.js"(exports2, module2) {
    var SEMVER_SPEC_VERSION = "2.0.0";
    var MAX_LENGTH = 256;
    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */
    9007199254740991;
    var MAX_SAFE_COMPONENT_LENGTH = 16;
    var MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;
    var RELEASE_TYPES = [
      "major",
      "premajor",
      "minor",
      "preminor",
      "patch",
      "prepatch",
      "prerelease"
    ];
    module2.exports = {
      MAX_LENGTH,
      MAX_SAFE_COMPONENT_LENGTH,
      MAX_SAFE_BUILD_LENGTH,
      MAX_SAFE_INTEGER,
      RELEASE_TYPES,
      SEMVER_SPEC_VERSION,
      FLAG_INCLUDE_PRERELEASE: 1,
      FLAG_LOOSE: 2
    };
  }
});

// node_modules/jsonwebtoken/node_modules/semver/internal/debug.js
var require_debug = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/internal/debug.js"(exports2, module2) {
    var debug = typeof process === "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? (...args) => console.error("SEMVER", ...args) : () => {
    };
    module2.exports = debug;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/internal/re.js
var require_re = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/internal/re.js"(exports2, module2) {
    var {
      MAX_SAFE_COMPONENT_LENGTH,
      MAX_SAFE_BUILD_LENGTH,
      MAX_LENGTH
    } = require_constants();
    var debug = require_debug();
    exports2 = module2.exports = {};
    var re = exports2.re = [];
    var safeRe = exports2.safeRe = [];
    var src = exports2.src = [];
    var t = exports2.t = {};
    var R = 0;
    var LETTERDASHNUMBER = "[a-zA-Z0-9-]";
    var safeRegexReplacements = [
      ["\\s", 1],
      ["\\d", MAX_LENGTH],
      [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]
    ];
    var makeSafeRegex = (value) => {
      for (const [token, max] of safeRegexReplacements) {
        value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);
      }
      return value;
    };
    var createToken = (name, value, isGlobal) => {
      const safe = makeSafeRegex(value);
      const index = R++;
      debug(name, index, value);
      t[name] = index;
      src[index] = value;
      re[index] = new RegExp(value, isGlobal ? "g" : void 0);
      safeRe[index] = new RegExp(safe, isGlobal ? "g" : void 0);
    };
    createToken("NUMERICIDENTIFIER", "0|[1-9]\\d*");
    createToken("NUMERICIDENTIFIERLOOSE", "\\d+");
    createToken("NONNUMERICIDENTIFIER", `\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);
    createToken("MAINVERSION", `(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})`);
    createToken("MAINVERSIONLOOSE", `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})`);
    createToken("PRERELEASEIDENTIFIER", `(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`);
    createToken("PRERELEASEIDENTIFIERLOOSE", `(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`);
    createToken("PRERELEASE", `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`);
    createToken("PRERELEASELOOSE", `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);
    createToken("BUILDIDENTIFIER", `${LETTERDASHNUMBER}+`);
    createToken("BUILD", `(?:\\+(${src[t.BUILDIDENTIFIER]}(?:\\.${src[t.BUILDIDENTIFIER]})*))`);
    createToken("FULLPLAIN", `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);
    createToken("FULL", `^${src[t.FULLPLAIN]}$`);
    createToken("LOOSEPLAIN", `[v=\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);
    createToken("LOOSE", `^${src[t.LOOSEPLAIN]}$`);
    createToken("GTLT", "((?:<|>)?=?)");
    createToken("XRANGEIDENTIFIERLOOSE", `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);
    createToken("XRANGEIDENTIFIER", `${src[t.NUMERICIDENTIFIER]}|x|X|\\*`);
    createToken("XRANGEPLAIN", `[v=\\s]*(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?)?)?`);
    createToken("XRANGEPLAINLOOSE", `[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?)?)?`);
    createToken("XRANGE", `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`);
    createToken("XRANGELOOSE", `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`);
    createToken("COERCEPLAIN", `${"(^|[^\\d])(\\d{1,"}${MAX_SAFE_COMPONENT_LENGTH}})(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`);
    createToken("COERCE", `${src[t.COERCEPLAIN]}(?:$|[^\\d])`);
    createToken("COERCEFULL", src[t.COERCEPLAIN] + `(?:${src[t.PRERELEASE]})?(?:${src[t.BUILD]})?(?:$|[^\\d])`);
    createToken("COERCERTL", src[t.COERCE], true);
    createToken("COERCERTLFULL", src[t.COERCEFULL], true);
    createToken("LONETILDE", "(?:~>?)");
    createToken("TILDETRIM", `(\\s*)${src[t.LONETILDE]}\\s+`, true);
    exports2.tildeTrimReplace = "$1~";
    createToken("TILDE", `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);
    createToken("TILDELOOSE", `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);
    createToken("LONECARET", "(?:\\^)");
    createToken("CARETTRIM", `(\\s*)${src[t.LONECARET]}\\s+`, true);
    exports2.caretTrimReplace = "$1^";
    createToken("CARET", `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);
    createToken("CARETLOOSE", `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);
    createToken("COMPARATORLOOSE", `^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`);
    createToken("COMPARATOR", `^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`);
    createToken("COMPARATORTRIM", `(\\s*)${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);
    exports2.comparatorTrimReplace = "$1$2$3";
    createToken("HYPHENRANGE", `^\\s*(${src[t.XRANGEPLAIN]})\\s+-\\s+(${src[t.XRANGEPLAIN]})\\s*$`);
    createToken("HYPHENRANGELOOSE", `^\\s*(${src[t.XRANGEPLAINLOOSE]})\\s+-\\s+(${src[t.XRANGEPLAINLOOSE]})\\s*$`);
    createToken("STAR", "(<|>)?=?\\s*\\*");
    createToken("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$");
    createToken("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$");
  }
});

// node_modules/jsonwebtoken/node_modules/semver/internal/parse-options.js
var require_parse_options = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/internal/parse-options.js"(exports2, module2) {
    var looseOption = Object.freeze({ loose: true });
    var emptyOpts = Object.freeze({});
    var parseOptions = (options) => {
      if (!options) {
        return emptyOpts;
      }
      if (typeof options !== "object") {
        return looseOption;
      }
      return options;
    };
    module2.exports = parseOptions;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/internal/identifiers.js
var require_identifiers = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/internal/identifiers.js"(exports2, module2) {
    var numeric = /^[0-9]+$/;
    var compareIdentifiers = (a, b) => {
      const anum = numeric.test(a);
      const bnum = numeric.test(b);
      if (anum && bnum) {
        a = +a;
        b = +b;
      }
      return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
    };
    var rcompareIdentifiers = (a, b) => compareIdentifiers(b, a);
    module2.exports = {
      compareIdentifiers,
      rcompareIdentifiers
    };
  }
});

// node_modules/jsonwebtoken/node_modules/semver/classes/semver.js
var require_semver = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/classes/semver.js"(exports2, module2) {
    var debug = require_debug();
    var { MAX_LENGTH, MAX_SAFE_INTEGER } = require_constants();
    var { safeRe: re, t } = require_re();
    var parseOptions = require_parse_options();
    var { compareIdentifiers } = require_identifiers();
    var SemVer = class _SemVer {
      constructor(version, options) {
        options = parseOptions(options);
        if (version instanceof _SemVer) {
          if (version.loose === !!options.loose && version.includePrerelease === !!options.includePrerelease) {
            return version;
          } else {
            version = version.version;
          }
        } else if (typeof version !== "string") {
          throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version}".`);
        }
        if (version.length > MAX_LENGTH) {
          throw new TypeError(
            `version is longer than ${MAX_LENGTH} characters`
          );
        }
        debug("SemVer", version, options);
        this.options = options;
        this.loose = !!options.loose;
        this.includePrerelease = !!options.includePrerelease;
        const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);
        if (!m) {
          throw new TypeError(`Invalid Version: ${version}`);
        }
        this.raw = version;
        this.major = +m[1];
        this.minor = +m[2];
        this.patch = +m[3];
        if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
          throw new TypeError("Invalid major version");
        }
        if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
          throw new TypeError("Invalid minor version");
        }
        if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
          throw new TypeError("Invalid patch version");
        }
        if (!m[4]) {
          this.prerelease = [];
        } else {
          this.prerelease = m[4].split(".").map((id) => {
            if (/^[0-9]+$/.test(id)) {
              const num = +id;
              if (num >= 0 && num < MAX_SAFE_INTEGER) {
                return num;
              }
            }
            return id;
          });
        }
        this.build = m[5] ? m[5].split(".") : [];
        this.format();
      }
      format() {
        this.version = `${this.major}.${this.minor}.${this.patch}`;
        if (this.prerelease.length) {
          this.version += `-${this.prerelease.join(".")}`;
        }
        return this.version;
      }
      toString() {
        return this.version;
      }
      compare(other) {
        debug("SemVer.compare", this.version, this.options, other);
        if (!(other instanceof _SemVer)) {
          if (typeof other === "string" && other === this.version) {
            return 0;
          }
          other = new _SemVer(other, this.options);
        }
        if (other.version === this.version) {
          return 0;
        }
        return this.compareMain(other) || this.comparePre(other);
      }
      compareMain(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
      }
      comparePre(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        if (this.prerelease.length && !other.prerelease.length) {
          return -1;
        } else if (!this.prerelease.length && other.prerelease.length) {
          return 1;
        } else if (!this.prerelease.length && !other.prerelease.length) {
          return 0;
        }
        let i = 0;
        do {
          const a = this.prerelease[i];
          const b = other.prerelease[i];
          debug("prerelease compare", i, a, b);
          if (a === void 0 && b === void 0) {
            return 0;
          } else if (b === void 0) {
            return 1;
          } else if (a === void 0) {
            return -1;
          } else if (a === b) {
            continue;
          } else {
            return compareIdentifiers(a, b);
          }
        } while (++i);
      }
      compareBuild(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        let i = 0;
        do {
          const a = this.build[i];
          const b = other.build[i];
          debug("build compare", i, a, b);
          if (a === void 0 && b === void 0) {
            return 0;
          } else if (b === void 0) {
            return 1;
          } else if (a === void 0) {
            return -1;
          } else if (a === b) {
            continue;
          } else {
            return compareIdentifiers(a, b);
          }
        } while (++i);
      }
      // preminor will bump the version up to the next minor release, and immediately
      // down to pre-release. premajor and prepatch work the same way.
      inc(release, identifier, identifierBase) {
        switch (release) {
          case "premajor":
            this.prerelease.length = 0;
            this.patch = 0;
            this.minor = 0;
            this.major++;
            this.inc("pre", identifier, identifierBase);
            break;
          case "preminor":
            this.prerelease.length = 0;
            this.patch = 0;
            this.minor++;
            this.inc("pre", identifier, identifierBase);
            break;
          case "prepatch":
            this.prerelease.length = 0;
            this.inc("patch", identifier, identifierBase);
            this.inc("pre", identifier, identifierBase);
            break;
          // If the input is a non-prerelease version, this acts the same as
          // prepatch.
          case "prerelease":
            if (this.prerelease.length === 0) {
              this.inc("patch", identifier, identifierBase);
            }
            this.inc("pre", identifier, identifierBase);
            break;
          case "major":
            if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
              this.major++;
            }
            this.minor = 0;
            this.patch = 0;
            this.prerelease = [];
            break;
          case "minor":
            if (this.patch !== 0 || this.prerelease.length === 0) {
              this.minor++;
            }
            this.patch = 0;
            this.prerelease = [];
            break;
          case "patch":
            if (this.prerelease.length === 0) {
              this.patch++;
            }
            this.prerelease = [];
            break;
          // This probably shouldn't be used publicly.
          // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.
          case "pre": {
            const base = Number(identifierBase) ? 1 : 0;
            if (!identifier && identifierBase === false) {
              throw new Error("invalid increment argument: identifier is empty");
            }
            if (this.prerelease.length === 0) {
              this.prerelease = [base];
            } else {
              let i = this.prerelease.length;
              while (--i >= 0) {
                if (typeof this.prerelease[i] === "number") {
                  this.prerelease[i]++;
                  i = -2;
                }
              }
              if (i === -1) {
                if (identifier === this.prerelease.join(".") && identifierBase === false) {
                  throw new Error("invalid increment argument: identifier already exists");
                }
                this.prerelease.push(base);
              }
            }
            if (identifier) {
              let prerelease = [identifier, base];
              if (identifierBase === false) {
                prerelease = [identifier];
              }
              if (compareIdentifiers(this.prerelease[0], identifier) === 0) {
                if (isNaN(this.prerelease[1])) {
                  this.prerelease = prerelease;
                }
              } else {
                this.prerelease = prerelease;
              }
            }
            break;
          }
          default:
            throw new Error(`invalid increment argument: ${release}`);
        }
        this.raw = this.format();
        if (this.build.length) {
          this.raw += `+${this.build.join(".")}`;
        }
        return this;
      }
    };
    module2.exports = SemVer;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/parse.js
var require_parse = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/parse.js"(exports2, module2) {
    var SemVer = require_semver();
    var parse = (version, options, throwErrors = false) => {
      if (version instanceof SemVer) {
        return version;
      }
      try {
        return new SemVer(version, options);
      } catch (er) {
        if (!throwErrors) {
          return null;
        }
        throw er;
      }
    };
    module2.exports = parse;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/valid.js
var require_valid = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/valid.js"(exports2, module2) {
    var parse = require_parse();
    var valid = (version, options) => {
      const v = parse(version, options);
      return v ? v.version : null;
    };
    module2.exports = valid;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/clean.js
var require_clean = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/clean.js"(exports2, module2) {
    var parse = require_parse();
    var clean = (version, options) => {
      const s = parse(version.trim().replace(/^[=v]+/, ""), options);
      return s ? s.version : null;
    };
    module2.exports = clean;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/inc.js
var require_inc = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/inc.js"(exports2, module2) {
    var SemVer = require_semver();
    var inc = (version, release, options, identifier, identifierBase) => {
      if (typeof options === "string") {
        identifierBase = identifier;
        identifier = options;
        options = void 0;
      }
      try {
        return new SemVer(
          version instanceof SemVer ? version.version : version,
          options
        ).inc(release, identifier, identifierBase).version;
      } catch (er) {
        return null;
      }
    };
    module2.exports = inc;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/diff.js
var require_diff = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/diff.js"(exports2, module2) {
    var parse = require_parse();
    var diff = (version1, version2) => {
      const v1 = parse(version1, null, true);
      const v2 = parse(version2, null, true);
      const comparison = v1.compare(v2);
      if (comparison === 0) {
        return null;
      }
      const v1Higher = comparison > 0;
      const highVersion = v1Higher ? v1 : v2;
      const lowVersion = v1Higher ? v2 : v1;
      const highHasPre = !!highVersion.prerelease.length;
      const lowHasPre = !!lowVersion.prerelease.length;
      if (lowHasPre && !highHasPre) {
        if (!lowVersion.patch && !lowVersion.minor) {
          return "major";
        }
        if (highVersion.patch) {
          return "patch";
        }
        if (highVersion.minor) {
          return "minor";
        }
        return "major";
      }
      const prefix = highHasPre ? "pre" : "";
      if (v1.major !== v2.major) {
        return prefix + "major";
      }
      if (v1.minor !== v2.minor) {
        return prefix + "minor";
      }
      if (v1.patch !== v2.patch) {
        return prefix + "patch";
      }
      return "prerelease";
    };
    module2.exports = diff;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/major.js
var require_major = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/major.js"(exports2, module2) {
    var SemVer = require_semver();
    var major = (a, loose) => new SemVer(a, loose).major;
    module2.exports = major;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/minor.js
var require_minor = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/minor.js"(exports2, module2) {
    var SemVer = require_semver();
    var minor = (a, loose) => new SemVer(a, loose).minor;
    module2.exports = minor;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/patch.js
var require_patch = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/patch.js"(exports2, module2) {
    var SemVer = require_semver();
    var patch = (a, loose) => new SemVer(a, loose).patch;
    module2.exports = patch;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/prerelease.js
var require_prerelease = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/prerelease.js"(exports2, module2) {
    var parse = require_parse();
    var prerelease = (version, options) => {
      const parsed = parse(version, options);
      return parsed && parsed.prerelease.length ? parsed.prerelease : null;
    };
    module2.exports = prerelease;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/compare.js
var require_compare = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/compare.js"(exports2, module2) {
    var SemVer = require_semver();
    var compare = (a, b, loose) => new SemVer(a, loose).compare(new SemVer(b, loose));
    module2.exports = compare;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/rcompare.js
var require_rcompare = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/rcompare.js"(exports2, module2) {
    var compare = require_compare();
    var rcompare = (a, b, loose) => compare(b, a, loose);
    module2.exports = rcompare;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/compare-loose.js
var require_compare_loose = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/compare-loose.js"(exports2, module2) {
    var compare = require_compare();
    var compareLoose = (a, b) => compare(a, b, true);
    module2.exports = compareLoose;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/compare-build.js
var require_compare_build = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/compare-build.js"(exports2, module2) {
    var SemVer = require_semver();
    var compareBuild = (a, b, loose) => {
      const versionA = new SemVer(a, loose);
      const versionB = new SemVer(b, loose);
      return versionA.compare(versionB) || versionA.compareBuild(versionB);
    };
    module2.exports = compareBuild;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/sort.js
var require_sort = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/sort.js"(exports2, module2) {
    var compareBuild = require_compare_build();
    var sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose));
    module2.exports = sort;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/rsort.js
var require_rsort = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/rsort.js"(exports2, module2) {
    var compareBuild = require_compare_build();
    var rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose));
    module2.exports = rsort;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/gt.js
var require_gt = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/gt.js"(exports2, module2) {
    var compare = require_compare();
    var gt = (a, b, loose) => compare(a, b, loose) > 0;
    module2.exports = gt;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/lt.js
var require_lt = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/lt.js"(exports2, module2) {
    var compare = require_compare();
    var lt = (a, b, loose) => compare(a, b, loose) < 0;
    module2.exports = lt;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/eq.js
var require_eq = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/eq.js"(exports2, module2) {
    var compare = require_compare();
    var eq = (a, b, loose) => compare(a, b, loose) === 0;
    module2.exports = eq;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/neq.js
var require_neq = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/neq.js"(exports2, module2) {
    var compare = require_compare();
    var neq = (a, b, loose) => compare(a, b, loose) !== 0;
    module2.exports = neq;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/gte.js
var require_gte = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/gte.js"(exports2, module2) {
    var compare = require_compare();
    var gte = (a, b, loose) => compare(a, b, loose) >= 0;
    module2.exports = gte;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/lte.js
var require_lte = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/lte.js"(exports2, module2) {
    var compare = require_compare();
    var lte = (a, b, loose) => compare(a, b, loose) <= 0;
    module2.exports = lte;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/cmp.js
var require_cmp = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/cmp.js"(exports2, module2) {
    var eq = require_eq();
    var neq = require_neq();
    var gt = require_gt();
    var gte = require_gte();
    var lt = require_lt();
    var lte = require_lte();
    var cmp = (a, op, b, loose) => {
      switch (op) {
        case "===":
          if (typeof a === "object") {
            a = a.version;
          }
          if (typeof b === "object") {
            b = b.version;
          }
          return a === b;
        case "!==":
          if (typeof a === "object") {
            a = a.version;
          }
          if (typeof b === "object") {
            b = b.version;
          }
          return a !== b;
        case "":
        case "=":
        case "==":
          return eq(a, b, loose);
        case "!=":
          return neq(a, b, loose);
        case ">":
          return gt(a, b, loose);
        case ">=":
          return gte(a, b, loose);
        case "<":
          return lt(a, b, loose);
        case "<=":
          return lte(a, b, loose);
        default:
          throw new TypeError(`Invalid operator: ${op}`);
      }
    };
    module2.exports = cmp;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/coerce.js
var require_coerce = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/coerce.js"(exports2, module2) {
    var SemVer = require_semver();
    var parse = require_parse();
    var { safeRe: re, t } = require_re();
    var coerce = (version, options) => {
      if (version instanceof SemVer) {
        return version;
      }
      if (typeof version === "number") {
        version = String(version);
      }
      if (typeof version !== "string") {
        return null;
      }
      options = options || {};
      let match = null;
      if (!options.rtl) {
        match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE]);
      } else {
        const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL];
        let next;
        while ((next = coerceRtlRegex.exec(version)) && (!match || match.index + match[0].length !== version.length)) {
          if (!match || next.index + next[0].length !== match.index + match[0].length) {
            match = next;
          }
          coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length;
        }
        coerceRtlRegex.lastIndex = -1;
      }
      if (match === null) {
        return null;
      }
      const major = match[2];
      const minor = match[3] || "0";
      const patch = match[4] || "0";
      const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : "";
      const build = options.includePrerelease && match[6] ? `+${match[6]}` : "";
      return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options);
    };
    module2.exports = coerce;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/internal/lrucache.js
var require_lrucache = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/internal/lrucache.js"(exports2, module2) {
    var LRUCache = class {
      constructor() {
        this.max = 1e3;
        this.map = /* @__PURE__ */ new Map();
      }
      get(key) {
        const value = this.map.get(key);
        if (value === void 0) {
          return void 0;
        } else {
          this.map.delete(key);
          this.map.set(key, value);
          return value;
        }
      }
      delete(key) {
        return this.map.delete(key);
      }
      set(key, value) {
        const deleted = this.delete(key);
        if (!deleted && value !== void 0) {
          if (this.map.size >= this.max) {
            const firstKey = this.map.keys().next().value;
            this.delete(firstKey);
          }
          this.map.set(key, value);
        }
        return this;
      }
    };
    module2.exports = LRUCache;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/classes/range.js
var require_range = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/classes/range.js"(exports2, module2) {
    var SPACE_CHARACTERS = /\s+/g;
    var Range = class _Range {
      constructor(range, options) {
        options = parseOptions(options);
        if (range instanceof _Range) {
          if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {
            return range;
          } else {
            return new _Range(range.raw, options);
          }
        }
        if (range instanceof Comparator) {
          this.raw = range.value;
          this.set = [[range]];
          this.formatted = void 0;
          return this;
        }
        this.options = options;
        this.loose = !!options.loose;
        this.includePrerelease = !!options.includePrerelease;
        this.raw = range.trim().replace(SPACE_CHARACTERS, " ");
        this.set = this.raw.split("||").map((r) => this.parseRange(r.trim())).filter((c) => c.length);
        if (!this.set.length) {
          throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
        }
        if (this.set.length > 1) {
          const first = this.set[0];
          this.set = this.set.filter((c) => !isNullSet(c[0]));
          if (this.set.length === 0) {
            this.set = [first];
          } else if (this.set.length > 1) {
            for (const c of this.set) {
              if (c.length === 1 && isAny(c[0])) {
                this.set = [c];
                break;
              }
            }
          }
        }
        this.formatted = void 0;
      }
      get range() {
        if (this.formatted === void 0) {
          this.formatted = "";
          for (let i = 0; i < this.set.length; i++) {
            if (i > 0) {
              this.formatted += "||";
            }
            const comps = this.set[i];
            for (let k = 0; k < comps.length; k++) {
              if (k > 0) {
                this.formatted += " ";
              }
              this.formatted += comps[k].toString().trim();
            }
          }
        }
        return this.formatted;
      }
      format() {
        return this.range;
      }
      toString() {
        return this.range;
      }
      parseRange(range) {
        const memoOpts = (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) | (this.options.loose && FLAG_LOOSE);
        const memoKey = memoOpts + ":" + range;
        const cached = cache.get(memoKey);
        if (cached) {
          return cached;
        }
        const loose = this.options.loose;
        const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];
        range = range.replace(hr, hyphenReplace(this.options.includePrerelease));
        debug("hyphen replace", range);
        range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);
        debug("comparator trim", range);
        range = range.replace(re[t.TILDETRIM], tildeTrimReplace);
        debug("tilde trim", range);
        range = range.replace(re[t.CARETTRIM], caretTrimReplace);
        debug("caret trim", range);
        let rangeList = range.split(" ").map((comp) => parseComparator(comp, this.options)).join(" ").split(/\s+/).map((comp) => replaceGTE0(comp, this.options));
        if (loose) {
          rangeList = rangeList.filter((comp) => {
            debug("loose invalid filter", comp, this.options);
            return !!comp.match(re[t.COMPARATORLOOSE]);
          });
        }
        debug("range list", rangeList);
        const rangeMap = /* @__PURE__ */ new Map();
        const comparators = rangeList.map((comp) => new Comparator(comp, this.options));
        for (const comp of comparators) {
          if (isNullSet(comp)) {
            return [comp];
          }
          rangeMap.set(comp.value, comp);
        }
        if (rangeMap.size > 1 && rangeMap.has("")) {
          rangeMap.delete("");
        }
        const result = [...rangeMap.values()];
        cache.set(memoKey, result);
        return result;
      }
      intersects(range, options) {
        if (!(range instanceof _Range)) {
          throw new TypeError("a Range is required");
        }
        return this.set.some((thisComparators) => {
          return isSatisfiable(thisComparators, options) && range.set.some((rangeComparators) => {
            return isSatisfiable(rangeComparators, options) && thisComparators.every((thisComparator) => {
              return rangeComparators.every((rangeComparator) => {
                return thisComparator.intersects(rangeComparator, options);
              });
            });
          });
        });
      }
      // if ANY of the sets match ALL of its comparators, then pass
      test(version) {
        if (!version) {
          return false;
        }
        if (typeof version === "string") {
          try {
            version = new SemVer(version, this.options);
          } catch (er) {
            return false;
          }
        }
        for (let i = 0; i < this.set.length; i++) {
          if (testSet(this.set[i], version, this.options)) {
            return true;
          }
        }
        return false;
      }
    };
    module2.exports = Range;
    var LRU = require_lrucache();
    var cache = new LRU();
    var parseOptions = require_parse_options();
    var Comparator = require_comparator();
    var debug = require_debug();
    var SemVer = require_semver();
    var {
      safeRe: re,
      t,
      comparatorTrimReplace,
      tildeTrimReplace,
      caretTrimReplace
    } = require_re();
    var { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require_constants();
    var isNullSet = (c) => c.value === "<0.0.0-0";
    var isAny = (c) => c.value === "";
    var isSatisfiable = (comparators, options) => {
      let result = true;
      const remainingComparators = comparators.slice();
      let testComparator = remainingComparators.pop();
      while (result && remainingComparators.length) {
        result = remainingComparators.every((otherComparator) => {
          return testComparator.intersects(otherComparator, options);
        });
        testComparator = remainingComparators.pop();
      }
      return result;
    };
    var parseComparator = (comp, options) => {
      debug("comp", comp, options);
      comp = replaceCarets(comp, options);
      debug("caret", comp);
      comp = replaceTildes(comp, options);
      debug("tildes", comp);
      comp = replaceXRanges(comp, options);
      debug("xrange", comp);
      comp = replaceStars(comp, options);
      debug("stars", comp);
      return comp;
    };
    var isX = (id) => !id || id.toLowerCase() === "x" || id === "*";
    var replaceTildes = (comp, options) => {
      return comp.trim().split(/\s+/).map((c) => replaceTilde(c, options)).join(" ");
    };
    var replaceTilde = (comp, options) => {
      const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];
      return comp.replace(r, (_, M, m, p, pr) => {
        debug("tilde", comp, _, M, m, p, pr);
        let ret;
        if (isX(M)) {
          ret = "";
        } else if (isX(m)) {
          ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;
        } else if (isX(p)) {
          ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;
        } else if (pr) {
          debug("replaceTilde pr", pr);
          ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;
        } else {
          ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;
        }
        debug("tilde return", ret);
        return ret;
      });
    };
    var replaceCarets = (comp, options) => {
      return comp.trim().split(/\s+/).map((c) => replaceCaret(c, options)).join(" ");
    };
    var replaceCaret = (comp, options) => {
      debug("caret", comp, options);
      const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];
      const z = options.includePrerelease ? "-0" : "";
      return comp.replace(r, (_, M, m, p, pr) => {
        debug("caret", comp, _, M, m, p, pr);
        let ret;
        if (isX(M)) {
          ret = "";
        } else if (isX(m)) {
          ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;
        } else if (isX(p)) {
          if (M === "0") {
            ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;
          } else {
            ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;
          }
        } else if (pr) {
          debug("replaceCaret pr", pr);
          if (M === "0") {
            if (m === "0") {
              ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;
            } else {
              ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;
            }
          } else {
            ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;
          }
        } else {
          debug("no pr");
          if (M === "0") {
            if (m === "0") {
              ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;
            } else {
              ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;
            }
          } else {
            ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;
          }
        }
        debug("caret return", ret);
        return ret;
      });
    };
    var replaceXRanges = (comp, options) => {
      debug("replaceXRanges", comp, options);
      return comp.split(/\s+/).map((c) => replaceXRange(c, options)).join(" ");
    };
    var replaceXRange = (comp, options) => {
      comp = comp.trim();
      const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];
      return comp.replace(r, (ret, gtlt, M, m, p, pr) => {
        debug("xRange", comp, ret, gtlt, M, m, p, pr);
        const xM = isX(M);
        const xm = xM || isX(m);
        const xp = xm || isX(p);
        const anyX = xp;
        if (gtlt === "=" && anyX) {
          gtlt = "";
        }
        pr = options.includePrerelease ? "-0" : "";
        if (xM) {
          if (gtlt === ">" || gtlt === "<") {
            ret = "<0.0.0-0";
          } else {
            ret = "*";
          }
        } else if (gtlt && anyX) {
          if (xm) {
            m = 0;
          }
          p = 0;
          if (gtlt === ">") {
            gtlt = ">=";
            if (xm) {
              M = +M + 1;
              m = 0;
              p = 0;
            } else {
              m = +m + 1;
              p = 0;
            }
          } else if (gtlt === "<=") {
            gtlt = "<";
            if (xm) {
              M = +M + 1;
            } else {
              m = +m + 1;
            }
          }
          if (gtlt === "<") {
            pr = "-0";
          }
          ret = `${gtlt + M}.${m}.${p}${pr}`;
        } else if (xm) {
          ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;
        } else if (xp) {
          ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;
        }
        debug("xRange return", ret);
        return ret;
      });
    };
    var replaceStars = (comp, options) => {
      debug("replaceStars", comp, options);
      return comp.trim().replace(re[t.STAR], "");
    };
    var replaceGTE0 = (comp, options) => {
      debug("replaceGTE0", comp, options);
      return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], "");
    };
    var hyphenReplace = (incPr) => ($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr) => {
      if (isX(fM)) {
        from = "";
      } else if (isX(fm)) {
        from = `>=${fM}.0.0${incPr ? "-0" : ""}`;
      } else if (isX(fp)) {
        from = `>=${fM}.${fm}.0${incPr ? "-0" : ""}`;
      } else if (fpr) {
        from = `>=${from}`;
      } else {
        from = `>=${from}${incPr ? "-0" : ""}`;
      }
      if (isX(tM)) {
        to = "";
      } else if (isX(tm)) {
        to = `<${+tM + 1}.0.0-0`;
      } else if (isX(tp)) {
        to = `<${tM}.${+tm + 1}.0-0`;
      } else if (tpr) {
        to = `<=${tM}.${tm}.${tp}-${tpr}`;
      } else if (incPr) {
        to = `<${tM}.${tm}.${+tp + 1}-0`;
      } else {
        to = `<=${to}`;
      }
      return `${from} ${to}`.trim();
    };
    var testSet = (set, version, options) => {
      for (let i = 0; i < set.length; i++) {
        if (!set[i].test(version)) {
          return false;
        }
      }
      if (version.prerelease.length && !options.includePrerelease) {
        for (let i = 0; i < set.length; i++) {
          debug(set[i].semver);
          if (set[i].semver === Comparator.ANY) {
            continue;
          }
          if (set[i].semver.prerelease.length > 0) {
            const allowed = set[i].semver;
            if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {
              return true;
            }
          }
        }
        return false;
      }
      return true;
    };
  }
});

// node_modules/jsonwebtoken/node_modules/semver/classes/comparator.js
var require_comparator = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/classes/comparator.js"(exports2, module2) {
    var ANY = Symbol("SemVer ANY");
    var Comparator = class _Comparator {
      static get ANY() {
        return ANY;
      }
      constructor(comp, options) {
        options = parseOptions(options);
        if (comp instanceof _Comparator) {
          if (comp.loose === !!options.loose) {
            return comp;
          } else {
            comp = comp.value;
          }
        }
        comp = comp.trim().split(/\s+/).join(" ");
        debug("comparator", comp, options);
        this.options = options;
        this.loose = !!options.loose;
        this.parse(comp);
        if (this.semver === ANY) {
          this.value = "";
        } else {
          this.value = this.operator + this.semver.version;
        }
        debug("comp", this);
      }
      parse(comp) {
        const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];
        const m = comp.match(r);
        if (!m) {
          throw new TypeError(`Invalid comparator: ${comp}`);
        }
        this.operator = m[1] !== void 0 ? m[1] : "";
        if (this.operator === "=") {
          this.operator = "";
        }
        if (!m[2]) {
          this.semver = ANY;
        } else {
          this.semver = new SemVer(m[2], this.options.loose);
        }
      }
      toString() {
        return this.value;
      }
      test(version) {
        debug("Comparator.test", version, this.options.loose);
        if (this.semver === ANY || version === ANY) {
          return true;
        }
        if (typeof version === "string") {
          try {
            version = new SemVer(version, this.options);
          } catch (er) {
            return false;
          }
        }
        return cmp(version, this.operator, this.semver, this.options);
      }
      intersects(comp, options) {
        if (!(comp instanceof _Comparator)) {
          throw new TypeError("a Comparator is required");
        }
        if (this.operator === "") {
          if (this.value === "") {
            return true;
          }
          return new Range(comp.value, options).test(this.value);
        } else if (comp.operator === "") {
          if (comp.value === "") {
            return true;
          }
          return new Range(this.value, options).test(comp.semver);
        }
        options = parseOptions(options);
        if (options.includePrerelease && (this.value === "<0.0.0-0" || comp.value === "<0.0.0-0")) {
          return false;
        }
        if (!options.includePrerelease && (this.value.startsWith("<0.0.0") || comp.value.startsWith("<0.0.0"))) {
          return false;
        }
        if (this.operator.startsWith(">") && comp.operator.startsWith(">")) {
          return true;
        }
        if (this.operator.startsWith("<") && comp.operator.startsWith("<")) {
          return true;
        }
        if (this.semver.version === comp.semver.version && this.operator.includes("=") && comp.operator.includes("=")) {
          return true;
        }
        if (cmp(this.semver, "<", comp.semver, options) && this.operator.startsWith(">") && comp.operator.startsWith("<")) {
          return true;
        }
        if (cmp(this.semver, ">", comp.semver, options) && this.operator.startsWith("<") && comp.operator.startsWith(">")) {
          return true;
        }
        return false;
      }
    };
    module2.exports = Comparator;
    var parseOptions = require_parse_options();
    var { safeRe: re, t } = require_re();
    var cmp = require_cmp();
    var debug = require_debug();
    var SemVer = require_semver();
    var Range = require_range();
  }
});

// node_modules/jsonwebtoken/node_modules/semver/functions/satisfies.js
var require_satisfies = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/functions/satisfies.js"(exports2, module2) {
    var Range = require_range();
    var satisfies = (version, range, options) => {
      try {
        range = new Range(range, options);
      } catch (er) {
        return false;
      }
      return range.test(version);
    };
    module2.exports = satisfies;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/to-comparators.js
var require_to_comparators = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/to-comparators.js"(exports2, module2) {
    var Range = require_range();
    var toComparators = (range, options) => new Range(range, options).set.map((comp) => comp.map((c) => c.value).join(" ").trim().split(" "));
    module2.exports = toComparators;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/max-satisfying.js
var require_max_satisfying = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/max-satisfying.js"(exports2, module2) {
    var SemVer = require_semver();
    var Range = require_range();
    var maxSatisfying = (versions, range, options) => {
      let max = null;
      let maxSV = null;
      let rangeObj = null;
      try {
        rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }
      versions.forEach((v) => {
        if (rangeObj.test(v)) {
          if (!max || maxSV.compare(v) === -1) {
            max = v;
            maxSV = new SemVer(max, options);
          }
        }
      });
      return max;
    };
    module2.exports = maxSatisfying;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/min-satisfying.js
var require_min_satisfying = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/min-satisfying.js"(exports2, module2) {
    var SemVer = require_semver();
    var Range = require_range();
    var minSatisfying = (versions, range, options) => {
      let min = null;
      let minSV = null;
      let rangeObj = null;
      try {
        rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }
      versions.forEach((v) => {
        if (rangeObj.test(v)) {
          if (!min || minSV.compare(v) === 1) {
            min = v;
            minSV = new SemVer(min, options);
          }
        }
      });
      return min;
    };
    module2.exports = minSatisfying;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/min-version.js
var require_min_version = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/min-version.js"(exports2, module2) {
    var SemVer = require_semver();
    var Range = require_range();
    var gt = require_gt();
    var minVersion = (range, loose) => {
      range = new Range(range, loose);
      let minver = new SemVer("0.0.0");
      if (range.test(minver)) {
        return minver;
      }
      minver = new SemVer("0.0.0-0");
      if (range.test(minver)) {
        return minver;
      }
      minver = null;
      for (let i = 0; i < range.set.length; ++i) {
        const comparators = range.set[i];
        let setMin = null;
        comparators.forEach((comparator) => {
          const compver = new SemVer(comparator.semver.version);
          switch (comparator.operator) {
            case ">":
              if (compver.prerelease.length === 0) {
                compver.patch++;
              } else {
                compver.prerelease.push(0);
              }
              compver.raw = compver.format();
            /* fallthrough */
            case "":
            case ">=":
              if (!setMin || gt(compver, setMin)) {
                setMin = compver;
              }
              break;
            case "<":
            case "<=":
              break;
            /* istanbul ignore next */
            default:
              throw new Error(`Unexpected operation: ${comparator.operator}`);
          }
        });
        if (setMin && (!minver || gt(minver, setMin))) {
          minver = setMin;
        }
      }
      if (minver && range.test(minver)) {
        return minver;
      }
      return null;
    };
    module2.exports = minVersion;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/valid.js
var require_valid2 = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/valid.js"(exports2, module2) {
    var Range = require_range();
    var validRange = (range, options) => {
      try {
        return new Range(range, options).range || "*";
      } catch (er) {
        return null;
      }
    };
    module2.exports = validRange;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/outside.js
var require_outside = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/outside.js"(exports2, module2) {
    var SemVer = require_semver();
    var Comparator = require_comparator();
    var { ANY } = Comparator;
    var Range = require_range();
    var satisfies = require_satisfies();
    var gt = require_gt();
    var lt = require_lt();
    var lte = require_lte();
    var gte = require_gte();
    var outside = (version, range, hilo, options) => {
      version = new SemVer(version, options);
      range = new Range(range, options);
      let gtfn, ltefn, ltfn, comp, ecomp;
      switch (hilo) {
        case ">":
          gtfn = gt;
          ltefn = lte;
          ltfn = lt;
          comp = ">";
          ecomp = ">=";
          break;
        case "<":
          gtfn = lt;
          ltefn = gte;
          ltfn = gt;
          comp = "<";
          ecomp = "<=";
          break;
        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      }
      if (satisfies(version, range, options)) {
        return false;
      }
      for (let i = 0; i < range.set.length; ++i) {
        const comparators = range.set[i];
        let high = null;
        let low = null;
        comparators.forEach((comparator) => {
          if (comparator.semver === ANY) {
            comparator = new Comparator(">=0.0.0");
          }
          high = high || comparator;
          low = low || comparator;
          if (gtfn(comparator.semver, high.semver, options)) {
            high = comparator;
          } else if (ltfn(comparator.semver, low.semver, options)) {
            low = comparator;
          }
        });
        if (high.operator === comp || high.operator === ecomp) {
          return false;
        }
        if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {
          return false;
        } else if (low.operator === ecomp && ltfn(version, low.semver)) {
          return false;
        }
      }
      return true;
    };
    module2.exports = outside;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/gtr.js
var require_gtr = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/gtr.js"(exports2, module2) {
    var outside = require_outside();
    var gtr = (version, range, options) => outside(version, range, ">", options);
    module2.exports = gtr;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/ltr.js
var require_ltr = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/ltr.js"(exports2, module2) {
    var outside = require_outside();
    var ltr = (version, range, options) => outside(version, range, "<", options);
    module2.exports = ltr;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/intersects.js
var require_intersects = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/intersects.js"(exports2, module2) {
    var Range = require_range();
    var intersects = (r1, r2, options) => {
      r1 = new Range(r1, options);
      r2 = new Range(r2, options);
      return r1.intersects(r2, options);
    };
    module2.exports = intersects;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/simplify.js
var require_simplify = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/simplify.js"(exports2, module2) {
    var satisfies = require_satisfies();
    var compare = require_compare();
    module2.exports = (versions, range, options) => {
      const set = [];
      let first = null;
      let prev = null;
      const v = versions.sort((a, b) => compare(a, b, options));
      for (const version of v) {
        const included = satisfies(version, range, options);
        if (included) {
          prev = version;
          if (!first) {
            first = version;
          }
        } else {
          if (prev) {
            set.push([first, prev]);
          }
          prev = null;
          first = null;
        }
      }
      if (first) {
        set.push([first, null]);
      }
      const ranges = [];
      for (const [min, max] of set) {
        if (min === max) {
          ranges.push(min);
        } else if (!max && min === v[0]) {
          ranges.push("*");
        } else if (!max) {
          ranges.push(`>=${min}`);
        } else if (min === v[0]) {
          ranges.push(`<=${max}`);
        } else {
          ranges.push(`${min} - ${max}`);
        }
      }
      const simplified = ranges.join(" || ");
      const original = typeof range.raw === "string" ? range.raw : String(range);
      return simplified.length < original.length ? simplified : range;
    };
  }
});

// node_modules/jsonwebtoken/node_modules/semver/ranges/subset.js
var require_subset = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/ranges/subset.js"(exports2, module2) {
    var Range = require_range();
    var Comparator = require_comparator();
    var { ANY } = Comparator;
    var satisfies = require_satisfies();
    var compare = require_compare();
    var subset = (sub, dom, options = {}) => {
      if (sub === dom) {
        return true;
      }
      sub = new Range(sub, options);
      dom = new Range(dom, options);
      let sawNonNull = false;
      OUTER: for (const simpleSub of sub.set) {
        for (const simpleDom of dom.set) {
          const isSub = simpleSubset(simpleSub, simpleDom, options);
          sawNonNull = sawNonNull || isSub !== null;
          if (isSub) {
            continue OUTER;
          }
        }
        if (sawNonNull) {
          return false;
        }
      }
      return true;
    };
    var minimumVersionWithPreRelease = [new Comparator(">=0.0.0-0")];
    var minimumVersion = [new Comparator(">=0.0.0")];
    var simpleSubset = (sub, dom, options) => {
      if (sub === dom) {
        return true;
      }
      if (sub.length === 1 && sub[0].semver === ANY) {
        if (dom.length === 1 && dom[0].semver === ANY) {
          return true;
        } else if (options.includePrerelease) {
          sub = minimumVersionWithPreRelease;
        } else {
          sub = minimumVersion;
        }
      }
      if (dom.length === 1 && dom[0].semver === ANY) {
        if (options.includePrerelease) {
          return true;
        } else {
          dom = minimumVersion;
        }
      }
      const eqSet = /* @__PURE__ */ new Set();
      let gt, lt;
      for (const c of sub) {
        if (c.operator === ">" || c.operator === ">=") {
          gt = higherGT(gt, c, options);
        } else if (c.operator === "<" || c.operator === "<=") {
          lt = lowerLT(lt, c, options);
        } else {
          eqSet.add(c.semver);
        }
      }
      if (eqSet.size > 1) {
        return null;
      }
      let gtltComp;
      if (gt && lt) {
        gtltComp = compare(gt.semver, lt.semver, options);
        if (gtltComp > 0) {
          return null;
        } else if (gtltComp === 0 && (gt.operator !== ">=" || lt.operator !== "<=")) {
          return null;
        }
      }
      for (const eq of eqSet) {
        if (gt && !satisfies(eq, String(gt), options)) {
          return null;
        }
        if (lt && !satisfies(eq, String(lt), options)) {
          return null;
        }
        for (const c of dom) {
          if (!satisfies(eq, String(c), options)) {
            return false;
          }
        }
        return true;
      }
      let higher, lower;
      let hasDomLT, hasDomGT;
      let needDomLTPre = lt && !options.includePrerelease && lt.semver.prerelease.length ? lt.semver : false;
      let needDomGTPre = gt && !options.includePrerelease && gt.semver.prerelease.length ? gt.semver : false;
      if (needDomLTPre && needDomLTPre.prerelease.length === 1 && lt.operator === "<" && needDomLTPre.prerelease[0] === 0) {
        needDomLTPre = false;
      }
      for (const c of dom) {
        hasDomGT = hasDomGT || c.operator === ">" || c.operator === ">=";
        hasDomLT = hasDomLT || c.operator === "<" || c.operator === "<=";
        if (gt) {
          if (needDomGTPre) {
            if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomGTPre.major && c.semver.minor === needDomGTPre.minor && c.semver.patch === needDomGTPre.patch) {
              needDomGTPre = false;
            }
          }
          if (c.operator === ">" || c.operator === ">=") {
            higher = higherGT(gt, c, options);
            if (higher === c && higher !== gt) {
              return false;
            }
          } else if (gt.operator === ">=" && !satisfies(gt.semver, String(c), options)) {
            return false;
          }
        }
        if (lt) {
          if (needDomLTPre) {
            if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomLTPre.major && c.semver.minor === needDomLTPre.minor && c.semver.patch === needDomLTPre.patch) {
              needDomLTPre = false;
            }
          }
          if (c.operator === "<" || c.operator === "<=") {
            lower = lowerLT(lt, c, options);
            if (lower === c && lower !== lt) {
              return false;
            }
          } else if (lt.operator === "<=" && !satisfies(lt.semver, String(c), options)) {
            return false;
          }
        }
        if (!c.operator && (lt || gt) && gtltComp !== 0) {
          return false;
        }
      }
      if (gt && hasDomLT && !lt && gtltComp !== 0) {
        return false;
      }
      if (lt && hasDomGT && !gt && gtltComp !== 0) {
        return false;
      }
      if (needDomGTPre || needDomLTPre) {
        return false;
      }
      return true;
    };
    var higherGT = (a, b, options) => {
      if (!a) {
        return b;
      }
      const comp = compare(a.semver, b.semver, options);
      return comp > 0 ? a : comp < 0 ? b : b.operator === ">" && a.operator === ">=" ? b : a;
    };
    var lowerLT = (a, b, options) => {
      if (!a) {
        return b;
      }
      const comp = compare(a.semver, b.semver, options);
      return comp < 0 ? a : comp > 0 ? b : b.operator === "<" && a.operator === "<=" ? b : a;
    };
    module2.exports = subset;
  }
});

// node_modules/jsonwebtoken/node_modules/semver/index.js
var require_semver2 = __commonJS({
  "node_modules/jsonwebtoken/node_modules/semver/index.js"(exports2, module2) {
    var internalRe = require_re();
    var constants = require_constants();
    var SemVer = require_semver();
    var identifiers = require_identifiers();
    var parse = require_parse();
    var valid = require_valid();
    var clean = require_clean();
    var inc = require_inc();
    var diff = require_diff();
    var major = require_major();
    var minor = require_minor();
    var patch = require_patch();
    var prerelease = require_prerelease();
    var compare = require_compare();
    var rcompare = require_rcompare();
    var compareLoose = require_compare_loose();
    var compareBuild = require_compare_build();
    var sort = require_sort();
    var rsort = require_rsort();
    var gt = require_gt();
    var lt = require_lt();
    var eq = require_eq();
    var neq = require_neq();
    var gte = require_gte();
    var lte = require_lte();
    var cmp = require_cmp();
    var coerce = require_coerce();
    var Comparator = require_comparator();
    var Range = require_range();
    var satisfies = require_satisfies();
    var toComparators = require_to_comparators();
    var maxSatisfying = require_max_satisfying();
    var minSatisfying = require_min_satisfying();
    var minVersion = require_min_version();
    var validRange = require_valid2();
    var outside = require_outside();
    var gtr = require_gtr();
    var ltr = require_ltr();
    var intersects = require_intersects();
    var simplifyRange = require_simplify();
    var subset = require_subset();
    module2.exports = {
      parse,
      valid,
      clean,
      inc,
      diff,
      major,
      minor,
      patch,
      prerelease,
      compare,
      rcompare,
      compareLoose,
      compareBuild,
      sort,
      rsort,
      gt,
      lt,
      eq,
      neq,
      gte,
      lte,
      cmp,
      coerce,
      Comparator,
      Range,
      satisfies,
      toComparators,
      maxSatisfying,
      minSatisfying,
      minVersion,
      validRange,
      outside,
      gtr,
      ltr,
      intersects,
      simplifyRange,
      subset,
      SemVer,
      re: internalRe.re,
      src: internalRe.src,
      tokens: internalRe.t,
      SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
      RELEASE_TYPES: constants.RELEASE_TYPES,
      compareIdentifiers: identifiers.compareIdentifiers,
      rcompareIdentifiers: identifiers.rcompareIdentifiers
    };
  }
});

// node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js
var require_asymmetricKeyDetailsSupported = __commonJS({
  "node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js"(exports2, module2) {
    var semver = require_semver2();
    module2.exports = semver.satisfies(process.version, ">=15.7.0");
  }
});

// node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js
var require_rsaPssKeyDetailsSupported = __commonJS({
  "node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js"(exports2, module2) {
    var semver = require_semver2();
    module2.exports = semver.satisfies(process.version, ">=16.9.0");
  }
});

// node_modules/jsonwebtoken/lib/validateAsymmetricKey.js
var require_validateAsymmetricKey = __commonJS({
  "node_modules/jsonwebtoken/lib/validateAsymmetricKey.js"(exports2, module2) {
    var ASYMMETRIC_KEY_DETAILS_SUPPORTED = require_asymmetricKeyDetailsSupported();
    var RSA_PSS_KEY_DETAILS_SUPPORTED = require_rsaPssKeyDetailsSupported();
    var allowedAlgorithmsForKeys = {
      "ec": ["ES256", "ES384", "ES512"],
      "rsa": ["RS256", "PS256", "RS384", "PS384", "RS512", "PS512"],
      "rsa-pss": ["PS256", "PS384", "PS512"]
    };
    var allowedCurves = {
      ES256: "prime256v1",
      ES384: "secp384r1",
      ES512: "secp521r1"
    };
    module2.exports = function(algorithm, key) {
      if (!algorithm || !key) return;
      const keyType = key.asymmetricKeyType;
      if (!keyType) return;
      const allowedAlgorithms = allowedAlgorithmsForKeys[keyType];
      if (!allowedAlgorithms) {
        throw new Error(`Unknown key type "${keyType}".`);
      }
      if (!allowedAlgorithms.includes(algorithm)) {
        throw new Error(`"alg" parameter for "${keyType}" key type must be one of: ${allowedAlgorithms.join(", ")}.`);
      }
      if (ASYMMETRIC_KEY_DETAILS_SUPPORTED) {
        switch (keyType) {
          case "ec":
            const keyCurve = key.asymmetricKeyDetails.namedCurve;
            const allowedCurve = allowedCurves[algorithm];
            if (keyCurve !== allowedCurve) {
              throw new Error(`"alg" parameter "${algorithm}" requires curve "${allowedCurve}".`);
            }
            break;
          case "rsa-pss":
            if (RSA_PSS_KEY_DETAILS_SUPPORTED) {
              const length = parseInt(algorithm.slice(-3), 10);
              const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;
              if (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm) {
                throw new Error(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of "alg" ${algorithm}.`);
              }
              if (saltLength !== void 0 && saltLength > length >> 3) {
                throw new Error(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of "alg" ${algorithm}.`);
              }
            }
            break;
        }
      }
    };
  }
});

// node_modules/jsonwebtoken/lib/psSupported.js
var require_psSupported = __commonJS({
  "node_modules/jsonwebtoken/lib/psSupported.js"(exports2, module2) {
    var semver = require_semver2();
    module2.exports = semver.satisfies(process.version, "^6.12.0 || >=8.0.0");
  }
});

// node_modules/jsonwebtoken/verify.js
var require_verify = __commonJS({
  "node_modules/jsonwebtoken/verify.js"(exports2, module2) {
    var JsonWebTokenError = require_JsonWebTokenError();
    var NotBeforeError = require_NotBeforeError();
    var TokenExpiredError = require_TokenExpiredError();
    var decode = require_decode();
    var timespan = require_timespan();
    var validateAsymmetricKey = require_validateAsymmetricKey();
    var PS_SUPPORTED = require_psSupported();
    var jws = require_jws();
    var { KeyObject, createSecretKey, createPublicKey } = require("crypto");
    var PUB_KEY_ALGS = ["RS256", "RS384", "RS512"];
    var EC_KEY_ALGS = ["ES256", "ES384", "ES512"];
    var RSA_KEY_ALGS = ["RS256", "RS384", "RS512"];
    var HS_ALGS = ["HS256", "HS384", "HS512"];
    if (PS_SUPPORTED) {
      PUB_KEY_ALGS.splice(PUB_KEY_ALGS.length, 0, "PS256", "PS384", "PS512");
      RSA_KEY_ALGS.splice(RSA_KEY_ALGS.length, 0, "PS256", "PS384", "PS512");
    }
    module2.exports = function(jwtString, secretOrPublicKey, options, callback) {
      if (typeof options === "function" && !callback) {
        callback = options;
        options = {};
      }
      if (!options) {
        options = {};
      }
      options = Object.assign({}, options);
      let done;
      if (callback) {
        done = callback;
      } else {
        done = function(err, data) {
          if (err) throw err;
          return data;
        };
      }
      if (options.clockTimestamp && typeof options.clockTimestamp !== "number") {
        return done(new JsonWebTokenError("clockTimestamp must be a number"));
      }
      if (options.nonce !== void 0 && (typeof options.nonce !== "string" || options.nonce.trim() === "")) {
        return done(new JsonWebTokenError("nonce must be a non-empty string"));
      }
      if (options.allowInvalidAsymmetricKeyTypes !== void 0 && typeof options.allowInvalidAsymmetricKeyTypes !== "boolean") {
        return done(new JsonWebTokenError("allowInvalidAsymmetricKeyTypes must be a boolean"));
      }
      const clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1e3);
      if (!jwtString) {
        return done(new JsonWebTokenError("jwt must be provided"));
      }
      if (typeof jwtString !== "string") {
        return done(new JsonWebTokenError("jwt must be a string"));
      }
      const parts = jwtString.split(".");
      if (parts.length !== 3) {
        return done(new JsonWebTokenError("jwt malformed"));
      }
      let decodedToken;
      try {
        decodedToken = decode(jwtString, { complete: true });
      } catch (err) {
        return done(err);
      }
      if (!decodedToken) {
        return done(new JsonWebTokenError("invalid token"));
      }
      const header = decodedToken.header;
      let getSecret;
      if (typeof secretOrPublicKey === "function") {
        if (!callback) {
          return done(new JsonWebTokenError("verify must be called asynchronous if secret or public key is provided as a callback"));
        }
        getSecret = secretOrPublicKey;
      } else {
        getSecret = function(header2, secretCallback) {
          return secretCallback(null, secretOrPublicKey);
        };
      }
      return getSecret(header, function(err, secretOrPublicKey2) {
        if (err) {
          return done(new JsonWebTokenError("error in secret or public key callback: " + err.message));
        }
        const hasSignature = parts[2].trim() !== "";
        if (!hasSignature && secretOrPublicKey2) {
          return done(new JsonWebTokenError("jwt signature is required"));
        }
        if (hasSignature && !secretOrPublicKey2) {
          return done(new JsonWebTokenError("secret or public key must be provided"));
        }
        if (!hasSignature && !options.algorithms) {
          return done(new JsonWebTokenError('please specify "none" in "algorithms" to verify unsigned tokens'));
        }
        if (secretOrPublicKey2 != null && !(secretOrPublicKey2 instanceof KeyObject)) {
          try {
            secretOrPublicKey2 = createPublicKey(secretOrPublicKey2);
          } catch (_) {
            try {
              secretOrPublicKey2 = createSecretKey(typeof secretOrPublicKey2 === "string" ? Buffer.from(secretOrPublicKey2) : secretOrPublicKey2);
            } catch (_2) {
              return done(new JsonWebTokenError("secretOrPublicKey is not valid key material"));
            }
          }
        }
        if (!options.algorithms) {
          if (secretOrPublicKey2.type === "secret") {
            options.algorithms = HS_ALGS;
          } else if (["rsa", "rsa-pss"].includes(secretOrPublicKey2.asymmetricKeyType)) {
            options.algorithms = RSA_KEY_ALGS;
          } else if (secretOrPublicKey2.asymmetricKeyType === "ec") {
            options.algorithms = EC_KEY_ALGS;
          } else {
            options.algorithms = PUB_KEY_ALGS;
          }
        }
        if (options.algorithms.indexOf(decodedToken.header.alg) === -1) {
          return done(new JsonWebTokenError("invalid algorithm"));
        }
        if (header.alg.startsWith("HS") && secretOrPublicKey2.type !== "secret") {
          return done(new JsonWebTokenError(`secretOrPublicKey must be a symmetric key when using ${header.alg}`));
        } else if (/^(?:RS|PS|ES)/.test(header.alg) && secretOrPublicKey2.type !== "public") {
          return done(new JsonWebTokenError(`secretOrPublicKey must be an asymmetric key when using ${header.alg}`));
        }
        if (!options.allowInvalidAsymmetricKeyTypes) {
          try {
            validateAsymmetricKey(header.alg, secretOrPublicKey2);
          } catch (e) {
            return done(e);
          }
        }
        let valid;
        try {
          valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey2);
        } catch (e) {
          return done(e);
        }
        if (!valid) {
          return done(new JsonWebTokenError("invalid signature"));
        }
        const payload = decodedToken.payload;
        if (typeof payload.nbf !== "undefined" && !options.ignoreNotBefore) {
          if (typeof payload.nbf !== "number") {
            return done(new JsonWebTokenError("invalid nbf value"));
          }
          if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {
            return done(new NotBeforeError("jwt not active", new Date(payload.nbf * 1e3)));
          }
        }
        if (typeof payload.exp !== "undefined" && !options.ignoreExpiration) {
          if (typeof payload.exp !== "number") {
            return done(new JsonWebTokenError("invalid exp value"));
          }
          if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {
            return done(new TokenExpiredError("jwt expired", new Date(payload.exp * 1e3)));
          }
        }
        if (options.audience) {
          const audiences = Array.isArray(options.audience) ? options.audience : [options.audience];
          const target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];
          const match = target.some(function(targetAudience) {
            return audiences.some(function(audience) {
              return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;
            });
          });
          if (!match) {
            return done(new JsonWebTokenError("jwt audience invalid. expected: " + audiences.join(" or ")));
          }
        }
        if (options.issuer) {
          const invalid_issuer = typeof options.issuer === "string" && payload.iss !== options.issuer || Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1;
          if (invalid_issuer) {
            return done(new JsonWebTokenError("jwt issuer invalid. expected: " + options.issuer));
          }
        }
        if (options.subject) {
          if (payload.sub !== options.subject) {
            return done(new JsonWebTokenError("jwt subject invalid. expected: " + options.subject));
          }
        }
        if (options.jwtid) {
          if (payload.jti !== options.jwtid) {
            return done(new JsonWebTokenError("jwt jwtid invalid. expected: " + options.jwtid));
          }
        }
        if (options.nonce) {
          if (payload.nonce !== options.nonce) {
            return done(new JsonWebTokenError("jwt nonce invalid. expected: " + options.nonce));
          }
        }
        if (options.maxAge) {
          if (typeof payload.iat !== "number") {
            return done(new JsonWebTokenError("iat required when maxAge is specified"));
          }
          const maxAgeTimestamp = timespan(options.maxAge, payload.iat);
          if (typeof maxAgeTimestamp === "undefined") {
            return done(new JsonWebTokenError('"maxAge" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
          }
          if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {
            return done(new TokenExpiredError("maxAge exceeded", new Date(maxAgeTimestamp * 1e3)));
          }
        }
        if (options.complete === true) {
          const signature = decodedToken.signature;
          return done(null, {
            header,
            payload,
            signature
          });
        }
        return done(null, payload);
      });
    };
  }
});

// node_modules/lodash.includes/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.includes/index.js"(exports2, module2) {
    var INFINITY = 1 / 0;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var argsTag = "[object Arguments]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var freeParseInt = parseInt;
    function arrayMap(array, iteratee) {
      var index = -1, length = array ? array.length : 0, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    function baseIndexOf(array, value, fromIndex) {
      if (value !== value) {
        return baseFindIndex(array, baseIsNaN, fromIndex);
      }
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    function baseIsNaN(value) {
      return value !== value;
    }
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseValues(object, props) {
      return arrayMap(props, function(key) {
        return object[key];
      });
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectToString = objectProto.toString;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeKeys = overArg(Object.keys, Object);
    var nativeMax = Math.max;
    function arrayLikeKeys(value, inherited) {
      var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];
      var length = result.length, skipIndexes = !!length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
    }
    function isArguments(value) {
      return isArrayLikeObject(value) && hasOwnProperty.call(value, "callee") && (!propertyIsEnumerable.call(value, "callee") || objectToString.call(value) == argsTag);
    }
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    function isFunction(value) {
      var tag = isObject(value) ? objectToString.call(value) : "";
      return tag == funcTag || tag == genTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag;
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function values(object) {
      return object ? baseValues(object, keys(object)) : [];
    }
    module2.exports = includes;
  }
});

// node_modules/lodash.isboolean/index.js
var require_lodash2 = __commonJS({
  "node_modules/lodash.isboolean/index.js"(exports2, module2) {
    var boolTag = "[object Boolean]";
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function isBoolean(value) {
      return value === true || value === false || isObjectLike(value) && objectToString.call(value) == boolTag;
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    module2.exports = isBoolean;
  }
});

// node_modules/lodash.isinteger/index.js
var require_lodash3 = __commonJS({
  "node_modules/lodash.isinteger/index.js"(exports2, module2) {
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function isInteger(value) {
      return typeof value == "number" && value == toInteger(value);
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module2.exports = isInteger;
  }
});

// node_modules/lodash.isnumber/index.js
var require_lodash4 = __commonJS({
  "node_modules/lodash.isnumber/index.js"(exports2, module2) {
    var numberTag = "[object Number]";
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isNumber(value) {
      return typeof value == "number" || isObjectLike(value) && objectToString.call(value) == numberTag;
    }
    module2.exports = isNumber;
  }
});

// node_modules/lodash.isplainobject/index.js
var require_lodash5 = __commonJS({
  "node_modules/lodash.isplainobject/index.js"(exports2, module2) {
    var objectTag = "[object Object]";
    function isHostObject(value) {
      var result = false;
      if (value != null && typeof value.toString != "function") {
        try {
          result = !!(value + "");
        } catch (e) {
        }
      }
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    var objectToString = objectProto.toString;
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isPlainObject(value) {
      if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    module2.exports = isPlainObject;
  }
});

// node_modules/lodash.isstring/index.js
var require_lodash6 = __commonJS({
  "node_modules/lodash.isstring/index.js"(exports2, module2) {
    var stringTag = "[object String]";
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var isArray = Array.isArray;
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag;
    }
    module2.exports = isString;
  }
});

// node_modules/lodash.once/index.js
var require_lodash7 = __commonJS({
  "node_modules/lodash.once/index.js"(exports2, module2) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function before(n, func) {
      var result;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = void 0;
        }
        return result;
      };
    }
    function once(func) {
      return before(2, func);
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module2.exports = once;
  }
});

// node_modules/jsonwebtoken/sign.js
var require_sign = __commonJS({
  "node_modules/jsonwebtoken/sign.js"(exports2, module2) {
    var timespan = require_timespan();
    var PS_SUPPORTED = require_psSupported();
    var validateAsymmetricKey = require_validateAsymmetricKey();
    var jws = require_jws();
    var includes = require_lodash();
    var isBoolean = require_lodash2();
    var isInteger = require_lodash3();
    var isNumber = require_lodash4();
    var isPlainObject = require_lodash5();
    var isString = require_lodash6();
    var once = require_lodash7();
    var { KeyObject, createSecretKey, createPrivateKey } = require("crypto");
    var SUPPORTED_ALGS = ["RS256", "RS384", "RS512", "ES256", "ES384", "ES512", "HS256", "HS384", "HS512", "none"];
    if (PS_SUPPORTED) {
      SUPPORTED_ALGS.splice(3, 0, "PS256", "PS384", "PS512");
    }
    var sign_options_schema = {
      expiresIn: { isValid: function(value) {
        return isInteger(value) || isString(value) && value;
      }, message: '"expiresIn" should be a number of seconds or string representing a timespan' },
      notBefore: { isValid: function(value) {
        return isInteger(value) || isString(value) && value;
      }, message: '"notBefore" should be a number of seconds or string representing a timespan' },
      audience: { isValid: function(value) {
        return isString(value) || Array.isArray(value);
      }, message: '"audience" must be a string or array' },
      algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '"algorithm" must be a valid string enum value' },
      header: { isValid: isPlainObject, message: '"header" must be an object' },
      encoding: { isValid: isString, message: '"encoding" must be a string' },
      issuer: { isValid: isString, message: '"issuer" must be a string' },
      subject: { isValid: isString, message: '"subject" must be a string' },
      jwtid: { isValid: isString, message: '"jwtid" must be a string' },
      noTimestamp: { isValid: isBoolean, message: '"noTimestamp" must be a boolean' },
      keyid: { isValid: isString, message: '"keyid" must be a string' },
      mutatePayload: { isValid: isBoolean, message: '"mutatePayload" must be a boolean' },
      allowInsecureKeySizes: { isValid: isBoolean, message: '"allowInsecureKeySizes" must be a boolean' },
      allowInvalidAsymmetricKeyTypes: { isValid: isBoolean, message: '"allowInvalidAsymmetricKeyTypes" must be a boolean' }
    };
    var registered_claims_schema = {
      iat: { isValid: isNumber, message: '"iat" should be a number of seconds' },
      exp: { isValid: isNumber, message: '"exp" should be a number of seconds' },
      nbf: { isValid: isNumber, message: '"nbf" should be a number of seconds' }
    };
    function validate(schema, allowUnknown, object, parameterName) {
      if (!isPlainObject(object)) {
        throw new Error('Expected "' + parameterName + '" to be a plain object.');
      }
      Object.keys(object).forEach(function(key) {
        const validator = schema[key];
        if (!validator) {
          if (!allowUnknown) {
            throw new Error('"' + key + '" is not allowed in "' + parameterName + '"');
          }
          return;
        }
        if (!validator.isValid(object[key])) {
          throw new Error(validator.message);
        }
      });
    }
    function validateOptions(options) {
      return validate(sign_options_schema, false, options, "options");
    }
    function validatePayload(payload) {
      return validate(registered_claims_schema, true, payload, "payload");
    }
    var options_to_payload = {
      "audience": "aud",
      "issuer": "iss",
      "subject": "sub",
      "jwtid": "jti"
    };
    var options_for_objects = [
      "expiresIn",
      "notBefore",
      "noTimestamp",
      "audience",
      "issuer",
      "subject",
      "jwtid"
    ];
    module2.exports = function(payload, secretOrPrivateKey, options, callback) {
      if (typeof options === "function") {
        callback = options;
        options = {};
      } else {
        options = options || {};
      }
      const isObjectPayload = typeof payload === "object" && !Buffer.isBuffer(payload);
      const header = Object.assign({
        alg: options.algorithm || "HS256",
        typ: isObjectPayload ? "JWT" : void 0,
        kid: options.keyid
      }, options.header);
      function failure(err) {
        if (callback) {
          return callback(err);
        }
        throw err;
      }
      if (!secretOrPrivateKey && options.algorithm !== "none") {
        return failure(new Error("secretOrPrivateKey must have a value"));
      }
      if (secretOrPrivateKey != null && !(secretOrPrivateKey instanceof KeyObject)) {
        try {
          secretOrPrivateKey = createPrivateKey(secretOrPrivateKey);
        } catch (_) {
          try {
            secretOrPrivateKey = createSecretKey(typeof secretOrPrivateKey === "string" ? Buffer.from(secretOrPrivateKey) : secretOrPrivateKey);
          } catch (_2) {
            return failure(new Error("secretOrPrivateKey is not valid key material"));
          }
        }
      }
      if (header.alg.startsWith("HS") && secretOrPrivateKey.type !== "secret") {
        return failure(new Error(`secretOrPrivateKey must be a symmetric key when using ${header.alg}`));
      } else if (/^(?:RS|PS|ES)/.test(header.alg)) {
        if (secretOrPrivateKey.type !== "private") {
          return failure(new Error(`secretOrPrivateKey must be an asymmetric key when using ${header.alg}`));
        }
        if (!options.allowInsecureKeySizes && !header.alg.startsWith("ES") && secretOrPrivateKey.asymmetricKeyDetails !== void 0 && //KeyObject.asymmetricKeyDetails is supported in Node 15+
        secretOrPrivateKey.asymmetricKeyDetails.modulusLength < 2048) {
          return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));
        }
      }
      if (typeof payload === "undefined") {
        return failure(new Error("payload is required"));
      } else if (isObjectPayload) {
        try {
          validatePayload(payload);
        } catch (error) {
          return failure(error);
        }
        if (!options.mutatePayload) {
          payload = Object.assign({}, payload);
        }
      } else {
        const invalid_options = options_for_objects.filter(function(opt) {
          return typeof options[opt] !== "undefined";
        });
        if (invalid_options.length > 0) {
          return failure(new Error("invalid " + invalid_options.join(",") + " option for " + typeof payload + " payload"));
        }
      }
      if (typeof payload.exp !== "undefined" && typeof options.expiresIn !== "undefined") {
        return failure(new Error('Bad "options.expiresIn" option the payload already has an "exp" property.'));
      }
      if (typeof payload.nbf !== "undefined" && typeof options.notBefore !== "undefined") {
        return failure(new Error('Bad "options.notBefore" option the payload already has an "nbf" property.'));
      }
      try {
        validateOptions(options);
      } catch (error) {
        return failure(error);
      }
      if (!options.allowInvalidAsymmetricKeyTypes) {
        try {
          validateAsymmetricKey(header.alg, secretOrPrivateKey);
        } catch (error) {
          return failure(error);
        }
      }
      const timestamp = payload.iat || Math.floor(Date.now() / 1e3);
      if (options.noTimestamp) {
        delete payload.iat;
      } else if (isObjectPayload) {
        payload.iat = timestamp;
      }
      if (typeof options.notBefore !== "undefined") {
        try {
          payload.nbf = timespan(options.notBefore, timestamp);
        } catch (err) {
          return failure(err);
        }
        if (typeof payload.nbf === "undefined") {
          return failure(new Error('"notBefore" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
        }
      }
      if (typeof options.expiresIn !== "undefined" && typeof payload === "object") {
        try {
          payload.exp = timespan(options.expiresIn, timestamp);
        } catch (err) {
          return failure(err);
        }
        if (typeof payload.exp === "undefined") {
          return failure(new Error('"expiresIn" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
        }
      }
      Object.keys(options_to_payload).forEach(function(key) {
        const claim = options_to_payload[key];
        if (typeof options[key] !== "undefined") {
          if (typeof payload[claim] !== "undefined") {
            return failure(new Error('Bad "options.' + key + '" option. The payload already has an "' + claim + '" property.'));
          }
          payload[claim] = options[key];
        }
      });
      const encoding = options.encoding || "utf8";
      if (typeof callback === "function") {
        callback = callback && once(callback);
        jws.createSign({
          header,
          privateKey: secretOrPrivateKey,
          payload,
          encoding
        }).once("error", callback).once("done", function(signature) {
          if (!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {
            return callback(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));
          }
          callback(null, signature);
        });
      } else {
        let signature = jws.sign({ header, payload, secret: secretOrPrivateKey, encoding });
        if (!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {
          throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`);
        }
        return signature;
      }
    };
  }
});

// node_modules/jsonwebtoken/index.js
var require_jsonwebtoken = __commonJS({
  "node_modules/jsonwebtoken/index.js"(exports2, module2) {
    module2.exports = {
      decode: require_decode(),
      verify: require_verify(),
      sign: require_sign(),
      JsonWebTokenError: require_JsonWebTokenError(),
      NotBeforeError: require_NotBeforeError(),
      TokenExpiredError: require_TokenExpiredError()
    };
  }
});

// out/common/statusBar.js
var require_statusBar = __commonJS({
  "out/common/statusBar.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var vscode_1 = require("vscode");
    var helper_12 = require_helper();
    var StatusBar = class {
      constructor(helper, options) {
        this.type = helper_12.FuncType.Common;
        this.statusBar = vscode_1.window.createStatusBarItem(vscode_1.StatusBarAlignment.Right, -99999);
        this.helper = helper;
        this.options = options;
      }
      init() {
        this.statusBar.text = "$(extensions-view-icon) helper";
        let md = "\n";
        let vip = helper_12.default.user.vip;
        let expired = helper_12.default.user.expired;
        if (!expired) {
          md += "\u{1F451}";
          if (vip === 2) {
            md += "[\u5E74\u5EA6] ";
          } else if (vip === 3) {
            md += "[\u7EC8\u8EAB] ";
          }
        }
        md += "vue-helper";
        if (vip === -2) {
          md += ` \u2728 <a href="command:vue-helper.login" >\u7533\u8BF7\u8BD5\u7528</a>`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        } else if (expired) {
          md += ` \u2728 <a href="command:vue-helper.openPay" >\u89E3\u9501Pro</a>`;
        } else {
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        }
        md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        if (vip === -1) {
          if (expired) {
            md += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#999999;">\u8FC7\u671F</span>`;
          } else {
            md += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`;
          }
        } else if (vip === 2 && expired) {
          md += `<span style="color:#999999;">\u8FC7\u671F</span>`;
        }
        if (vip === 2 || vip === 3) {
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        }
        md += `&nbsp;&nbsp;<a href="command:vue-helper.openDocument">$(book) \u6587\u6863</a>`;
        md += `&nbsp;&nbsp;<a href="command:vue-helper.feedback">$(feedback) \u53CD\u9988</a>`;
        md += "\n *** \n";
        if (vip === -2 || expired) {
          md += `<div style="color:#999999;">\u5DE5\u7A0B`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
          md += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(diff-insert) \u65B0\u5EFA`;
          md += "</div>";
          md += `<div style="color:#999999;">\u4ED3\u5E93`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
          md += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(git-branch) \u8BBF\u95EE`;
          md += "</div>";
          md += `<div style="color:#999999;">API`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
          md += `$(play) \u4E00\u952E\u751F\u6210&nbsp;&nbsp;&nbsp;&nbsp;$(refresh) \u66F4\u65B0&nbsp;&nbsp;&nbsp;&nbsp;$(eye) \u8BBF\u95EE&nbsp;&nbsp;&nbsp;&nbsp;$(gear) \u8BBE\u7F6E`;
          md += "</div>";
          md += `<div style="color:#999999;">\u672C\u5730\u7EC4\u4EF6`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
          md += `$(refresh) \u66F4\u65B0&nbsp;&nbsp;&nbsp;&nbsp;$(book) \u6587\u6863`;
          md += "</div>";
          md += `<div style="color:#999999;">\u79C1\u6709\u7EC4\u4EF6`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
          md += `$(gear) \u914D\u7F6E&nbsp;&nbsp;&nbsp;&nbsp;$(eye) \u67E5\u770B`;
          md += "</div>";
        } else {
          md += `\u5DE5\u7A0B`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
          md += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="command:vue-helper.project.new">$(diff-insert) \u65B0\u5EFA</a>`;
          md += "\n *** \n";
          md += `\u4ED3\u5E93`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
          md += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="command:vue-helper.git.visit">$(git-branch) \u8BBF\u95EE</a>`;
          md += "\n *** \n";
          md += `API`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
          md += `<a href="command:vue-helper.api.generateAll">$(play) \u4E00\u952E\u751F\u6210</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="command:vue-helper.api.update">$(refresh) \u66F4\u65B0</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="command:vue-helper.api.visit">$(eye) \u8BBF\u95EE</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="command:vue-helper.api.setting">$(gear) \u8BBE\u7F6E</a>`;
          md += "\n *** \n";
          md += `\u672C\u5730\u7EC4\u4EF6`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
          md += `<a href="command:vue-helper.localComp.update">$(refresh) \u66F4\u65B0</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="command:vue-helper.localComp.doc">$(book) \u6587\u6863</a>`;
          md += "\n *** \n";
          md += `\u79C1\u6709\u7EC4\u4EF6`;
          md += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
          md += `<a href="command:vue-helper.private.setting">$(gear) \u914D\u7F6E</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="command:vue-helper.private.see">$(eye) \u67E5\u770B</a>`;
        }
        const tooltip = new vscode_1.MarkdownString(md, true);
        tooltip.supportHtml = true;
        tooltip.isTrusted = true;
        this.statusBar.tooltip = tooltip;
        this.statusBar.show();
      }
    };
    exports2.default = StatusBar;
  }
});

// out/common/webviewMgn.js
var require_webviewMgn = __commonJS({
  "out/common/webviewMgn.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.WebviewMgn = void 0;
    var vscode_1 = require("vscode");
    var path = require("path");
    var helper_12 = require_helper();
    var WebviewMgn = class {
      init() {
      }
      constructor(helper, options) {
        this.type = helper_12.FuncType.Common;
        this.viewType = "vue-helper.WebviewMgn";
        this._disposables = [];
        this.title = "";
        this.token = "";
        this.framework = "";
        this.helper = helper;
        this.options = options;
      }
      // 面板关闭
      dispose() {
        var _a;
        (_a = this.activeView) === null || _a === void 0 ? void 0 : _a.dispose();
        while (this._disposables.length) {
          const x = this._disposables.pop();
          if (x) {
            x.dispose();
          }
        }
        this.activeView = void 0;
      }
      openView(viewParams) {
        if (this.activeView && viewParams.title !== this.title) {
          this.dispose();
        }
        this.title = viewParams.title;
        this.token = viewParams.token || "";
        this.framework = viewParams.framework || "";
        const viewColumn = vscode_1.window.activeTextEditor ? vscode_1.window.activeTextEditor.viewColumn : void 0;
        if (this.activeView) {
          return this.activeView.reveal(viewColumn);
        }
        this.activeView = vscode_1.window.createWebviewPanel(this.viewType, this.title, viewParams.split ? vscode_1.ViewColumn.Two : viewColumn || vscode_1.ViewColumn.One, {
          // webview允许使用javascript
          enableScripts: true,
          localResourceRoots: [
            vscode_1.Uri.file(path.join(this.helper.context.extensionPath, "media"))
          ]
        });
        this.activeView.onDidDispose(() => {
          viewParams.dispose && viewParams.dispose();
          this.dispose();
        }, null, this._disposables);
        this.activeView.webview.onDidReceiveMessage((message) => {
          viewParams.messageHandler(message);
        }, null, this._disposables);
        this.loadHtml(viewParams.page);
      }
      getNonce() {
        let text = "";
        const possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        for (let i = 0; i < 32; i++) {
          text += possible.charAt(Math.floor(Math.random() * possible.length));
        }
        return text;
      }
      // 资源地址转换
      _toUri(webview, extensionPath, basePath, fileName) {
        return webview.asWebviewUri(vscode_1.Uri.file(path.join(extensionPath, basePath, fileName)));
      }
      // 获取webview内容
      getHtmlForWebview(webview, extensionPath, path2, title, token, framework) {
        const nonce = this.getNonce();
        const cssUri = this._toUri(webview, extensionPath, "media", "assets/index.css");
        const app = this._toUri(webview, extensionPath, "media", "assets/index.js");
        const baseUrl = this._toUri(webview, extensionPath, "media", "assets");
        return `<!DOCTYPE html>
    <html lang=en>
    
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>${title}</title>
      <link nonce="${nonce}" href="${cssUri}" rel=stylesheet>
      <script nonce="${nonce}">
        window.rootPath = '${path2}'
        window.lang = '${vscode_1.env.language}'
        window.token = '${token}'
        window.framework = '${framework}'
        window.baseUrl = '${baseUrl}'
        window.vscode = acquireVsCodeApi()
      </script>
    </head>
    
    <body><noscript><strong>We're sorry but ${title} doesn't work properly without JavaScript enabled. Please enable it to
          continue.</strong></noscript>
      <div id=app></div>
      <script type="module" crossorigin nonce="${nonce}" src="${app}"></script>
    </body>
    
    </html>`;
      }
      // 加载html
      loadHtml(page) {
        if (this.activeView) {
          this.activeView.title = this.title;
          this.activeView.iconPath = vscode_1.Uri.file(path.join(this.helper.context.extensionPath, "/asset/logo.png"));
          this.activeView.webview.html = this.getHtmlForWebview(this.activeView.webview, this.helper.context.extensionPath, page, this.title, this.token, this.framework);
        }
      }
      postMessage(params) {
        var _a;
        (_a = this.activeView) === null || _a === void 0 ? void 0 : _a.webview.postMessage(params);
      }
      close() {
        var _a;
        (_a = this.activeView) === null || _a === void 0 ? void 0 : _a.dispose();
      }
    };
    exports2.WebviewMgn = WebviewMgn;
  }
});

// out/common/member.js
var require_member = __commonJS({
  "out/common/member.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var vscode_1 = require("vscode");
    var helper_12 = require_helper();
    var webviewMgn_1 = require_webviewMgn();
    var Member = class {
      init() {
        vscode_1.commands.registerCommand("vue-helper.login", (params) => {
          const webviewMgn = this.helper.getPlugin(webviewMgn_1.WebviewMgn);
          webviewMgn.openView({
            title: params && params.opt === "login" ? "\u767B\u5F55" : "\u6CE8\u518C",
            page: "register",
            framework: params && params.opt === "login" ? "login" : vscode_1.env.machineId,
            messageHandler: (message) => {
              console.log(message.command);
              switch (message.command) {
                case "close":
                  webviewMgn.close();
                  break;
                case "register":
                  this.helper.store.set("user", helper_12.default.deviceId + message.data.token);
                  this.helper.bootstrap(helper_12.default.deviceId + message.data.token);
                  break;
                case "openWebsite":
                  this.helper.opn(message.url);
                  break;
                case "active":
                  break;
                default:
                  break;
              }
            }
          });
        });
        vscode_1.commands.registerCommand("vue-helper.openDocument", () => {
          this.helper.opn(this.helper.docUrl + "/document/");
        });
        vscode_1.commands.registerCommand("vue-helper.feedback", () => {
          this.helper.opn(this.helper.docUrl + "/feedback/");
        });
      }
      constructor(helper, options) {
        this.type = helper_12.FuncType.Common;
        this.helper = helper;
        this.options = options;
      }
    };
    exports2.default = Member;
  }
});

// out/pro/project.js
var require_project = __commonJS({
  "out/pro/project.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    var vscode_1 = require("vscode");
    var helper_12 = require_helper();
    var webviewMgn_1 = require_webviewMgn();
    var fs = require("fs");
    var path = require("path");
    var { exec } = require("child_process");
    var Project = class {
      constructor(helper, options) {
        this.type = helper_12.FuncType.Pro;
        this.projectDir = "";
        this.terminalLine = 0;
        this.terminal = null;
        this.dir = "";
        this.hub = "";
        this.cloneFinish = false;
        this.helper = helper;
        this.options = options;
      }
      init() {
        vscode_1.commands.registerCommand("vue-helper.project.new", () => {
          const webviewMgn = this.helper.getPlugin(webviewMgn_1.WebviewMgn);
          webviewMgn.openView({
            title: "Project",
            page: "project",
            token: helper_12.default.user.token,
            framework: "",
            messageHandler: (message) => {
              switch (message.command) {
                case "selBaseDir":
                  this.selBaseDir();
                  break;
                case "create":
                  this.create(message);
                case "config":
                  const hub = this.helper.store.get("hub");
                  if (hub) {
                    webviewMgn.postMessage({
                      command: "config",
                      hub
                    });
                  }
                  break;
                default:
                  break;
              }
            }
          });
        });
        vscode_1.commands.registerCommand("vue-helper.project.open", () => {
          if (this.helper.isWin) {
            this.dir = "/" + this.dir.replace(/\\/gi, "/");
          }
          vscode_1.commands.executeCommand("vscode.openFolder", vscode_1.Uri.parse(this.dir), false).then(() => {
          }, () => vscode_1.window.showInformationMessage("\u6253\u5F00\u5DE5\u7A0B\u5931\u8D25\uFF01"));
        });
        vscode_1.commands.registerCommand("vue-helper.git.visit", () => {
          exec(`git -C ${this.helper.projectPath} remote -v`, (error, stdout, stderr) => {
            if (error) {
              vscode_1.window.showInformationMessage(`${error.message}`);
              return;
            }
            if (stderr) {
              vscode_1.window.showInformationMessage(`${stderr}`);
              return;
            }
            const remoteMatchs = stdout.match(/http.* /);
            if (remoteMatchs && (remoteMatchs === null || remoteMatchs === void 0 ? void 0 : remoteMatchs.length) > 0) {
              this.helper.opn(remoteMatchs[0].trim());
            } else {
              const gitMatchs = stdout.match(/git@.* /);
              if (gitMatchs && (gitMatchs === null || gitMatchs === void 0 ? void 0 : gitMatchs.length) > 0) {
                this.helper.opn(gitMatchs[0].trim().replace(/:/gi, "/").replace(/git@/gi, "http://"));
              }
            }
          });
        });
      }
      // 选择目录
      selBaseDir() {
        return __awaiter(this, void 0, void 0, function* () {
          const options = {
            canSelectFolders: true,
            canSelectFiles: false,
            canSelectMany: false,
            openLabel: "Open"
          };
          const folderUri = yield vscode_1.window.showOpenDialog(options);
          if (folderUri && Array.isArray(folderUri)) {
            let basePath = folderUri[0].path;
            if (this.helper.isWin) {
              basePath = basePath.substr(1, basePath.length);
            }
            this.helper.getPlugin(webviewMgn_1.WebviewMgn).postMessage({ command: "path", path: basePath });
          }
        });
      }
      deleteAllInFold(path2) {
        var files = [];
        if (fs.existsSync(path2)) {
          files = fs.readdirSync(path2);
          files.forEach((file) => {
            var curPath = path2 + "/" + file;
            if (fs.statSync(curPath).isDirectory()) {
              this.deleteAllInFold(curPath);
            } else {
              fs.unlinkSync(curPath);
            }
          });
          fs.rmdirSync(path2);
        }
      }
      initProject() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        if (this.helper.isWin) {
          this.deleteAllInFold(path.join(this.dir, ".git"));
        } else {
          (_a = this.terminal) === null || _a === void 0 ? void 0 : _a.sendText(`rm -rf ${path.join(this.dir, ".git")}`);
        }
        (_b = this.terminal) === null || _b === void 0 ? void 0 : _b.sendText(`cd ${this.dir}`);
        (_c = this.terminal) === null || _c === void 0 ? void 0 : _c.sendText(`git init`);
        (_d = this.terminal) === null || _d === void 0 ? void 0 : _d.sendText(`git add .`);
        (_e = this.terminal) === null || _e === void 0 ? void 0 : _e.sendText(`git commit -m 'init'`);
        if (this.hub) {
          (_f = this.terminal) === null || _f === void 0 ? void 0 : _f.sendText(`git ls-remote ${this.hub}`);
          (_g = this.terminal) === null || _g === void 0 ? void 0 : _g.sendText(`git remote add origin ${this.hub}`);
          (_h = this.terminal) === null || _h === void 0 ? void 0 : _h.sendText(`git push -u origin master`);
          (_j = this.terminal) === null || _j === void 0 ? void 0 : _j.sendText(`git checkout -q -b develop --no-track HEAD`);
          (_k = this.terminal) === null || _k === void 0 ? void 0 : _k.sendText("git push -u origin develop");
        }
        this.helper.getPlugin(webviewMgn_1.WebviewMgn).postMessage({ command: "done" });
        vscode_1.window.showInformationMessage("\u606D\u559C\uFF0C\u5DE5\u7A0B\u521D\u59CB\u5316\u6210\u529F\uFF01 [\u6253\u5F00\u5DE5\u7A0B](command:vue-helper.project.open)");
      }
      // 创建工程
      create(message) {
        this.terminal = vscode_1.window.createTerminal("project");
        vscode_1.window.onDidStartTerminalShellExecution(() => {
          this.terminalLine++;
          if (this.terminalLine >= 3 && !this.cloneFinish) {
            this.cloneFinish = true;
            this.initProject();
          }
        });
        const webviewMgn = this.helper.getPlugin(webviewMgn_1.WebviewMgn);
        this.cloneFinish = false;
        this.terminal.show(true);
        this.hub = "";
        if (message.hub) {
          let hub = message.hub.replace(/\/[^\/]*$/gi, "");
          if (hub) {
            this.helper.store.set("hub", hub);
            this.hub = message.hub;
          }
        }
        if (!message.baseDir) {
          webviewMgn.postMessage({ command: "done" });
          return vscode_1.window.showWarningMessage("\u8BF7\u9009\u62E9\u9879\u76EE\u76EE\u5F55\uFF01");
        }
        if (!message.projectName) {
          webviewMgn.postMessage({ command: "done" });
          return vscode_1.window.showWarningMessage("\u8BF7\u8F93\u5165\u5DE5\u7A0B\u540D\u79F0\uFF01");
        }
        if (!message.url) {
          webviewMgn.postMessage({ command: "done" });
          return vscode_1.window.showWarningMessage("\u8BF7\u8F93\u5165\u6A21\u677F\u5730\u5740\uFF01");
        }
        this.dir = path.join(message.baseDir, message.projectName);
        try {
          if (/^http/gi.test(message.url) && message.account) {
            let url = message.url.split("//");
            message.url = `${url[0]}//${message.account.name}:${message.account.password}@${url[1]}`;
          }
          this.terminal.sendText(`cd ${message.baseDir}
`);
          this.terminal.sendText(`git clone ${message.url} ${this.dir}
`);
          this.terminal.sendText('echo "\u62F7\u8D1D\u5B8C\u6210"');
        } catch (error) {
        }
      }
    };
    exports2.default = Project;
  }
});

// node_modules/camelcase/index.js
var camelcase_exports = {};
__export(camelcase_exports, {
  default: () => camelCase
});
function camelCase(input, options) {
  if (!(typeof input === "string" || Array.isArray(input))) {
    throw new TypeError("Expected the input to be `string | string[]`");
  }
  options = {
    pascalCase: false,
    preserveConsecutiveUppercase: false,
    ...options
  };
  if (Array.isArray(input)) {
    input = input.map((x) => x.trim()).filter((x) => x.length).join("-");
  } else {
    input = input.trim();
  }
  if (input.length === 0) {
    return "";
  }
  const toLowerCase = options.locale === false ? (string) => string.toLowerCase() : (string) => string.toLocaleLowerCase(options.locale);
  const toUpperCase = options.locale === false ? (string) => string.toUpperCase() : (string) => string.toLocaleUpperCase(options.locale);
  if (input.length === 1) {
    if (SEPARATORS.test(input)) {
      return "";
    }
    return options.pascalCase ? toUpperCase(input) : toLowerCase(input);
  }
  const hasUpperCase = input !== toLowerCase(input);
  if (hasUpperCase) {
    input = preserveCamelCase(input, toLowerCase, toUpperCase, options.preserveConsecutiveUppercase);
  }
  input = input.replace(LEADING_SEPARATORS, "");
  input = options.preserveConsecutiveUppercase ? preserveConsecutiveUppercase(input, toLowerCase) : toLowerCase(input);
  if (options.pascalCase) {
    input = toUpperCase(input.charAt(0)) + input.slice(1);
  }
  return postProcess(input, toUpperCase);
}
var UPPERCASE, LOWERCASE, LEADING_CAPITAL, IDENTIFIER, SEPARATORS, LEADING_SEPARATORS, SEPARATORS_AND_IDENTIFIER, NUMBERS_AND_IDENTIFIER, preserveCamelCase, preserveConsecutiveUppercase, postProcess;
var init_camelcase = __esm({
  "node_modules/camelcase/index.js"() {
    UPPERCASE = /[\p{Lu}]/u;
    LOWERCASE = /[\p{Ll}]/u;
    LEADING_CAPITAL = /^[\p{Lu}](?![\p{Lu}])/gu;
    IDENTIFIER = /([\p{Alpha}\p{N}_]|$)/u;
    SEPARATORS = /[_.\- ]+/;
    LEADING_SEPARATORS = new RegExp("^" + SEPARATORS.source);
    SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, "gu");
    NUMBERS_AND_IDENTIFIER = new RegExp("\\d+" + IDENTIFIER.source, "gu");
    preserveCamelCase = (string, toLowerCase, toUpperCase, preserveConsecutiveUppercase2) => {
      let isLastCharLower = false;
      let isLastCharUpper = false;
      let isLastLastCharUpper = false;
      let isLastLastCharPreserved = false;
      for (let index = 0; index < string.length; index++) {
        const character = string[index];
        isLastLastCharPreserved = index > 2 ? string[index - 3] === "-" : true;
        if (isLastCharLower && UPPERCASE.test(character)) {
          string = string.slice(0, index) + "-" + string.slice(index);
          isLastCharLower = false;
          isLastLastCharUpper = isLastCharUpper;
          isLastCharUpper = true;
          index++;
        } else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character) && (!isLastLastCharPreserved || preserveConsecutiveUppercase2)) {
          string = string.slice(0, index - 1) + "-" + string.slice(index - 1);
          isLastLastCharUpper = isLastCharUpper;
          isLastCharUpper = false;
          isLastCharLower = true;
        } else {
          isLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;
          isLastLastCharUpper = isLastCharUpper;
          isLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;
        }
      }
      return string;
    };
    preserveConsecutiveUppercase = (input, toLowerCase) => {
      LEADING_CAPITAL.lastIndex = 0;
      return input.replaceAll(LEADING_CAPITAL, (match) => toLowerCase(match));
    };
    postProcess = (input, toUpperCase) => {
      SEPARATORS_AND_IDENTIFIER.lastIndex = 0;
      NUMBERS_AND_IDENTIFIER.lastIndex = 0;
      return input.replaceAll(NUMBERS_AND_IDENTIFIER, (match, pattern, offset) => ["_", "-"].includes(input.charAt(offset + match.length)) ? match : toUpperCase(match)).replaceAll(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier));
    };
  }
});

// out/pro/api.js
var require_api = __commonJS({
  "out/pro/api.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    var vscode_1 = require("vscode");
    var helper_12 = require_helper();
    var camelcase_1 = (init_camelcase(), __toCommonJS(camelcase_exports));
    var path = require("path");
    var fs = require("fs");
    var ApiProvider = class _ApiProvider {
      constructor(helper, options) {
        this.type = helper_12.FuncType.Pro;
        this.api = {};
        this.url = [];
        this.fileType = "ts";
        this.projectApiPath = "api";
        this.isSpecificFile = false;
        this.requestPath = "";
        this.rootPrefix = "";
        this.rootReplace = "";
        this.definitions = {};
        this.paramsKeys = {
          header: "headers",
          body: "data",
          query: "params",
          path: "path",
          formData: "data"
        };
        this.paramsDefault = {
          string: "''",
          array: "[]",
          boolean: "false",
          integer: "0",
          ref: "{}",
          file: "{}",
          object: "{}"
        };
        this.parameterList = [];
        this.helper = helper;
        this.options = options;
        this.setConfig();
      }
      setConfig() {
        this.projectApiPath = this.helper.projectConfig.path.api;
        this.isSpecificFile = this.projectApiPath.includes(".");
        this.requestPath = this.helper.projectConfig.path.request;
        let prefix = this.helper.projectConfig.path.root;
        if (prefix) {
          this.rootPrefix = prefix.split("=")[0];
          this.rootReplace = prefix.split("=")[1];
        }
      }
      init() {
        this.fileType = this.helper.isTs ? "ts" : "js";
        vscode_1.commands.registerCommand("vue-helper.api.setting", () => {
          this.helper.openConfigByReg(`.*\\"api\\"\\s?:\\s*\\[.*`);
        });
        vscode_1.commands.registerCommand("vue-helper.api.update", () => {
          this.setConfig();
          this.getSwaggerUrl(true);
          this.url && this.getApi(true);
        });
        vscode_1.commands.registerCommand("vue-helper.api.visit", () => {
          this.getSwaggerUrl(true);
          if (this.url.length === 1) {
            this.url && this.helper.opn(this.url[0]);
          } else if (this.url.length > 1) {
            let items = [];
            this.url.forEach((urlItem) => {
              items.push({
                label: urlItem
              });
            });
            const quickPick = vscode_1.window.createQuickPick();
            quickPick.title = "\u63A5\u53E3\u8BBF\u95EE\u5730\u5740";
            quickPick.placeholder = "\u63A5\u53E3\u5730\u5740";
            quickPick.value = "";
            quickPick.items = items;
            quickPick.onDidChangeSelection((selection) => {
              if (selection[0] && selection[0].label) {
                this.helper.opn(selection[0].label);
              }
              quickPick.hide();
            });
            quickPick.onDidHide(() => {
              quickPick.dispose();
            });
            quickPick.show();
          }
        });
        vscode_1.commands.registerCommand("vue-helper.generateApiFile", (params) => {
          this.generateImport(params.apiName, params.url);
          this.generateApiFile(params.apiName, params.url);
        });
        vscode_1.commands.registerCommand("vue-helper.api.generateAll", () => __awaiter(this, void 0, void 0, function* () {
          let ret = yield vscode_1.window.showInformationMessage("\u786E\u5B9A\u751F\u6210\u5168\u90E8\u63A5\u53E3?", {
            modal: true
          }, "\u786E\u5B9A");
          if (ret === "\u786E\u5B9A") {
            this.getSwaggerUrl(true);
            if (this.url.length > 0) {
              if (_ApiProvider.apiCompletionItem.length === 0) {
                yield this.getApi(false);
              }
              if (_ApiProvider.apiCompletionItem.length === 0) {
                vscode_1.window.showInformationMessage("\u672A\u68C0\u6D4B\u5230\u63A5\u53E3\uFF0C\u8BF7\u68C0\u6D4B\u63A5\u53E3\u5730\u5740\u662F\u5426\u6B63\u786E\uFF1F");
              } else {
                _ApiProvider.apiCompletionItem.forEach((api) => {
                  var _a, _b;
                  if ((_a = api.command) === null || _a === void 0 ? void 0 : _a.arguments) {
                    let params = (_b = api.command) === null || _b === void 0 ? void 0 : _b.arguments[0];
                    this.generateApiFile(params.apiName, params.url);
                  }
                });
              }
            }
          }
        }));
        vscode_1.languages.registerCompletionItemProvider(["vue", "javascript", "typescript", "html", "wxml"], new ApiCompletionItemProvider(), "g", "p", "d");
        vscode_1.languages.registerCompletionItemProvider(["vue", "javascript", "typescript", "html", "wxml"], new ParameterCompletionItemProvider(), "");
      }
      // 生成额外文件
      generateApiFile(apiName, url) {
        let apiFilePath = "";
        let api = this.api[url][apiName];
        try {
          if (this.isSpecificFile) {
            apiFilePath = path.join(this.helper.projectPath, this.projectApiPath);
          } else {
            apiFilePath = path.join(this.helper.projectPath, api.filePath + "." + this.fileType);
          }
          fs.statSync(apiFilePath);
        } catch (error) {
          let baseURL = "";
          let filePath = this.getFullPath(this.requestPath);
          fs.writeFileSync(apiFilePath, `import request from '${filePath}'
const baseURL = ${baseURL ? baseURL : "''"}
`);
        }
        let apiText = fs.readFileSync(apiFilePath, "utf-8");
        if (new RegExp(`export\\s*function\\s*${apiName}\\(`).test(apiText)) {
          return;
        }
        let func = `export function ${apiName}(config${this.fileType === "ts" ? ": any" : ""}) {
  return request({
    url: \`\${baseURL}${api.reqPath.replace(/{/gi, "${config.path.")}\`,
    method: '${api.method}',
    ...config
  })
}
`;
        fs.appendFileSync(apiFilePath, api.annotation + func, "utf-8");
      }
      // 导入文件生成
      generateImport(apiName, url) {
        let editor = vscode_1.window.activeTextEditor;
        if (!editor) {
          return;
        }
        let count = editor.document.lineCount;
        let insertLine = 0;
        let insertCharacter = 0;
        let filePath = this.getFullPath(this.api[url][apiName].filePath);
        filePath = filePath.replace(/\\/gi, "/");
        let insertText = `import { ${apiName} } from '${filePath}'
`;
        let line = 0;
        let findPosition = false;
        let languageId = editor.document.languageId;
        let deep = 6;
        let deepNum = 0;
        let findImport = false;
        let isExist = false;
        while (!findPosition) {
          let textOrigin = editor.document.lineAt(line).text;
          let text = textOrigin.trim();
          if (languageId === "vue") {
            if (text.includes("<script ") || text.includes("<script>")) {
              insertLine = line;
            }
          }
          if ((text === null || text === void 0 ? void 0 : text.includes(`'${filePath}'`)) || (text === null || text === void 0 ? void 0 : text.includes(`"${filePath}"`)) || (text === null || text === void 0 ? void 0 : text.includes(`${filePath}.`))) {
            insertLine = line;
            if (!new RegExp(`{.*${apiName}.*}`, "gi").test(text)) {
              insertCharacter = text.replace(/\s*}.*/gi, "").length;
              insertText = `, ${apiName}`;
              findPosition = true;
              line--;
            } else {
              isExist = true;
            }
          }
          if (text.startsWith("import ")) {
            findImport = true;
          }
          if (findImport) {
            if (text.startsWith("import ") || text.includes(" from ")) {
              deepNum = 0;
              insertLine = line;
            } else {
              deepNum++;
              if (deepNum >= deep) {
                findPosition = true;
              }
            }
          }
          line++;
          if (line >= count) {
            findPosition = true;
          }
        }
        if (!isExist) {
          editor === null || editor === void 0 ? void 0 : editor.edit((editBuilder) => {
            editBuilder.insert(new vscode_1.Position(insertLine + 1, insertCharacter), insertText);
          });
        }
      }
      // 获取已配置swagger地址
      getSwaggerUrl(showMsg) {
        this.url = this.helper.projectConfig.api;
        if (showMsg && this.url.length === 0) {
          vscode_1.window.showInformationMessage(`\u8BF7[\u914D\u7F6E](command:vue-helper.api.setting)\u63A5\u53E3\u5730\u5740`);
        }
      }
      // 获取请求地址
      getApiUrl() {
        return __awaiter(this, void 0, void 0, function* () {
          let urlList = this.url;
          let urls = [];
          for (let i = 0; i < urlList.length; i++) {
            const url = urlList[i];
            let baseUrls = url.match(/http(s)?:\/\/[^\/]*/gi);
            if (baseUrls && baseUrls.length > 0) {
              let baseUrl = baseUrls[0];
              if (url.includes("swagger-ui.")) {
                urls.push({
                  url,
                  api: baseUrl + "/v2/api-docs",
                  version: 2
                });
              } else if (url.includes("swagger-ui/")) {
                urls.push({
                  url,
                  api: baseUrl + "/v3/api-docs",
                  version: 3
                });
              } else if (url.includes(".json")) {
                urls.push({
                  url,
                  api: url,
                  version: url.includes("/v2/") ? 2 : 3
                });
              } else if (url.includes("swagger/")) {
                urls.push({
                  url,
                  api: baseUrl + "/swagger/Admin/swagger.json",
                  version: 3
                });
              } else if (url.includes("doc.html")) {
                let sourceUrl = url.replace(/\/doc.html.*/gi, "");
                let swaggerUrl = sourceUrl + "/swagger-resources";
                let sourceRes = yield this.helper.axios.get(swaggerUrl);
                if (sourceRes.data) {
                  sourceRes.data.forEach((sourceItem) => {
                    urls.push({
                      url: sourceUrl + "/doc.html",
                      api: sourceUrl + encodeURI(sourceItem.url),
                      version: sourceItem.swaggerVersion && sourceItem.swaggerVersion.includes("2") ? 2 : 3
                    });
                  });
                }
              } else {
                urls.push({
                  url,
                  api: url,
                  version: url.includes("/v2/") ? 2 : 3
                });
              }
            } else {
              vscode_1.window.showInformationMessage("\u8BF7\u68C0\u67E5\u63A5\u53E3\u5730\u5740\u662F\u5426\u6B63\u786E?");
            }
          }
          return urls;
        });
      }
      addParamter(parameter) {
        if (!this.parameterList.includes(parameter)) {
          this.parameterList.push(parameter);
        }
      }
      // 获取全路径
      getFullPath(basePath) {
        return basePath.replace(new RegExp(`^${this.rootReplace}`, "gi"), this.rootPrefix);
      }
      addParamterSuggestions() {
        this.parameterList.forEach((parameter) => {
          let completionItem = new vscode_1.CompletionItem(parameter);
          completionItem.kind = vscode_1.CompletionItemKind.Field;
          completionItem.insertText = parameter;
          _ApiProvider.parameterCompletionItem.push(completionItem);
        });
      }
      // 获取swaggger接口信息
      getApi(showMsg) {
        return __awaiter(this, void 0, void 0, function* () {
          let urlList = yield this.getApiUrl();
          if (urlList.length === 0) {
            return;
          }
          try {
            this.definitions = {};
            _ApiProvider.apiCompletionItem = [];
            _ApiProvider.parameterCompletionItem = [];
            for (let i = 0; i < urlList.length; i++) {
              const uri = urlList[i];
              const res = yield this.helper.axios({
                method: "get",
                url: uri.api
              });
              switch (uri.version) {
                case 2:
                  if (res.data.definitions) {
                    this.definitions[uri.url] = res.data.definitions;
                  }
                  if (res.data.components) {
                    this.definitions[uri.url] = res.data.components;
                  }
                  break;
                case 3:
                  if (res.data.definitions) {
                    this.definitions[uri.url] = res.data.definitions;
                  }
                  if (res.data.components && res.data.components.schemas) {
                    this.definitions[uri.url] = res.data.components.schemas;
                  }
                  break;
                default:
                  break;
              }
              if (this.definitions[uri.url]) {
                for (const key in this.definitions[uri.url]) {
                  const definition = this.definitions[uri.url][key];
                  if (definition.type === "object" && definition.properties) {
                    for (const propertyKey in definition.properties) {
                      this.addParamter(propertyKey);
                    }
                  }
                }
              }
              for (const apiPath in res.data.paths) {
                const req = res.data.paths[apiPath];
                for (const reqMtd in req) {
                  const reqBody = req[reqMtd];
                  let apiName = "";
                  let apiPaths = apiPath.split("/");
                  let nameList = [];
                  let apiPathLen = apiPaths.length;
                  let annotation = "";
                  if (reqBody.summary || reqBody.description) {
                    annotation = "\n/**\n";
                    annotation += "* " + (reqBody.summary || reqBody.description) + "\n";
                    annotation += "*/\n";
                  }
                  if (apiPathLen > 2) {
                    let prev = apiPaths[apiPathLen - 2];
                    let last = apiPaths[apiPathLen - 1];
                    let idInParent = false;
                    if (/^{.*}$/gi.test(prev)) {
                      idInParent = true;
                      prev = prev.replace(/^{(.*)}$/, "$1");
                      prev = "by" + prev[0].toUpperCase() + prev.substr(1, prev.length);
                    }
                    if (/^{.*}$/gi.test(last)) {
                      last = last.replace(/^{(.*)}$/, "$1");
                      last = "by" + last[0].toUpperCase() + last.substr(1, last.length);
                    }
                    if (idInParent) {
                      nameList = [prev, last];
                    } else {
                      nameList = [last];
                    }
                    if (nameList.length === 1 && nameList[0] === reqMtd) {
                      if (prev !== reqMtd) {
                        nameList.pop();
                      }
                      nameList.unshift(prev);
                    }
                  } else {
                    nameList = [apiPaths[apiPathLen - 1]];
                  }
                  if (nameList[0] && nameList[0].toLowerCase().indexOf(reqMtd) !== 0) {
                    nameList.unshift(reqMtd);
                  }
                  apiName = (0, camelcase_1.default)(nameList);
                  if (!this.api[uri.url]) {
                    this.api[uri.url] = {};
                  }
                  if (this.api[uri.url][apiName]) {
                    let name = "";
                    if (apiPathLen > 2) {
                      name = apiPaths[apiPathLen - 2];
                      if (!/^{.*}$/gi.test(name)) {
                        nameList.splice(1, 0, name);
                        apiName = (0, camelcase_1.default)(nameList);
                      }
                      if (this.api[uri.url][apiName]) {
                        if (apiPathLen > 3) {
                          name = apiPaths[apiPathLen - 3];
                          if (!/^{.*}$/gi.test(name)) {
                            nameList.splice(1, 0, name);
                            apiName = (0, camelcase_1.default)(nameList);
                          }
                        }
                        if (this.api[uri.url][apiName]) {
                          if (apiPathLen > 4) {
                            name = apiPaths[apiPathLen - 4];
                            if (!/^{.*}$/gi.test(name)) {
                              nameList.splice(1, 0, name);
                              apiName = (0, camelcase_1.default)(nameList);
                            }
                          }
                        }
                      }
                    }
                  }
                  let filePath = "";
                  if (this.isSpecificFile) {
                    filePath = this.projectApiPath;
                  } else {
                    filePath = path.join(this.projectApiPath, `${apiPaths[0] || apiPaths[1]}`);
                  }
                  this.api[uri.url][apiName] = {
                    reqPath: apiPath,
                    annotation,
                    description: reqBody.summary + "[" + reqBody.description + "]",
                    filePath,
                    method: reqMtd,
                    params: reqBody.parameters
                  };
                  let insertText = `const res = await ${apiName}({
`;
                  if (reqBody.parameters && reqBody.parameters.length > 0) {
                    let params = {};
                    reqBody.parameters.forEach((param) => {
                      if (param.in && !(param.in === "header" && param.name === "token")) {
                        if (params[param.in]) {
                          params[param.in].push(param);
                        } else {
                          params[param.in] = [param];
                        }
                      }
                    });
                    for (const key in params) {
                      const paramList = params[key];
                      let assemble = this.assembleParameters(key, paramList, uri.url);
                      if (assemble.position === "append") {
                        insertText += assemble.value;
                      } else if (assemble.position === "top") {
                        insertText = assemble.value + insertText;
                      }
                    }
                  }
                  if (reqBody.requestBody && reqBody.requestBody.content) {
                    for (const key in reqBody.requestBody.content) {
                      const reqBodyParams = reqBody.requestBody.content[key];
                      switch (key) {
                        case "multipart/form-data":
                          if (reqBodyParams.schema && reqBodyParams.schema.properties) {
                            let assembe = this.assembleParametersInRequestBody(key, reqBodyParams.schema.properties, uri.url);
                            insertText = assembe.prepend + insertText;
                            insertText += assembe.append;
                          }
                          break;
                        case "application/json":
                          if (reqBodyParams.schema && reqBodyParams.schema.$ref) {
                            let assembe = this.assembleParametersInRequestBody(key, reqBodyParams.schema.$ref, uri.url);
                            insertText += assembe.append;
                          } else if (reqBodyParams.schema && reqBodyParams.schema.items && reqBodyParams.schema.items.$ref) {
                            let assembe = this.assembleParametersInRequestBody(key, reqBodyParams.schema.items, uri.url);
                            insertText += assembe.append;
                          }
                          break;
                        default:
                          break;
                      }
                    }
                  }
                  insertText += "})";
                  let completionItem = new vscode_1.CompletionItem(apiName);
                  completionItem.kind = vscode_1.CompletionItemKind.Function;
                  completionItem.insertText = insertText;
                  let location = "";
                  if (this.isSpecificFile) {
                    location = this.projectApiPath;
                  } else {
                    location = this.getFullPath(path.join(this.projectApiPath, `${apiPaths[0] || apiPaths[1]}.${this.fileType}`)).replace(/\\/gi, "/");
                  }
                  completionItem.documentation = new vscode_1.MarkdownString(`#### ${reqBody.summary || ""}
  \u63CF\u8FF0: ${reqBody.description || ""}

  \u63A5\u53E3: ${apiPath}

  \u4F4D\u7F6E : ${location}`);
                  completionItem.sortText = "444" + _ApiProvider.apiCompletionItem.length;
                  completionItem.command = {
                    command: "vue-helper.generateApiFile",
                    title: "vue-helper.generateApiFile",
                    arguments: [
                      {
                        apiName,
                        url: uri.url
                      }
                    ]
                  };
                  _ApiProvider.apiCompletionItem.push(completionItem);
                }
              }
              if (showMsg && urlList.length > 1) {
                vscode_1.window.showInformationMessage(`${i}/${urlList.length}: \u540C\u6B65\u5B8C\u6210 ${uri.url}`);
              }
            }
            this.addParamterSuggestions();
            if (showMsg) {
              vscode_1.window.showInformationMessage("\u540C\u6B65\u5B8C\u6210");
            }
          } catch (error) {
            if (showMsg) {
              vscode_1.window.showInformationMessage(error.message);
            }
          }
        });
      }
      // 拼装请求参数 key: ['header', 'body', 'query', 'path', 'formData']
      // ['string', 'array', 'boolean', 'integer', 'ref', 'file’, ‘object’]
      assembleParameters(key, paramList, url) {
        let params = "";
        let position = "append";
        let paramsKey = this.paramsKeys[key];
        let paramsType = "json";
        if (paramsKey) {
          paramList.forEach((param) => {
            switch (key) {
              case "header":
              case "body":
              case "query":
              case "path":
                if (!params) {
                  params += `${this.helper.tabSize}${paramsKey}: {
`;
                }
                if (param.schema) {
                  if (param.schema.originalRef) {
                    let ref = param.schema.originalRef;
                    if (this.definitions[url][ref] && this.definitions[url][ref] && this.definitions[url][ref].properties) {
                      for (const key2 in this.definitions[url][ref].properties) {
                        const paramKey = this.definitions[url][ref].properties[key2];
                        if (!params) {
                          params += `${this.helper.tabSize}data: {
`;
                        }
                        params += `${this.helper.tabSize}${this.helper.tabSize}${key2}: ${this.paramsDefault[paramKey.type] || "''"},
`;
                      }
                    } else {
                      this.addParamter(param.name);
                      params += `${this.helper.tabSize}${this.helper.tabSize}${param.name}: '',
`;
                    }
                  } else if (param.schema.$ref) {
                    let ref = param.schema.$ref.replace(/.*\//gi, "");
                    if (this.definitions[url][ref] && this.definitions[url][ref] && this.definitions[url][ref].properties) {
                      for (const key2 in this.definitions[url][ref].properties) {
                        const paramKey = this.definitions[url][ref].properties[key2];
                        if (!params) {
                          params += `${this.helper.tabSize}data: {
`;
                        }
                        params += `${this.helper.tabSize}${this.helper.tabSize}${key2}: ${this.paramsDefault[paramKey.type] || "''"},
`;
                      }
                    }
                  } else if (param.schema.type === "array") {
                    if (key === "body") {
                      params = `${this.helper.tabSize}${paramsKey}: [
`;
                      paramsType = "array";
                      if (param.schema.items && param.schema.items.$ref) {
                        let ref = param.schema.items.$ref.replace(/.*\//gi, "");
                        if (this.definitions[url][ref] && this.definitions[url][ref] && this.definitions[url][ref].properties) {
                          for (const key2 in this.definitions[url][ref].properties) {
                            const paramKey = this.definitions[url][ref].properties[key2];
                            params += `${this.helper.tabSize}${this.helper.tabSize}${key2}: ${this.paramsDefault[paramKey.type] || "''"},
`;
                          }
                        }
                      }
                    } else {
                      if (key === "query") {
                        let serializer = `${this.helper.tabSize}paramsSerializer: params => {
`;
                        serializer += `${this.helper.tabSize}${this.helper.tabSize}return qs.stringify(params, { indices: false })
`;
                        serializer += `${this.helper.tabSize}},
`;
                        params = serializer + params;
                      }
                      params += `${this.helper.tabSize}${this.helper.tabSize}${param.name}: [],
`;
                      this.addParamter(param.name);
                    }
                  } else {
                    params += `${this.helper.tabSize}${this.helper.tabSize}${param.name}: '',
`;
                    this.addParamter(param.name);
                  }
                } else {
                  params += `${this.helper.tabSize}${this.helper.tabSize}${param.name}: ${this.paramsDefault[param.type] || "''"},
`;
                  this.addParamter(param.name);
                }
                break;
              case "formData":
                if (!params) {
                  params += `const formData = new FormData()
`;
                }
                params += `formData.append('${param.name}', {})
`;
                this.addParamter(param.name);
                break;
              default:
                break;
            }
          });
          if (key === "formData") {
            position = "top";
          } else {
            if (paramsType === "json") {
              params += `${this.helper.tabSize}},
`;
            } else if (paramsType === "array") {
              params += `${this.helper.tabSize}],
`;
            }
          }
        }
        return {
          value: params,
          position
        };
      }
      assembleParametersInRequestBody(type, params, url) {
        let prepend = "";
        let append = "";
        switch (type) {
          case "multipart/form-data":
            for (const key in params) {
              if (!prepend) {
                prepend += `const formData = new FormData()
`;
              }
              prepend += `formData.append('${key}', {})
`;
            }
            append += `${this.helper.tabSize}data: formData,
`;
            append += `${this.helper.tabSize}headers: {
`;
            append += `${this.helper.tabSize}${this.helper.tabSize}"Content-Type": "multipart/form-data",
`;
            append += `${this.helper.tabSize}},
`;
            break;
          case "application/json":
            if (params) {
              if (params.$ref) {
                let refs = params.$ref.split("/");
                let ref = refs[refs.length - 1];
                if (this.definitions[url][ref] && this.definitions[url][ref] && this.definitions[url][ref].properties) {
                  for (const key in this.definitions[url][ref].properties) {
                    const param = this.definitions[url][ref].properties[key];
                    if (!append) {
                      append += `${this.helper.tabSize}data: [{
`;
                    }
                    append += `${this.helper.tabSize}${this.helper.tabSize}${key}: ${this.paramsDefault[param.type] || "''"},
`;
                  }
                  append += `${this.helper.tabSize}}],
`;
                }
              } else {
                let refs = params.split("/");
                let ref = refs[refs.length - 1];
                if (this.definitions[url][ref] && this.definitions[url][ref] && this.definitions[url][ref].properties) {
                  for (const key in this.definitions[url][ref].properties) {
                    const param = this.definitions[url][ref].properties[key];
                    if (!append) {
                      append += `${this.helper.tabSize}data: {
`;
                    }
                    append += `${this.helper.tabSize}${this.helper.tabSize}${key}: ${this.paramsDefault[param.type] || "''"},
`;
                  }
                  append += `${this.helper.tabSize}},
`;
                }
              }
            }
            break;
          default:
            break;
        }
        return {
          append,
          prepend
        };
      }
      projectConfigUpdate() {
        this.setConfig();
        this.getSwaggerUrl(false);
        this.url && this.getApi(false);
      }
    };
    ApiProvider.apiCompletionItem = [];
    ApiProvider.parameterCompletionItem = [];
    exports2.default = ApiProvider;
    var ApiCompletionItemProvider = class {
      provideCompletionItems() {
        return ApiProvider.apiCompletionItem;
      }
    };
    var ParameterCompletionItemProvider = class {
      provideCompletionItems() {
        return ApiProvider.parameterCompletionItem;
      }
    };
  }
});

// node_modules/delayed-stream/lib/delayed_stream.js
var require_delayed_stream = __commonJS({
  "node_modules/delayed-stream/lib/delayed_stream.js"(exports2, module2) {
    var Stream = require("stream").Stream;
    var util = require("util");
    module2.exports = DelayedStream;
    function DelayedStream() {
      this.source = null;
      this.dataSize = 0;
      this.maxDataSize = 1024 * 1024;
      this.pauseStream = true;
      this._maxDataSizeExceeded = false;
      this._released = false;
      this._bufferedEvents = [];
    }
    util.inherits(DelayedStream, Stream);
    DelayedStream.create = function(source, options) {
      var delayedStream = new this();
      options = options || {};
      for (var option in options) {
        delayedStream[option] = options[option];
      }
      delayedStream.source = source;
      var realEmit = source.emit;
      source.emit = function() {
        delayedStream._handleEmit(arguments);
        return realEmit.apply(source, arguments);
      };
      source.on("error", function() {
      });
      if (delayedStream.pauseStream) {
        source.pause();
      }
      return delayedStream;
    };
    Object.defineProperty(DelayedStream.prototype, "readable", {
      configurable: true,
      enumerable: true,
      get: function() {
        return this.source.readable;
      }
    });
    DelayedStream.prototype.setEncoding = function() {
      return this.source.setEncoding.apply(this.source, arguments);
    };
    DelayedStream.prototype.resume = function() {
      if (!this._released) {
        this.release();
      }
      this.source.resume();
    };
    DelayedStream.prototype.pause = function() {
      this.source.pause();
    };
    DelayedStream.prototype.release = function() {
      this._released = true;
      this._bufferedEvents.forEach(function(args) {
        this.emit.apply(this, args);
      }.bind(this));
      this._bufferedEvents = [];
    };
    DelayedStream.prototype.pipe = function() {
      var r = Stream.prototype.pipe.apply(this, arguments);
      this.resume();
      return r;
    };
    DelayedStream.prototype._handleEmit = function(args) {
      if (this._released) {
        this.emit.apply(this, args);
        return;
      }
      if (args[0] === "data") {
        this.dataSize += args[1].length;
        this._checkIfMaxDataSizeExceeded();
      }
      this._bufferedEvents.push(args);
    };
    DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
      if (this._maxDataSizeExceeded) {
        return;
      }
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      this._maxDataSizeExceeded = true;
      var message = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
      this.emit("error", new Error(message));
    };
  }
});

// node_modules/combined-stream/lib/combined_stream.js
var require_combined_stream = __commonJS({
  "node_modules/combined-stream/lib/combined_stream.js"(exports2, module2) {
    var util = require("util");
    var Stream = require("stream").Stream;
    var DelayedStream = require_delayed_stream();
    module2.exports = CombinedStream;
    function CombinedStream() {
      this.writable = false;
      this.readable = true;
      this.dataSize = 0;
      this.maxDataSize = 2 * 1024 * 1024;
      this.pauseStreams = true;
      this._released = false;
      this._streams = [];
      this._currentStream = null;
      this._insideLoop = false;
      this._pendingNext = false;
    }
    util.inherits(CombinedStream, Stream);
    CombinedStream.create = function(options) {
      var combinedStream = new this();
      options = options || {};
      for (var option in options) {
        combinedStream[option] = options[option];
      }
      return combinedStream;
    };
    CombinedStream.isStreamLike = function(stream) {
      return typeof stream !== "function" && typeof stream !== "string" && typeof stream !== "boolean" && typeof stream !== "number" && !Buffer.isBuffer(stream);
    };
    CombinedStream.prototype.append = function(stream) {
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        if (!(stream instanceof DelayedStream)) {
          var newStream = DelayedStream.create(stream, {
            maxDataSize: Infinity,
            pauseStream: this.pauseStreams
          });
          stream.on("data", this._checkDataSize.bind(this));
          stream = newStream;
        }
        this._handleErrors(stream);
        if (this.pauseStreams) {
          stream.pause();
        }
      }
      this._streams.push(stream);
      return this;
    };
    CombinedStream.prototype.pipe = function(dest, options) {
      Stream.prototype.pipe.call(this, dest, options);
      this.resume();
      return dest;
    };
    CombinedStream.prototype._getNext = function() {
      this._currentStream = null;
      if (this._insideLoop) {
        this._pendingNext = true;
        return;
      }
      this._insideLoop = true;
      try {
        do {
          this._pendingNext = false;
          this._realGetNext();
        } while (this._pendingNext);
      } finally {
        this._insideLoop = false;
      }
    };
    CombinedStream.prototype._realGetNext = function() {
      var stream = this._streams.shift();
      if (typeof stream == "undefined") {
        this.end();
        return;
      }
      if (typeof stream !== "function") {
        this._pipeNext(stream);
        return;
      }
      var getStream = stream;
      getStream(function(stream2) {
        var isStreamLike = CombinedStream.isStreamLike(stream2);
        if (isStreamLike) {
          stream2.on("data", this._checkDataSize.bind(this));
          this._handleErrors(stream2);
        }
        this._pipeNext(stream2);
      }.bind(this));
    };
    CombinedStream.prototype._pipeNext = function(stream) {
      this._currentStream = stream;
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        stream.on("end", this._getNext.bind(this));
        stream.pipe(this, { end: false });
        return;
      }
      var value = stream;
      this.write(value);
      this._getNext();
    };
    CombinedStream.prototype._handleErrors = function(stream) {
      var self2 = this;
      stream.on("error", function(err) {
        self2._emitError(err);
      });
    };
    CombinedStream.prototype.write = function(data) {
      this.emit("data", data);
    };
    CombinedStream.prototype.pause = function() {
      if (!this.pauseStreams) {
        return;
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == "function") this._currentStream.pause();
      this.emit("pause");
    };
    CombinedStream.prototype.resume = function() {
      if (!this._released) {
        this._released = true;
        this.writable = true;
        this._getNext();
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.resume == "function") this._currentStream.resume();
      this.emit("resume");
    };
    CombinedStream.prototype.end = function() {
      this._reset();
      this.emit("end");
    };
    CombinedStream.prototype.destroy = function() {
      this._reset();
      this.emit("close");
    };
    CombinedStream.prototype._reset = function() {
      this.writable = false;
      this._streams = [];
      this._currentStream = null;
    };
    CombinedStream.prototype._checkDataSize = function() {
      this._updateDataSize();
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      var message = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
      this._emitError(new Error(message));
    };
    CombinedStream.prototype._updateDataSize = function() {
      this.dataSize = 0;
      var self2 = this;
      this._streams.forEach(function(stream) {
        if (!stream.dataSize) {
          return;
        }
        self2.dataSize += stream.dataSize;
      });
      if (this._currentStream && this._currentStream.dataSize) {
        this.dataSize += this._currentStream.dataSize;
      }
    };
    CombinedStream.prototype._emitError = function(err) {
      this._reset();
      this.emit("error", err);
    };
  }
});

// node_modules/mime-db/db.json
var require_db = __commonJS({
  "node_modules/mime-db/db.json"(exports2, module2) {
    module2.exports = {
      "application/1d-interleaved-parityfec": {
        source: "iana"
      },
      "application/3gpdash-qoe-report+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/3gpp-ims+xml": {
        source: "iana",
        compressible: true
      },
      "application/3gpphal+json": {
        source: "iana",
        compressible: true
      },
      "application/3gpphalforms+json": {
        source: "iana",
        compressible: true
      },
      "application/a2l": {
        source: "iana"
      },
      "application/ace+cbor": {
        source: "iana"
      },
      "application/activemessage": {
        source: "iana"
      },
      "application/activity+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-costmap+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-costmapfilter+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-directory+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointcost+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointcostparams+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointprop+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointpropparams+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-error+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-networkmap+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-networkmapfilter+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-updatestreamcontrol+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-updatestreamparams+json": {
        source: "iana",
        compressible: true
      },
      "application/aml": {
        source: "iana"
      },
      "application/andrew-inset": {
        source: "iana",
        extensions: ["ez"]
      },
      "application/applefile": {
        source: "iana"
      },
      "application/applixware": {
        source: "apache",
        extensions: ["aw"]
      },
      "application/at+jwt": {
        source: "iana"
      },
      "application/atf": {
        source: "iana"
      },
      "application/atfx": {
        source: "iana"
      },
      "application/atom+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atom"]
      },
      "application/atomcat+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atomcat"]
      },
      "application/atomdeleted+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atomdeleted"]
      },
      "application/atomicmail": {
        source: "iana"
      },
      "application/atomsvc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atomsvc"]
      },
      "application/atsc-dwd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["dwd"]
      },
      "application/atsc-dynamic-event-message": {
        source: "iana"
      },
      "application/atsc-held+xml": {
        source: "iana",
        compressible: true,
        extensions: ["held"]
      },
      "application/atsc-rdt+json": {
        source: "iana",
        compressible: true
      },
      "application/atsc-rsat+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rsat"]
      },
      "application/atxml": {
        source: "iana"
      },
      "application/auth-policy+xml": {
        source: "iana",
        compressible: true
      },
      "application/bacnet-xdd+zip": {
        source: "iana",
        compressible: false
      },
      "application/batch-smtp": {
        source: "iana"
      },
      "application/bdoc": {
        compressible: false,
        extensions: ["bdoc"]
      },
      "application/beep+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/calendar+json": {
        source: "iana",
        compressible: true
      },
      "application/calendar+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xcs"]
      },
      "application/call-completion": {
        source: "iana"
      },
      "application/cals-1840": {
        source: "iana"
      },
      "application/captive+json": {
        source: "iana",
        compressible: true
      },
      "application/cbor": {
        source: "iana"
      },
      "application/cbor-seq": {
        source: "iana"
      },
      "application/cccex": {
        source: "iana"
      },
      "application/ccmp+xml": {
        source: "iana",
        compressible: true
      },
      "application/ccxml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ccxml"]
      },
      "application/cdfx+xml": {
        source: "iana",
        compressible: true,
        extensions: ["cdfx"]
      },
      "application/cdmi-capability": {
        source: "iana",
        extensions: ["cdmia"]
      },
      "application/cdmi-container": {
        source: "iana",
        extensions: ["cdmic"]
      },
      "application/cdmi-domain": {
        source: "iana",
        extensions: ["cdmid"]
      },
      "application/cdmi-object": {
        source: "iana",
        extensions: ["cdmio"]
      },
      "application/cdmi-queue": {
        source: "iana",
        extensions: ["cdmiq"]
      },
      "application/cdni": {
        source: "iana"
      },
      "application/cea": {
        source: "iana"
      },
      "application/cea-2018+xml": {
        source: "iana",
        compressible: true
      },
      "application/cellml+xml": {
        source: "iana",
        compressible: true
      },
      "application/cfw": {
        source: "iana"
      },
      "application/city+json": {
        source: "iana",
        compressible: true
      },
      "application/clr": {
        source: "iana"
      },
      "application/clue+xml": {
        source: "iana",
        compressible: true
      },
      "application/clue_info+xml": {
        source: "iana",
        compressible: true
      },
      "application/cms": {
        source: "iana"
      },
      "application/cnrp+xml": {
        source: "iana",
        compressible: true
      },
      "application/coap-group+json": {
        source: "iana",
        compressible: true
      },
      "application/coap-payload": {
        source: "iana"
      },
      "application/commonground": {
        source: "iana"
      },
      "application/conference-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/cose": {
        source: "iana"
      },
      "application/cose-key": {
        source: "iana"
      },
      "application/cose-key-set": {
        source: "iana"
      },
      "application/cpl+xml": {
        source: "iana",
        compressible: true,
        extensions: ["cpl"]
      },
      "application/csrattrs": {
        source: "iana"
      },
      "application/csta+xml": {
        source: "iana",
        compressible: true
      },
      "application/cstadata+xml": {
        source: "iana",
        compressible: true
      },
      "application/csvm+json": {
        source: "iana",
        compressible: true
      },
      "application/cu-seeme": {
        source: "apache",
        extensions: ["cu"]
      },
      "application/cwt": {
        source: "iana"
      },
      "application/cybercash": {
        source: "iana"
      },
      "application/dart": {
        compressible: true
      },
      "application/dash+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpd"]
      },
      "application/dash-patch+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpp"]
      },
      "application/dashdelta": {
        source: "iana"
      },
      "application/davmount+xml": {
        source: "iana",
        compressible: true,
        extensions: ["davmount"]
      },
      "application/dca-rft": {
        source: "iana"
      },
      "application/dcd": {
        source: "iana"
      },
      "application/dec-dx": {
        source: "iana"
      },
      "application/dialog-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/dicom": {
        source: "iana"
      },
      "application/dicom+json": {
        source: "iana",
        compressible: true
      },
      "application/dicom+xml": {
        source: "iana",
        compressible: true
      },
      "application/dii": {
        source: "iana"
      },
      "application/dit": {
        source: "iana"
      },
      "application/dns": {
        source: "iana"
      },
      "application/dns+json": {
        source: "iana",
        compressible: true
      },
      "application/dns-message": {
        source: "iana"
      },
      "application/docbook+xml": {
        source: "apache",
        compressible: true,
        extensions: ["dbk"]
      },
      "application/dots+cbor": {
        source: "iana"
      },
      "application/dskpp+xml": {
        source: "iana",
        compressible: true
      },
      "application/dssc+der": {
        source: "iana",
        extensions: ["dssc"]
      },
      "application/dssc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xdssc"]
      },
      "application/dvcs": {
        source: "iana"
      },
      "application/ecmascript": {
        source: "iana",
        compressible: true,
        extensions: ["es", "ecma"]
      },
      "application/edi-consent": {
        source: "iana"
      },
      "application/edi-x12": {
        source: "iana",
        compressible: false
      },
      "application/edifact": {
        source: "iana",
        compressible: false
      },
      "application/efi": {
        source: "iana"
      },
      "application/elm+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/elm+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.cap+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/emergencycalldata.comment+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.control+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.deviceinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.ecall.msd": {
        source: "iana"
      },
      "application/emergencycalldata.providerinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.serviceinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.subscriberinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.veds+xml": {
        source: "iana",
        compressible: true
      },
      "application/emma+xml": {
        source: "iana",
        compressible: true,
        extensions: ["emma"]
      },
      "application/emotionml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["emotionml"]
      },
      "application/encaprtp": {
        source: "iana"
      },
      "application/epp+xml": {
        source: "iana",
        compressible: true
      },
      "application/epub+zip": {
        source: "iana",
        compressible: false,
        extensions: ["epub"]
      },
      "application/eshop": {
        source: "iana"
      },
      "application/exi": {
        source: "iana",
        extensions: ["exi"]
      },
      "application/expect-ct-report+json": {
        source: "iana",
        compressible: true
      },
      "application/express": {
        source: "iana",
        extensions: ["exp"]
      },
      "application/fastinfoset": {
        source: "iana"
      },
      "application/fastsoap": {
        source: "iana"
      },
      "application/fdt+xml": {
        source: "iana",
        compressible: true,
        extensions: ["fdt"]
      },
      "application/fhir+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/fhir+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/fido.trusted-apps+json": {
        compressible: true
      },
      "application/fits": {
        source: "iana"
      },
      "application/flexfec": {
        source: "iana"
      },
      "application/font-sfnt": {
        source: "iana"
      },
      "application/font-tdpfr": {
        source: "iana",
        extensions: ["pfr"]
      },
      "application/font-woff": {
        source: "iana",
        compressible: false
      },
      "application/framework-attributes+xml": {
        source: "iana",
        compressible: true
      },
      "application/geo+json": {
        source: "iana",
        compressible: true,
        extensions: ["geojson"]
      },
      "application/geo+json-seq": {
        source: "iana"
      },
      "application/geopackage+sqlite3": {
        source: "iana"
      },
      "application/geoxacml+xml": {
        source: "iana",
        compressible: true
      },
      "application/gltf-buffer": {
        source: "iana"
      },
      "application/gml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["gml"]
      },
      "application/gpx+xml": {
        source: "apache",
        compressible: true,
        extensions: ["gpx"]
      },
      "application/gxf": {
        source: "apache",
        extensions: ["gxf"]
      },
      "application/gzip": {
        source: "iana",
        compressible: false,
        extensions: ["gz"]
      },
      "application/h224": {
        source: "iana"
      },
      "application/held+xml": {
        source: "iana",
        compressible: true
      },
      "application/hjson": {
        extensions: ["hjson"]
      },
      "application/http": {
        source: "iana"
      },
      "application/hyperstudio": {
        source: "iana",
        extensions: ["stk"]
      },
      "application/ibe-key-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/ibe-pkg-reply+xml": {
        source: "iana",
        compressible: true
      },
      "application/ibe-pp-data": {
        source: "iana"
      },
      "application/iges": {
        source: "iana"
      },
      "application/im-iscomposing+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/index": {
        source: "iana"
      },
      "application/index.cmd": {
        source: "iana"
      },
      "application/index.obj": {
        source: "iana"
      },
      "application/index.response": {
        source: "iana"
      },
      "application/index.vnd": {
        source: "iana"
      },
      "application/inkml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ink", "inkml"]
      },
      "application/iotp": {
        source: "iana"
      },
      "application/ipfix": {
        source: "iana",
        extensions: ["ipfix"]
      },
      "application/ipp": {
        source: "iana"
      },
      "application/isup": {
        source: "iana"
      },
      "application/its+xml": {
        source: "iana",
        compressible: true,
        extensions: ["its"]
      },
      "application/java-archive": {
        source: "apache",
        compressible: false,
        extensions: ["jar", "war", "ear"]
      },
      "application/java-serialized-object": {
        source: "apache",
        compressible: false,
        extensions: ["ser"]
      },
      "application/java-vm": {
        source: "apache",
        compressible: false,
        extensions: ["class"]
      },
      "application/javascript": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["js", "mjs"]
      },
      "application/jf2feed+json": {
        source: "iana",
        compressible: true
      },
      "application/jose": {
        source: "iana"
      },
      "application/jose+json": {
        source: "iana",
        compressible: true
      },
      "application/jrd+json": {
        source: "iana",
        compressible: true
      },
      "application/jscalendar+json": {
        source: "iana",
        compressible: true
      },
      "application/json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["json", "map"]
      },
      "application/json-patch+json": {
        source: "iana",
        compressible: true
      },
      "application/json-seq": {
        source: "iana"
      },
      "application/json5": {
        extensions: ["json5"]
      },
      "application/jsonml+json": {
        source: "apache",
        compressible: true,
        extensions: ["jsonml"]
      },
      "application/jwk+json": {
        source: "iana",
        compressible: true
      },
      "application/jwk-set+json": {
        source: "iana",
        compressible: true
      },
      "application/jwt": {
        source: "iana"
      },
      "application/kpml-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/kpml-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/ld+json": {
        source: "iana",
        compressible: true,
        extensions: ["jsonld"]
      },
      "application/lgr+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lgr"]
      },
      "application/link-format": {
        source: "iana"
      },
      "application/load-control+xml": {
        source: "iana",
        compressible: true
      },
      "application/lost+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lostxml"]
      },
      "application/lostsync+xml": {
        source: "iana",
        compressible: true
      },
      "application/lpf+zip": {
        source: "iana",
        compressible: false
      },
      "application/lxf": {
        source: "iana"
      },
      "application/mac-binhex40": {
        source: "iana",
        extensions: ["hqx"]
      },
      "application/mac-compactpro": {
        source: "apache",
        extensions: ["cpt"]
      },
      "application/macwriteii": {
        source: "iana"
      },
      "application/mads+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mads"]
      },
      "application/manifest+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["webmanifest"]
      },
      "application/marc": {
        source: "iana",
        extensions: ["mrc"]
      },
      "application/marcxml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mrcx"]
      },
      "application/mathematica": {
        source: "iana",
        extensions: ["ma", "nb", "mb"]
      },
      "application/mathml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mathml"]
      },
      "application/mathml-content+xml": {
        source: "iana",
        compressible: true
      },
      "application/mathml-presentation+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-associated-procedure-description+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-deregister+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-envelope+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-msk+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-msk-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-protection-description+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-reception-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-register+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-register-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-schedule+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-user-service-description+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbox": {
        source: "iana",
        extensions: ["mbox"]
      },
      "application/media-policy-dataset+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpf"]
      },
      "application/media_control+xml": {
        source: "iana",
        compressible: true
      },
      "application/mediaservercontrol+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mscml"]
      },
      "application/merge-patch+json": {
        source: "iana",
        compressible: true
      },
      "application/metalink+xml": {
        source: "apache",
        compressible: true,
        extensions: ["metalink"]
      },
      "application/metalink4+xml": {
        source: "iana",
        compressible: true,
        extensions: ["meta4"]
      },
      "application/mets+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mets"]
      },
      "application/mf4": {
        source: "iana"
      },
      "application/mikey": {
        source: "iana"
      },
      "application/mipc": {
        source: "iana"
      },
      "application/missing-blocks+cbor-seq": {
        source: "iana"
      },
      "application/mmt-aei+xml": {
        source: "iana",
        compressible: true,
        extensions: ["maei"]
      },
      "application/mmt-usd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["musd"]
      },
      "application/mods+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mods"]
      },
      "application/moss-keys": {
        source: "iana"
      },
      "application/moss-signature": {
        source: "iana"
      },
      "application/mosskey-data": {
        source: "iana"
      },
      "application/mosskey-request": {
        source: "iana"
      },
      "application/mp21": {
        source: "iana",
        extensions: ["m21", "mp21"]
      },
      "application/mp4": {
        source: "iana",
        extensions: ["mp4s", "m4p"]
      },
      "application/mpeg4-generic": {
        source: "iana"
      },
      "application/mpeg4-iod": {
        source: "iana"
      },
      "application/mpeg4-iod-xmt": {
        source: "iana"
      },
      "application/mrb-consumer+xml": {
        source: "iana",
        compressible: true
      },
      "application/mrb-publish+xml": {
        source: "iana",
        compressible: true
      },
      "application/msc-ivr+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/msc-mixer+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/msword": {
        source: "iana",
        compressible: false,
        extensions: ["doc", "dot"]
      },
      "application/mud+json": {
        source: "iana",
        compressible: true
      },
      "application/multipart-core": {
        source: "iana"
      },
      "application/mxf": {
        source: "iana",
        extensions: ["mxf"]
      },
      "application/n-quads": {
        source: "iana",
        extensions: ["nq"]
      },
      "application/n-triples": {
        source: "iana",
        extensions: ["nt"]
      },
      "application/nasdata": {
        source: "iana"
      },
      "application/news-checkgroups": {
        source: "iana",
        charset: "US-ASCII"
      },
      "application/news-groupinfo": {
        source: "iana",
        charset: "US-ASCII"
      },
      "application/news-transmission": {
        source: "iana"
      },
      "application/nlsml+xml": {
        source: "iana",
        compressible: true
      },
      "application/node": {
        source: "iana",
        extensions: ["cjs"]
      },
      "application/nss": {
        source: "iana"
      },
      "application/oauth-authz-req+jwt": {
        source: "iana"
      },
      "application/oblivious-dns-message": {
        source: "iana"
      },
      "application/ocsp-request": {
        source: "iana"
      },
      "application/ocsp-response": {
        source: "iana"
      },
      "application/octet-stream": {
        source: "iana",
        compressible: false,
        extensions: ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"]
      },
      "application/oda": {
        source: "iana",
        extensions: ["oda"]
      },
      "application/odm+xml": {
        source: "iana",
        compressible: true
      },
      "application/odx": {
        source: "iana"
      },
      "application/oebps-package+xml": {
        source: "iana",
        compressible: true,
        extensions: ["opf"]
      },
      "application/ogg": {
        source: "iana",
        compressible: false,
        extensions: ["ogx"]
      },
      "application/omdoc+xml": {
        source: "apache",
        compressible: true,
        extensions: ["omdoc"]
      },
      "application/onenote": {
        source: "apache",
        extensions: ["onetoc", "onetoc2", "onetmp", "onepkg"]
      },
      "application/opc-nodeset+xml": {
        source: "iana",
        compressible: true
      },
      "application/oscore": {
        source: "iana"
      },
      "application/oxps": {
        source: "iana",
        extensions: ["oxps"]
      },
      "application/p21": {
        source: "iana"
      },
      "application/p21+zip": {
        source: "iana",
        compressible: false
      },
      "application/p2p-overlay+xml": {
        source: "iana",
        compressible: true,
        extensions: ["relo"]
      },
      "application/parityfec": {
        source: "iana"
      },
      "application/passport": {
        source: "iana"
      },
      "application/patch-ops-error+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xer"]
      },
      "application/pdf": {
        source: "iana",
        compressible: false,
        extensions: ["pdf"]
      },
      "application/pdx": {
        source: "iana"
      },
      "application/pem-certificate-chain": {
        source: "iana"
      },
      "application/pgp-encrypted": {
        source: "iana",
        compressible: false,
        extensions: ["pgp"]
      },
      "application/pgp-keys": {
        source: "iana",
        extensions: ["asc"]
      },
      "application/pgp-signature": {
        source: "iana",
        extensions: ["asc", "sig"]
      },
      "application/pics-rules": {
        source: "apache",
        extensions: ["prf"]
      },
      "application/pidf+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/pidf-diff+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/pkcs10": {
        source: "iana",
        extensions: ["p10"]
      },
      "application/pkcs12": {
        source: "iana"
      },
      "application/pkcs7-mime": {
        source: "iana",
        extensions: ["p7m", "p7c"]
      },
      "application/pkcs7-signature": {
        source: "iana",
        extensions: ["p7s"]
      },
      "application/pkcs8": {
        source: "iana",
        extensions: ["p8"]
      },
      "application/pkcs8-encrypted": {
        source: "iana"
      },
      "application/pkix-attr-cert": {
        source: "iana",
        extensions: ["ac"]
      },
      "application/pkix-cert": {
        source: "iana",
        extensions: ["cer"]
      },
      "application/pkix-crl": {
        source: "iana",
        extensions: ["crl"]
      },
      "application/pkix-pkipath": {
        source: "iana",
        extensions: ["pkipath"]
      },
      "application/pkixcmp": {
        source: "iana",
        extensions: ["pki"]
      },
      "application/pls+xml": {
        source: "iana",
        compressible: true,
        extensions: ["pls"]
      },
      "application/poc-settings+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/postscript": {
        source: "iana",
        compressible: true,
        extensions: ["ai", "eps", "ps"]
      },
      "application/ppsp-tracker+json": {
        source: "iana",
        compressible: true
      },
      "application/problem+json": {
        source: "iana",
        compressible: true
      },
      "application/problem+xml": {
        source: "iana",
        compressible: true
      },
      "application/provenance+xml": {
        source: "iana",
        compressible: true,
        extensions: ["provx"]
      },
      "application/prs.alvestrand.titrax-sheet": {
        source: "iana"
      },
      "application/prs.cww": {
        source: "iana",
        extensions: ["cww"]
      },
      "application/prs.cyn": {
        source: "iana",
        charset: "7-BIT"
      },
      "application/prs.hpub+zip": {
        source: "iana",
        compressible: false
      },
      "application/prs.nprend": {
        source: "iana"
      },
      "application/prs.plucker": {
        source: "iana"
      },
      "application/prs.rdf-xml-crypt": {
        source: "iana"
      },
      "application/prs.xsf+xml": {
        source: "iana",
        compressible: true
      },
      "application/pskc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["pskcxml"]
      },
      "application/pvd+json": {
        source: "iana",
        compressible: true
      },
      "application/qsig": {
        source: "iana"
      },
      "application/raml+yaml": {
        compressible: true,
        extensions: ["raml"]
      },
      "application/raptorfec": {
        source: "iana"
      },
      "application/rdap+json": {
        source: "iana",
        compressible: true
      },
      "application/rdf+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rdf", "owl"]
      },
      "application/reginfo+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rif"]
      },
      "application/relax-ng-compact-syntax": {
        source: "iana",
        extensions: ["rnc"]
      },
      "application/remote-printing": {
        source: "iana"
      },
      "application/reputon+json": {
        source: "iana",
        compressible: true
      },
      "application/resource-lists+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rl"]
      },
      "application/resource-lists-diff+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rld"]
      },
      "application/rfc+xml": {
        source: "iana",
        compressible: true
      },
      "application/riscos": {
        source: "iana"
      },
      "application/rlmi+xml": {
        source: "iana",
        compressible: true
      },
      "application/rls-services+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rs"]
      },
      "application/route-apd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rapd"]
      },
      "application/route-s-tsid+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sls"]
      },
      "application/route-usd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rusd"]
      },
      "application/rpki-ghostbusters": {
        source: "iana",
        extensions: ["gbr"]
      },
      "application/rpki-manifest": {
        source: "iana",
        extensions: ["mft"]
      },
      "application/rpki-publication": {
        source: "iana"
      },
      "application/rpki-roa": {
        source: "iana",
        extensions: ["roa"]
      },
      "application/rpki-updown": {
        source: "iana"
      },
      "application/rsd+xml": {
        source: "apache",
        compressible: true,
        extensions: ["rsd"]
      },
      "application/rss+xml": {
        source: "apache",
        compressible: true,
        extensions: ["rss"]
      },
      "application/rtf": {
        source: "iana",
        compressible: true,
        extensions: ["rtf"]
      },
      "application/rtploopback": {
        source: "iana"
      },
      "application/rtx": {
        source: "iana"
      },
      "application/samlassertion+xml": {
        source: "iana",
        compressible: true
      },
      "application/samlmetadata+xml": {
        source: "iana",
        compressible: true
      },
      "application/sarif+json": {
        source: "iana",
        compressible: true
      },
      "application/sarif-external-properties+json": {
        source: "iana",
        compressible: true
      },
      "application/sbe": {
        source: "iana"
      },
      "application/sbml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sbml"]
      },
      "application/scaip+xml": {
        source: "iana",
        compressible: true
      },
      "application/scim+json": {
        source: "iana",
        compressible: true
      },
      "application/scvp-cv-request": {
        source: "iana",
        extensions: ["scq"]
      },
      "application/scvp-cv-response": {
        source: "iana",
        extensions: ["scs"]
      },
      "application/scvp-vp-request": {
        source: "iana",
        extensions: ["spq"]
      },
      "application/scvp-vp-response": {
        source: "iana",
        extensions: ["spp"]
      },
      "application/sdp": {
        source: "iana",
        extensions: ["sdp"]
      },
      "application/secevent+jwt": {
        source: "iana"
      },
      "application/senml+cbor": {
        source: "iana"
      },
      "application/senml+json": {
        source: "iana",
        compressible: true
      },
      "application/senml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["senmlx"]
      },
      "application/senml-etch+cbor": {
        source: "iana"
      },
      "application/senml-etch+json": {
        source: "iana",
        compressible: true
      },
      "application/senml-exi": {
        source: "iana"
      },
      "application/sensml+cbor": {
        source: "iana"
      },
      "application/sensml+json": {
        source: "iana",
        compressible: true
      },
      "application/sensml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sensmlx"]
      },
      "application/sensml-exi": {
        source: "iana"
      },
      "application/sep+xml": {
        source: "iana",
        compressible: true
      },
      "application/sep-exi": {
        source: "iana"
      },
      "application/session-info": {
        source: "iana"
      },
      "application/set-payment": {
        source: "iana"
      },
      "application/set-payment-initiation": {
        source: "iana",
        extensions: ["setpay"]
      },
      "application/set-registration": {
        source: "iana"
      },
      "application/set-registration-initiation": {
        source: "iana",
        extensions: ["setreg"]
      },
      "application/sgml": {
        source: "iana"
      },
      "application/sgml-open-catalog": {
        source: "iana"
      },
      "application/shf+xml": {
        source: "iana",
        compressible: true,
        extensions: ["shf"]
      },
      "application/sieve": {
        source: "iana",
        extensions: ["siv", "sieve"]
      },
      "application/simple-filter+xml": {
        source: "iana",
        compressible: true
      },
      "application/simple-message-summary": {
        source: "iana"
      },
      "application/simplesymbolcontainer": {
        source: "iana"
      },
      "application/sipc": {
        source: "iana"
      },
      "application/slate": {
        source: "iana"
      },
      "application/smil": {
        source: "iana"
      },
      "application/smil+xml": {
        source: "iana",
        compressible: true,
        extensions: ["smi", "smil"]
      },
      "application/smpte336m": {
        source: "iana"
      },
      "application/soap+fastinfoset": {
        source: "iana"
      },
      "application/soap+xml": {
        source: "iana",
        compressible: true
      },
      "application/sparql-query": {
        source: "iana",
        extensions: ["rq"]
      },
      "application/sparql-results+xml": {
        source: "iana",
        compressible: true,
        extensions: ["srx"]
      },
      "application/spdx+json": {
        source: "iana",
        compressible: true
      },
      "application/spirits-event+xml": {
        source: "iana",
        compressible: true
      },
      "application/sql": {
        source: "iana"
      },
      "application/srgs": {
        source: "iana",
        extensions: ["gram"]
      },
      "application/srgs+xml": {
        source: "iana",
        compressible: true,
        extensions: ["grxml"]
      },
      "application/sru+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sru"]
      },
      "application/ssdl+xml": {
        source: "apache",
        compressible: true,
        extensions: ["ssdl"]
      },
      "application/ssml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ssml"]
      },
      "application/stix+json": {
        source: "iana",
        compressible: true
      },
      "application/swid+xml": {
        source: "iana",
        compressible: true,
        extensions: ["swidtag"]
      },
      "application/tamp-apex-update": {
        source: "iana"
      },
      "application/tamp-apex-update-confirm": {
        source: "iana"
      },
      "application/tamp-community-update": {
        source: "iana"
      },
      "application/tamp-community-update-confirm": {
        source: "iana"
      },
      "application/tamp-error": {
        source: "iana"
      },
      "application/tamp-sequence-adjust": {
        source: "iana"
      },
      "application/tamp-sequence-adjust-confirm": {
        source: "iana"
      },
      "application/tamp-status-query": {
        source: "iana"
      },
      "application/tamp-status-response": {
        source: "iana"
      },
      "application/tamp-update": {
        source: "iana"
      },
      "application/tamp-update-confirm": {
        source: "iana"
      },
      "application/tar": {
        compressible: true
      },
      "application/taxii+json": {
        source: "iana",
        compressible: true
      },
      "application/td+json": {
        source: "iana",
        compressible: true
      },
      "application/tei+xml": {
        source: "iana",
        compressible: true,
        extensions: ["tei", "teicorpus"]
      },
      "application/tetra_isi": {
        source: "iana"
      },
      "application/thraud+xml": {
        source: "iana",
        compressible: true,
        extensions: ["tfi"]
      },
      "application/timestamp-query": {
        source: "iana"
      },
      "application/timestamp-reply": {
        source: "iana"
      },
      "application/timestamped-data": {
        source: "iana",
        extensions: ["tsd"]
      },
      "application/tlsrpt+gzip": {
        source: "iana"
      },
      "application/tlsrpt+json": {
        source: "iana",
        compressible: true
      },
      "application/tnauthlist": {
        source: "iana"
      },
      "application/token-introspection+jwt": {
        source: "iana"
      },
      "application/toml": {
        compressible: true,
        extensions: ["toml"]
      },
      "application/trickle-ice-sdpfrag": {
        source: "iana"
      },
      "application/trig": {
        source: "iana",
        extensions: ["trig"]
      },
      "application/ttml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ttml"]
      },
      "application/tve-trigger": {
        source: "iana"
      },
      "application/tzif": {
        source: "iana"
      },
      "application/tzif-leap": {
        source: "iana"
      },
      "application/ubjson": {
        compressible: false,
        extensions: ["ubj"]
      },
      "application/ulpfec": {
        source: "iana"
      },
      "application/urc-grpsheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/urc-ressheet+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rsheet"]
      },
      "application/urc-targetdesc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["td"]
      },
      "application/urc-uisocketdesc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vcard+json": {
        source: "iana",
        compressible: true
      },
      "application/vcard+xml": {
        source: "iana",
        compressible: true
      },
      "application/vemmi": {
        source: "iana"
      },
      "application/vividence.scriptfile": {
        source: "apache"
      },
      "application/vnd.1000minds.decision-model+xml": {
        source: "iana",
        compressible: true,
        extensions: ["1km"]
      },
      "application/vnd.3gpp-prose+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp-prose-pc3ch+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp-v2x-local-service-information": {
        source: "iana"
      },
      "application/vnd.3gpp.5gnas": {
        source: "iana"
      },
      "application/vnd.3gpp.access-transfer-events+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.bsf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.gmop+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.gtpc": {
        source: "iana"
      },
      "application/vnd.3gpp.interworking-data": {
        source: "iana"
      },
      "application/vnd.3gpp.lpp": {
        source: "iana"
      },
      "application/vnd.3gpp.mc-signalling-ear": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-affiliation-command+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-payload": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-service-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-signalling": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-ue-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-user-profile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-affiliation-command+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-floor-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-location-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-mbms-usage-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-service-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-signed+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-ue-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-ue-init-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-user-profile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-affiliation-command+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-affiliation-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-location-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-mbms-usage-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-service-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-transmission-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-ue-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-user-profile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mid-call+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.ngap": {
        source: "iana"
      },
      "application/vnd.3gpp.pfcp": {
        source: "iana"
      },
      "application/vnd.3gpp.pic-bw-large": {
        source: "iana",
        extensions: ["plb"]
      },
      "application/vnd.3gpp.pic-bw-small": {
        source: "iana",
        extensions: ["psb"]
      },
      "application/vnd.3gpp.pic-bw-var": {
        source: "iana",
        extensions: ["pvb"]
      },
      "application/vnd.3gpp.s1ap": {
        source: "iana"
      },
      "application/vnd.3gpp.sms": {
        source: "iana"
      },
      "application/vnd.3gpp.sms+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.srvcc-ext+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.srvcc-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.state-and-event-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.ussd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp2.bcmcsinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp2.sms": {
        source: "iana"
      },
      "application/vnd.3gpp2.tcap": {
        source: "iana",
        extensions: ["tcap"]
      },
      "application/vnd.3lightssoftware.imagescal": {
        source: "iana"
      },
      "application/vnd.3m.post-it-notes": {
        source: "iana",
        extensions: ["pwn"]
      },
      "application/vnd.accpac.simply.aso": {
        source: "iana",
        extensions: ["aso"]
      },
      "application/vnd.accpac.simply.imp": {
        source: "iana",
        extensions: ["imp"]
      },
      "application/vnd.acucobol": {
        source: "iana",
        extensions: ["acu"]
      },
      "application/vnd.acucorp": {
        source: "iana",
        extensions: ["atc", "acutc"]
      },
      "application/vnd.adobe.air-application-installer-package+zip": {
        source: "apache",
        compressible: false,
        extensions: ["air"]
      },
      "application/vnd.adobe.flash.movie": {
        source: "iana"
      },
      "application/vnd.adobe.formscentral.fcdt": {
        source: "iana",
        extensions: ["fcdt"]
      },
      "application/vnd.adobe.fxp": {
        source: "iana",
        extensions: ["fxp", "fxpl"]
      },
      "application/vnd.adobe.partial-upload": {
        source: "iana"
      },
      "application/vnd.adobe.xdp+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xdp"]
      },
      "application/vnd.adobe.xfdf": {
        source: "iana",
        extensions: ["xfdf"]
      },
      "application/vnd.aether.imp": {
        source: "iana"
      },
      "application/vnd.afpc.afplinedata": {
        source: "iana"
      },
      "application/vnd.afpc.afplinedata-pagedef": {
        source: "iana"
      },
      "application/vnd.afpc.cmoca-cmresource": {
        source: "iana"
      },
      "application/vnd.afpc.foca-charset": {
        source: "iana"
      },
      "application/vnd.afpc.foca-codedfont": {
        source: "iana"
      },
      "application/vnd.afpc.foca-codepage": {
        source: "iana"
      },
      "application/vnd.afpc.modca": {
        source: "iana"
      },
      "application/vnd.afpc.modca-cmtable": {
        source: "iana"
      },
      "application/vnd.afpc.modca-formdef": {
        source: "iana"
      },
      "application/vnd.afpc.modca-mediummap": {
        source: "iana"
      },
      "application/vnd.afpc.modca-objectcontainer": {
        source: "iana"
      },
      "application/vnd.afpc.modca-overlay": {
        source: "iana"
      },
      "application/vnd.afpc.modca-pagesegment": {
        source: "iana"
      },
      "application/vnd.age": {
        source: "iana",
        extensions: ["age"]
      },
      "application/vnd.ah-barcode": {
        source: "iana"
      },
      "application/vnd.ahead.space": {
        source: "iana",
        extensions: ["ahead"]
      },
      "application/vnd.airzip.filesecure.azf": {
        source: "iana",
        extensions: ["azf"]
      },
      "application/vnd.airzip.filesecure.azs": {
        source: "iana",
        extensions: ["azs"]
      },
      "application/vnd.amadeus+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.amazon.ebook": {
        source: "apache",
        extensions: ["azw"]
      },
      "application/vnd.amazon.mobi8-ebook": {
        source: "iana"
      },
      "application/vnd.americandynamics.acc": {
        source: "iana",
        extensions: ["acc"]
      },
      "application/vnd.amiga.ami": {
        source: "iana",
        extensions: ["ami"]
      },
      "application/vnd.amundsen.maze+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.android.ota": {
        source: "iana"
      },
      "application/vnd.android.package-archive": {
        source: "apache",
        compressible: false,
        extensions: ["apk"]
      },
      "application/vnd.anki": {
        source: "iana"
      },
      "application/vnd.anser-web-certificate-issue-initiation": {
        source: "iana",
        extensions: ["cii"]
      },
      "application/vnd.anser-web-funds-transfer-initiation": {
        source: "apache",
        extensions: ["fti"]
      },
      "application/vnd.antix.game-component": {
        source: "iana",
        extensions: ["atx"]
      },
      "application/vnd.apache.arrow.file": {
        source: "iana"
      },
      "application/vnd.apache.arrow.stream": {
        source: "iana"
      },
      "application/vnd.apache.thrift.binary": {
        source: "iana"
      },
      "application/vnd.apache.thrift.compact": {
        source: "iana"
      },
      "application/vnd.apache.thrift.json": {
        source: "iana"
      },
      "application/vnd.api+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.aplextor.warrp+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.apothekende.reservation+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.apple.installer+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpkg"]
      },
      "application/vnd.apple.keynote": {
        source: "iana",
        extensions: ["key"]
      },
      "application/vnd.apple.mpegurl": {
        source: "iana",
        extensions: ["m3u8"]
      },
      "application/vnd.apple.numbers": {
        source: "iana",
        extensions: ["numbers"]
      },
      "application/vnd.apple.pages": {
        source: "iana",
        extensions: ["pages"]
      },
      "application/vnd.apple.pkpass": {
        compressible: false,
        extensions: ["pkpass"]
      },
      "application/vnd.arastra.swi": {
        source: "iana"
      },
      "application/vnd.aristanetworks.swi": {
        source: "iana",
        extensions: ["swi"]
      },
      "application/vnd.artisan+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.artsquare": {
        source: "iana"
      },
      "application/vnd.astraea-software.iota": {
        source: "iana",
        extensions: ["iota"]
      },
      "application/vnd.audiograph": {
        source: "iana",
        extensions: ["aep"]
      },
      "application/vnd.autopackage": {
        source: "iana"
      },
      "application/vnd.avalon+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.avistar+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.balsamiq.bmml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["bmml"]
      },
      "application/vnd.balsamiq.bmpr": {
        source: "iana"
      },
      "application/vnd.banana-accounting": {
        source: "iana"
      },
      "application/vnd.bbf.usp.error": {
        source: "iana"
      },
      "application/vnd.bbf.usp.msg": {
        source: "iana"
      },
      "application/vnd.bbf.usp.msg+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.bekitzur-stech+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.bint.med-content": {
        source: "iana"
      },
      "application/vnd.biopax.rdf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.blink-idb-value-wrapper": {
        source: "iana"
      },
      "application/vnd.blueice.multipass": {
        source: "iana",
        extensions: ["mpm"]
      },
      "application/vnd.bluetooth.ep.oob": {
        source: "iana"
      },
      "application/vnd.bluetooth.le.oob": {
        source: "iana"
      },
      "application/vnd.bmi": {
        source: "iana",
        extensions: ["bmi"]
      },
      "application/vnd.bpf": {
        source: "iana"
      },
      "application/vnd.bpf3": {
        source: "iana"
      },
      "application/vnd.businessobjects": {
        source: "iana",
        extensions: ["rep"]
      },
      "application/vnd.byu.uapi+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cab-jscript": {
        source: "iana"
      },
      "application/vnd.canon-cpdl": {
        source: "iana"
      },
      "application/vnd.canon-lips": {
        source: "iana"
      },
      "application/vnd.capasystems-pg+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cendio.thinlinc.clientconf": {
        source: "iana"
      },
      "application/vnd.century-systems.tcp_stream": {
        source: "iana"
      },
      "application/vnd.chemdraw+xml": {
        source: "iana",
        compressible: true,
        extensions: ["cdxml"]
      },
      "application/vnd.chess-pgn": {
        source: "iana"
      },
      "application/vnd.chipnuts.karaoke-mmd": {
        source: "iana",
        extensions: ["mmd"]
      },
      "application/vnd.ciedi": {
        source: "iana"
      },
      "application/vnd.cinderella": {
        source: "iana",
        extensions: ["cdy"]
      },
      "application/vnd.cirpack.isdn-ext": {
        source: "iana"
      },
      "application/vnd.citationstyles.style+xml": {
        source: "iana",
        compressible: true,
        extensions: ["csl"]
      },
      "application/vnd.claymore": {
        source: "iana",
        extensions: ["cla"]
      },
      "application/vnd.cloanto.rp9": {
        source: "iana",
        extensions: ["rp9"]
      },
      "application/vnd.clonk.c4group": {
        source: "iana",
        extensions: ["c4g", "c4d", "c4f", "c4p", "c4u"]
      },
      "application/vnd.cluetrust.cartomobile-config": {
        source: "iana",
        extensions: ["c11amc"]
      },
      "application/vnd.cluetrust.cartomobile-config-pkg": {
        source: "iana",
        extensions: ["c11amz"]
      },
      "application/vnd.coffeescript": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.document": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.document-template": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.presentation": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.presentation-template": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.spreadsheet": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.spreadsheet-template": {
        source: "iana"
      },
      "application/vnd.collection+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.collection.doc+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.collection.next+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.comicbook+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.comicbook-rar": {
        source: "iana"
      },
      "application/vnd.commerce-battelle": {
        source: "iana"
      },
      "application/vnd.commonspace": {
        source: "iana",
        extensions: ["csp"]
      },
      "application/vnd.contact.cmsg": {
        source: "iana",
        extensions: ["cdbcmsg"]
      },
      "application/vnd.coreos.ignition+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cosmocaller": {
        source: "iana",
        extensions: ["cmc"]
      },
      "application/vnd.crick.clicker": {
        source: "iana",
        extensions: ["clkx"]
      },
      "application/vnd.crick.clicker.keyboard": {
        source: "iana",
        extensions: ["clkk"]
      },
      "application/vnd.crick.clicker.palette": {
        source: "iana",
        extensions: ["clkp"]
      },
      "application/vnd.crick.clicker.template": {
        source: "iana",
        extensions: ["clkt"]
      },
      "application/vnd.crick.clicker.wordbank": {
        source: "iana",
        extensions: ["clkw"]
      },
      "application/vnd.criticaltools.wbs+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wbs"]
      },
      "application/vnd.cryptii.pipe+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.crypto-shade-file": {
        source: "iana"
      },
      "application/vnd.cryptomator.encrypted": {
        source: "iana"
      },
      "application/vnd.cryptomator.vault": {
        source: "iana"
      },
      "application/vnd.ctc-posml": {
        source: "iana",
        extensions: ["pml"]
      },
      "application/vnd.ctct.ws+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cups-pdf": {
        source: "iana"
      },
      "application/vnd.cups-postscript": {
        source: "iana"
      },
      "application/vnd.cups-ppd": {
        source: "iana",
        extensions: ["ppd"]
      },
      "application/vnd.cups-raster": {
        source: "iana"
      },
      "application/vnd.cups-raw": {
        source: "iana"
      },
      "application/vnd.curl": {
        source: "iana"
      },
      "application/vnd.curl.car": {
        source: "apache",
        extensions: ["car"]
      },
      "application/vnd.curl.pcurl": {
        source: "apache",
        extensions: ["pcurl"]
      },
      "application/vnd.cyan.dean.root+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cybank": {
        source: "iana"
      },
      "application/vnd.cyclonedx+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cyclonedx+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.d2l.coursepackage1p0+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.d3m-dataset": {
        source: "iana"
      },
      "application/vnd.d3m-problem": {
        source: "iana"
      },
      "application/vnd.dart": {
        source: "iana",
        compressible: true,
        extensions: ["dart"]
      },
      "application/vnd.data-vision.rdz": {
        source: "iana",
        extensions: ["rdz"]
      },
      "application/vnd.datapackage+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dataresource+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dbf": {
        source: "iana",
        extensions: ["dbf"]
      },
      "application/vnd.debian.binary-package": {
        source: "iana"
      },
      "application/vnd.dece.data": {
        source: "iana",
        extensions: ["uvf", "uvvf", "uvd", "uvvd"]
      },
      "application/vnd.dece.ttml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["uvt", "uvvt"]
      },
      "application/vnd.dece.unspecified": {
        source: "iana",
        extensions: ["uvx", "uvvx"]
      },
      "application/vnd.dece.zip": {
        source: "iana",
        extensions: ["uvz", "uvvz"]
      },
      "application/vnd.denovo.fcselayout-link": {
        source: "iana",
        extensions: ["fe_launch"]
      },
      "application/vnd.desmume.movie": {
        source: "iana"
      },
      "application/vnd.dir-bi.plate-dl-nosuffix": {
        source: "iana"
      },
      "application/vnd.dm.delegation+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dna": {
        source: "iana",
        extensions: ["dna"]
      },
      "application/vnd.document+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dolby.mlp": {
        source: "apache",
        extensions: ["mlp"]
      },
      "application/vnd.dolby.mobile.1": {
        source: "iana"
      },
      "application/vnd.dolby.mobile.2": {
        source: "iana"
      },
      "application/vnd.doremir.scorecloud-binary-document": {
        source: "iana"
      },
      "application/vnd.dpgraph": {
        source: "iana",
        extensions: ["dpg"]
      },
      "application/vnd.dreamfactory": {
        source: "iana",
        extensions: ["dfac"]
      },
      "application/vnd.drive+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ds-keypoint": {
        source: "apache",
        extensions: ["kpxx"]
      },
      "application/vnd.dtg.local": {
        source: "iana"
      },
      "application/vnd.dtg.local.flash": {
        source: "iana"
      },
      "application/vnd.dtg.local.html": {
        source: "iana"
      },
      "application/vnd.dvb.ait": {
        source: "iana",
        extensions: ["ait"]
      },
      "application/vnd.dvb.dvbisl+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.dvbj": {
        source: "iana"
      },
      "application/vnd.dvb.esgcontainer": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcdftnotifaccess": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgaccess": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgaccess2": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgpdd": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcroaming": {
        source: "iana"
      },
      "application/vnd.dvb.iptv.alfec-base": {
        source: "iana"
      },
      "application/vnd.dvb.iptv.alfec-enhancement": {
        source: "iana"
      },
      "application/vnd.dvb.notif-aggregate-root+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-container+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-generic+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-ia-msglist+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-ia-registration-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-ia-registration-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-init+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.pfr": {
        source: "iana"
      },
      "application/vnd.dvb.service": {
        source: "iana",
        extensions: ["svc"]
      },
      "application/vnd.dxr": {
        source: "iana"
      },
      "application/vnd.dynageo": {
        source: "iana",
        extensions: ["geo"]
      },
      "application/vnd.dzr": {
        source: "iana"
      },
      "application/vnd.easykaraoke.cdgdownload": {
        source: "iana"
      },
      "application/vnd.ecdis-update": {
        source: "iana"
      },
      "application/vnd.ecip.rlp": {
        source: "iana"
      },
      "application/vnd.eclipse.ditto+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ecowin.chart": {
        source: "iana",
        extensions: ["mag"]
      },
      "application/vnd.ecowin.filerequest": {
        source: "iana"
      },
      "application/vnd.ecowin.fileupdate": {
        source: "iana"
      },
      "application/vnd.ecowin.series": {
        source: "iana"
      },
      "application/vnd.ecowin.seriesrequest": {
        source: "iana"
      },
      "application/vnd.ecowin.seriesupdate": {
        source: "iana"
      },
      "application/vnd.efi.img": {
        source: "iana"
      },
      "application/vnd.efi.iso": {
        source: "iana"
      },
      "application/vnd.emclient.accessrequest+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.enliven": {
        source: "iana",
        extensions: ["nml"]
      },
      "application/vnd.enphase.envoy": {
        source: "iana"
      },
      "application/vnd.eprints.data+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.epson.esf": {
        source: "iana",
        extensions: ["esf"]
      },
      "application/vnd.epson.msf": {
        source: "iana",
        extensions: ["msf"]
      },
      "application/vnd.epson.quickanime": {
        source: "iana",
        extensions: ["qam"]
      },
      "application/vnd.epson.salt": {
        source: "iana",
        extensions: ["slt"]
      },
      "application/vnd.epson.ssf": {
        source: "iana",
        extensions: ["ssf"]
      },
      "application/vnd.ericsson.quickcall": {
        source: "iana"
      },
      "application/vnd.espass-espass+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.eszigno3+xml": {
        source: "iana",
        compressible: true,
        extensions: ["es3", "et3"]
      },
      "application/vnd.etsi.aoc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.asic-e+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.etsi.asic-s+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.etsi.cug+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvcommand+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvdiscovery+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsad-bc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsad-cod+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsad-npvr+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvservice+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsync+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvueprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.mcid+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.mheg5": {
        source: "iana"
      },
      "application/vnd.etsi.overload-control-policy-dataset+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.pstn+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.sci+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.simservs+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.timestamp-token": {
        source: "iana"
      },
      "application/vnd.etsi.tsl+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.tsl.der": {
        source: "iana"
      },
      "application/vnd.eu.kasparian.car+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.eudora.data": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.profile": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.settings": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.theme": {
        source: "iana"
      },
      "application/vnd.exstream-empower+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.exstream-package": {
        source: "iana"
      },
      "application/vnd.ezpix-album": {
        source: "iana",
        extensions: ["ez2"]
      },
      "application/vnd.ezpix-package": {
        source: "iana",
        extensions: ["ez3"]
      },
      "application/vnd.f-secure.mobile": {
        source: "iana"
      },
      "application/vnd.familysearch.gedcom+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.fastcopy-disk-image": {
        source: "iana"
      },
      "application/vnd.fdf": {
        source: "iana",
        extensions: ["fdf"]
      },
      "application/vnd.fdsn.mseed": {
        source: "iana",
        extensions: ["mseed"]
      },
      "application/vnd.fdsn.seed": {
        source: "iana",
        extensions: ["seed", "dataless"]
      },
      "application/vnd.ffsns": {
        source: "iana"
      },
      "application/vnd.ficlab.flb+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.filmit.zfc": {
        source: "iana"
      },
      "application/vnd.fints": {
        source: "iana"
      },
      "application/vnd.firemonkeys.cloudcell": {
        source: "iana"
      },
      "application/vnd.flographit": {
        source: "iana",
        extensions: ["gph"]
      },
      "application/vnd.fluxtime.clip": {
        source: "iana",
        extensions: ["ftc"]
      },
      "application/vnd.font-fontforge-sfd": {
        source: "iana"
      },
      "application/vnd.framemaker": {
        source: "iana",
        extensions: ["fm", "frame", "maker", "book"]
      },
      "application/vnd.frogans.fnc": {
        source: "iana",
        extensions: ["fnc"]
      },
      "application/vnd.frogans.ltf": {
        source: "iana",
        extensions: ["ltf"]
      },
      "application/vnd.fsc.weblaunch": {
        source: "iana",
        extensions: ["fsc"]
      },
      "application/vnd.fujifilm.fb.docuworks": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.docuworks.binder": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.docuworks.container": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.jfi+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.fujitsu.oasys": {
        source: "iana",
        extensions: ["oas"]
      },
      "application/vnd.fujitsu.oasys2": {
        source: "iana",
        extensions: ["oa2"]
      },
      "application/vnd.fujitsu.oasys3": {
        source: "iana",
        extensions: ["oa3"]
      },
      "application/vnd.fujitsu.oasysgp": {
        source: "iana",
        extensions: ["fg5"]
      },
      "application/vnd.fujitsu.oasysprs": {
        source: "iana",
        extensions: ["bh2"]
      },
      "application/vnd.fujixerox.art-ex": {
        source: "iana"
      },
      "application/vnd.fujixerox.art4": {
        source: "iana"
      },
      "application/vnd.fujixerox.ddd": {
        source: "iana",
        extensions: ["ddd"]
      },
      "application/vnd.fujixerox.docuworks": {
        source: "iana",
        extensions: ["xdw"]
      },
      "application/vnd.fujixerox.docuworks.binder": {
        source: "iana",
        extensions: ["xbd"]
      },
      "application/vnd.fujixerox.docuworks.container": {
        source: "iana"
      },
      "application/vnd.fujixerox.hbpl": {
        source: "iana"
      },
      "application/vnd.fut-misnet": {
        source: "iana"
      },
      "application/vnd.futoin+cbor": {
        source: "iana"
      },
      "application/vnd.futoin+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.fuzzysheet": {
        source: "iana",
        extensions: ["fzs"]
      },
      "application/vnd.genomatix.tuxedo": {
        source: "iana",
        extensions: ["txd"]
      },
      "application/vnd.gentics.grd+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.geo+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.geocube+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.geogebra.file": {
        source: "iana",
        extensions: ["ggb"]
      },
      "application/vnd.geogebra.slides": {
        source: "iana"
      },
      "application/vnd.geogebra.tool": {
        source: "iana",
        extensions: ["ggt"]
      },
      "application/vnd.geometry-explorer": {
        source: "iana",
        extensions: ["gex", "gre"]
      },
      "application/vnd.geonext": {
        source: "iana",
        extensions: ["gxt"]
      },
      "application/vnd.geoplan": {
        source: "iana",
        extensions: ["g2w"]
      },
      "application/vnd.geospace": {
        source: "iana",
        extensions: ["g3w"]
      },
      "application/vnd.gerber": {
        source: "iana"
      },
      "application/vnd.globalplatform.card-content-mgt": {
        source: "iana"
      },
      "application/vnd.globalplatform.card-content-mgt-response": {
        source: "iana"
      },
      "application/vnd.gmx": {
        source: "iana",
        extensions: ["gmx"]
      },
      "application/vnd.google-apps.document": {
        compressible: false,
        extensions: ["gdoc"]
      },
      "application/vnd.google-apps.presentation": {
        compressible: false,
        extensions: ["gslides"]
      },
      "application/vnd.google-apps.spreadsheet": {
        compressible: false,
        extensions: ["gsheet"]
      },
      "application/vnd.google-earth.kml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["kml"]
      },
      "application/vnd.google-earth.kmz": {
        source: "iana",
        compressible: false,
        extensions: ["kmz"]
      },
      "application/vnd.gov.sk.e-form+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.gov.sk.e-form+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.gov.sk.xmldatacontainer+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.grafeq": {
        source: "iana",
        extensions: ["gqf", "gqs"]
      },
      "application/vnd.gridmp": {
        source: "iana"
      },
      "application/vnd.groove-account": {
        source: "iana",
        extensions: ["gac"]
      },
      "application/vnd.groove-help": {
        source: "iana",
        extensions: ["ghf"]
      },
      "application/vnd.groove-identity-message": {
        source: "iana",
        extensions: ["gim"]
      },
      "application/vnd.groove-injector": {
        source: "iana",
        extensions: ["grv"]
      },
      "application/vnd.groove-tool-message": {
        source: "iana",
        extensions: ["gtm"]
      },
      "application/vnd.groove-tool-template": {
        source: "iana",
        extensions: ["tpl"]
      },
      "application/vnd.groove-vcard": {
        source: "iana",
        extensions: ["vcg"]
      },
      "application/vnd.hal+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hal+xml": {
        source: "iana",
        compressible: true,
        extensions: ["hal"]
      },
      "application/vnd.handheld-entertainment+xml": {
        source: "iana",
        compressible: true,
        extensions: ["zmm"]
      },
      "application/vnd.hbci": {
        source: "iana",
        extensions: ["hbci"]
      },
      "application/vnd.hc+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hcl-bireports": {
        source: "iana"
      },
      "application/vnd.hdt": {
        source: "iana"
      },
      "application/vnd.heroku+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hhe.lesson-player": {
        source: "iana",
        extensions: ["les"]
      },
      "application/vnd.hl7cda+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.hl7v2+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.hp-hpgl": {
        source: "iana",
        extensions: ["hpgl"]
      },
      "application/vnd.hp-hpid": {
        source: "iana",
        extensions: ["hpid"]
      },
      "application/vnd.hp-hps": {
        source: "iana",
        extensions: ["hps"]
      },
      "application/vnd.hp-jlyt": {
        source: "iana",
        extensions: ["jlt"]
      },
      "application/vnd.hp-pcl": {
        source: "iana",
        extensions: ["pcl"]
      },
      "application/vnd.hp-pclxl": {
        source: "iana",
        extensions: ["pclxl"]
      },
      "application/vnd.httphone": {
        source: "iana"
      },
      "application/vnd.hydrostatix.sof-data": {
        source: "iana",
        extensions: ["sfd-hdstx"]
      },
      "application/vnd.hyper+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hyper-item+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hyperdrive+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hzn-3d-crossword": {
        source: "iana"
      },
      "application/vnd.ibm.afplinedata": {
        source: "iana"
      },
      "application/vnd.ibm.electronic-media": {
        source: "iana"
      },
      "application/vnd.ibm.minipay": {
        source: "iana",
        extensions: ["mpy"]
      },
      "application/vnd.ibm.modcap": {
        source: "iana",
        extensions: ["afp", "listafp", "list3820"]
      },
      "application/vnd.ibm.rights-management": {
        source: "iana",
        extensions: ["irm"]
      },
      "application/vnd.ibm.secure-container": {
        source: "iana",
        extensions: ["sc"]
      },
      "application/vnd.iccprofile": {
        source: "iana",
        extensions: ["icc", "icm"]
      },
      "application/vnd.ieee.1905": {
        source: "iana"
      },
      "application/vnd.igloader": {
        source: "iana",
        extensions: ["igl"]
      },
      "application/vnd.imagemeter.folder+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.imagemeter.image+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.immervision-ivp": {
        source: "iana",
        extensions: ["ivp"]
      },
      "application/vnd.immervision-ivu": {
        source: "iana",
        extensions: ["ivu"]
      },
      "application/vnd.ims.imsccv1p1": {
        source: "iana"
      },
      "application/vnd.ims.imsccv1p2": {
        source: "iana"
      },
      "application/vnd.ims.imsccv1p3": {
        source: "iana"
      },
      "application/vnd.ims.lis.v2.result+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolconsumerprofile+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolproxy+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolproxy.id+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolsettings+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolsettings.simple+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.informedcontrol.rms+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.informix-visionary": {
        source: "iana"
      },
      "application/vnd.infotech.project": {
        source: "iana"
      },
      "application/vnd.infotech.project+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.innopath.wamp.notification": {
        source: "iana"
      },
      "application/vnd.insors.igm": {
        source: "iana",
        extensions: ["igm"]
      },
      "application/vnd.intercon.formnet": {
        source: "iana",
        extensions: ["xpw", "xpx"]
      },
      "application/vnd.intergeo": {
        source: "iana",
        extensions: ["i2g"]
      },
      "application/vnd.intertrust.digibox": {
        source: "iana"
      },
      "application/vnd.intertrust.nncp": {
        source: "iana"
      },
      "application/vnd.intu.qbo": {
        source: "iana",
        extensions: ["qbo"]
      },
      "application/vnd.intu.qfx": {
        source: "iana",
        extensions: ["qfx"]
      },
      "application/vnd.iptc.g2.catalogitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.conceptitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.knowledgeitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.newsitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.newsmessage+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.packageitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.planningitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ipunplugged.rcprofile": {
        source: "iana",
        extensions: ["rcprofile"]
      },
      "application/vnd.irepository.package+xml": {
        source: "iana",
        compressible: true,
        extensions: ["irp"]
      },
      "application/vnd.is-xpr": {
        source: "iana",
        extensions: ["xpr"]
      },
      "application/vnd.isac.fcs": {
        source: "iana",
        extensions: ["fcs"]
      },
      "application/vnd.iso11783-10+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.jam": {
        source: "iana",
        extensions: ["jam"]
      },
      "application/vnd.japannet-directory-service": {
        source: "iana"
      },
      "application/vnd.japannet-jpnstore-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-payment-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-registration": {
        source: "iana"
      },
      "application/vnd.japannet-registration-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-setstore-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-verification": {
        source: "iana"
      },
      "application/vnd.japannet-verification-wakeup": {
        source: "iana"
      },
      "application/vnd.jcp.javame.midlet-rms": {
        source: "iana",
        extensions: ["rms"]
      },
      "application/vnd.jisp": {
        source: "iana",
        extensions: ["jisp"]
      },
      "application/vnd.joost.joda-archive": {
        source: "iana",
        extensions: ["joda"]
      },
      "application/vnd.jsk.isdn-ngn": {
        source: "iana"
      },
      "application/vnd.kahootz": {
        source: "iana",
        extensions: ["ktz", "ktr"]
      },
      "application/vnd.kde.karbon": {
        source: "iana",
        extensions: ["karbon"]
      },
      "application/vnd.kde.kchart": {
        source: "iana",
        extensions: ["chrt"]
      },
      "application/vnd.kde.kformula": {
        source: "iana",
        extensions: ["kfo"]
      },
      "application/vnd.kde.kivio": {
        source: "iana",
        extensions: ["flw"]
      },
      "application/vnd.kde.kontour": {
        source: "iana",
        extensions: ["kon"]
      },
      "application/vnd.kde.kpresenter": {
        source: "iana",
        extensions: ["kpr", "kpt"]
      },
      "application/vnd.kde.kspread": {
        source: "iana",
        extensions: ["ksp"]
      },
      "application/vnd.kde.kword": {
        source: "iana",
        extensions: ["kwd", "kwt"]
      },
      "application/vnd.kenameaapp": {
        source: "iana",
        extensions: ["htke"]
      },
      "application/vnd.kidspiration": {
        source: "iana",
        extensions: ["kia"]
      },
      "application/vnd.kinar": {
        source: "iana",
        extensions: ["kne", "knp"]
      },
      "application/vnd.koan": {
        source: "iana",
        extensions: ["skp", "skd", "skt", "skm"]
      },
      "application/vnd.kodak-descriptor": {
        source: "iana",
        extensions: ["sse"]
      },
      "application/vnd.las": {
        source: "iana"
      },
      "application/vnd.las.las+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.las.las+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lasxml"]
      },
      "application/vnd.laszip": {
        source: "iana"
      },
      "application/vnd.leap+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.liberty-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.llamagraphics.life-balance.desktop": {
        source: "iana",
        extensions: ["lbd"]
      },
      "application/vnd.llamagraphics.life-balance.exchange+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lbe"]
      },
      "application/vnd.logipipe.circuit+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.loom": {
        source: "iana"
      },
      "application/vnd.lotus-1-2-3": {
        source: "iana",
        extensions: ["123"]
      },
      "application/vnd.lotus-approach": {
        source: "iana",
        extensions: ["apr"]
      },
      "application/vnd.lotus-freelance": {
        source: "iana",
        extensions: ["pre"]
      },
      "application/vnd.lotus-notes": {
        source: "iana",
        extensions: ["nsf"]
      },
      "application/vnd.lotus-organizer": {
        source: "iana",
        extensions: ["org"]
      },
      "application/vnd.lotus-screencam": {
        source: "iana",
        extensions: ["scm"]
      },
      "application/vnd.lotus-wordpro": {
        source: "iana",
        extensions: ["lwp"]
      },
      "application/vnd.macports.portpkg": {
        source: "iana",
        extensions: ["portpkg"]
      },
      "application/vnd.mapbox-vector-tile": {
        source: "iana",
        extensions: ["mvt"]
      },
      "application/vnd.marlin.drm.actiontoken+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.marlin.drm.conftoken+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.marlin.drm.license+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.marlin.drm.mdcf": {
        source: "iana"
      },
      "application/vnd.mason+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.maxar.archive.3tz+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.maxmind.maxmind-db": {
        source: "iana"
      },
      "application/vnd.mcd": {
        source: "iana",
        extensions: ["mcd"]
      },
      "application/vnd.medcalcdata": {
        source: "iana",
        extensions: ["mc1"]
      },
      "application/vnd.mediastation.cdkey": {
        source: "iana",
        extensions: ["cdkey"]
      },
      "application/vnd.meridian-slingshot": {
        source: "iana"
      },
      "application/vnd.mfer": {
        source: "iana",
        extensions: ["mwf"]
      },
      "application/vnd.mfmp": {
        source: "iana",
        extensions: ["mfm"]
      },
      "application/vnd.micro+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.micrografx.flo": {
        source: "iana",
        extensions: ["flo"]
      },
      "application/vnd.micrografx.igx": {
        source: "iana",
        extensions: ["igx"]
      },
      "application/vnd.microsoft.portable-executable": {
        source: "iana"
      },
      "application/vnd.microsoft.windows.thumbnail-cache": {
        source: "iana"
      },
      "application/vnd.miele+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.mif": {
        source: "iana",
        extensions: ["mif"]
      },
      "application/vnd.minisoft-hp3000-save": {
        source: "iana"
      },
      "application/vnd.mitsubishi.misty-guard.trustweb": {
        source: "iana"
      },
      "application/vnd.mobius.daf": {
        source: "iana",
        extensions: ["daf"]
      },
      "application/vnd.mobius.dis": {
        source: "iana",
        extensions: ["dis"]
      },
      "application/vnd.mobius.mbk": {
        source: "iana",
        extensions: ["mbk"]
      },
      "application/vnd.mobius.mqy": {
        source: "iana",
        extensions: ["mqy"]
      },
      "application/vnd.mobius.msl": {
        source: "iana",
        extensions: ["msl"]
      },
      "application/vnd.mobius.plc": {
        source: "iana",
        extensions: ["plc"]
      },
      "application/vnd.mobius.txf": {
        source: "iana",
        extensions: ["txf"]
      },
      "application/vnd.mophun.application": {
        source: "iana",
        extensions: ["mpn"]
      },
      "application/vnd.mophun.certificate": {
        source: "iana",
        extensions: ["mpc"]
      },
      "application/vnd.motorola.flexsuite": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.adsi": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.fis": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.gotap": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.kmr": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.ttc": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.wem": {
        source: "iana"
      },
      "application/vnd.motorola.iprm": {
        source: "iana"
      },
      "application/vnd.mozilla.xul+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xul"]
      },
      "application/vnd.ms-3mfdocument": {
        source: "iana"
      },
      "application/vnd.ms-artgalry": {
        source: "iana",
        extensions: ["cil"]
      },
      "application/vnd.ms-asf": {
        source: "iana"
      },
      "application/vnd.ms-cab-compressed": {
        source: "iana",
        extensions: ["cab"]
      },
      "application/vnd.ms-color.iccprofile": {
        source: "apache"
      },
      "application/vnd.ms-excel": {
        source: "iana",
        compressible: false,
        extensions: ["xls", "xlm", "xla", "xlc", "xlt", "xlw"]
      },
      "application/vnd.ms-excel.addin.macroenabled.12": {
        source: "iana",
        extensions: ["xlam"]
      },
      "application/vnd.ms-excel.sheet.binary.macroenabled.12": {
        source: "iana",
        extensions: ["xlsb"]
      },
      "application/vnd.ms-excel.sheet.macroenabled.12": {
        source: "iana",
        extensions: ["xlsm"]
      },
      "application/vnd.ms-excel.template.macroenabled.12": {
        source: "iana",
        extensions: ["xltm"]
      },
      "application/vnd.ms-fontobject": {
        source: "iana",
        compressible: true,
        extensions: ["eot"]
      },
      "application/vnd.ms-htmlhelp": {
        source: "iana",
        extensions: ["chm"]
      },
      "application/vnd.ms-ims": {
        source: "iana",
        extensions: ["ims"]
      },
      "application/vnd.ms-lrm": {
        source: "iana",
        extensions: ["lrm"]
      },
      "application/vnd.ms-office.activex+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-officetheme": {
        source: "iana",
        extensions: ["thmx"]
      },
      "application/vnd.ms-opentype": {
        source: "apache",
        compressible: true
      },
      "application/vnd.ms-outlook": {
        compressible: false,
        extensions: ["msg"]
      },
      "application/vnd.ms-package.obfuscated-opentype": {
        source: "apache"
      },
      "application/vnd.ms-pki.seccat": {
        source: "apache",
        extensions: ["cat"]
      },
      "application/vnd.ms-pki.stl": {
        source: "apache",
        extensions: ["stl"]
      },
      "application/vnd.ms-playready.initiator+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-powerpoint": {
        source: "iana",
        compressible: false,
        extensions: ["ppt", "pps", "pot"]
      },
      "application/vnd.ms-powerpoint.addin.macroenabled.12": {
        source: "iana",
        extensions: ["ppam"]
      },
      "application/vnd.ms-powerpoint.presentation.macroenabled.12": {
        source: "iana",
        extensions: ["pptm"]
      },
      "application/vnd.ms-powerpoint.slide.macroenabled.12": {
        source: "iana",
        extensions: ["sldm"]
      },
      "application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
        source: "iana",
        extensions: ["ppsm"]
      },
      "application/vnd.ms-powerpoint.template.macroenabled.12": {
        source: "iana",
        extensions: ["potm"]
      },
      "application/vnd.ms-printdevicecapabilities+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-printing.printticket+xml": {
        source: "apache",
        compressible: true
      },
      "application/vnd.ms-printschematicket+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-project": {
        source: "iana",
        extensions: ["mpp", "mpt"]
      },
      "application/vnd.ms-tnef": {
        source: "iana"
      },
      "application/vnd.ms-windows.devicepairing": {
        source: "iana"
      },
      "application/vnd.ms-windows.nwprinting.oob": {
        source: "iana"
      },
      "application/vnd.ms-windows.printerpairing": {
        source: "iana"
      },
      "application/vnd.ms-windows.wsd.oob": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.lic-chlg-req": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.lic-resp": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.meter-chlg-req": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.meter-resp": {
        source: "iana"
      },
      "application/vnd.ms-word.document.macroenabled.12": {
        source: "iana",
        extensions: ["docm"]
      },
      "application/vnd.ms-word.template.macroenabled.12": {
        source: "iana",
        extensions: ["dotm"]
      },
      "application/vnd.ms-works": {
        source: "iana",
        extensions: ["wps", "wks", "wcm", "wdb"]
      },
      "application/vnd.ms-wpl": {
        source: "iana",
        extensions: ["wpl"]
      },
      "application/vnd.ms-xpsdocument": {
        source: "iana",
        compressible: false,
        extensions: ["xps"]
      },
      "application/vnd.msa-disk-image": {
        source: "iana"
      },
      "application/vnd.mseq": {
        source: "iana",
        extensions: ["mseq"]
      },
      "application/vnd.msign": {
        source: "iana"
      },
      "application/vnd.multiad.creator": {
        source: "iana"
      },
      "application/vnd.multiad.creator.cif": {
        source: "iana"
      },
      "application/vnd.music-niff": {
        source: "iana"
      },
      "application/vnd.musician": {
        source: "iana",
        extensions: ["mus"]
      },
      "application/vnd.muvee.style": {
        source: "iana",
        extensions: ["msty"]
      },
      "application/vnd.mynfc": {
        source: "iana",
        extensions: ["taglet"]
      },
      "application/vnd.nacamar.ybrid+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ncd.control": {
        source: "iana"
      },
      "application/vnd.ncd.reference": {
        source: "iana"
      },
      "application/vnd.nearst.inv+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nebumind.line": {
        source: "iana"
      },
      "application/vnd.nervana": {
        source: "iana"
      },
      "application/vnd.netfpx": {
        source: "iana"
      },
      "application/vnd.neurolanguage.nlu": {
        source: "iana",
        extensions: ["nlu"]
      },
      "application/vnd.nimn": {
        source: "iana"
      },
      "application/vnd.nintendo.nitro.rom": {
        source: "iana"
      },
      "application/vnd.nintendo.snes.rom": {
        source: "iana"
      },
      "application/vnd.nitf": {
        source: "iana",
        extensions: ["ntf", "nitf"]
      },
      "application/vnd.noblenet-directory": {
        source: "iana",
        extensions: ["nnd"]
      },
      "application/vnd.noblenet-sealer": {
        source: "iana",
        extensions: ["nns"]
      },
      "application/vnd.noblenet-web": {
        source: "iana",
        extensions: ["nnw"]
      },
      "application/vnd.nokia.catalogs": {
        source: "iana"
      },
      "application/vnd.nokia.conml+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.conml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.iptv.config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.isds-radio-presets": {
        source: "iana"
      },
      "application/vnd.nokia.landmark+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.landmark+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.landmarkcollection+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.n-gage.ac+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ac"]
      },
      "application/vnd.nokia.n-gage.data": {
        source: "iana",
        extensions: ["ngdat"]
      },
      "application/vnd.nokia.n-gage.symbian.install": {
        source: "iana",
        extensions: ["n-gage"]
      },
      "application/vnd.nokia.ncd": {
        source: "iana"
      },
      "application/vnd.nokia.pcd+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.pcd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.radio-preset": {
        source: "iana",
        extensions: ["rpst"]
      },
      "application/vnd.nokia.radio-presets": {
        source: "iana",
        extensions: ["rpss"]
      },
      "application/vnd.novadigm.edm": {
        source: "iana",
        extensions: ["edm"]
      },
      "application/vnd.novadigm.edx": {
        source: "iana",
        extensions: ["edx"]
      },
      "application/vnd.novadigm.ext": {
        source: "iana",
        extensions: ["ext"]
      },
      "application/vnd.ntt-local.content-share": {
        source: "iana"
      },
      "application/vnd.ntt-local.file-transfer": {
        source: "iana"
      },
      "application/vnd.ntt-local.ogw_remote-access": {
        source: "iana"
      },
      "application/vnd.ntt-local.sip-ta_remote": {
        source: "iana"
      },
      "application/vnd.ntt-local.sip-ta_tcp_stream": {
        source: "iana"
      },
      "application/vnd.oasis.opendocument.chart": {
        source: "iana",
        extensions: ["odc"]
      },
      "application/vnd.oasis.opendocument.chart-template": {
        source: "iana",
        extensions: ["otc"]
      },
      "application/vnd.oasis.opendocument.database": {
        source: "iana",
        extensions: ["odb"]
      },
      "application/vnd.oasis.opendocument.formula": {
        source: "iana",
        extensions: ["odf"]
      },
      "application/vnd.oasis.opendocument.formula-template": {
        source: "iana",
        extensions: ["odft"]
      },
      "application/vnd.oasis.opendocument.graphics": {
        source: "iana",
        compressible: false,
        extensions: ["odg"]
      },
      "application/vnd.oasis.opendocument.graphics-template": {
        source: "iana",
        extensions: ["otg"]
      },
      "application/vnd.oasis.opendocument.image": {
        source: "iana",
        extensions: ["odi"]
      },
      "application/vnd.oasis.opendocument.image-template": {
        source: "iana",
        extensions: ["oti"]
      },
      "application/vnd.oasis.opendocument.presentation": {
        source: "iana",
        compressible: false,
        extensions: ["odp"]
      },
      "application/vnd.oasis.opendocument.presentation-template": {
        source: "iana",
        extensions: ["otp"]
      },
      "application/vnd.oasis.opendocument.spreadsheet": {
        source: "iana",
        compressible: false,
        extensions: ["ods"]
      },
      "application/vnd.oasis.opendocument.spreadsheet-template": {
        source: "iana",
        extensions: ["ots"]
      },
      "application/vnd.oasis.opendocument.text": {
        source: "iana",
        compressible: false,
        extensions: ["odt"]
      },
      "application/vnd.oasis.opendocument.text-master": {
        source: "iana",
        extensions: ["odm"]
      },
      "application/vnd.oasis.opendocument.text-template": {
        source: "iana",
        extensions: ["ott"]
      },
      "application/vnd.oasis.opendocument.text-web": {
        source: "iana",
        extensions: ["oth"]
      },
      "application/vnd.obn": {
        source: "iana"
      },
      "application/vnd.ocf+cbor": {
        source: "iana"
      },
      "application/vnd.oci.image.manifest.v1+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oftn.l10n+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.contentaccessdownload+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.contentaccessstreaming+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.cspg-hexbinary": {
        source: "iana"
      },
      "application/vnd.oipf.dae.svg+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.dae.xhtml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.mippvcontrolmessage+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.pae.gem": {
        source: "iana"
      },
      "application/vnd.oipf.spdiscovery+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.spdlist+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.ueprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.userprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.olpc-sugar": {
        source: "iana",
        extensions: ["xo"]
      },
      "application/vnd.oma-scws-config": {
        source: "iana"
      },
      "application/vnd.oma-scws-http-request": {
        source: "iana"
      },
      "application/vnd.oma-scws-http-response": {
        source: "iana"
      },
      "application/vnd.oma.bcast.associated-procedure-parameter+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.drm-trigger+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.imd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.ltkm": {
        source: "iana"
      },
      "application/vnd.oma.bcast.notification+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.provisioningtrigger": {
        source: "iana"
      },
      "application/vnd.oma.bcast.sgboot": {
        source: "iana"
      },
      "application/vnd.oma.bcast.sgdd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.sgdu": {
        source: "iana"
      },
      "application/vnd.oma.bcast.simple-symbol-container": {
        source: "iana"
      },
      "application/vnd.oma.bcast.smartcard-trigger+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.sprov+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.stkm": {
        source: "iana"
      },
      "application/vnd.oma.cab-address-book+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-feature-handler+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-pcc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-subs-invite+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-user-prefs+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.dcd": {
        source: "iana"
      },
      "application/vnd.oma.dcdc": {
        source: "iana"
      },
      "application/vnd.oma.dd2+xml": {
        source: "iana",
        compressible: true,
        extensions: ["dd2"]
      },
      "application/vnd.oma.drm.risd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.group-usage-list+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.lwm2m+cbor": {
        source: "iana"
      },
      "application/vnd.oma.lwm2m+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.lwm2m+tlv": {
        source: "iana"
      },
      "application/vnd.oma.pal+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.detailed-progress-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.final-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.groups+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.invocation-descriptor+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.optimized-progress-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.push": {
        source: "iana"
      },
      "application/vnd.oma.scidm.messages+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.xcap-directory+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.omads-email+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.omads-file+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.omads-folder+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.omaloc-supl-init": {
        source: "iana"
      },
      "application/vnd.onepager": {
        source: "iana"
      },
      "application/vnd.onepagertamp": {
        source: "iana"
      },
      "application/vnd.onepagertamx": {
        source: "iana"
      },
      "application/vnd.onepagertat": {
        source: "iana"
      },
      "application/vnd.onepagertatp": {
        source: "iana"
      },
      "application/vnd.onepagertatx": {
        source: "iana"
      },
      "application/vnd.openblox.game+xml": {
        source: "iana",
        compressible: true,
        extensions: ["obgx"]
      },
      "application/vnd.openblox.game-binary": {
        source: "iana"
      },
      "application/vnd.openeye.oeb": {
        source: "iana"
      },
      "application/vnd.openofficeorg.extension": {
        source: "apache",
        extensions: ["oxt"]
      },
      "application/vnd.openstreetmap.data+xml": {
        source: "iana",
        compressible: true,
        extensions: ["osm"]
      },
      "application/vnd.opentimestamps.ots": {
        source: "iana"
      },
      "application/vnd.openxmlformats-officedocument.custom-properties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawing+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.extended-properties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
        source: "iana",
        compressible: false,
        extensions: ["pptx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slide": {
        source: "iana",
        extensions: ["sldx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
        source: "iana",
        extensions: ["ppsx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.template": {
        source: "iana",
        extensions: ["potx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
        source: "iana",
        compressible: false,
        extensions: ["xlsx"]
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
        source: "iana",
        extensions: ["xltx"]
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.theme+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.themeoverride+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.vmldrawing": {
        source: "iana"
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
        source: "iana",
        compressible: false,
        extensions: ["docx"]
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
        source: "iana",
        extensions: ["dotx"]
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-package.core-properties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-package.relationships+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oracle.resource+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.orange.indata": {
        source: "iana"
      },
      "application/vnd.osa.netdeploy": {
        source: "iana"
      },
      "application/vnd.osgeo.mapguide.package": {
        source: "iana",
        extensions: ["mgp"]
      },
      "application/vnd.osgi.bundle": {
        source: "iana"
      },
      "application/vnd.osgi.dp": {
        source: "iana",
        extensions: ["dp"]
      },
      "application/vnd.osgi.subsystem": {
        source: "iana",
        extensions: ["esa"]
      },
      "application/vnd.otps.ct-kip+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oxli.countgraph": {
        source: "iana"
      },
      "application/vnd.pagerduty+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.palm": {
        source: "iana",
        extensions: ["pdb", "pqa", "oprc"]
      },
      "application/vnd.panoply": {
        source: "iana"
      },
      "application/vnd.paos.xml": {
        source: "iana"
      },
      "application/vnd.patentdive": {
        source: "iana"
      },
      "application/vnd.patientecommsdoc": {
        source: "iana"
      },
      "application/vnd.pawaafile": {
        source: "iana",
        extensions: ["paw"]
      },
      "application/vnd.pcos": {
        source: "iana"
      },
      "application/vnd.pg.format": {
        source: "iana",
        extensions: ["str"]
      },
      "application/vnd.pg.osasli": {
        source: "iana",
        extensions: ["ei6"]
      },
      "application/vnd.piaccess.application-licence": {
        source: "iana"
      },
      "application/vnd.picsel": {
        source: "iana",
        extensions: ["efif"]
      },
      "application/vnd.pmi.widget": {
        source: "iana",
        extensions: ["wg"]
      },
      "application/vnd.poc.group-advertisement+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.pocketlearn": {
        source: "iana",
        extensions: ["plf"]
      },
      "application/vnd.powerbuilder6": {
        source: "iana",
        extensions: ["pbd"]
      },
      "application/vnd.powerbuilder6-s": {
        source: "iana"
      },
      "application/vnd.powerbuilder7": {
        source: "iana"
      },
      "application/vnd.powerbuilder7-s": {
        source: "iana"
      },
      "application/vnd.powerbuilder75": {
        source: "iana"
      },
      "application/vnd.powerbuilder75-s": {
        source: "iana"
      },
      "application/vnd.preminet": {
        source: "iana"
      },
      "application/vnd.previewsystems.box": {
        source: "iana",
        extensions: ["box"]
      },
      "application/vnd.proteus.magazine": {
        source: "iana",
        extensions: ["mgz"]
      },
      "application/vnd.psfs": {
        source: "iana"
      },
      "application/vnd.publishare-delta-tree": {
        source: "iana",
        extensions: ["qps"]
      },
      "application/vnd.pvi.ptid1": {
        source: "iana",
        extensions: ["ptid"]
      },
      "application/vnd.pwg-multiplexed": {
        source: "iana"
      },
      "application/vnd.pwg-xhtml-print+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.qualcomm.brew-app-res": {
        source: "iana"
      },
      "application/vnd.quarantainenet": {
        source: "iana"
      },
      "application/vnd.quark.quarkxpress": {
        source: "iana",
        extensions: ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"]
      },
      "application/vnd.quobject-quoxdocument": {
        source: "iana"
      },
      "application/vnd.radisys.moml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-conf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-conn+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-dialog+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-stream+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-conf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-base+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-fax-detect+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-group+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-speech+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-transform+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.rainstor.data": {
        source: "iana"
      },
      "application/vnd.rapid": {
        source: "iana"
      },
      "application/vnd.rar": {
        source: "iana",
        extensions: ["rar"]
      },
      "application/vnd.realvnc.bed": {
        source: "iana",
        extensions: ["bed"]
      },
      "application/vnd.recordare.musicxml": {
        source: "iana",
        extensions: ["mxl"]
      },
      "application/vnd.recordare.musicxml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["musicxml"]
      },
      "application/vnd.renlearn.rlprint": {
        source: "iana"
      },
      "application/vnd.resilient.logic": {
        source: "iana"
      },
      "application/vnd.restful+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.rig.cryptonote": {
        source: "iana",
        extensions: ["cryptonote"]
      },
      "application/vnd.rim.cod": {
        source: "apache",
        extensions: ["cod"]
      },
      "application/vnd.rn-realmedia": {
        source: "apache",
        extensions: ["rm"]
      },
      "application/vnd.rn-realmedia-vbr": {
        source: "apache",
        extensions: ["rmvb"]
      },
      "application/vnd.route66.link66+xml": {
        source: "iana",
        compressible: true,
        extensions: ["link66"]
      },
      "application/vnd.rs-274x": {
        source: "iana"
      },
      "application/vnd.ruckus.download": {
        source: "iana"
      },
      "application/vnd.s3sms": {
        source: "iana"
      },
      "application/vnd.sailingtracker.track": {
        source: "iana",
        extensions: ["st"]
      },
      "application/vnd.sar": {
        source: "iana"
      },
      "application/vnd.sbm.cid": {
        source: "iana"
      },
      "application/vnd.sbm.mid2": {
        source: "iana"
      },
      "application/vnd.scribus": {
        source: "iana"
      },
      "application/vnd.sealed.3df": {
        source: "iana"
      },
      "application/vnd.sealed.csf": {
        source: "iana"
      },
      "application/vnd.sealed.doc": {
        source: "iana"
      },
      "application/vnd.sealed.eml": {
        source: "iana"
      },
      "application/vnd.sealed.mht": {
        source: "iana"
      },
      "application/vnd.sealed.net": {
        source: "iana"
      },
      "application/vnd.sealed.ppt": {
        source: "iana"
      },
      "application/vnd.sealed.tiff": {
        source: "iana"
      },
      "application/vnd.sealed.xls": {
        source: "iana"
      },
      "application/vnd.sealedmedia.softseal.html": {
        source: "iana"
      },
      "application/vnd.sealedmedia.softseal.pdf": {
        source: "iana"
      },
      "application/vnd.seemail": {
        source: "iana",
        extensions: ["see"]
      },
      "application/vnd.seis+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.sema": {
        source: "iana",
        extensions: ["sema"]
      },
      "application/vnd.semd": {
        source: "iana",
        extensions: ["semd"]
      },
      "application/vnd.semf": {
        source: "iana",
        extensions: ["semf"]
      },
      "application/vnd.shade-save-file": {
        source: "iana"
      },
      "application/vnd.shana.informed.formdata": {
        source: "iana",
        extensions: ["ifm"]
      },
      "application/vnd.shana.informed.formtemplate": {
        source: "iana",
        extensions: ["itp"]
      },
      "application/vnd.shana.informed.interchange": {
        source: "iana",
        extensions: ["iif"]
      },
      "application/vnd.shana.informed.package": {
        source: "iana",
        extensions: ["ipk"]
      },
      "application/vnd.shootproof+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.shopkick+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.shp": {
        source: "iana"
      },
      "application/vnd.shx": {
        source: "iana"
      },
      "application/vnd.sigrok.session": {
        source: "iana"
      },
      "application/vnd.simtech-mindmapper": {
        source: "iana",
        extensions: ["twd", "twds"]
      },
      "application/vnd.siren+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.smaf": {
        source: "iana",
        extensions: ["mmf"]
      },
      "application/vnd.smart.notebook": {
        source: "iana"
      },
      "application/vnd.smart.teacher": {
        source: "iana",
        extensions: ["teacher"]
      },
      "application/vnd.snesdev-page-table": {
        source: "iana"
      },
      "application/vnd.software602.filler.form+xml": {
        source: "iana",
        compressible: true,
        extensions: ["fo"]
      },
      "application/vnd.software602.filler.form-xml-zip": {
        source: "iana"
      },
      "application/vnd.solent.sdkm+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sdkm", "sdkd"]
      },
      "application/vnd.spotfire.dxp": {
        source: "iana",
        extensions: ["dxp"]
      },
      "application/vnd.spotfire.sfs": {
        source: "iana",
        extensions: ["sfs"]
      },
      "application/vnd.sqlite3": {
        source: "iana"
      },
      "application/vnd.sss-cod": {
        source: "iana"
      },
      "application/vnd.sss-dtf": {
        source: "iana"
      },
      "application/vnd.sss-ntf": {
        source: "iana"
      },
      "application/vnd.stardivision.calc": {
        source: "apache",
        extensions: ["sdc"]
      },
      "application/vnd.stardivision.draw": {
        source: "apache",
        extensions: ["sda"]
      },
      "application/vnd.stardivision.impress": {
        source: "apache",
        extensions: ["sdd"]
      },
      "application/vnd.stardivision.math": {
        source: "apache",
        extensions: ["smf"]
      },
      "application/vnd.stardivision.writer": {
        source: "apache",
        extensions: ["sdw", "vor"]
      },
      "application/vnd.stardivision.writer-global": {
        source: "apache",
        extensions: ["sgl"]
      },
      "application/vnd.stepmania.package": {
        source: "iana",
        extensions: ["smzip"]
      },
      "application/vnd.stepmania.stepchart": {
        source: "iana",
        extensions: ["sm"]
      },
      "application/vnd.street-stream": {
        source: "iana"
      },
      "application/vnd.sun.wadl+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wadl"]
      },
      "application/vnd.sun.xml.calc": {
        source: "apache",
        extensions: ["sxc"]
      },
      "application/vnd.sun.xml.calc.template": {
        source: "apache",
        extensions: ["stc"]
      },
      "application/vnd.sun.xml.draw": {
        source: "apache",
        extensions: ["sxd"]
      },
      "application/vnd.sun.xml.draw.template": {
        source: "apache",
        extensions: ["std"]
      },
      "application/vnd.sun.xml.impress": {
        source: "apache",
        extensions: ["sxi"]
      },
      "application/vnd.sun.xml.impress.template": {
        source: "apache",
        extensions: ["sti"]
      },
      "application/vnd.sun.xml.math": {
        source: "apache",
        extensions: ["sxm"]
      },
      "application/vnd.sun.xml.writer": {
        source: "apache",
        extensions: ["sxw"]
      },
      "application/vnd.sun.xml.writer.global": {
        source: "apache",
        extensions: ["sxg"]
      },
      "application/vnd.sun.xml.writer.template": {
        source: "apache",
        extensions: ["stw"]
      },
      "application/vnd.sus-calendar": {
        source: "iana",
        extensions: ["sus", "susp"]
      },
      "application/vnd.svd": {
        source: "iana",
        extensions: ["svd"]
      },
      "application/vnd.swiftview-ics": {
        source: "iana"
      },
      "application/vnd.sycle+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.syft+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.symbian.install": {
        source: "apache",
        extensions: ["sis", "sisx"]
      },
      "application/vnd.syncml+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["xsm"]
      },
      "application/vnd.syncml.dm+wbxml": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["bdm"]
      },
      "application/vnd.syncml.dm+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["xdm"]
      },
      "application/vnd.syncml.dm.notification": {
        source: "iana"
      },
      "application/vnd.syncml.dmddf+wbxml": {
        source: "iana"
      },
      "application/vnd.syncml.dmddf+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["ddf"]
      },
      "application/vnd.syncml.dmtnds+wbxml": {
        source: "iana"
      },
      "application/vnd.syncml.dmtnds+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.syncml.ds.notification": {
        source: "iana"
      },
      "application/vnd.tableschema+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.tao.intent-module-archive": {
        source: "iana",
        extensions: ["tao"]
      },
      "application/vnd.tcpdump.pcap": {
        source: "iana",
        extensions: ["pcap", "cap", "dmp"]
      },
      "application/vnd.think-cell.ppttc+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.tmd.mediaflex.api+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.tml": {
        source: "iana"
      },
      "application/vnd.tmobile-livetv": {
        source: "iana",
        extensions: ["tmo"]
      },
      "application/vnd.tri.onesource": {
        source: "iana"
      },
      "application/vnd.trid.tpt": {
        source: "iana",
        extensions: ["tpt"]
      },
      "application/vnd.triscape.mxs": {
        source: "iana",
        extensions: ["mxs"]
      },
      "application/vnd.trueapp": {
        source: "iana",
        extensions: ["tra"]
      },
      "application/vnd.truedoc": {
        source: "iana"
      },
      "application/vnd.ubisoft.webplayer": {
        source: "iana"
      },
      "application/vnd.ufdl": {
        source: "iana",
        extensions: ["ufd", "ufdl"]
      },
      "application/vnd.uiq.theme": {
        source: "iana",
        extensions: ["utz"]
      },
      "application/vnd.umajin": {
        source: "iana",
        extensions: ["umj"]
      },
      "application/vnd.unity": {
        source: "iana",
        extensions: ["unityweb"]
      },
      "application/vnd.uoml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["uoml"]
      },
      "application/vnd.uplanet.alert": {
        source: "iana"
      },
      "application/vnd.uplanet.alert-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.bearer-choice": {
        source: "iana"
      },
      "application/vnd.uplanet.bearer-choice-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.cacheop": {
        source: "iana"
      },
      "application/vnd.uplanet.cacheop-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.channel": {
        source: "iana"
      },
      "application/vnd.uplanet.channel-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.list": {
        source: "iana"
      },
      "application/vnd.uplanet.list-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.listcmd": {
        source: "iana"
      },
      "application/vnd.uplanet.listcmd-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.signal": {
        source: "iana"
      },
      "application/vnd.uri-map": {
        source: "iana"
      },
      "application/vnd.valve.source.material": {
        source: "iana"
      },
      "application/vnd.vcx": {
        source: "iana",
        extensions: ["vcx"]
      },
      "application/vnd.vd-study": {
        source: "iana"
      },
      "application/vnd.vectorworks": {
        source: "iana"
      },
      "application/vnd.vel+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.verimatrix.vcas": {
        source: "iana"
      },
      "application/vnd.veritone.aion+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.veryant.thin": {
        source: "iana"
      },
      "application/vnd.ves.encrypted": {
        source: "iana"
      },
      "application/vnd.vidsoft.vidconference": {
        source: "iana"
      },
      "application/vnd.visio": {
        source: "iana",
        extensions: ["vsd", "vst", "vss", "vsw"]
      },
      "application/vnd.visionary": {
        source: "iana",
        extensions: ["vis"]
      },
      "application/vnd.vividence.scriptfile": {
        source: "iana"
      },
      "application/vnd.vsf": {
        source: "iana",
        extensions: ["vsf"]
      },
      "application/vnd.wap.sic": {
        source: "iana"
      },
      "application/vnd.wap.slc": {
        source: "iana"
      },
      "application/vnd.wap.wbxml": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["wbxml"]
      },
      "application/vnd.wap.wmlc": {
        source: "iana",
        extensions: ["wmlc"]
      },
      "application/vnd.wap.wmlscriptc": {
        source: "iana",
        extensions: ["wmlsc"]
      },
      "application/vnd.webturbo": {
        source: "iana",
        extensions: ["wtb"]
      },
      "application/vnd.wfa.dpp": {
        source: "iana"
      },
      "application/vnd.wfa.p2p": {
        source: "iana"
      },
      "application/vnd.wfa.wsc": {
        source: "iana"
      },
      "application/vnd.windows.devicepairing": {
        source: "iana"
      },
      "application/vnd.wmc": {
        source: "iana"
      },
      "application/vnd.wmf.bootstrap": {
        source: "iana"
      },
      "application/vnd.wolfram.mathematica": {
        source: "iana"
      },
      "application/vnd.wolfram.mathematica.package": {
        source: "iana"
      },
      "application/vnd.wolfram.player": {
        source: "iana",
        extensions: ["nbp"]
      },
      "application/vnd.wordperfect": {
        source: "iana",
        extensions: ["wpd"]
      },
      "application/vnd.wqd": {
        source: "iana",
        extensions: ["wqd"]
      },
      "application/vnd.wrq-hp3000-labelled": {
        source: "iana"
      },
      "application/vnd.wt.stf": {
        source: "iana",
        extensions: ["stf"]
      },
      "application/vnd.wv.csp+wbxml": {
        source: "iana"
      },
      "application/vnd.wv.csp+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.wv.ssp+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.xacml+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.xara": {
        source: "iana",
        extensions: ["xar"]
      },
      "application/vnd.xfdl": {
        source: "iana",
        extensions: ["xfdl"]
      },
      "application/vnd.xfdl.webform": {
        source: "iana"
      },
      "application/vnd.xmi+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.xmpie.cpkg": {
        source: "iana"
      },
      "application/vnd.xmpie.dpkg": {
        source: "iana"
      },
      "application/vnd.xmpie.plan": {
        source: "iana"
      },
      "application/vnd.xmpie.ppkg": {
        source: "iana"
      },
      "application/vnd.xmpie.xlim": {
        source: "iana"
      },
      "application/vnd.yamaha.hv-dic": {
        source: "iana",
        extensions: ["hvd"]
      },
      "application/vnd.yamaha.hv-script": {
        source: "iana",
        extensions: ["hvs"]
      },
      "application/vnd.yamaha.hv-voice": {
        source: "iana",
        extensions: ["hvp"]
      },
      "application/vnd.yamaha.openscoreformat": {
        source: "iana",
        extensions: ["osf"]
      },
      "application/vnd.yamaha.openscoreformat.osfpvg+xml": {
        source: "iana",
        compressible: true,
        extensions: ["osfpvg"]
      },
      "application/vnd.yamaha.remote-setup": {
        source: "iana"
      },
      "application/vnd.yamaha.smaf-audio": {
        source: "iana",
        extensions: ["saf"]
      },
      "application/vnd.yamaha.smaf-phrase": {
        source: "iana",
        extensions: ["spf"]
      },
      "application/vnd.yamaha.through-ngn": {
        source: "iana"
      },
      "application/vnd.yamaha.tunnel-udpencap": {
        source: "iana"
      },
      "application/vnd.yaoweme": {
        source: "iana"
      },
      "application/vnd.yellowriver-custom-menu": {
        source: "iana",
        extensions: ["cmp"]
      },
      "application/vnd.youtube.yt": {
        source: "iana"
      },
      "application/vnd.zul": {
        source: "iana",
        extensions: ["zir", "zirz"]
      },
      "application/vnd.zzazz.deck+xml": {
        source: "iana",
        compressible: true,
        extensions: ["zaz"]
      },
      "application/voicexml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["vxml"]
      },
      "application/voucher-cms+json": {
        source: "iana",
        compressible: true
      },
      "application/vq-rtcpxr": {
        source: "iana"
      },
      "application/wasm": {
        source: "iana",
        compressible: true,
        extensions: ["wasm"]
      },
      "application/watcherinfo+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wif"]
      },
      "application/webpush-options+json": {
        source: "iana",
        compressible: true
      },
      "application/whoispp-query": {
        source: "iana"
      },
      "application/whoispp-response": {
        source: "iana"
      },
      "application/widget": {
        source: "iana",
        extensions: ["wgt"]
      },
      "application/winhlp": {
        source: "apache",
        extensions: ["hlp"]
      },
      "application/wita": {
        source: "iana"
      },
      "application/wordperfect5.1": {
        source: "iana"
      },
      "application/wsdl+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wsdl"]
      },
      "application/wspolicy+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wspolicy"]
      },
      "application/x-7z-compressed": {
        source: "apache",
        compressible: false,
        extensions: ["7z"]
      },
      "application/x-abiword": {
        source: "apache",
        extensions: ["abw"]
      },
      "application/x-ace-compressed": {
        source: "apache",
        extensions: ["ace"]
      },
      "application/x-amf": {
        source: "apache"
      },
      "application/x-apple-diskimage": {
        source: "apache",
        extensions: ["dmg"]
      },
      "application/x-arj": {
        compressible: false,
        extensions: ["arj"]
      },
      "application/x-authorware-bin": {
        source: "apache",
        extensions: ["aab", "x32", "u32", "vox"]
      },
      "application/x-authorware-map": {
        source: "apache",
        extensions: ["aam"]
      },
      "application/x-authorware-seg": {
        source: "apache",
        extensions: ["aas"]
      },
      "application/x-bcpio": {
        source: "apache",
        extensions: ["bcpio"]
      },
      "application/x-bdoc": {
        compressible: false,
        extensions: ["bdoc"]
      },
      "application/x-bittorrent": {
        source: "apache",
        extensions: ["torrent"]
      },
      "application/x-blorb": {
        source: "apache",
        extensions: ["blb", "blorb"]
      },
      "application/x-bzip": {
        source: "apache",
        compressible: false,
        extensions: ["bz"]
      },
      "application/x-bzip2": {
        source: "apache",
        compressible: false,
        extensions: ["bz2", "boz"]
      },
      "application/x-cbr": {
        source: "apache",
        extensions: ["cbr", "cba", "cbt", "cbz", "cb7"]
      },
      "application/x-cdlink": {
        source: "apache",
        extensions: ["vcd"]
      },
      "application/x-cfs-compressed": {
        source: "apache",
        extensions: ["cfs"]
      },
      "application/x-chat": {
        source: "apache",
        extensions: ["chat"]
      },
      "application/x-chess-pgn": {
        source: "apache",
        extensions: ["pgn"]
      },
      "application/x-chrome-extension": {
        extensions: ["crx"]
      },
      "application/x-cocoa": {
        source: "nginx",
        extensions: ["cco"]
      },
      "application/x-compress": {
        source: "apache"
      },
      "application/x-conference": {
        source: "apache",
        extensions: ["nsc"]
      },
      "application/x-cpio": {
        source: "apache",
        extensions: ["cpio"]
      },
      "application/x-csh": {
        source: "apache",
        extensions: ["csh"]
      },
      "application/x-deb": {
        compressible: false
      },
      "application/x-debian-package": {
        source: "apache",
        extensions: ["deb", "udeb"]
      },
      "application/x-dgc-compressed": {
        source: "apache",
        extensions: ["dgc"]
      },
      "application/x-director": {
        source: "apache",
        extensions: ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"]
      },
      "application/x-doom": {
        source: "apache",
        extensions: ["wad"]
      },
      "application/x-dtbncx+xml": {
        source: "apache",
        compressible: true,
        extensions: ["ncx"]
      },
      "application/x-dtbook+xml": {
        source: "apache",
        compressible: true,
        extensions: ["dtb"]
      },
      "application/x-dtbresource+xml": {
        source: "apache",
        compressible: true,
        extensions: ["res"]
      },
      "application/x-dvi": {
        source: "apache",
        compressible: false,
        extensions: ["dvi"]
      },
      "application/x-envoy": {
        source: "apache",
        extensions: ["evy"]
      },
      "application/x-eva": {
        source: "apache",
        extensions: ["eva"]
      },
      "application/x-font-bdf": {
        source: "apache",
        extensions: ["bdf"]
      },
      "application/x-font-dos": {
        source: "apache"
      },
      "application/x-font-framemaker": {
        source: "apache"
      },
      "application/x-font-ghostscript": {
        source: "apache",
        extensions: ["gsf"]
      },
      "application/x-font-libgrx": {
        source: "apache"
      },
      "application/x-font-linux-psf": {
        source: "apache",
        extensions: ["psf"]
      },
      "application/x-font-pcf": {
        source: "apache",
        extensions: ["pcf"]
      },
      "application/x-font-snf": {
        source: "apache",
        extensions: ["snf"]
      },
      "application/x-font-speedo": {
        source: "apache"
      },
      "application/x-font-sunos-news": {
        source: "apache"
      },
      "application/x-font-type1": {
        source: "apache",
        extensions: ["pfa", "pfb", "pfm", "afm"]
      },
      "application/x-font-vfont": {
        source: "apache"
      },
      "application/x-freearc": {
        source: "apache",
        extensions: ["arc"]
      },
      "application/x-futuresplash": {
        source: "apache",
        extensions: ["spl"]
      },
      "application/x-gca-compressed": {
        source: "apache",
        extensions: ["gca"]
      },
      "application/x-glulx": {
        source: "apache",
        extensions: ["ulx"]
      },
      "application/x-gnumeric": {
        source: "apache",
        extensions: ["gnumeric"]
      },
      "application/x-gramps-xml": {
        source: "apache",
        extensions: ["gramps"]
      },
      "application/x-gtar": {
        source: "apache",
        extensions: ["gtar"]
      },
      "application/x-gzip": {
        source: "apache"
      },
      "application/x-hdf": {
        source: "apache",
        extensions: ["hdf"]
      },
      "application/x-httpd-php": {
        compressible: true,
        extensions: ["php"]
      },
      "application/x-install-instructions": {
        source: "apache",
        extensions: ["install"]
      },
      "application/x-iso9660-image": {
        source: "apache",
        extensions: ["iso"]
      },
      "application/x-iwork-keynote-sffkey": {
        extensions: ["key"]
      },
      "application/x-iwork-numbers-sffnumbers": {
        extensions: ["numbers"]
      },
      "application/x-iwork-pages-sffpages": {
        extensions: ["pages"]
      },
      "application/x-java-archive-diff": {
        source: "nginx",
        extensions: ["jardiff"]
      },
      "application/x-java-jnlp-file": {
        source: "apache",
        compressible: false,
        extensions: ["jnlp"]
      },
      "application/x-javascript": {
        compressible: true
      },
      "application/x-keepass2": {
        extensions: ["kdbx"]
      },
      "application/x-latex": {
        source: "apache",
        compressible: false,
        extensions: ["latex"]
      },
      "application/x-lua-bytecode": {
        extensions: ["luac"]
      },
      "application/x-lzh-compressed": {
        source: "apache",
        extensions: ["lzh", "lha"]
      },
      "application/x-makeself": {
        source: "nginx",
        extensions: ["run"]
      },
      "application/x-mie": {
        source: "apache",
        extensions: ["mie"]
      },
      "application/x-mobipocket-ebook": {
        source: "apache",
        extensions: ["prc", "mobi"]
      },
      "application/x-mpegurl": {
        compressible: false
      },
      "application/x-ms-application": {
        source: "apache",
        extensions: ["application"]
      },
      "application/x-ms-shortcut": {
        source: "apache",
        extensions: ["lnk"]
      },
      "application/x-ms-wmd": {
        source: "apache",
        extensions: ["wmd"]
      },
      "application/x-ms-wmz": {
        source: "apache",
        extensions: ["wmz"]
      },
      "application/x-ms-xbap": {
        source: "apache",
        extensions: ["xbap"]
      },
      "application/x-msaccess": {
        source: "apache",
        extensions: ["mdb"]
      },
      "application/x-msbinder": {
        source: "apache",
        extensions: ["obd"]
      },
      "application/x-mscardfile": {
        source: "apache",
        extensions: ["crd"]
      },
      "application/x-msclip": {
        source: "apache",
        extensions: ["clp"]
      },
      "application/x-msdos-program": {
        extensions: ["exe"]
      },
      "application/x-msdownload": {
        source: "apache",
        extensions: ["exe", "dll", "com", "bat", "msi"]
      },
      "application/x-msmediaview": {
        source: "apache",
        extensions: ["mvb", "m13", "m14"]
      },
      "application/x-msmetafile": {
        source: "apache",
        extensions: ["wmf", "wmz", "emf", "emz"]
      },
      "application/x-msmoney": {
        source: "apache",
        extensions: ["mny"]
      },
      "application/x-mspublisher": {
        source: "apache",
        extensions: ["pub"]
      },
      "application/x-msschedule": {
        source: "apache",
        extensions: ["scd"]
      },
      "application/x-msterminal": {
        source: "apache",
        extensions: ["trm"]
      },
      "application/x-mswrite": {
        source: "apache",
        extensions: ["wri"]
      },
      "application/x-netcdf": {
        source: "apache",
        extensions: ["nc", "cdf"]
      },
      "application/x-ns-proxy-autoconfig": {
        compressible: true,
        extensions: ["pac"]
      },
      "application/x-nzb": {
        source: "apache",
        extensions: ["nzb"]
      },
      "application/x-perl": {
        source: "nginx",
        extensions: ["pl", "pm"]
      },
      "application/x-pilot": {
        source: "nginx",
        extensions: ["prc", "pdb"]
      },
      "application/x-pkcs12": {
        source: "apache",
        compressible: false,
        extensions: ["p12", "pfx"]
      },
      "application/x-pkcs7-certificates": {
        source: "apache",
        extensions: ["p7b", "spc"]
      },
      "application/x-pkcs7-certreqresp": {
        source: "apache",
        extensions: ["p7r"]
      },
      "application/x-pki-message": {
        source: "iana"
      },
      "application/x-rar-compressed": {
        source: "apache",
        compressible: false,
        extensions: ["rar"]
      },
      "application/x-redhat-package-manager": {
        source: "nginx",
        extensions: ["rpm"]
      },
      "application/x-research-info-systems": {
        source: "apache",
        extensions: ["ris"]
      },
      "application/x-sea": {
        source: "nginx",
        extensions: ["sea"]
      },
      "application/x-sh": {
        source: "apache",
        compressible: true,
        extensions: ["sh"]
      },
      "application/x-shar": {
        source: "apache",
        extensions: ["shar"]
      },
      "application/x-shockwave-flash": {
        source: "apache",
        compressible: false,
        extensions: ["swf"]
      },
      "application/x-silverlight-app": {
        source: "apache",
        extensions: ["xap"]
      },
      "application/x-sql": {
        source: "apache",
        extensions: ["sql"]
      },
      "application/x-stuffit": {
        source: "apache",
        compressible: false,
        extensions: ["sit"]
      },
      "application/x-stuffitx": {
        source: "apache",
        extensions: ["sitx"]
      },
      "application/x-subrip": {
        source: "apache",
        extensions: ["srt"]
      },
      "application/x-sv4cpio": {
        source: "apache",
        extensions: ["sv4cpio"]
      },
      "application/x-sv4crc": {
        source: "apache",
        extensions: ["sv4crc"]
      },
      "application/x-t3vm-image": {
        source: "apache",
        extensions: ["t3"]
      },
      "application/x-tads": {
        source: "apache",
        extensions: ["gam"]
      },
      "application/x-tar": {
        source: "apache",
        compressible: true,
        extensions: ["tar"]
      },
      "application/x-tcl": {
        source: "apache",
        extensions: ["tcl", "tk"]
      },
      "application/x-tex": {
        source: "apache",
        extensions: ["tex"]
      },
      "application/x-tex-tfm": {
        source: "apache",
        extensions: ["tfm"]
      },
      "application/x-texinfo": {
        source: "apache",
        extensions: ["texinfo", "texi"]
      },
      "application/x-tgif": {
        source: "apache",
        extensions: ["obj"]
      },
      "application/x-ustar": {
        source: "apache",
        extensions: ["ustar"]
      },
      "application/x-virtualbox-hdd": {
        compressible: true,
        extensions: ["hdd"]
      },
      "application/x-virtualbox-ova": {
        compressible: true,
        extensions: ["ova"]
      },
      "application/x-virtualbox-ovf": {
        compressible: true,
        extensions: ["ovf"]
      },
      "application/x-virtualbox-vbox": {
        compressible: true,
        extensions: ["vbox"]
      },
      "application/x-virtualbox-vbox-extpack": {
        compressible: false,
        extensions: ["vbox-extpack"]
      },
      "application/x-virtualbox-vdi": {
        compressible: true,
        extensions: ["vdi"]
      },
      "application/x-virtualbox-vhd": {
        compressible: true,
        extensions: ["vhd"]
      },
      "application/x-virtualbox-vmdk": {
        compressible: true,
        extensions: ["vmdk"]
      },
      "application/x-wais-source": {
        source: "apache",
        extensions: ["src"]
      },
      "application/x-web-app-manifest+json": {
        compressible: true,
        extensions: ["webapp"]
      },
      "application/x-www-form-urlencoded": {
        source: "iana",
        compressible: true
      },
      "application/x-x509-ca-cert": {
        source: "iana",
        extensions: ["der", "crt", "pem"]
      },
      "application/x-x509-ca-ra-cert": {
        source: "iana"
      },
      "application/x-x509-next-ca-cert": {
        source: "iana"
      },
      "application/x-xfig": {
        source: "apache",
        extensions: ["fig"]
      },
      "application/x-xliff+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xlf"]
      },
      "application/x-xpinstall": {
        source: "apache",
        compressible: false,
        extensions: ["xpi"]
      },
      "application/x-xz": {
        source: "apache",
        extensions: ["xz"]
      },
      "application/x-zmachine": {
        source: "apache",
        extensions: ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"]
      },
      "application/x400-bp": {
        source: "iana"
      },
      "application/xacml+xml": {
        source: "iana",
        compressible: true
      },
      "application/xaml+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xaml"]
      },
      "application/xcap-att+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xav"]
      },
      "application/xcap-caps+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xca"]
      },
      "application/xcap-diff+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xdf"]
      },
      "application/xcap-el+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xel"]
      },
      "application/xcap-error+xml": {
        source: "iana",
        compressible: true
      },
      "application/xcap-ns+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xns"]
      },
      "application/xcon-conference-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/xcon-conference-info-diff+xml": {
        source: "iana",
        compressible: true
      },
      "application/xenc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xenc"]
      },
      "application/xhtml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xhtml", "xht"]
      },
      "application/xhtml-voice+xml": {
        source: "apache",
        compressible: true
      },
      "application/xliff+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xlf"]
      },
      "application/xml": {
        source: "iana",
        compressible: true,
        extensions: ["xml", "xsl", "xsd", "rng"]
      },
      "application/xml-dtd": {
        source: "iana",
        compressible: true,
        extensions: ["dtd"]
      },
      "application/xml-external-parsed-entity": {
        source: "iana"
      },
      "application/xml-patch+xml": {
        source: "iana",
        compressible: true
      },
      "application/xmpp+xml": {
        source: "iana",
        compressible: true
      },
      "application/xop+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xop"]
      },
      "application/xproc+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xpl"]
      },
      "application/xslt+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xsl", "xslt"]
      },
      "application/xspf+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xspf"]
      },
      "application/xv+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mxml", "xhvml", "xvml", "xvm"]
      },
      "application/yang": {
        source: "iana",
        extensions: ["yang"]
      },
      "application/yang-data+json": {
        source: "iana",
        compressible: true
      },
      "application/yang-data+xml": {
        source: "iana",
        compressible: true
      },
      "application/yang-patch+json": {
        source: "iana",
        compressible: true
      },
      "application/yang-patch+xml": {
        source: "iana",
        compressible: true
      },
      "application/yin+xml": {
        source: "iana",
        compressible: true,
        extensions: ["yin"]
      },
      "application/zip": {
        source: "iana",
        compressible: false,
        extensions: ["zip"]
      },
      "application/zlib": {
        source: "iana"
      },
      "application/zstd": {
        source: "iana"
      },
      "audio/1d-interleaved-parityfec": {
        source: "iana"
      },
      "audio/32kadpcm": {
        source: "iana"
      },
      "audio/3gpp": {
        source: "iana",
        compressible: false,
        extensions: ["3gpp"]
      },
      "audio/3gpp2": {
        source: "iana"
      },
      "audio/aac": {
        source: "iana"
      },
      "audio/ac3": {
        source: "iana"
      },
      "audio/adpcm": {
        source: "apache",
        extensions: ["adp"]
      },
      "audio/amr": {
        source: "iana",
        extensions: ["amr"]
      },
      "audio/amr-wb": {
        source: "iana"
      },
      "audio/amr-wb+": {
        source: "iana"
      },
      "audio/aptx": {
        source: "iana"
      },
      "audio/asc": {
        source: "iana"
      },
      "audio/atrac-advanced-lossless": {
        source: "iana"
      },
      "audio/atrac-x": {
        source: "iana"
      },
      "audio/atrac3": {
        source: "iana"
      },
      "audio/basic": {
        source: "iana",
        compressible: false,
        extensions: ["au", "snd"]
      },
      "audio/bv16": {
        source: "iana"
      },
      "audio/bv32": {
        source: "iana"
      },
      "audio/clearmode": {
        source: "iana"
      },
      "audio/cn": {
        source: "iana"
      },
      "audio/dat12": {
        source: "iana"
      },
      "audio/dls": {
        source: "iana"
      },
      "audio/dsr-es201108": {
        source: "iana"
      },
      "audio/dsr-es202050": {
        source: "iana"
      },
      "audio/dsr-es202211": {
        source: "iana"
      },
      "audio/dsr-es202212": {
        source: "iana"
      },
      "audio/dv": {
        source: "iana"
      },
      "audio/dvi4": {
        source: "iana"
      },
      "audio/eac3": {
        source: "iana"
      },
      "audio/encaprtp": {
        source: "iana"
      },
      "audio/evrc": {
        source: "iana"
      },
      "audio/evrc-qcp": {
        source: "iana"
      },
      "audio/evrc0": {
        source: "iana"
      },
      "audio/evrc1": {
        source: "iana"
      },
      "audio/evrcb": {
        source: "iana"
      },
      "audio/evrcb0": {
        source: "iana"
      },
      "audio/evrcb1": {
        source: "iana"
      },
      "audio/evrcnw": {
        source: "iana"
      },
      "audio/evrcnw0": {
        source: "iana"
      },
      "audio/evrcnw1": {
        source: "iana"
      },
      "audio/evrcwb": {
        source: "iana"
      },
      "audio/evrcwb0": {
        source: "iana"
      },
      "audio/evrcwb1": {
        source: "iana"
      },
      "audio/evs": {
        source: "iana"
      },
      "audio/flexfec": {
        source: "iana"
      },
      "audio/fwdred": {
        source: "iana"
      },
      "audio/g711-0": {
        source: "iana"
      },
      "audio/g719": {
        source: "iana"
      },
      "audio/g722": {
        source: "iana"
      },
      "audio/g7221": {
        source: "iana"
      },
      "audio/g723": {
        source: "iana"
      },
      "audio/g726-16": {
        source: "iana"
      },
      "audio/g726-24": {
        source: "iana"
      },
      "audio/g726-32": {
        source: "iana"
      },
      "audio/g726-40": {
        source: "iana"
      },
      "audio/g728": {
        source: "iana"
      },
      "audio/g729": {
        source: "iana"
      },
      "audio/g7291": {
        source: "iana"
      },
      "audio/g729d": {
        source: "iana"
      },
      "audio/g729e": {
        source: "iana"
      },
      "audio/gsm": {
        source: "iana"
      },
      "audio/gsm-efr": {
        source: "iana"
      },
      "audio/gsm-hr-08": {
        source: "iana"
      },
      "audio/ilbc": {
        source: "iana"
      },
      "audio/ip-mr_v2.5": {
        source: "iana"
      },
      "audio/isac": {
        source: "apache"
      },
      "audio/l16": {
        source: "iana"
      },
      "audio/l20": {
        source: "iana"
      },
      "audio/l24": {
        source: "iana",
        compressible: false
      },
      "audio/l8": {
        source: "iana"
      },
      "audio/lpc": {
        source: "iana"
      },
      "audio/melp": {
        source: "iana"
      },
      "audio/melp1200": {
        source: "iana"
      },
      "audio/melp2400": {
        source: "iana"
      },
      "audio/melp600": {
        source: "iana"
      },
      "audio/mhas": {
        source: "iana"
      },
      "audio/midi": {
        source: "apache",
        extensions: ["mid", "midi", "kar", "rmi"]
      },
      "audio/mobile-xmf": {
        source: "iana",
        extensions: ["mxmf"]
      },
      "audio/mp3": {
        compressible: false,
        extensions: ["mp3"]
      },
      "audio/mp4": {
        source: "iana",
        compressible: false,
        extensions: ["m4a", "mp4a"]
      },
      "audio/mp4a-latm": {
        source: "iana"
      },
      "audio/mpa": {
        source: "iana"
      },
      "audio/mpa-robust": {
        source: "iana"
      },
      "audio/mpeg": {
        source: "iana",
        compressible: false,
        extensions: ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"]
      },
      "audio/mpeg4-generic": {
        source: "iana"
      },
      "audio/musepack": {
        source: "apache"
      },
      "audio/ogg": {
        source: "iana",
        compressible: false,
        extensions: ["oga", "ogg", "spx", "opus"]
      },
      "audio/opus": {
        source: "iana"
      },
      "audio/parityfec": {
        source: "iana"
      },
      "audio/pcma": {
        source: "iana"
      },
      "audio/pcma-wb": {
        source: "iana"
      },
      "audio/pcmu": {
        source: "iana"
      },
      "audio/pcmu-wb": {
        source: "iana"
      },
      "audio/prs.sid": {
        source: "iana"
      },
      "audio/qcelp": {
        source: "iana"
      },
      "audio/raptorfec": {
        source: "iana"
      },
      "audio/red": {
        source: "iana"
      },
      "audio/rtp-enc-aescm128": {
        source: "iana"
      },
      "audio/rtp-midi": {
        source: "iana"
      },
      "audio/rtploopback": {
        source: "iana"
      },
      "audio/rtx": {
        source: "iana"
      },
      "audio/s3m": {
        source: "apache",
        extensions: ["s3m"]
      },
      "audio/scip": {
        source: "iana"
      },
      "audio/silk": {
        source: "apache",
        extensions: ["sil"]
      },
      "audio/smv": {
        source: "iana"
      },
      "audio/smv-qcp": {
        source: "iana"
      },
      "audio/smv0": {
        source: "iana"
      },
      "audio/sofa": {
        source: "iana"
      },
      "audio/sp-midi": {
        source: "iana"
      },
      "audio/speex": {
        source: "iana"
      },
      "audio/t140c": {
        source: "iana"
      },
      "audio/t38": {
        source: "iana"
      },
      "audio/telephone-event": {
        source: "iana"
      },
      "audio/tetra_acelp": {
        source: "iana"
      },
      "audio/tetra_acelp_bb": {
        source: "iana"
      },
      "audio/tone": {
        source: "iana"
      },
      "audio/tsvcis": {
        source: "iana"
      },
      "audio/uemclip": {
        source: "iana"
      },
      "audio/ulpfec": {
        source: "iana"
      },
      "audio/usac": {
        source: "iana"
      },
      "audio/vdvi": {
        source: "iana"
      },
      "audio/vmr-wb": {
        source: "iana"
      },
      "audio/vnd.3gpp.iufp": {
        source: "iana"
      },
      "audio/vnd.4sb": {
        source: "iana"
      },
      "audio/vnd.audiokoz": {
        source: "iana"
      },
      "audio/vnd.celp": {
        source: "iana"
      },
      "audio/vnd.cisco.nse": {
        source: "iana"
      },
      "audio/vnd.cmles.radio-events": {
        source: "iana"
      },
      "audio/vnd.cns.anp1": {
        source: "iana"
      },
      "audio/vnd.cns.inf1": {
        source: "iana"
      },
      "audio/vnd.dece.audio": {
        source: "iana",
        extensions: ["uva", "uvva"]
      },
      "audio/vnd.digital-winds": {
        source: "iana",
        extensions: ["eol"]
      },
      "audio/vnd.dlna.adts": {
        source: "iana"
      },
      "audio/vnd.dolby.heaac.1": {
        source: "iana"
      },
      "audio/vnd.dolby.heaac.2": {
        source: "iana"
      },
      "audio/vnd.dolby.mlp": {
        source: "iana"
      },
      "audio/vnd.dolby.mps": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2x": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2z": {
        source: "iana"
      },
      "audio/vnd.dolby.pulse.1": {
        source: "iana"
      },
      "audio/vnd.dra": {
        source: "iana",
        extensions: ["dra"]
      },
      "audio/vnd.dts": {
        source: "iana",
        extensions: ["dts"]
      },
      "audio/vnd.dts.hd": {
        source: "iana",
        extensions: ["dtshd"]
      },
      "audio/vnd.dts.uhd": {
        source: "iana"
      },
      "audio/vnd.dvb.file": {
        source: "iana"
      },
      "audio/vnd.everad.plj": {
        source: "iana"
      },
      "audio/vnd.hns.audio": {
        source: "iana"
      },
      "audio/vnd.lucent.voice": {
        source: "iana",
        extensions: ["lvp"]
      },
      "audio/vnd.ms-playready.media.pya": {
        source: "iana",
        extensions: ["pya"]
      },
      "audio/vnd.nokia.mobile-xmf": {
        source: "iana"
      },
      "audio/vnd.nortel.vbk": {
        source: "iana"
      },
      "audio/vnd.nuera.ecelp4800": {
        source: "iana",
        extensions: ["ecelp4800"]
      },
      "audio/vnd.nuera.ecelp7470": {
        source: "iana",
        extensions: ["ecelp7470"]
      },
      "audio/vnd.nuera.ecelp9600": {
        source: "iana",
        extensions: ["ecelp9600"]
      },
      "audio/vnd.octel.sbc": {
        source: "iana"
      },
      "audio/vnd.presonus.multitrack": {
        source: "iana"
      },
      "audio/vnd.qcelp": {
        source: "iana"
      },
      "audio/vnd.rhetorex.32kadpcm": {
        source: "iana"
      },
      "audio/vnd.rip": {
        source: "iana",
        extensions: ["rip"]
      },
      "audio/vnd.rn-realaudio": {
        compressible: false
      },
      "audio/vnd.sealedmedia.softseal.mpeg": {
        source: "iana"
      },
      "audio/vnd.vmx.cvsd": {
        source: "iana"
      },
      "audio/vnd.wave": {
        compressible: false
      },
      "audio/vorbis": {
        source: "iana",
        compressible: false
      },
      "audio/vorbis-config": {
        source: "iana"
      },
      "audio/wav": {
        compressible: false,
        extensions: ["wav"]
      },
      "audio/wave": {
        compressible: false,
        extensions: ["wav"]
      },
      "audio/webm": {
        source: "apache",
        compressible: false,
        extensions: ["weba"]
      },
      "audio/x-aac": {
        source: "apache",
        compressible: false,
        extensions: ["aac"]
      },
      "audio/x-aiff": {
        source: "apache",
        extensions: ["aif", "aiff", "aifc"]
      },
      "audio/x-caf": {
        source: "apache",
        compressible: false,
        extensions: ["caf"]
      },
      "audio/x-flac": {
        source: "apache",
        extensions: ["flac"]
      },
      "audio/x-m4a": {
        source: "nginx",
        extensions: ["m4a"]
      },
      "audio/x-matroska": {
        source: "apache",
        extensions: ["mka"]
      },
      "audio/x-mpegurl": {
        source: "apache",
        extensions: ["m3u"]
      },
      "audio/x-ms-wax": {
        source: "apache",
        extensions: ["wax"]
      },
      "audio/x-ms-wma": {
        source: "apache",
        extensions: ["wma"]
      },
      "audio/x-pn-realaudio": {
        source: "apache",
        extensions: ["ram", "ra"]
      },
      "audio/x-pn-realaudio-plugin": {
        source: "apache",
        extensions: ["rmp"]
      },
      "audio/x-realaudio": {
        source: "nginx",
        extensions: ["ra"]
      },
      "audio/x-tta": {
        source: "apache"
      },
      "audio/x-wav": {
        source: "apache",
        extensions: ["wav"]
      },
      "audio/xm": {
        source: "apache",
        extensions: ["xm"]
      },
      "chemical/x-cdx": {
        source: "apache",
        extensions: ["cdx"]
      },
      "chemical/x-cif": {
        source: "apache",
        extensions: ["cif"]
      },
      "chemical/x-cmdf": {
        source: "apache",
        extensions: ["cmdf"]
      },
      "chemical/x-cml": {
        source: "apache",
        extensions: ["cml"]
      },
      "chemical/x-csml": {
        source: "apache",
        extensions: ["csml"]
      },
      "chemical/x-pdb": {
        source: "apache"
      },
      "chemical/x-xyz": {
        source: "apache",
        extensions: ["xyz"]
      },
      "font/collection": {
        source: "iana",
        extensions: ["ttc"]
      },
      "font/otf": {
        source: "iana",
        compressible: true,
        extensions: ["otf"]
      },
      "font/sfnt": {
        source: "iana"
      },
      "font/ttf": {
        source: "iana",
        compressible: true,
        extensions: ["ttf"]
      },
      "font/woff": {
        source: "iana",
        extensions: ["woff"]
      },
      "font/woff2": {
        source: "iana",
        extensions: ["woff2"]
      },
      "image/aces": {
        source: "iana",
        extensions: ["exr"]
      },
      "image/apng": {
        compressible: false,
        extensions: ["apng"]
      },
      "image/avci": {
        source: "iana",
        extensions: ["avci"]
      },
      "image/avcs": {
        source: "iana",
        extensions: ["avcs"]
      },
      "image/avif": {
        source: "iana",
        compressible: false,
        extensions: ["avif"]
      },
      "image/bmp": {
        source: "iana",
        compressible: true,
        extensions: ["bmp"]
      },
      "image/cgm": {
        source: "iana",
        extensions: ["cgm"]
      },
      "image/dicom-rle": {
        source: "iana",
        extensions: ["drle"]
      },
      "image/emf": {
        source: "iana",
        extensions: ["emf"]
      },
      "image/fits": {
        source: "iana",
        extensions: ["fits"]
      },
      "image/g3fax": {
        source: "iana",
        extensions: ["g3"]
      },
      "image/gif": {
        source: "iana",
        compressible: false,
        extensions: ["gif"]
      },
      "image/heic": {
        source: "iana",
        extensions: ["heic"]
      },
      "image/heic-sequence": {
        source: "iana",
        extensions: ["heics"]
      },
      "image/heif": {
        source: "iana",
        extensions: ["heif"]
      },
      "image/heif-sequence": {
        source: "iana",
        extensions: ["heifs"]
      },
      "image/hej2k": {
        source: "iana",
        extensions: ["hej2"]
      },
      "image/hsj2": {
        source: "iana",
        extensions: ["hsj2"]
      },
      "image/ief": {
        source: "iana",
        extensions: ["ief"]
      },
      "image/jls": {
        source: "iana",
        extensions: ["jls"]
      },
      "image/jp2": {
        source: "iana",
        compressible: false,
        extensions: ["jp2", "jpg2"]
      },
      "image/jpeg": {
        source: "iana",
        compressible: false,
        extensions: ["jpeg", "jpg", "jpe"]
      },
      "image/jph": {
        source: "iana",
        extensions: ["jph"]
      },
      "image/jphc": {
        source: "iana",
        extensions: ["jhc"]
      },
      "image/jpm": {
        source: "iana",
        compressible: false,
        extensions: ["jpm"]
      },
      "image/jpx": {
        source: "iana",
        compressible: false,
        extensions: ["jpx", "jpf"]
      },
      "image/jxr": {
        source: "iana",
        extensions: ["jxr"]
      },
      "image/jxra": {
        source: "iana",
        extensions: ["jxra"]
      },
      "image/jxrs": {
        source: "iana",
        extensions: ["jxrs"]
      },
      "image/jxs": {
        source: "iana",
        extensions: ["jxs"]
      },
      "image/jxsc": {
        source: "iana",
        extensions: ["jxsc"]
      },
      "image/jxsi": {
        source: "iana",
        extensions: ["jxsi"]
      },
      "image/jxss": {
        source: "iana",
        extensions: ["jxss"]
      },
      "image/ktx": {
        source: "iana",
        extensions: ["ktx"]
      },
      "image/ktx2": {
        source: "iana",
        extensions: ["ktx2"]
      },
      "image/naplps": {
        source: "iana"
      },
      "image/pjpeg": {
        compressible: false
      },
      "image/png": {
        source: "iana",
        compressible: false,
        extensions: ["png"]
      },
      "image/prs.btif": {
        source: "iana",
        extensions: ["btif"]
      },
      "image/prs.pti": {
        source: "iana",
        extensions: ["pti"]
      },
      "image/pwg-raster": {
        source: "iana"
      },
      "image/sgi": {
        source: "apache",
        extensions: ["sgi"]
      },
      "image/svg+xml": {
        source: "iana",
        compressible: true,
        extensions: ["svg", "svgz"]
      },
      "image/t38": {
        source: "iana",
        extensions: ["t38"]
      },
      "image/tiff": {
        source: "iana",
        compressible: false,
        extensions: ["tif", "tiff"]
      },
      "image/tiff-fx": {
        source: "iana",
        extensions: ["tfx"]
      },
      "image/vnd.adobe.photoshop": {
        source: "iana",
        compressible: true,
        extensions: ["psd"]
      },
      "image/vnd.airzip.accelerator.azv": {
        source: "iana",
        extensions: ["azv"]
      },
      "image/vnd.cns.inf2": {
        source: "iana"
      },
      "image/vnd.dece.graphic": {
        source: "iana",
        extensions: ["uvi", "uvvi", "uvg", "uvvg"]
      },
      "image/vnd.djvu": {
        source: "iana",
        extensions: ["djvu", "djv"]
      },
      "image/vnd.dvb.subtitle": {
        source: "iana",
        extensions: ["sub"]
      },
      "image/vnd.dwg": {
        source: "iana",
        extensions: ["dwg"]
      },
      "image/vnd.dxf": {
        source: "iana",
        extensions: ["dxf"]
      },
      "image/vnd.fastbidsheet": {
        source: "iana",
        extensions: ["fbs"]
      },
      "image/vnd.fpx": {
        source: "iana",
        extensions: ["fpx"]
      },
      "image/vnd.fst": {
        source: "iana",
        extensions: ["fst"]
      },
      "image/vnd.fujixerox.edmics-mmr": {
        source: "iana",
        extensions: ["mmr"]
      },
      "image/vnd.fujixerox.edmics-rlc": {
        source: "iana",
        extensions: ["rlc"]
      },
      "image/vnd.globalgraphics.pgb": {
        source: "iana"
      },
      "image/vnd.microsoft.icon": {
        source: "iana",
        compressible: true,
        extensions: ["ico"]
      },
      "image/vnd.mix": {
        source: "iana"
      },
      "image/vnd.mozilla.apng": {
        source: "iana"
      },
      "image/vnd.ms-dds": {
        compressible: true,
        extensions: ["dds"]
      },
      "image/vnd.ms-modi": {
        source: "iana",
        extensions: ["mdi"]
      },
      "image/vnd.ms-photo": {
        source: "apache",
        extensions: ["wdp"]
      },
      "image/vnd.net-fpx": {
        source: "iana",
        extensions: ["npx"]
      },
      "image/vnd.pco.b16": {
        source: "iana",
        extensions: ["b16"]
      },
      "image/vnd.radiance": {
        source: "iana"
      },
      "image/vnd.sealed.png": {
        source: "iana"
      },
      "image/vnd.sealedmedia.softseal.gif": {
        source: "iana"
      },
      "image/vnd.sealedmedia.softseal.jpg": {
        source: "iana"
      },
      "image/vnd.svf": {
        source: "iana"
      },
      "image/vnd.tencent.tap": {
        source: "iana",
        extensions: ["tap"]
      },
      "image/vnd.valve.source.texture": {
        source: "iana",
        extensions: ["vtf"]
      },
      "image/vnd.wap.wbmp": {
        source: "iana",
        extensions: ["wbmp"]
      },
      "image/vnd.xiff": {
        source: "iana",
        extensions: ["xif"]
      },
      "image/vnd.zbrush.pcx": {
        source: "iana",
        extensions: ["pcx"]
      },
      "image/webp": {
        source: "apache",
        extensions: ["webp"]
      },
      "image/wmf": {
        source: "iana",
        extensions: ["wmf"]
      },
      "image/x-3ds": {
        source: "apache",
        extensions: ["3ds"]
      },
      "image/x-cmu-raster": {
        source: "apache",
        extensions: ["ras"]
      },
      "image/x-cmx": {
        source: "apache",
        extensions: ["cmx"]
      },
      "image/x-freehand": {
        source: "apache",
        extensions: ["fh", "fhc", "fh4", "fh5", "fh7"]
      },
      "image/x-icon": {
        source: "apache",
        compressible: true,
        extensions: ["ico"]
      },
      "image/x-jng": {
        source: "nginx",
        extensions: ["jng"]
      },
      "image/x-mrsid-image": {
        source: "apache",
        extensions: ["sid"]
      },
      "image/x-ms-bmp": {
        source: "nginx",
        compressible: true,
        extensions: ["bmp"]
      },
      "image/x-pcx": {
        source: "apache",
        extensions: ["pcx"]
      },
      "image/x-pict": {
        source: "apache",
        extensions: ["pic", "pct"]
      },
      "image/x-portable-anymap": {
        source: "apache",
        extensions: ["pnm"]
      },
      "image/x-portable-bitmap": {
        source: "apache",
        extensions: ["pbm"]
      },
      "image/x-portable-graymap": {
        source: "apache",
        extensions: ["pgm"]
      },
      "image/x-portable-pixmap": {
        source: "apache",
        extensions: ["ppm"]
      },
      "image/x-rgb": {
        source: "apache",
        extensions: ["rgb"]
      },
      "image/x-tga": {
        source: "apache",
        extensions: ["tga"]
      },
      "image/x-xbitmap": {
        source: "apache",
        extensions: ["xbm"]
      },
      "image/x-xcf": {
        compressible: false
      },
      "image/x-xpixmap": {
        source: "apache",
        extensions: ["xpm"]
      },
      "image/x-xwindowdump": {
        source: "apache",
        extensions: ["xwd"]
      },
      "message/cpim": {
        source: "iana"
      },
      "message/delivery-status": {
        source: "iana"
      },
      "message/disposition-notification": {
        source: "iana",
        extensions: [
          "disposition-notification"
        ]
      },
      "message/external-body": {
        source: "iana"
      },
      "message/feedback-report": {
        source: "iana"
      },
      "message/global": {
        source: "iana",
        extensions: ["u8msg"]
      },
      "message/global-delivery-status": {
        source: "iana",
        extensions: ["u8dsn"]
      },
      "message/global-disposition-notification": {
        source: "iana",
        extensions: ["u8mdn"]
      },
      "message/global-headers": {
        source: "iana",
        extensions: ["u8hdr"]
      },
      "message/http": {
        source: "iana",
        compressible: false
      },
      "message/imdn+xml": {
        source: "iana",
        compressible: true
      },
      "message/news": {
        source: "iana"
      },
      "message/partial": {
        source: "iana",
        compressible: false
      },
      "message/rfc822": {
        source: "iana",
        compressible: true,
        extensions: ["eml", "mime"]
      },
      "message/s-http": {
        source: "iana"
      },
      "message/sip": {
        source: "iana"
      },
      "message/sipfrag": {
        source: "iana"
      },
      "message/tracking-status": {
        source: "iana"
      },
      "message/vnd.si.simp": {
        source: "iana"
      },
      "message/vnd.wfa.wsc": {
        source: "iana",
        extensions: ["wsc"]
      },
      "model/3mf": {
        source: "iana",
        extensions: ["3mf"]
      },
      "model/e57": {
        source: "iana"
      },
      "model/gltf+json": {
        source: "iana",
        compressible: true,
        extensions: ["gltf"]
      },
      "model/gltf-binary": {
        source: "iana",
        compressible: true,
        extensions: ["glb"]
      },
      "model/iges": {
        source: "iana",
        compressible: false,
        extensions: ["igs", "iges"]
      },
      "model/mesh": {
        source: "iana",
        compressible: false,
        extensions: ["msh", "mesh", "silo"]
      },
      "model/mtl": {
        source: "iana",
        extensions: ["mtl"]
      },
      "model/obj": {
        source: "iana",
        extensions: ["obj"]
      },
      "model/step": {
        source: "iana"
      },
      "model/step+xml": {
        source: "iana",
        compressible: true,
        extensions: ["stpx"]
      },
      "model/step+zip": {
        source: "iana",
        compressible: false,
        extensions: ["stpz"]
      },
      "model/step-xml+zip": {
        source: "iana",
        compressible: false,
        extensions: ["stpxz"]
      },
      "model/stl": {
        source: "iana",
        extensions: ["stl"]
      },
      "model/vnd.collada+xml": {
        source: "iana",
        compressible: true,
        extensions: ["dae"]
      },
      "model/vnd.dwf": {
        source: "iana",
        extensions: ["dwf"]
      },
      "model/vnd.flatland.3dml": {
        source: "iana"
      },
      "model/vnd.gdl": {
        source: "iana",
        extensions: ["gdl"]
      },
      "model/vnd.gs-gdl": {
        source: "apache"
      },
      "model/vnd.gs.gdl": {
        source: "iana"
      },
      "model/vnd.gtw": {
        source: "iana",
        extensions: ["gtw"]
      },
      "model/vnd.moml+xml": {
        source: "iana",
        compressible: true
      },
      "model/vnd.mts": {
        source: "iana",
        extensions: ["mts"]
      },
      "model/vnd.opengex": {
        source: "iana",
        extensions: ["ogex"]
      },
      "model/vnd.parasolid.transmit.binary": {
        source: "iana",
        extensions: ["x_b"]
      },
      "model/vnd.parasolid.transmit.text": {
        source: "iana",
        extensions: ["x_t"]
      },
      "model/vnd.pytha.pyox": {
        source: "iana"
      },
      "model/vnd.rosette.annotated-data-model": {
        source: "iana"
      },
      "model/vnd.sap.vds": {
        source: "iana",
        extensions: ["vds"]
      },
      "model/vnd.usdz+zip": {
        source: "iana",
        compressible: false,
        extensions: ["usdz"]
      },
      "model/vnd.valve.source.compiled-map": {
        source: "iana",
        extensions: ["bsp"]
      },
      "model/vnd.vtu": {
        source: "iana",
        extensions: ["vtu"]
      },
      "model/vrml": {
        source: "iana",
        compressible: false,
        extensions: ["wrl", "vrml"]
      },
      "model/x3d+binary": {
        source: "apache",
        compressible: false,
        extensions: ["x3db", "x3dbz"]
      },
      "model/x3d+fastinfoset": {
        source: "iana",
        extensions: ["x3db"]
      },
      "model/x3d+vrml": {
        source: "apache",
        compressible: false,
        extensions: ["x3dv", "x3dvz"]
      },
      "model/x3d+xml": {
        source: "iana",
        compressible: true,
        extensions: ["x3d", "x3dz"]
      },
      "model/x3d-vrml": {
        source: "iana",
        extensions: ["x3dv"]
      },
      "multipart/alternative": {
        source: "iana",
        compressible: false
      },
      "multipart/appledouble": {
        source: "iana"
      },
      "multipart/byteranges": {
        source: "iana"
      },
      "multipart/digest": {
        source: "iana"
      },
      "multipart/encrypted": {
        source: "iana",
        compressible: false
      },
      "multipart/form-data": {
        source: "iana",
        compressible: false
      },
      "multipart/header-set": {
        source: "iana"
      },
      "multipart/mixed": {
        source: "iana"
      },
      "multipart/multilingual": {
        source: "iana"
      },
      "multipart/parallel": {
        source: "iana"
      },
      "multipart/related": {
        source: "iana",
        compressible: false
      },
      "multipart/report": {
        source: "iana"
      },
      "multipart/signed": {
        source: "iana",
        compressible: false
      },
      "multipart/vnd.bint.med-plus": {
        source: "iana"
      },
      "multipart/voice-message": {
        source: "iana"
      },
      "multipart/x-mixed-replace": {
        source: "iana"
      },
      "text/1d-interleaved-parityfec": {
        source: "iana"
      },
      "text/cache-manifest": {
        source: "iana",
        compressible: true,
        extensions: ["appcache", "manifest"]
      },
      "text/calendar": {
        source: "iana",
        extensions: ["ics", "ifb"]
      },
      "text/calender": {
        compressible: true
      },
      "text/cmd": {
        compressible: true
      },
      "text/coffeescript": {
        extensions: ["coffee", "litcoffee"]
      },
      "text/cql": {
        source: "iana"
      },
      "text/cql-expression": {
        source: "iana"
      },
      "text/cql-identifier": {
        source: "iana"
      },
      "text/css": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["css"]
      },
      "text/csv": {
        source: "iana",
        compressible: true,
        extensions: ["csv"]
      },
      "text/csv-schema": {
        source: "iana"
      },
      "text/directory": {
        source: "iana"
      },
      "text/dns": {
        source: "iana"
      },
      "text/ecmascript": {
        source: "iana"
      },
      "text/encaprtp": {
        source: "iana"
      },
      "text/enriched": {
        source: "iana"
      },
      "text/fhirpath": {
        source: "iana"
      },
      "text/flexfec": {
        source: "iana"
      },
      "text/fwdred": {
        source: "iana"
      },
      "text/gff3": {
        source: "iana"
      },
      "text/grammar-ref-list": {
        source: "iana"
      },
      "text/html": {
        source: "iana",
        compressible: true,
        extensions: ["html", "htm", "shtml"]
      },
      "text/jade": {
        extensions: ["jade"]
      },
      "text/javascript": {
        source: "iana",
        compressible: true
      },
      "text/jcr-cnd": {
        source: "iana"
      },
      "text/jsx": {
        compressible: true,
        extensions: ["jsx"]
      },
      "text/less": {
        compressible: true,
        extensions: ["less"]
      },
      "text/markdown": {
        source: "iana",
        compressible: true,
        extensions: ["markdown", "md"]
      },
      "text/mathml": {
        source: "nginx",
        extensions: ["mml"]
      },
      "text/mdx": {
        compressible: true,
        extensions: ["mdx"]
      },
      "text/mizar": {
        source: "iana"
      },
      "text/n3": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["n3"]
      },
      "text/parameters": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/parityfec": {
        source: "iana"
      },
      "text/plain": {
        source: "iana",
        compressible: true,
        extensions: ["txt", "text", "conf", "def", "list", "log", "in", "ini"]
      },
      "text/provenance-notation": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/prs.fallenstein.rst": {
        source: "iana"
      },
      "text/prs.lines.tag": {
        source: "iana",
        extensions: ["dsc"]
      },
      "text/prs.prop.logic": {
        source: "iana"
      },
      "text/raptorfec": {
        source: "iana"
      },
      "text/red": {
        source: "iana"
      },
      "text/rfc822-headers": {
        source: "iana"
      },
      "text/richtext": {
        source: "iana",
        compressible: true,
        extensions: ["rtx"]
      },
      "text/rtf": {
        source: "iana",
        compressible: true,
        extensions: ["rtf"]
      },
      "text/rtp-enc-aescm128": {
        source: "iana"
      },
      "text/rtploopback": {
        source: "iana"
      },
      "text/rtx": {
        source: "iana"
      },
      "text/sgml": {
        source: "iana",
        extensions: ["sgml", "sgm"]
      },
      "text/shaclc": {
        source: "iana"
      },
      "text/shex": {
        source: "iana",
        extensions: ["shex"]
      },
      "text/slim": {
        extensions: ["slim", "slm"]
      },
      "text/spdx": {
        source: "iana",
        extensions: ["spdx"]
      },
      "text/strings": {
        source: "iana"
      },
      "text/stylus": {
        extensions: ["stylus", "styl"]
      },
      "text/t140": {
        source: "iana"
      },
      "text/tab-separated-values": {
        source: "iana",
        compressible: true,
        extensions: ["tsv"]
      },
      "text/troff": {
        source: "iana",
        extensions: ["t", "tr", "roff", "man", "me", "ms"]
      },
      "text/turtle": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["ttl"]
      },
      "text/ulpfec": {
        source: "iana"
      },
      "text/uri-list": {
        source: "iana",
        compressible: true,
        extensions: ["uri", "uris", "urls"]
      },
      "text/vcard": {
        source: "iana",
        compressible: true,
        extensions: ["vcard"]
      },
      "text/vnd.a": {
        source: "iana"
      },
      "text/vnd.abc": {
        source: "iana"
      },
      "text/vnd.ascii-art": {
        source: "iana"
      },
      "text/vnd.curl": {
        source: "iana",
        extensions: ["curl"]
      },
      "text/vnd.curl.dcurl": {
        source: "apache",
        extensions: ["dcurl"]
      },
      "text/vnd.curl.mcurl": {
        source: "apache",
        extensions: ["mcurl"]
      },
      "text/vnd.curl.scurl": {
        source: "apache",
        extensions: ["scurl"]
      },
      "text/vnd.debian.copyright": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.dmclientscript": {
        source: "iana"
      },
      "text/vnd.dvb.subtitle": {
        source: "iana",
        extensions: ["sub"]
      },
      "text/vnd.esmertec.theme-descriptor": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.familysearch.gedcom": {
        source: "iana",
        extensions: ["ged"]
      },
      "text/vnd.ficlab.flt": {
        source: "iana"
      },
      "text/vnd.fly": {
        source: "iana",
        extensions: ["fly"]
      },
      "text/vnd.fmi.flexstor": {
        source: "iana",
        extensions: ["flx"]
      },
      "text/vnd.gml": {
        source: "iana"
      },
      "text/vnd.graphviz": {
        source: "iana",
        extensions: ["gv"]
      },
      "text/vnd.hans": {
        source: "iana"
      },
      "text/vnd.hgl": {
        source: "iana"
      },
      "text/vnd.in3d.3dml": {
        source: "iana",
        extensions: ["3dml"]
      },
      "text/vnd.in3d.spot": {
        source: "iana",
        extensions: ["spot"]
      },
      "text/vnd.iptc.newsml": {
        source: "iana"
      },
      "text/vnd.iptc.nitf": {
        source: "iana"
      },
      "text/vnd.latex-z": {
        source: "iana"
      },
      "text/vnd.motorola.reflex": {
        source: "iana"
      },
      "text/vnd.ms-mediapackage": {
        source: "iana"
      },
      "text/vnd.net2phone.commcenter.command": {
        source: "iana"
      },
      "text/vnd.radisys.msml-basic-layout": {
        source: "iana"
      },
      "text/vnd.senx.warpscript": {
        source: "iana"
      },
      "text/vnd.si.uricatalogue": {
        source: "iana"
      },
      "text/vnd.sosi": {
        source: "iana"
      },
      "text/vnd.sun.j2me.app-descriptor": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["jad"]
      },
      "text/vnd.trolltech.linguist": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.wap.si": {
        source: "iana"
      },
      "text/vnd.wap.sl": {
        source: "iana"
      },
      "text/vnd.wap.wml": {
        source: "iana",
        extensions: ["wml"]
      },
      "text/vnd.wap.wmlscript": {
        source: "iana",
        extensions: ["wmls"]
      },
      "text/vtt": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["vtt"]
      },
      "text/x-asm": {
        source: "apache",
        extensions: ["s", "asm"]
      },
      "text/x-c": {
        source: "apache",
        extensions: ["c", "cc", "cxx", "cpp", "h", "hh", "dic"]
      },
      "text/x-component": {
        source: "nginx",
        extensions: ["htc"]
      },
      "text/x-fortran": {
        source: "apache",
        extensions: ["f", "for", "f77", "f90"]
      },
      "text/x-gwt-rpc": {
        compressible: true
      },
      "text/x-handlebars-template": {
        extensions: ["hbs"]
      },
      "text/x-java-source": {
        source: "apache",
        extensions: ["java"]
      },
      "text/x-jquery-tmpl": {
        compressible: true
      },
      "text/x-lua": {
        extensions: ["lua"]
      },
      "text/x-markdown": {
        compressible: true,
        extensions: ["mkd"]
      },
      "text/x-nfo": {
        source: "apache",
        extensions: ["nfo"]
      },
      "text/x-opml": {
        source: "apache",
        extensions: ["opml"]
      },
      "text/x-org": {
        compressible: true,
        extensions: ["org"]
      },
      "text/x-pascal": {
        source: "apache",
        extensions: ["p", "pas"]
      },
      "text/x-processing": {
        compressible: true,
        extensions: ["pde"]
      },
      "text/x-sass": {
        extensions: ["sass"]
      },
      "text/x-scss": {
        extensions: ["scss"]
      },
      "text/x-setext": {
        source: "apache",
        extensions: ["etx"]
      },
      "text/x-sfv": {
        source: "apache",
        extensions: ["sfv"]
      },
      "text/x-suse-ymp": {
        compressible: true,
        extensions: ["ymp"]
      },
      "text/x-uuencode": {
        source: "apache",
        extensions: ["uu"]
      },
      "text/x-vcalendar": {
        source: "apache",
        extensions: ["vcs"]
      },
      "text/x-vcard": {
        source: "apache",
        extensions: ["vcf"]
      },
      "text/xml": {
        source: "iana",
        compressible: true,
        extensions: ["xml"]
      },
      "text/xml-external-parsed-entity": {
        source: "iana"
      },
      "text/yaml": {
        compressible: true,
        extensions: ["yaml", "yml"]
      },
      "video/1d-interleaved-parityfec": {
        source: "iana"
      },
      "video/3gpp": {
        source: "iana",
        extensions: ["3gp", "3gpp"]
      },
      "video/3gpp-tt": {
        source: "iana"
      },
      "video/3gpp2": {
        source: "iana",
        extensions: ["3g2"]
      },
      "video/av1": {
        source: "iana"
      },
      "video/bmpeg": {
        source: "iana"
      },
      "video/bt656": {
        source: "iana"
      },
      "video/celb": {
        source: "iana"
      },
      "video/dv": {
        source: "iana"
      },
      "video/encaprtp": {
        source: "iana"
      },
      "video/ffv1": {
        source: "iana"
      },
      "video/flexfec": {
        source: "iana"
      },
      "video/h261": {
        source: "iana",
        extensions: ["h261"]
      },
      "video/h263": {
        source: "iana",
        extensions: ["h263"]
      },
      "video/h263-1998": {
        source: "iana"
      },
      "video/h263-2000": {
        source: "iana"
      },
      "video/h264": {
        source: "iana",
        extensions: ["h264"]
      },
      "video/h264-rcdo": {
        source: "iana"
      },
      "video/h264-svc": {
        source: "iana"
      },
      "video/h265": {
        source: "iana"
      },
      "video/iso.segment": {
        source: "iana",
        extensions: ["m4s"]
      },
      "video/jpeg": {
        source: "iana",
        extensions: ["jpgv"]
      },
      "video/jpeg2000": {
        source: "iana"
      },
      "video/jpm": {
        source: "apache",
        extensions: ["jpm", "jpgm"]
      },
      "video/jxsv": {
        source: "iana"
      },
      "video/mj2": {
        source: "iana",
        extensions: ["mj2", "mjp2"]
      },
      "video/mp1s": {
        source: "iana"
      },
      "video/mp2p": {
        source: "iana"
      },
      "video/mp2t": {
        source: "iana",
        extensions: ["ts"]
      },
      "video/mp4": {
        source: "iana",
        compressible: false,
        extensions: ["mp4", "mp4v", "mpg4"]
      },
      "video/mp4v-es": {
        source: "iana"
      },
      "video/mpeg": {
        source: "iana",
        compressible: false,
        extensions: ["mpeg", "mpg", "mpe", "m1v", "m2v"]
      },
      "video/mpeg4-generic": {
        source: "iana"
      },
      "video/mpv": {
        source: "iana"
      },
      "video/nv": {
        source: "iana"
      },
      "video/ogg": {
        source: "iana",
        compressible: false,
        extensions: ["ogv"]
      },
      "video/parityfec": {
        source: "iana"
      },
      "video/pointer": {
        source: "iana"
      },
      "video/quicktime": {
        source: "iana",
        compressible: false,
        extensions: ["qt", "mov"]
      },
      "video/raptorfec": {
        source: "iana"
      },
      "video/raw": {
        source: "iana"
      },
      "video/rtp-enc-aescm128": {
        source: "iana"
      },
      "video/rtploopback": {
        source: "iana"
      },
      "video/rtx": {
        source: "iana"
      },
      "video/scip": {
        source: "iana"
      },
      "video/smpte291": {
        source: "iana"
      },
      "video/smpte292m": {
        source: "iana"
      },
      "video/ulpfec": {
        source: "iana"
      },
      "video/vc1": {
        source: "iana"
      },
      "video/vc2": {
        source: "iana"
      },
      "video/vnd.cctv": {
        source: "iana"
      },
      "video/vnd.dece.hd": {
        source: "iana",
        extensions: ["uvh", "uvvh"]
      },
      "video/vnd.dece.mobile": {
        source: "iana",
        extensions: ["uvm", "uvvm"]
      },
      "video/vnd.dece.mp4": {
        source: "iana"
      },
      "video/vnd.dece.pd": {
        source: "iana",
        extensions: ["uvp", "uvvp"]
      },
      "video/vnd.dece.sd": {
        source: "iana",
        extensions: ["uvs", "uvvs"]
      },
      "video/vnd.dece.video": {
        source: "iana",
        extensions: ["uvv", "uvvv"]
      },
      "video/vnd.directv.mpeg": {
        source: "iana"
      },
      "video/vnd.directv.mpeg-tts": {
        source: "iana"
      },
      "video/vnd.dlna.mpeg-tts": {
        source: "iana"
      },
      "video/vnd.dvb.file": {
        source: "iana",
        extensions: ["dvb"]
      },
      "video/vnd.fvt": {
        source: "iana",
        extensions: ["fvt"]
      },
      "video/vnd.hns.video": {
        source: "iana"
      },
      "video/vnd.iptvforum.1dparityfec-1010": {
        source: "iana"
      },
      "video/vnd.iptvforum.1dparityfec-2005": {
        source: "iana"
      },
      "video/vnd.iptvforum.2dparityfec-1010": {
        source: "iana"
      },
      "video/vnd.iptvforum.2dparityfec-2005": {
        source: "iana"
      },
      "video/vnd.iptvforum.ttsavc": {
        source: "iana"
      },
      "video/vnd.iptvforum.ttsmpeg2": {
        source: "iana"
      },
      "video/vnd.motorola.video": {
        source: "iana"
      },
      "video/vnd.motorola.videop": {
        source: "iana"
      },
      "video/vnd.mpegurl": {
        source: "iana",
        extensions: ["mxu", "m4u"]
      },
      "video/vnd.ms-playready.media.pyv": {
        source: "iana",
        extensions: ["pyv"]
      },
      "video/vnd.nokia.interleaved-multimedia": {
        source: "iana"
      },
      "video/vnd.nokia.mp4vr": {
        source: "iana"
      },
      "video/vnd.nokia.videovoip": {
        source: "iana"
      },
      "video/vnd.objectvideo": {
        source: "iana"
      },
      "video/vnd.radgamettools.bink": {
        source: "iana"
      },
      "video/vnd.radgamettools.smacker": {
        source: "iana"
      },
      "video/vnd.sealed.mpeg1": {
        source: "iana"
      },
      "video/vnd.sealed.mpeg4": {
        source: "iana"
      },
      "video/vnd.sealed.swf": {
        source: "iana"
      },
      "video/vnd.sealedmedia.softseal.mov": {
        source: "iana"
      },
      "video/vnd.uvvu.mp4": {
        source: "iana",
        extensions: ["uvu", "uvvu"]
      },
      "video/vnd.vivo": {
        source: "iana",
        extensions: ["viv"]
      },
      "video/vnd.youtube.yt": {
        source: "iana"
      },
      "video/vp8": {
        source: "iana"
      },
      "video/vp9": {
        source: "iana"
      },
      "video/webm": {
        source: "apache",
        compressible: false,
        extensions: ["webm"]
      },
      "video/x-f4v": {
        source: "apache",
        extensions: ["f4v"]
      },
      "video/x-fli": {
        source: "apache",
        extensions: ["fli"]
      },
      "video/x-flv": {
        source: "apache",
        compressible: false,
        extensions: ["flv"]
      },
      "video/x-m4v": {
        source: "apache",
        extensions: ["m4v"]
      },
      "video/x-matroska": {
        source: "apache",
        compressible: false,
        extensions: ["mkv", "mk3d", "mks"]
      },
      "video/x-mng": {
        source: "apache",
        extensions: ["mng"]
      },
      "video/x-ms-asf": {
        source: "apache",
        extensions: ["asf", "asx"]
      },
      "video/x-ms-vob": {
        source: "apache",
        extensions: ["vob"]
      },
      "video/x-ms-wm": {
        source: "apache",
        extensions: ["wm"]
      },
      "video/x-ms-wmv": {
        source: "apache",
        compressible: false,
        extensions: ["wmv"]
      },
      "video/x-ms-wmx": {
        source: "apache",
        extensions: ["wmx"]
      },
      "video/x-ms-wvx": {
        source: "apache",
        extensions: ["wvx"]
      },
      "video/x-msvideo": {
        source: "apache",
        extensions: ["avi"]
      },
      "video/x-sgi-movie": {
        source: "apache",
        extensions: ["movie"]
      },
      "video/x-smv": {
        source: "apache",
        extensions: ["smv"]
      },
      "x-conference/x-cooltalk": {
        source: "apache",
        extensions: ["ice"]
      },
      "x-shader/x-fragment": {
        compressible: true
      },
      "x-shader/x-vertex": {
        compressible: true
      }
    };
  }
});

// node_modules/mime-db/index.js
var require_mime_db = __commonJS({
  "node_modules/mime-db/index.js"(exports2, module2) {
    module2.exports = require_db();
  }
});

// node_modules/mime-types/index.js
var require_mime_types = __commonJS({
  "node_modules/mime-types/index.js"(exports2) {
    "use strict";
    var db = require_mime_db();
    var extname = require("path").extname;
    var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
    var TEXT_TYPE_REGEXP = /^text\//i;
    exports2.charset = charset;
    exports2.charsets = { lookup: charset };
    exports2.contentType = contentType;
    exports2.extension = extension;
    exports2.extensions = /* @__PURE__ */ Object.create(null);
    exports2.lookup = lookup;
    exports2.types = /* @__PURE__ */ Object.create(null);
    populateMaps(exports2.extensions, exports2.types);
    function charset(type) {
      if (!type || typeof type !== "string") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var mime = match && db[match[1].toLowerCase()];
      if (mime && mime.charset) {
        return mime.charset;
      }
      if (match && TEXT_TYPE_REGEXP.test(match[1])) {
        return "UTF-8";
      }
      return false;
    }
    function contentType(str) {
      if (!str || typeof str !== "string") {
        return false;
      }
      var mime = str.indexOf("/") === -1 ? exports2.lookup(str) : str;
      if (!mime) {
        return false;
      }
      if (mime.indexOf("charset") === -1) {
        var charset2 = exports2.charset(mime);
        if (charset2) mime += "; charset=" + charset2.toLowerCase();
      }
      return mime;
    }
    function extension(type) {
      if (!type || typeof type !== "string") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var exts = match && exports2.extensions[match[1].toLowerCase()];
      if (!exts || !exts.length) {
        return false;
      }
      return exts[0];
    }
    function lookup(path) {
      if (!path || typeof path !== "string") {
        return false;
      }
      var extension2 = extname("x." + path).toLowerCase().substr(1);
      if (!extension2) {
        return false;
      }
      return exports2.types[extension2] || false;
    }
    function populateMaps(extensions, types) {
      var preference = ["nginx", "apache", void 0, "iana"];
      Object.keys(db).forEach(function forEachMimeType(type) {
        var mime = db[type];
        var exts = mime.extensions;
        if (!exts || !exts.length) {
          return;
        }
        extensions[type] = exts;
        for (var i = 0; i < exts.length; i++) {
          var extension2 = exts[i];
          if (types[extension2]) {
            var from = preference.indexOf(db[types[extension2]].source);
            var to = preference.indexOf(mime.source);
            if (types[extension2] !== "application/octet-stream" && (from > to || from === to && types[extension2].substr(0, 12) === "application/")) {
              continue;
            }
          }
          types[extension2] = type;
        }
      });
    }
  }
});

// node_modules/asynckit/lib/defer.js
var require_defer = __commonJS({
  "node_modules/asynckit/lib/defer.js"(exports2, module2) {
    module2.exports = defer;
    function defer(fn) {
      var nextTick = typeof setImmediate == "function" ? setImmediate : typeof process == "object" && typeof process.nextTick == "function" ? process.nextTick : null;
      if (nextTick) {
        nextTick(fn);
      } else {
        setTimeout(fn, 0);
      }
    }
  }
});

// node_modules/asynckit/lib/async.js
var require_async = __commonJS({
  "node_modules/asynckit/lib/async.js"(exports2, module2) {
    var defer = require_defer();
    module2.exports = async;
    function async(callback) {
      var isAsync = false;
      defer(function() {
        isAsync = true;
      });
      return function async_callback(err, result) {
        if (isAsync) {
          callback(err, result);
        } else {
          defer(function nextTick_callback() {
            callback(err, result);
          });
        }
      };
    }
  }
});

// node_modules/asynckit/lib/abort.js
var require_abort = __commonJS({
  "node_modules/asynckit/lib/abort.js"(exports2, module2) {
    module2.exports = abort;
    function abort(state) {
      Object.keys(state.jobs).forEach(clean.bind(state));
      state.jobs = {};
    }
    function clean(key) {
      if (typeof this.jobs[key] == "function") {
        this.jobs[key]();
      }
    }
  }
});

// node_modules/asynckit/lib/iterate.js
var require_iterate = __commonJS({
  "node_modules/asynckit/lib/iterate.js"(exports2, module2) {
    var async = require_async();
    var abort = require_abort();
    module2.exports = iterate;
    function iterate(list, iterator, state, callback) {
      var key = state["keyedList"] ? state["keyedList"][state.index] : state.index;
      state.jobs[key] = runJob(iterator, key, list[key], function(error, output) {
        if (!(key in state.jobs)) {
          return;
        }
        delete state.jobs[key];
        if (error) {
          abort(state);
        } else {
          state.results[key] = output;
        }
        callback(error, state.results);
      });
    }
    function runJob(iterator, key, item, callback) {
      var aborter;
      if (iterator.length == 2) {
        aborter = iterator(item, async(callback));
      } else {
        aborter = iterator(item, key, async(callback));
      }
      return aborter;
    }
  }
});

// node_modules/asynckit/lib/state.js
var require_state = __commonJS({
  "node_modules/asynckit/lib/state.js"(exports2, module2) {
    module2.exports = state;
    function state(list, sortMethod) {
      var isNamedList = !Array.isArray(list), initState = {
        index: 0,
        keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
        jobs: {},
        results: isNamedList ? {} : [],
        size: isNamedList ? Object.keys(list).length : list.length
      };
      if (sortMethod) {
        initState.keyedList.sort(isNamedList ? sortMethod : function(a, b) {
          return sortMethod(list[a], list[b]);
        });
      }
      return initState;
    }
  }
});

// node_modules/asynckit/lib/terminator.js
var require_terminator = __commonJS({
  "node_modules/asynckit/lib/terminator.js"(exports2, module2) {
    var abort = require_abort();
    var async = require_async();
    module2.exports = terminator;
    function terminator(callback) {
      if (!Object.keys(this.jobs).length) {
        return;
      }
      this.index = this.size;
      abort(this);
      async(callback)(null, this.results);
    }
  }
});

// node_modules/asynckit/parallel.js
var require_parallel = __commonJS({
  "node_modules/asynckit/parallel.js"(exports2, module2) {
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = parallel;
    function parallel(list, iterator, callback) {
      var state = initState(list);
      while (state.index < (state["keyedList"] || list).length) {
        iterate(list, iterator, state, function(error, result) {
          if (error) {
            callback(error, result);
            return;
          }
          if (Object.keys(state.jobs).length === 0) {
            callback(null, state.results);
            return;
          }
        });
        state.index++;
      }
      return terminator.bind(state, callback);
    }
  }
});

// node_modules/asynckit/serialOrdered.js
var require_serialOrdered = __commonJS({
  "node_modules/asynckit/serialOrdered.js"(exports2, module2) {
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = serialOrdered;
    module2.exports.ascending = ascending;
    module2.exports.descending = descending;
    function serialOrdered(list, iterator, sortMethod, callback) {
      var state = initState(list, sortMethod);
      iterate(list, iterator, state, function iteratorHandler(error, result) {
        if (error) {
          callback(error, result);
          return;
        }
        state.index++;
        if (state.index < (state["keyedList"] || list).length) {
          iterate(list, iterator, state, iteratorHandler);
          return;
        }
        callback(null, state.results);
      });
      return terminator.bind(state, callback);
    }
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }
    function descending(a, b) {
      return -1 * ascending(a, b);
    }
  }
});

// node_modules/asynckit/serial.js
var require_serial = __commonJS({
  "node_modules/asynckit/serial.js"(exports2, module2) {
    var serialOrdered = require_serialOrdered();
    module2.exports = serial;
    function serial(list, iterator, callback) {
      return serialOrdered(list, iterator, null, callback);
    }
  }
});

// node_modules/asynckit/index.js
var require_asynckit = __commonJS({
  "node_modules/asynckit/index.js"(exports2, module2) {
    module2.exports = {
      parallel: require_parallel(),
      serial: require_serial(),
      serialOrdered: require_serialOrdered()
    };
  }
});

// node_modules/form-data/lib/populate.js
var require_populate = __commonJS({
  "node_modules/form-data/lib/populate.js"(exports2, module2) {
    module2.exports = function(dst, src) {
      Object.keys(src).forEach(function(prop) {
        dst[prop] = dst[prop] || src[prop];
      });
      return dst;
    };
  }
});

// node_modules/form-data/lib/form_data.js
var require_form_data = __commonJS({
  "node_modules/form-data/lib/form_data.js"(exports2, module2) {
    var CombinedStream = require_combined_stream();
    var util = require("util");
    var path = require("path");
    var http = require("http");
    var https = require("https");
    var parseUrl = require("url").parse;
    var fs = require("fs");
    var Stream = require("stream").Stream;
    var mime = require_mime_types();
    var asynckit = require_asynckit();
    var populate = require_populate();
    module2.exports = FormData2;
    util.inherits(FormData2, CombinedStream);
    function FormData2(options) {
      if (!(this instanceof FormData2)) {
        return new FormData2(options);
      }
      this._overheadLength = 0;
      this._valueLength = 0;
      this._valuesToMeasure = [];
      CombinedStream.call(this);
      options = options || {};
      for (var option in options) {
        this[option] = options[option];
      }
    }
    FormData2.LINE_BREAK = "\r\n";
    FormData2.DEFAULT_CONTENT_TYPE = "application/octet-stream";
    FormData2.prototype.append = function(field, value, options) {
      options = options || {};
      if (typeof options == "string") {
        options = { filename: options };
      }
      var append = CombinedStream.prototype.append.bind(this);
      if (typeof value == "number") {
        value = "" + value;
      }
      if (Array.isArray(value)) {
        this._error(new Error("Arrays are not supported."));
        return;
      }
      var header = this._multiPartHeader(field, value, options);
      var footer = this._multiPartFooter();
      append(header);
      append(value);
      append(footer);
      this._trackLength(header, value, options);
    };
    FormData2.prototype._trackLength = function(header, value, options) {
      var valueLength = 0;
      if (options.knownLength != null) {
        valueLength += +options.knownLength;
      } else if (Buffer.isBuffer(value)) {
        valueLength = value.length;
      } else if (typeof value === "string") {
        valueLength = Buffer.byteLength(value);
      }
      this._valueLength += valueLength;
      this._overheadLength += Buffer.byteLength(header) + FormData2.LINE_BREAK.length;
      if (!value || !value.path && !(value.readable && value.hasOwnProperty("httpVersion")) && !(value instanceof Stream)) {
        return;
      }
      if (!options.knownLength) {
        this._valuesToMeasure.push(value);
      }
    };
    FormData2.prototype._lengthRetriever = function(value, callback) {
      if (value.hasOwnProperty("fd")) {
        if (value.end != void 0 && value.end != Infinity && value.start != void 0) {
          callback(null, value.end + 1 - (value.start ? value.start : 0));
        } else {
          fs.stat(value.path, function(err, stat) {
            var fileSize;
            if (err) {
              callback(err);
              return;
            }
            fileSize = stat.size - (value.start ? value.start : 0);
            callback(null, fileSize);
          });
        }
      } else if (value.hasOwnProperty("httpVersion")) {
        callback(null, +value.headers["content-length"]);
      } else if (value.hasOwnProperty("httpModule")) {
        value.on("response", function(response) {
          value.pause();
          callback(null, +response.headers["content-length"]);
        });
        value.resume();
      } else {
        callback("Unknown stream");
      }
    };
    FormData2.prototype._multiPartHeader = function(field, value, options) {
      if (typeof options.header == "string") {
        return options.header;
      }
      var contentDisposition = this._getContentDisposition(value, options);
      var contentType = this._getContentType(value, options);
      var contents = "";
      var headers = {
        // add custom disposition as third element or keep it two elements if not
        "Content-Disposition": ["form-data", 'name="' + field + '"'].concat(contentDisposition || []),
        // if no content type. allow it to be empty array
        "Content-Type": [].concat(contentType || [])
      };
      if (typeof options.header == "object") {
        populate(headers, options.header);
      }
      var header;
      for (var prop in headers) {
        if (!headers.hasOwnProperty(prop)) continue;
        header = headers[prop];
        if (header == null) {
          continue;
        }
        if (!Array.isArray(header)) {
          header = [header];
        }
        if (header.length) {
          contents += prop + ": " + header.join("; ") + FormData2.LINE_BREAK;
        }
      }
      return "--" + this.getBoundary() + FormData2.LINE_BREAK + contents + FormData2.LINE_BREAK;
    };
    FormData2.prototype._getContentDisposition = function(value, options) {
      var filename, contentDisposition;
      if (typeof options.filepath === "string") {
        filename = path.normalize(options.filepath).replace(/\\/g, "/");
      } else if (options.filename || value.name || value.path) {
        filename = path.basename(options.filename || value.name || value.path);
      } else if (value.readable && value.hasOwnProperty("httpVersion")) {
        filename = path.basename(value.client._httpMessage.path || "");
      }
      if (filename) {
        contentDisposition = 'filename="' + filename + '"';
      }
      return contentDisposition;
    };
    FormData2.prototype._getContentType = function(value, options) {
      var contentType = options.contentType;
      if (!contentType && value.name) {
        contentType = mime.lookup(value.name);
      }
      if (!contentType && value.path) {
        contentType = mime.lookup(value.path);
      }
      if (!contentType && value.readable && value.hasOwnProperty("httpVersion")) {
        contentType = value.headers["content-type"];
      }
      if (!contentType && (options.filepath || options.filename)) {
        contentType = mime.lookup(options.filepath || options.filename);
      }
      if (!contentType && typeof value == "object") {
        contentType = FormData2.DEFAULT_CONTENT_TYPE;
      }
      return contentType;
    };
    FormData2.prototype._multiPartFooter = function() {
      return function(next) {
        var footer = FormData2.LINE_BREAK;
        var lastPart = this._streams.length === 0;
        if (lastPart) {
          footer += this._lastBoundary();
        }
        next(footer);
      }.bind(this);
    };
    FormData2.prototype._lastBoundary = function() {
      return "--" + this.getBoundary() + "--" + FormData2.LINE_BREAK;
    };
    FormData2.prototype.getHeaders = function(userHeaders) {
      var header;
      var formHeaders = {
        "content-type": "multipart/form-data; boundary=" + this.getBoundary()
      };
      for (header in userHeaders) {
        if (userHeaders.hasOwnProperty(header)) {
          formHeaders[header.toLowerCase()] = userHeaders[header];
        }
      }
      return formHeaders;
    };
    FormData2.prototype.setBoundary = function(boundary) {
      this._boundary = boundary;
    };
    FormData2.prototype.getBoundary = function() {
      if (!this._boundary) {
        this._generateBoundary();
      }
      return this._boundary;
    };
    FormData2.prototype.getBuffer = function() {
      var dataBuffer = new Buffer.alloc(0);
      var boundary = this.getBoundary();
      for (var i = 0, len = this._streams.length; i < len; i++) {
        if (typeof this._streams[i] !== "function") {
          if (Buffer.isBuffer(this._streams[i])) {
            dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]);
          } else {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(this._streams[i])]);
          }
          if (typeof this._streams[i] !== "string" || this._streams[i].substring(2, boundary.length + 2) !== boundary) {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(FormData2.LINE_BREAK)]);
          }
        }
      }
      return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
    };
    FormData2.prototype._generateBoundary = function() {
      var boundary = "--------------------------";
      for (var i = 0; i < 24; i++) {
        boundary += Math.floor(Math.random() * 10).toString(16);
      }
      this._boundary = boundary;
    };
    FormData2.prototype.getLengthSync = function() {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this.hasKnownLength()) {
        this._error(new Error("Cannot calculate proper length in synchronous way."));
      }
      return knownLength;
    };
    FormData2.prototype.hasKnownLength = function() {
      var hasKnownLength = true;
      if (this._valuesToMeasure.length) {
        hasKnownLength = false;
      }
      return hasKnownLength;
    };
    FormData2.prototype.getLength = function(cb) {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this._valuesToMeasure.length) {
        process.nextTick(cb.bind(this, null, knownLength));
        return;
      }
      asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {
        if (err) {
          cb(err);
          return;
        }
        values.forEach(function(length) {
          knownLength += length;
        });
        cb(null, knownLength);
      });
    };
    FormData2.prototype.submit = function(params, cb) {
      var request, options, defaults = { method: "post" };
      if (typeof params == "string") {
        params = parseUrl(params);
        options = populate({
          port: params.port,
          path: params.pathname,
          host: params.hostname,
          protocol: params.protocol
        }, defaults);
      } else {
        options = populate(params, defaults);
        if (!options.port) {
          options.port = options.protocol == "https:" ? 443 : 80;
        }
      }
      options.headers = this.getHeaders(params.headers);
      if (options.protocol == "https:") {
        request = https.request(options);
      } else {
        request = http.request(options);
      }
      this.getLength(function(err, length) {
        if (err && err !== "Unknown stream") {
          this._error(err);
          return;
        }
        if (length) {
          request.setHeader("Content-Length", length);
        }
        this.pipe(request);
        if (cb) {
          var onResponse;
          var callback = function(error, responce) {
            request.removeListener("error", callback);
            request.removeListener("response", onResponse);
            return cb.call(this, error, responce);
          };
          onResponse = callback.bind(this, null);
          request.on("error", callback);
          request.on("response", onResponse);
        }
      }.bind(this));
      return request;
    };
    FormData2.prototype._error = function(err) {
      if (!this.error) {
        this.error = err;
        this.pause();
        this.emit("error", err);
      }
    };
    FormData2.prototype.toString = function() {
      return "[object FormData]";
    };
  }
});

// node_modules/proxy-from-env/index.js
var require_proxy_from_env = __commonJS({
  "node_modules/proxy-from-env/index.js"(exports2) {
    "use strict";
    var parseUrl = require("url").parse;
    var DEFAULT_PORTS = {
      ftp: 21,
      gopher: 70,
      http: 80,
      https: 443,
      ws: 80,
      wss: 443
    };
    var stringEndsWith = String.prototype.endsWith || function(s) {
      return s.length <= this.length && this.indexOf(s, this.length - s.length) !== -1;
    };
    function getProxyForUrl(url) {
      var parsedUrl = typeof url === "string" ? parseUrl(url) : url || {};
      var proto = parsedUrl.protocol;
      var hostname = parsedUrl.host;
      var port = parsedUrl.port;
      if (typeof hostname !== "string" || !hostname || typeof proto !== "string") {
        return "";
      }
      proto = proto.split(":", 1)[0];
      hostname = hostname.replace(/:\d*$/, "");
      port = parseInt(port) || DEFAULT_PORTS[proto] || 0;
      if (!shouldProxy(hostname, port)) {
        return "";
      }
      var proxy = getEnv("npm_config_" + proto + "_proxy") || getEnv(proto + "_proxy") || getEnv("npm_config_proxy") || getEnv("all_proxy");
      if (proxy && proxy.indexOf("://") === -1) {
        proxy = proto + "://" + proxy;
      }
      return proxy;
    }
    function shouldProxy(hostname, port) {
      var NO_PROXY = (getEnv("npm_config_no_proxy") || getEnv("no_proxy")).toLowerCase();
      if (!NO_PROXY) {
        return true;
      }
      if (NO_PROXY === "*") {
        return false;
      }
      return NO_PROXY.split(/[,\s]/).every(function(proxy) {
        if (!proxy) {
          return true;
        }
        var parsedProxy = proxy.match(/^(.+):(\d+)$/);
        var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;
        var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;
        if (parsedProxyPort && parsedProxyPort !== port) {
          return true;
        }
        if (!/^[.*]/.test(parsedProxyHostname)) {
          return hostname !== parsedProxyHostname;
        }
        if (parsedProxyHostname.charAt(0) === "*") {
          parsedProxyHostname = parsedProxyHostname.slice(1);
        }
        return !stringEndsWith.call(hostname, parsedProxyHostname);
      });
    }
    function getEnv(key) {
      return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || "";
    }
    exports2.getProxyForUrl = getProxyForUrl;
  }
});

// node_modules/follow-redirects/debug.js
var require_debug2 = __commonJS({
  "node_modules/follow-redirects/debug.js"(exports2, module2) {
    var debug;
    module2.exports = function() {
      if (!debug) {
        try {
          debug = require("debug")("follow-redirects");
        } catch (error) {
        }
        if (typeof debug !== "function") {
          debug = function() {
          };
        }
      }
      debug.apply(null, arguments);
    };
  }
});

// node_modules/follow-redirects/index.js
var require_follow_redirects = __commonJS({
  "node_modules/follow-redirects/index.js"(exports2, module2) {
    var url = require("url");
    var URL2 = url.URL;
    var http = require("http");
    var https = require("https");
    var Writable = require("stream").Writable;
    var assert = require("assert");
    var debug = require_debug2();
    (function detectUnsupportedEnvironment() {
      var looksLikeNode = typeof process !== "undefined";
      var looksLikeBrowser = typeof window !== "undefined" && typeof document !== "undefined";
      var looksLikeV8 = isFunction(Error.captureStackTrace);
      if (!looksLikeNode && (looksLikeBrowser || !looksLikeV8)) {
        console.warn("The follow-redirects package should be excluded from browser builds.");
      }
    })();
    var useNativeURL = false;
    try {
      assert(new URL2(""));
    } catch (error) {
      useNativeURL = error.code === "ERR_INVALID_URL";
    }
    var preservedUrlFields = [
      "auth",
      "host",
      "hostname",
      "href",
      "path",
      "pathname",
      "port",
      "protocol",
      "query",
      "search",
      "hash"
    ];
    var events = ["abort", "aborted", "connect", "error", "socket", "timeout"];
    var eventHandlers = /* @__PURE__ */ Object.create(null);
    events.forEach(function(event) {
      eventHandlers[event] = function(arg1, arg2, arg3) {
        this._redirectable.emit(event, arg1, arg2, arg3);
      };
    });
    var InvalidUrlError = createErrorType(
      "ERR_INVALID_URL",
      "Invalid URL",
      TypeError
    );
    var RedirectionError = createErrorType(
      "ERR_FR_REDIRECTION_FAILURE",
      "Redirected request failed"
    );
    var TooManyRedirectsError = createErrorType(
      "ERR_FR_TOO_MANY_REDIRECTS",
      "Maximum number of redirects exceeded",
      RedirectionError
    );
    var MaxBodyLengthExceededError = createErrorType(
      "ERR_FR_MAX_BODY_LENGTH_EXCEEDED",
      "Request body larger than maxBodyLength limit"
    );
    var WriteAfterEndError = createErrorType(
      "ERR_STREAM_WRITE_AFTER_END",
      "write after end"
    );
    var destroy = Writable.prototype.destroy || noop;
    function RedirectableRequest(options, responseCallback) {
      Writable.call(this);
      this._sanitizeOptions(options);
      this._options = options;
      this._ended = false;
      this._ending = false;
      this._redirectCount = 0;
      this._redirects = [];
      this._requestBodyLength = 0;
      this._requestBodyBuffers = [];
      if (responseCallback) {
        this.on("response", responseCallback);
      }
      var self2 = this;
      this._onNativeResponse = function(response) {
        try {
          self2._processResponse(response);
        } catch (cause) {
          self2.emit("error", cause instanceof RedirectionError ? cause : new RedirectionError({ cause }));
        }
      };
      this._performRequest();
    }
    RedirectableRequest.prototype = Object.create(Writable.prototype);
    RedirectableRequest.prototype.abort = function() {
      destroyRequest(this._currentRequest);
      this._currentRequest.abort();
      this.emit("abort");
    };
    RedirectableRequest.prototype.destroy = function(error) {
      destroyRequest(this._currentRequest, error);
      destroy.call(this, error);
      return this;
    };
    RedirectableRequest.prototype.write = function(data, encoding, callback) {
      if (this._ending) {
        throw new WriteAfterEndError();
      }
      if (!isString(data) && !isBuffer(data)) {
        throw new TypeError("data should be a string, Buffer or Uint8Array");
      }
      if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (data.length === 0) {
        if (callback) {
          callback();
        }
        return;
      }
      if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
        this._requestBodyLength += data.length;
        this._requestBodyBuffers.push({ data, encoding });
        this._currentRequest.write(data, encoding, callback);
      } else {
        this.emit("error", new MaxBodyLengthExceededError());
        this.abort();
      }
    };
    RedirectableRequest.prototype.end = function(data, encoding, callback) {
      if (isFunction(data)) {
        callback = data;
        data = encoding = null;
      } else if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (!data) {
        this._ended = this._ending = true;
        this._currentRequest.end(null, null, callback);
      } else {
        var self2 = this;
        var currentRequest = this._currentRequest;
        this.write(data, encoding, function() {
          self2._ended = true;
          currentRequest.end(null, null, callback);
        });
        this._ending = true;
      }
    };
    RedirectableRequest.prototype.setHeader = function(name, value) {
      this._options.headers[name] = value;
      this._currentRequest.setHeader(name, value);
    };
    RedirectableRequest.prototype.removeHeader = function(name) {
      delete this._options.headers[name];
      this._currentRequest.removeHeader(name);
    };
    RedirectableRequest.prototype.setTimeout = function(msecs, callback) {
      var self2 = this;
      function destroyOnTimeout(socket) {
        socket.setTimeout(msecs);
        socket.removeListener("timeout", socket.destroy);
        socket.addListener("timeout", socket.destroy);
      }
      function startTimer(socket) {
        if (self2._timeout) {
          clearTimeout(self2._timeout);
        }
        self2._timeout = setTimeout(function() {
          self2.emit("timeout");
          clearTimer();
        }, msecs);
        destroyOnTimeout(socket);
      }
      function clearTimer() {
        if (self2._timeout) {
          clearTimeout(self2._timeout);
          self2._timeout = null;
        }
        self2.removeListener("abort", clearTimer);
        self2.removeListener("error", clearTimer);
        self2.removeListener("response", clearTimer);
        self2.removeListener("close", clearTimer);
        if (callback) {
          self2.removeListener("timeout", callback);
        }
        if (!self2.socket) {
          self2._currentRequest.removeListener("socket", startTimer);
        }
      }
      if (callback) {
        this.on("timeout", callback);
      }
      if (this.socket) {
        startTimer(this.socket);
      } else {
        this._currentRequest.once("socket", startTimer);
      }
      this.on("socket", destroyOnTimeout);
      this.on("abort", clearTimer);
      this.on("error", clearTimer);
      this.on("response", clearTimer);
      this.on("close", clearTimer);
      return this;
    };
    [
      "flushHeaders",
      "getHeader",
      "setNoDelay",
      "setSocketKeepAlive"
    ].forEach(function(method) {
      RedirectableRequest.prototype[method] = function(a, b) {
        return this._currentRequest[method](a, b);
      };
    });
    ["aborted", "connection", "socket"].forEach(function(property) {
      Object.defineProperty(RedirectableRequest.prototype, property, {
        get: function() {
          return this._currentRequest[property];
        }
      });
    });
    RedirectableRequest.prototype._sanitizeOptions = function(options) {
      if (!options.headers) {
        options.headers = {};
      }
      if (options.host) {
        if (!options.hostname) {
          options.hostname = options.host;
        }
        delete options.host;
      }
      if (!options.pathname && options.path) {
        var searchPos = options.path.indexOf("?");
        if (searchPos < 0) {
          options.pathname = options.path;
        } else {
          options.pathname = options.path.substring(0, searchPos);
          options.search = options.path.substring(searchPos);
        }
      }
    };
    RedirectableRequest.prototype._performRequest = function() {
      var protocol = this._options.protocol;
      var nativeProtocol = this._options.nativeProtocols[protocol];
      if (!nativeProtocol) {
        throw new TypeError("Unsupported protocol " + protocol);
      }
      if (this._options.agents) {
        var scheme = protocol.slice(0, -1);
        this._options.agent = this._options.agents[scheme];
      }
      var request = this._currentRequest = nativeProtocol.request(this._options, this._onNativeResponse);
      request._redirectable = this;
      for (var event of events) {
        request.on(event, eventHandlers[event]);
      }
      this._currentUrl = /^\//.test(this._options.path) ? url.format(this._options) : (
        // When making a request to a proxy, […]
        // a client MUST send the target URI in absolute-form […].
        this._options.path
      );
      if (this._isRedirect) {
        var i = 0;
        var self2 = this;
        var buffers = this._requestBodyBuffers;
        (function writeNext(error) {
          if (request === self2._currentRequest) {
            if (error) {
              self2.emit("error", error);
            } else if (i < buffers.length) {
              var buffer = buffers[i++];
              if (!request.finished) {
                request.write(buffer.data, buffer.encoding, writeNext);
              }
            } else if (self2._ended) {
              request.end();
            }
          }
        })();
      }
    };
    RedirectableRequest.prototype._processResponse = function(response) {
      var statusCode = response.statusCode;
      if (this._options.trackRedirects) {
        this._redirects.push({
          url: this._currentUrl,
          headers: response.headers,
          statusCode
        });
      }
      var location = response.headers.location;
      if (!location || this._options.followRedirects === false || statusCode < 300 || statusCode >= 400) {
        response.responseUrl = this._currentUrl;
        response.redirects = this._redirects;
        this.emit("response", response);
        this._requestBodyBuffers = [];
        return;
      }
      destroyRequest(this._currentRequest);
      response.destroy();
      if (++this._redirectCount > this._options.maxRedirects) {
        throw new TooManyRedirectsError();
      }
      var requestHeaders;
      var beforeRedirect = this._options.beforeRedirect;
      if (beforeRedirect) {
        requestHeaders = Object.assign({
          // The Host header was set by nativeProtocol.request
          Host: response.req.getHeader("host")
        }, this._options.headers);
      }
      var method = this._options.method;
      if ((statusCode === 301 || statusCode === 302) && this._options.method === "POST" || // RFC7231§6.4.4: The 303 (See Other) status code indicates that
      // the server is redirecting the user agent to a different resource […]
      // A user agent can perform a retrieval request targeting that URI
      // (a GET or HEAD request if using HTTP) […]
      statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) {
        this._options.method = "GET";
        this._requestBodyBuffers = [];
        removeMatchingHeaders(/^content-/i, this._options.headers);
      }
      var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);
      var currentUrlParts = parseUrl(this._currentUrl);
      var currentHost = currentHostHeader || currentUrlParts.host;
      var currentUrl = /^\w+:/.test(location) ? this._currentUrl : url.format(Object.assign(currentUrlParts, { host: currentHost }));
      var redirectUrl = resolveUrl(location, currentUrl);
      debug("redirecting to", redirectUrl.href);
      this._isRedirect = true;
      spreadUrlObject(redirectUrl, this._options);
      if (redirectUrl.protocol !== currentUrlParts.protocol && redirectUrl.protocol !== "https:" || redirectUrl.host !== currentHost && !isSubdomain(redirectUrl.host, currentHost)) {
        removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i, this._options.headers);
      }
      if (isFunction(beforeRedirect)) {
        var responseDetails = {
          headers: response.headers,
          statusCode
        };
        var requestDetails = {
          url: currentUrl,
          method,
          headers: requestHeaders
        };
        beforeRedirect(this._options, responseDetails, requestDetails);
        this._sanitizeOptions(this._options);
      }
      this._performRequest();
    };
    function wrap(protocols) {
      var exports3 = {
        maxRedirects: 21,
        maxBodyLength: 10 * 1024 * 1024
      };
      var nativeProtocols = {};
      Object.keys(protocols).forEach(function(scheme) {
        var protocol = scheme + ":";
        var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
        var wrappedProtocol = exports3[scheme] = Object.create(nativeProtocol);
        function request(input, options, callback) {
          if (isURL(input)) {
            input = spreadUrlObject(input);
          } else if (isString(input)) {
            input = spreadUrlObject(parseUrl(input));
          } else {
            callback = options;
            options = validateUrl(input);
            input = { protocol };
          }
          if (isFunction(options)) {
            callback = options;
            options = null;
          }
          options = Object.assign({
            maxRedirects: exports3.maxRedirects,
            maxBodyLength: exports3.maxBodyLength
          }, input, options);
          options.nativeProtocols = nativeProtocols;
          if (!isString(options.host) && !isString(options.hostname)) {
            options.hostname = "::1";
          }
          assert.equal(options.protocol, protocol, "protocol mismatch");
          debug("options", options);
          return new RedirectableRequest(options, callback);
        }
        function get(input, options, callback) {
          var wrappedRequest = wrappedProtocol.request(input, options, callback);
          wrappedRequest.end();
          return wrappedRequest;
        }
        Object.defineProperties(wrappedProtocol, {
          request: { value: request, configurable: true, enumerable: true, writable: true },
          get: { value: get, configurable: true, enumerable: true, writable: true }
        });
      });
      return exports3;
    }
    function noop() {
    }
    function parseUrl(input) {
      var parsed;
      if (useNativeURL) {
        parsed = new URL2(input);
      } else {
        parsed = validateUrl(url.parse(input));
        if (!isString(parsed.protocol)) {
          throw new InvalidUrlError({ input });
        }
      }
      return parsed;
    }
    function resolveUrl(relative, base) {
      return useNativeURL ? new URL2(relative, base) : parseUrl(url.resolve(base, relative));
    }
    function validateUrl(input) {
      if (/^\[/.test(input.hostname) && !/^\[[:0-9a-f]+\]$/i.test(input.hostname)) {
        throw new InvalidUrlError({ input: input.href || input });
      }
      if (/^\[/.test(input.host) && !/^\[[:0-9a-f]+\](:\d+)?$/i.test(input.host)) {
        throw new InvalidUrlError({ input: input.href || input });
      }
      return input;
    }
    function spreadUrlObject(urlObject, target) {
      var spread = target || {};
      for (var key of preservedUrlFields) {
        spread[key] = urlObject[key];
      }
      if (spread.hostname.startsWith("[")) {
        spread.hostname = spread.hostname.slice(1, -1);
      }
      if (spread.port !== "") {
        spread.port = Number(spread.port);
      }
      spread.path = spread.search ? spread.pathname + spread.search : spread.pathname;
      return spread;
    }
    function removeMatchingHeaders(regex, headers) {
      var lastValue;
      for (var header in headers) {
        if (regex.test(header)) {
          lastValue = headers[header];
          delete headers[header];
        }
      }
      return lastValue === null || typeof lastValue === "undefined" ? void 0 : String(lastValue).trim();
    }
    function createErrorType(code, message, baseClass) {
      function CustomError(properties) {
        if (isFunction(Error.captureStackTrace)) {
          Error.captureStackTrace(this, this.constructor);
        }
        Object.assign(this, properties || {});
        this.code = code;
        this.message = this.cause ? message + ": " + this.cause.message : message;
      }
      CustomError.prototype = new (baseClass || Error)();
      Object.defineProperties(CustomError.prototype, {
        constructor: {
          value: CustomError,
          enumerable: false
        },
        name: {
          value: "Error [" + code + "]",
          enumerable: false
        }
      });
      return CustomError;
    }
    function destroyRequest(request, error) {
      for (var event of events) {
        request.removeListener(event, eventHandlers[event]);
      }
      request.on("error", noop);
      request.destroy(error);
    }
    function isSubdomain(subdomain, domain) {
      assert(isString(subdomain) && isString(domain));
      var dot = subdomain.length - domain.length - 1;
      return dot > 0 && subdomain[dot] === "." && subdomain.endsWith(domain);
    }
    function isString(value) {
      return typeof value === "string" || value instanceof String;
    }
    function isFunction(value) {
      return typeof value === "function";
    }
    function isBuffer(value) {
      return typeof value === "object" && "length" in value;
    }
    function isURL(value) {
      return URL2 && value instanceof URL2;
    }
    module2.exports = wrap({ http, https });
    module2.exports.wrap = wrap;
  }
});

// node_modules/axios/dist/node/axios.cjs
var require_axios = __commonJS({
  "node_modules/axios/dist/node/axios.cjs"(exports2, module2) {
    "use strict";
    var FormData$1 = require_form_data();
    var url = require("url");
    var proxyFromEnv = require_proxy_from_env();
    var http = require("http");
    var https = require("https");
    var util = require("util");
    var followRedirects = require_follow_redirects();
    var zlib = require("zlib");
    var stream = require("stream");
    var events = require("events");
    function _interopDefaultLegacy(e) {
      return e && typeof e === "object" && "default" in e ? e : { "default": e };
    }
    var FormData__default = /* @__PURE__ */ _interopDefaultLegacy(FormData$1);
    var url__default = /* @__PURE__ */ _interopDefaultLegacy(url);
    var proxyFromEnv__default = /* @__PURE__ */ _interopDefaultLegacy(proxyFromEnv);
    var http__default = /* @__PURE__ */ _interopDefaultLegacy(http);
    var https__default = /* @__PURE__ */ _interopDefaultLegacy(https);
    var util__default = /* @__PURE__ */ _interopDefaultLegacy(util);
    var followRedirects__default = /* @__PURE__ */ _interopDefaultLegacy(followRedirects);
    var zlib__default = /* @__PURE__ */ _interopDefaultLegacy(zlib);
    var stream__default = /* @__PURE__ */ _interopDefaultLegacy(stream);
    function bind(fn, thisArg) {
      return function wrap() {
        return fn.apply(thisArg, arguments);
      };
    }
    var { toString } = Object.prototype;
    var { getPrototypeOf } = Object;
    var kindOf = /* @__PURE__ */ ((cache) => (thing) => {
      const str = toString.call(thing);
      return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
    })(/* @__PURE__ */ Object.create(null));
    var kindOfTest = (type) => {
      type = type.toLowerCase();
      return (thing) => kindOf(thing) === type;
    };
    var typeOfTest = (type) => (thing) => typeof thing === type;
    var { isArray } = Array;
    var isUndefined = typeOfTest("undefined");
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest("ArrayBuffer");
    function isArrayBufferView(val) {
      let result;
      if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    var isString = typeOfTest("string");
    var isFunction = typeOfTest("function");
    var isNumber = typeOfTest("number");
    var isObject = (thing) => thing !== null && typeof thing === "object";
    var isBoolean = (thing) => thing === true || thing === false;
    var isPlainObject = (val) => {
      if (kindOf(val) !== "object") {
        return false;
      }
      const prototype2 = getPrototypeOf(val);
      return (prototype2 === null || prototype2 === Object.prototype || Object.getPrototypeOf(prototype2) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);
    };
    var isDate = kindOfTest("Date");
    var isFile = kindOfTest("File");
    var isBlob = kindOfTest("Blob");
    var isFileList = kindOfTest("FileList");
    var isStream = (val) => isObject(val) && isFunction(val.pipe);
    var isFormData = (thing) => {
      let kind;
      return thing && (typeof FormData === "function" && thing instanceof FormData || isFunction(thing.append) && ((kind = kindOf(thing)) === "formdata" || // detect form-data instance
      kind === "object" && isFunction(thing.toString) && thing.toString() === "[object FormData]"));
    };
    var isURLSearchParams = kindOfTest("URLSearchParams");
    var [isReadableStream, isRequest, isResponse, isHeaders] = ["ReadableStream", "Request", "Response", "Headers"].map(kindOfTest);
    var trim = (str) => str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    function forEach(obj, fn, { allOwnKeys = false } = {}) {
      if (obj === null || typeof obj === "undefined") {
        return;
      }
      let i;
      let l;
      if (typeof obj !== "object") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
        const len = keys.length;
        let key;
        for (i = 0; i < len; i++) {
          key = keys[i];
          fn.call(null, obj[key], key, obj);
        }
      }
    }
    function findKey(obj, key) {
      key = key.toLowerCase();
      const keys = Object.keys(obj);
      let i = keys.length;
      let _key;
      while (i-- > 0) {
        _key = keys[i];
        if (key === _key.toLowerCase()) {
          return _key;
        }
      }
      return null;
    }
    var _global = (() => {
      if (typeof globalThis !== "undefined") return globalThis;
      return typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : global;
    })();
    var isContextDefined = (context) => !isUndefined(context) && context !== _global;
    function merge() {
      const { caseless } = isContextDefined(this) && this || {};
      const result = {};
      const assignValue = (val, key) => {
        const targetKey = caseless && findKey(result, key) || key;
        if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
          result[targetKey] = merge(result[targetKey], val);
        } else if (isPlainObject(val)) {
          result[targetKey] = merge({}, val);
        } else if (isArray(val)) {
          result[targetKey] = val.slice();
        } else {
          result[targetKey] = val;
        }
      };
      for (let i = 0, l = arguments.length; i < l; i++) {
        arguments[i] && forEach(arguments[i], assignValue);
      }
      return result;
    }
    var extend = (a, b, thisArg, { allOwnKeys } = {}) => {
      forEach(b, (val, key) => {
        if (thisArg && isFunction(val)) {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      }, { allOwnKeys });
      return a;
    };
    var stripBOM = (content) => {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    };
    var inherits = (constructor, superConstructor, props, descriptors2) => {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors2);
      constructor.prototype.constructor = constructor;
      Object.defineProperty(constructor, "super", {
        value: superConstructor.prototype
      });
      props && Object.assign(constructor.prototype, props);
    };
    var toFlatObject = (sourceObj, destObj, filter, propFilter) => {
      let props;
      let i;
      let prop;
      const merged = {};
      destObj = destObj || {};
      if (sourceObj == null) return destObj;
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = filter !== false && getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    };
    var endsWith = (str, searchString, position) => {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      const lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    };
    var toArray = (thing) => {
      if (!thing) return null;
      if (isArray(thing)) return thing;
      let i = thing.length;
      if (!isNumber(i)) return null;
      const arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    };
    var isTypedArray = /* @__PURE__ */ ((TypedArray) => {
      return (thing) => {
        return TypedArray && thing instanceof TypedArray;
      };
    })(typeof Uint8Array !== "undefined" && getPrototypeOf(Uint8Array));
    var forEachEntry = (obj, fn) => {
      const generator = obj && obj[Symbol.iterator];
      const iterator = generator.call(obj);
      let result;
      while ((result = iterator.next()) && !result.done) {
        const pair = result.value;
        fn.call(obj, pair[0], pair[1]);
      }
    };
    var matchAll = (regExp, str) => {
      let matches;
      const arr = [];
      while ((matches = regExp.exec(str)) !== null) {
        arr.push(matches);
      }
      return arr;
    };
    var isHTMLForm = kindOfTest("HTMLFormElement");
    var toCamelCase = (str) => {
      return str.toLowerCase().replace(
        /[-_\s]([a-z\d])(\w*)/g,
        function replacer(m, p1, p2) {
          return p1.toUpperCase() + p2;
        }
      );
    };
    var hasOwnProperty = (({ hasOwnProperty: hasOwnProperty2 }) => (obj, prop) => hasOwnProperty2.call(obj, prop))(Object.prototype);
    var isRegExp = kindOfTest("RegExp");
    var reduceDescriptors = (obj, reducer) => {
      const descriptors2 = Object.getOwnPropertyDescriptors(obj);
      const reducedDescriptors = {};
      forEach(descriptors2, (descriptor, name) => {
        let ret;
        if ((ret = reducer(descriptor, name, obj)) !== false) {
          reducedDescriptors[name] = ret || descriptor;
        }
      });
      Object.defineProperties(obj, reducedDescriptors);
    };
    var freezeMethods = (obj) => {
      reduceDescriptors(obj, (descriptor, name) => {
        if (isFunction(obj) && ["arguments", "caller", "callee"].indexOf(name) !== -1) {
          return false;
        }
        const value = obj[name];
        if (!isFunction(value)) return;
        descriptor.enumerable = false;
        if ("writable" in descriptor) {
          descriptor.writable = false;
          return;
        }
        if (!descriptor.set) {
          descriptor.set = () => {
            throw Error("Can not rewrite read-only method '" + name + "'");
          };
        }
      });
    };
    var toObjectSet = (arrayOrString, delimiter) => {
      const obj = {};
      const define2 = (arr) => {
        arr.forEach((value) => {
          obj[value] = true;
        });
      };
      isArray(arrayOrString) ? define2(arrayOrString) : define2(String(arrayOrString).split(delimiter));
      return obj;
    };
    var noop = () => {
    };
    var toFiniteNumber = (value, defaultValue) => {
      return value != null && Number.isFinite(value = +value) ? value : defaultValue;
    };
    var ALPHA = "abcdefghijklmnopqrstuvwxyz";
    var DIGIT = "0123456789";
    var ALPHABET = {
      DIGIT,
      ALPHA,
      ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT
    };
    var generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {
      let str = "";
      const { length } = alphabet;
      while (size--) {
        str += alphabet[Math.random() * length | 0];
      }
      return str;
    };
    function isSpecCompliantForm(thing) {
      return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === "FormData" && thing[Symbol.iterator]);
    }
    var toJSONObject = (obj) => {
      const stack = new Array(10);
      const visit = (source, i) => {
        if (isObject(source)) {
          if (stack.indexOf(source) >= 0) {
            return;
          }
          if (!("toJSON" in source)) {
            stack[i] = source;
            const target = isArray(source) ? [] : {};
            forEach(source, (value, key) => {
              const reducedValue = visit(value, i + 1);
              !isUndefined(reducedValue) && (target[key] = reducedValue);
            });
            stack[i] = void 0;
            return target;
          }
        }
        return source;
      };
      return visit(obj, 0);
    };
    var isAsyncFn = kindOfTest("AsyncFunction");
    var isThenable = (thing) => thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);
    var _setImmediate = ((setImmediateSupported, postMessageSupported) => {
      if (setImmediateSupported) {
        return setImmediate;
      }
      return postMessageSupported ? ((token, callbacks) => {
        _global.addEventListener("message", ({ source, data }) => {
          if (source === _global && data === token) {
            callbacks.length && callbacks.shift()();
          }
        }, false);
        return (cb) => {
          callbacks.push(cb);
          _global.postMessage(token, "*");
        };
      })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);
    })(
      typeof setImmediate === "function",
      isFunction(_global.postMessage)
    );
    var asap = typeof queueMicrotask !== "undefined" ? queueMicrotask.bind(_global) : typeof process !== "undefined" && process.nextTick || _setImmediate;
    var utils$1 = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isBoolean,
      isObject,
      isPlainObject,
      isReadableStream,
      isRequest,
      isResponse,
      isHeaders,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isRegExp,
      isFunction,
      isStream,
      isURLSearchParams,
      isTypedArray,
      isFileList,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      forEachEntry,
      matchAll,
      isHTMLForm,
      hasOwnProperty,
      hasOwnProp: hasOwnProperty,
      // an alias to avoid ESLint no-prototype-builtins detection
      reduceDescriptors,
      freezeMethods,
      toObjectSet,
      toCamelCase,
      noop,
      toFiniteNumber,
      findKey,
      global: _global,
      isContextDefined,
      ALPHABET,
      generateString,
      isSpecCompliantForm,
      toJSONObject,
      isAsyncFn,
      isThenable,
      setImmediate: _setImmediate,
      asap
    };
    function AxiosError(message, code, config, request, response) {
      Error.call(this);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      } else {
        this.stack = new Error().stack;
      }
      this.message = message;
      this.name = "AxiosError";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      if (response) {
        this.response = response;
        this.status = response.status ? response.status : null;
      }
    }
    utils$1.inherits(AxiosError, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: utils$1.toJSONObject(this.config),
          code: this.code,
          status: this.status
        };
      }
    });
    var prototype$1 = AxiosError.prototype;
    var descriptors = {};
    [
      "ERR_BAD_OPTION_VALUE",
      "ERR_BAD_OPTION",
      "ECONNABORTED",
      "ETIMEDOUT",
      "ERR_NETWORK",
      "ERR_FR_TOO_MANY_REDIRECTS",
      "ERR_DEPRECATED",
      "ERR_BAD_RESPONSE",
      "ERR_BAD_REQUEST",
      "ERR_CANCELED",
      "ERR_NOT_SUPPORT",
      "ERR_INVALID_URL"
      // eslint-disable-next-line func-names
    ].forEach((code) => {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError, descriptors);
    Object.defineProperty(prototype$1, "isAxiosError", { value: true });
    AxiosError.from = (error, code, config, request, response, customProps) => {
      const axiosError = Object.create(prototype$1);
      utils$1.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      }, (prop) => {
        return prop !== "isAxiosError";
      });
      AxiosError.call(axiosError, error.message, code, config, request, response);
      axiosError.cause = error;
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    function isVisitable(thing) {
      return utils$1.isPlainObject(thing) || utils$1.isArray(thing);
    }
    function removeBrackets(key) {
      return utils$1.endsWith(key, "[]") ? key.slice(0, -2) : key;
    }
    function renderKey(path, key, dots) {
      if (!path) return key;
      return path.concat(key).map(function each(token, i) {
        token = removeBrackets(token);
        return !dots && i ? "[" + token + "]" : token;
      }).join(dots ? "." : "");
    }
    function isFlatArray(arr) {
      return utils$1.isArray(arr) && !arr.some(isVisitable);
    }
    var predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {
      return /^is[A-Z]/.test(prop);
    });
    function toFormData(obj, formData, options) {
      if (!utils$1.isObject(obj)) {
        throw new TypeError("target must be an object");
      }
      formData = formData || new (FormData__default["default"] || FormData)();
      options = utils$1.toFlatObject(options, {
        metaTokens: true,
        dots: false,
        indexes: false
      }, false, function defined(option, source) {
        return !utils$1.isUndefined(source[option]);
      });
      const metaTokens = options.metaTokens;
      const visitor = options.visitor || defaultVisitor;
      const dots = options.dots;
      const indexes = options.indexes;
      const _Blob = options.Blob || typeof Blob !== "undefined" && Blob;
      const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);
      if (!utils$1.isFunction(visitor)) {
        throw new TypeError("visitor must be a function");
      }
      function convertValue(value) {
        if (value === null) return "";
        if (utils$1.isDate(value)) {
          return value.toISOString();
        }
        if (!useBlob && utils$1.isBlob(value)) {
          throw new AxiosError("Blob is not supported. Use a Buffer instead.");
        }
        if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {
          return useBlob && typeof Blob === "function" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function defaultVisitor(value, key, path) {
        let arr = value;
        if (value && !path && typeof value === "object") {
          if (utils$1.endsWith(key, "{}")) {
            key = metaTokens ? key : key.slice(0, -2);
            value = JSON.stringify(value);
          } else if (utils$1.isArray(value) && isFlatArray(value) || (utils$1.isFileList(value) || utils$1.endsWith(key, "[]")) && (arr = utils$1.toArray(value))) {
            key = removeBrackets(key);
            arr.forEach(function each(el, index) {
              !(utils$1.isUndefined(el) || el === null) && formData.append(
                // eslint-disable-next-line no-nested-ternary
                indexes === true ? renderKey([key], index, dots) : indexes === null ? key : key + "[]",
                convertValue(el)
              );
            });
            return false;
          }
        }
        if (isVisitable(value)) {
          return true;
        }
        formData.append(renderKey(path, key, dots), convertValue(value));
        return false;
      }
      const stack = [];
      const exposedHelpers = Object.assign(predicates, {
        defaultVisitor,
        convertValue,
        isVisitable
      });
      function build(value, path) {
        if (utils$1.isUndefined(value)) return;
        if (stack.indexOf(value) !== -1) {
          throw Error("Circular reference detected in " + path.join("."));
        }
        stack.push(value);
        utils$1.forEach(value, function each(el, key) {
          const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(
            formData,
            el,
            utils$1.isString(key) ? key.trim() : key,
            path,
            exposedHelpers
          );
          if (result === true) {
            build(el, path ? path.concat(key) : [key]);
          }
        });
        stack.pop();
      }
      if (!utils$1.isObject(obj)) {
        throw new TypeError("data must be an object");
      }
      build(obj);
      return formData;
    }
    function encode$1(str) {
      const charMap = {
        "!": "%21",
        "'": "%27",
        "(": "%28",
        ")": "%29",
        "~": "%7E",
        "%20": "+",
        "%00": "\0"
      };
      return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
        return charMap[match];
      });
    }
    function AxiosURLSearchParams(params, options) {
      this._pairs = [];
      params && toFormData(params, this, options);
    }
    var prototype = AxiosURLSearchParams.prototype;
    prototype.append = function append(name, value) {
      this._pairs.push([name, value]);
    };
    prototype.toString = function toString2(encoder) {
      const _encode = encoder ? function(value) {
        return encoder.call(this, value, encode$1);
      } : encode$1;
      return this._pairs.map(function each(pair) {
        return _encode(pair[0]) + "=" + _encode(pair[1]);
      }, "").join("&");
    };
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
    }
    function buildURL(url2, params, options) {
      if (!params) {
        return url2;
      }
      const _encode = options && options.encode || encode;
      if (utils$1.isFunction(options)) {
        options = {
          serialize: options
        };
      }
      const serializeFn = options && options.serialize;
      let serializedParams;
      if (serializeFn) {
        serializedParams = serializeFn(params, options);
      } else {
        serializedParams = utils$1.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams(params, options).toString(_encode);
      }
      if (serializedParams) {
        const hashmarkIndex = url2.indexOf("#");
        if (hashmarkIndex !== -1) {
          url2 = url2.slice(0, hashmarkIndex);
        }
        url2 += (url2.indexOf("?") === -1 ? "?" : "&") + serializedParams;
      }
      return url2;
    }
    var InterceptorManager = class {
      constructor() {
        this.handlers = [];
      }
      /**
       * Add a new interceptor to the stack
       *
       * @param {Function} fulfilled The function to handle `then` for a `Promise`
       * @param {Function} rejected The function to handle `reject` for a `Promise`
       *
       * @return {Number} An ID used to remove interceptor later
       */
      use(fulfilled, rejected, options) {
        this.handlers.push({
          fulfilled,
          rejected,
          synchronous: options ? options.synchronous : false,
          runWhen: options ? options.runWhen : null
        });
        return this.handlers.length - 1;
      }
      /**
       * Remove an interceptor from the stack
       *
       * @param {Number} id The ID that was returned by `use`
       *
       * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
       */
      eject(id) {
        if (this.handlers[id]) {
          this.handlers[id] = null;
        }
      }
      /**
       * Clear all interceptors from the stack
       *
       * @returns {void}
       */
      clear() {
        if (this.handlers) {
          this.handlers = [];
        }
      }
      /**
       * Iterate over all the registered interceptors
       *
       * This method is particularly useful for skipping over any
       * interceptors that may have become `null` calling `eject`.
       *
       * @param {Function} fn The function to call for each interceptor
       *
       * @returns {void}
       */
      forEach(fn) {
        utils$1.forEach(this.handlers, function forEachHandler(h) {
          if (h !== null) {
            fn(h);
          }
        });
      }
    };
    var InterceptorManager$1 = InterceptorManager;
    var transitionalDefaults = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
    var URLSearchParams = url__default["default"].URLSearchParams;
    var platform$1 = {
      isNode: true,
      classes: {
        URLSearchParams,
        FormData: FormData__default["default"],
        Blob: typeof Blob !== "undefined" && Blob || null
      },
      protocols: ["http", "https", "file", "data"]
    };
    var hasBrowserEnv = typeof window !== "undefined" && typeof document !== "undefined";
    var _navigator = typeof navigator === "object" && navigator || void 0;
    var hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ["ReactNative", "NativeScript", "NS"].indexOf(_navigator.product) < 0);
    var hasStandardBrowserWebWorkerEnv = (() => {
      return typeof WorkerGlobalScope !== "undefined" && // eslint-disable-next-line no-undef
      self instanceof WorkerGlobalScope && typeof self.importScripts === "function";
    })();
    var origin = hasBrowserEnv && window.location.href || "http://localhost";
    var utils = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      hasBrowserEnv,
      hasStandardBrowserWebWorkerEnv,
      hasStandardBrowserEnv,
      navigator: _navigator,
      origin
    });
    var platform = {
      ...utils,
      ...platform$1
    };
    function toURLEncodedForm(data, options) {
      return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({
        visitor: function(value, key, path, helpers) {
          if (platform.isNode && utils$1.isBuffer(value)) {
            this.append(key, value.toString("base64"));
            return false;
          }
          return helpers.defaultVisitor.apply(this, arguments);
        }
      }, options));
    }
    function parsePropPath(name) {
      return utils$1.matchAll(/\w+|\[(\w*)]/g, name).map((match) => {
        return match[0] === "[]" ? "" : match[1] || match[0];
      });
    }
    function arrayToObject(arr) {
      const obj = {};
      const keys = Object.keys(arr);
      let i;
      const len = keys.length;
      let key;
      for (i = 0; i < len; i++) {
        key = keys[i];
        obj[key] = arr[key];
      }
      return obj;
    }
    function formDataToJSON(formData) {
      function buildPath(path, value, target, index) {
        let name = path[index++];
        if (name === "__proto__") return true;
        const isNumericKey = Number.isFinite(+name);
        const isLast = index >= path.length;
        name = !name && utils$1.isArray(target) ? target.length : name;
        if (isLast) {
          if (utils$1.hasOwnProp(target, name)) {
            target[name] = [target[name], value];
          } else {
            target[name] = value;
          }
          return !isNumericKey;
        }
        if (!target[name] || !utils$1.isObject(target[name])) {
          target[name] = [];
        }
        const result = buildPath(path, value, target[name], index);
        if (result && utils$1.isArray(target[name])) {
          target[name] = arrayToObject(target[name]);
        }
        return !isNumericKey;
      }
      if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {
        const obj = {};
        utils$1.forEachEntry(formData, (name, value) => {
          buildPath(parsePropPath(name), value, obj, 0);
        });
        return obj;
      }
      return null;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils$1.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils$1.trim(rawValue);
        } catch (e) {
          if (e.name !== "SyntaxError") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: ["xhr", "http", "fetch"],
      transformRequest: [function transformRequest(data, headers) {
        const contentType = headers.getContentType() || "";
        const hasJSONContentType = contentType.indexOf("application/json") > -1;
        const isObjectPayload = utils$1.isObject(data);
        if (isObjectPayload && utils$1.isHTMLForm(data)) {
          data = new FormData(data);
        }
        const isFormData2 = utils$1.isFormData(data);
        if (isFormData2) {
          return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;
        }
        if (utils$1.isArrayBuffer(data) || utils$1.isBuffer(data) || utils$1.isStream(data) || utils$1.isFile(data) || utils$1.isBlob(data) || utils$1.isReadableStream(data)) {
          return data;
        }
        if (utils$1.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils$1.isURLSearchParams(data)) {
          headers.setContentType("application/x-www-form-urlencoded;charset=utf-8", false);
          return data.toString();
        }
        let isFileList2;
        if (isObjectPayload) {
          if (contentType.indexOf("application/x-www-form-urlencoded") > -1) {
            return toURLEncodedForm(data, this.formSerializer).toString();
          }
          if ((isFileList2 = utils$1.isFileList(data)) || contentType.indexOf("multipart/form-data") > -1) {
            const _FormData = this.env && this.env.FormData;
            return toFormData(
              isFileList2 ? { "files[]": data } : data,
              _FormData && new _FormData(),
              this.formSerializer
            );
          }
        }
        if (isObjectPayload || hasJSONContentType) {
          headers.setContentType("application/json", false);
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        const transitional = this.transitional || defaults.transitional;
        const forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        const JSONRequested = this.responseType === "json";
        if (utils$1.isResponse(data) || utils$1.isReadableStream(data)) {
          return data;
        }
        if (data && utils$1.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
          const silentJSONParsing = transitional && transitional.silentJSONParsing;
          const strictJSONParsing = !silentJSONParsing && JSONRequested;
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === "SyntaxError") {
                throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: platform.classes.FormData,
        Blob: platform.classes.Blob
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          "Accept": "application/json, text/plain, */*",
          "Content-Type": void 0
        }
      }
    };
    utils$1.forEach(["delete", "get", "head", "post", "put", "patch"], (method) => {
      defaults.headers[method] = {};
    });
    var defaults$1 = defaults;
    var ignoreDuplicateOf = utils$1.toObjectSet([
      "age",
      "authorization",
      "content-length",
      "content-type",
      "etag",
      "expires",
      "from",
      "host",
      "if-modified-since",
      "if-unmodified-since",
      "last-modified",
      "location",
      "max-forwards",
      "proxy-authorization",
      "referer",
      "retry-after",
      "user-agent"
    ]);
    var parseHeaders = (rawHeaders) => {
      const parsed = {};
      let key;
      let val;
      let i;
      rawHeaders && rawHeaders.split("\n").forEach(function parser(line) {
        i = line.indexOf(":");
        key = line.substring(0, i).trim().toLowerCase();
        val = line.substring(i + 1).trim();
        if (!key || parsed[key] && ignoreDuplicateOf[key]) {
          return;
        }
        if (key === "set-cookie") {
          if (parsed[key]) {
            parsed[key].push(val);
          } else {
            parsed[key] = [val];
          }
        } else {
          parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
        }
      });
      return parsed;
    };
    var $internals = Symbol("internals");
    function normalizeHeader(header) {
      return header && String(header).trim().toLowerCase();
    }
    function normalizeValue(value) {
      if (value === false || value == null) {
        return value;
      }
      return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);
    }
    function parseTokens(str) {
      const tokens = /* @__PURE__ */ Object.create(null);
      const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
      let match;
      while (match = tokensRE.exec(str)) {
        tokens[match[1]] = match[2];
      }
      return tokens;
    }
    var isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
    function matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {
      if (utils$1.isFunction(filter)) {
        return filter.call(this, value, header);
      }
      if (isHeaderNameFilter) {
        value = header;
      }
      if (!utils$1.isString(value)) return;
      if (utils$1.isString(filter)) {
        return value.indexOf(filter) !== -1;
      }
      if (utils$1.isRegExp(filter)) {
        return filter.test(value);
      }
    }
    function formatHeader(header) {
      return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w, char, str) => {
        return char.toUpperCase() + str;
      });
    }
    function buildAccessors(obj, header) {
      const accessorName = utils$1.toCamelCase(" " + header);
      ["get", "set", "has"].forEach((methodName) => {
        Object.defineProperty(obj, methodName + accessorName, {
          value: function(arg1, arg2, arg3) {
            return this[methodName].call(this, header, arg1, arg2, arg3);
          },
          configurable: true
        });
      });
    }
    var AxiosHeaders = class {
      constructor(headers) {
        headers && this.set(headers);
      }
      set(header, valueOrRewrite, rewrite) {
        const self2 = this;
        function setHeader(_value, _header, _rewrite) {
          const lHeader = normalizeHeader(_header);
          if (!lHeader) {
            throw new Error("header name must be a non-empty string");
          }
          const key = utils$1.findKey(self2, lHeader);
          if (!key || self2[key] === void 0 || _rewrite === true || _rewrite === void 0 && self2[key] !== false) {
            self2[key || _header] = normalizeValue(_value);
          }
        }
        const setHeaders = (headers, _rewrite) => utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));
        if (utils$1.isPlainObject(header) || header instanceof this.constructor) {
          setHeaders(header, valueOrRewrite);
        } else if (utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
          setHeaders(parseHeaders(header), valueOrRewrite);
        } else if (utils$1.isHeaders(header)) {
          for (const [key, value] of header.entries()) {
            setHeader(value, key, rewrite);
          }
        } else {
          header != null && setHeader(valueOrRewrite, header, rewrite);
        }
        return this;
      }
      get(header, parser) {
        header = normalizeHeader(header);
        if (header) {
          const key = utils$1.findKey(this, header);
          if (key) {
            const value = this[key];
            if (!parser) {
              return value;
            }
            if (parser === true) {
              return parseTokens(value);
            }
            if (utils$1.isFunction(parser)) {
              return parser.call(this, value, key);
            }
            if (utils$1.isRegExp(parser)) {
              return parser.exec(value);
            }
            throw new TypeError("parser must be boolean|regexp|function");
          }
        }
      }
      has(header, matcher) {
        header = normalizeHeader(header);
        if (header) {
          const key = utils$1.findKey(this, header);
          return !!(key && this[key] !== void 0 && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
        }
        return false;
      }
      delete(header, matcher) {
        const self2 = this;
        let deleted = false;
        function deleteHeader(_header) {
          _header = normalizeHeader(_header);
          if (_header) {
            const key = utils$1.findKey(self2, _header);
            if (key && (!matcher || matchHeaderValue(self2, self2[key], key, matcher))) {
              delete self2[key];
              deleted = true;
            }
          }
        }
        if (utils$1.isArray(header)) {
          header.forEach(deleteHeader);
        } else {
          deleteHeader(header);
        }
        return deleted;
      }
      clear(matcher) {
        const keys = Object.keys(this);
        let i = keys.length;
        let deleted = false;
        while (i--) {
          const key = keys[i];
          if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
            delete this[key];
            deleted = true;
          }
        }
        return deleted;
      }
      normalize(format) {
        const self2 = this;
        const headers = {};
        utils$1.forEach(this, (value, header) => {
          const key = utils$1.findKey(headers, header);
          if (key) {
            self2[key] = normalizeValue(value);
            delete self2[header];
            return;
          }
          const normalized = format ? formatHeader(header) : String(header).trim();
          if (normalized !== header) {
            delete self2[header];
          }
          self2[normalized] = normalizeValue(value);
          headers[normalized] = true;
        });
        return this;
      }
      concat(...targets) {
        return this.constructor.concat(this, ...targets);
      }
      toJSON(asStrings) {
        const obj = /* @__PURE__ */ Object.create(null);
        utils$1.forEach(this, (value, header) => {
          value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(", ") : value);
        });
        return obj;
      }
      [Symbol.iterator]() {
        return Object.entries(this.toJSON())[Symbol.iterator]();
      }
      toString() {
        return Object.entries(this.toJSON()).map(([header, value]) => header + ": " + value).join("\n");
      }
      get [Symbol.toStringTag]() {
        return "AxiosHeaders";
      }
      static from(thing) {
        return thing instanceof this ? thing : new this(thing);
      }
      static concat(first, ...targets) {
        const computed = new this(first);
        targets.forEach((target) => computed.set(target));
        return computed;
      }
      static accessor(header) {
        const internals = this[$internals] = this[$internals] = {
          accessors: {}
        };
        const accessors = internals.accessors;
        const prototype2 = this.prototype;
        function defineAccessor(_header) {
          const lHeader = normalizeHeader(_header);
          if (!accessors[lHeader]) {
            buildAccessors(prototype2, _header);
            accessors[lHeader] = true;
          }
        }
        utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
        return this;
      }
    };
    AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
    utils$1.reduceDescriptors(AxiosHeaders.prototype, ({ value }, key) => {
      let mapped = key[0].toUpperCase() + key.slice(1);
      return {
        get: () => value,
        set(headerValue) {
          this[mapped] = headerValue;
        }
      };
    });
    utils$1.freezeMethods(AxiosHeaders);
    var AxiosHeaders$1 = AxiosHeaders;
    function transformData(fns, response) {
      const config = this || defaults$1;
      const context = response || config;
      const headers = AxiosHeaders$1.from(context.headers);
      let data = context.data;
      utils$1.forEach(fns, function transform(fn) {
        data = fn.call(config, data, headers.normalize(), response ? response.status : void 0);
      });
      headers.normalize();
      return data;
    }
    function isCancel(value) {
      return !!(value && value.__CANCEL__);
    }
    function CanceledError(message, config, request) {
      AxiosError.call(this, message == null ? "canceled" : message, AxiosError.ERR_CANCELED, config, request);
      this.name = "CanceledError";
    }
    utils$1.inherits(CanceledError, AxiosError, {
      __CANCEL__: true
    });
    function settle(resolve, reject, response) {
      const validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError(
          "Request failed with status code " + response.status,
          [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    }
    function isAbsoluteURL(url2) {
      return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url2);
    }
    function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\/?\/$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
    }
    function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    }
    var VERSION = "1.7.9";
    function parseProtocol(url2) {
      const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url2);
      return match && match[1] || "";
    }
    var DATA_URL_PATTERN = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\s\S]*)$/;
    function fromDataURI(uri, asBlob, options) {
      const _Blob = options && options.Blob || platform.classes.Blob;
      const protocol = parseProtocol(uri);
      if (asBlob === void 0 && _Blob) {
        asBlob = true;
      }
      if (protocol === "data") {
        uri = protocol.length ? uri.slice(protocol.length + 1) : uri;
        const match = DATA_URL_PATTERN.exec(uri);
        if (!match) {
          throw new AxiosError("Invalid URL", AxiosError.ERR_INVALID_URL);
        }
        const mime = match[1];
        const isBase64 = match[2];
        const body = match[3];
        const buffer = Buffer.from(decodeURIComponent(body), isBase64 ? "base64" : "utf8");
        if (asBlob) {
          if (!_Blob) {
            throw new AxiosError("Blob is not supported", AxiosError.ERR_NOT_SUPPORT);
          }
          return new _Blob([buffer], { type: mime });
        }
        return buffer;
      }
      throw new AxiosError("Unsupported protocol " + protocol, AxiosError.ERR_NOT_SUPPORT);
    }
    var kInternals = Symbol("internals");
    var AxiosTransformStream = class extends stream__default["default"].Transform {
      constructor(options) {
        options = utils$1.toFlatObject(options, {
          maxRate: 0,
          chunkSize: 64 * 1024,
          minChunkSize: 100,
          timeWindow: 500,
          ticksRate: 2,
          samplesCount: 15
        }, null, (prop, source) => {
          return !utils$1.isUndefined(source[prop]);
        });
        super({
          readableHighWaterMark: options.chunkSize
        });
        const internals = this[kInternals] = {
          timeWindow: options.timeWindow,
          chunkSize: options.chunkSize,
          maxRate: options.maxRate,
          minChunkSize: options.minChunkSize,
          bytesSeen: 0,
          isCaptured: false,
          notifiedBytesLoaded: 0,
          ts: Date.now(),
          bytes: 0,
          onReadCallback: null
        };
        this.on("newListener", (event) => {
          if (event === "progress") {
            if (!internals.isCaptured) {
              internals.isCaptured = true;
            }
          }
        });
      }
      _read(size) {
        const internals = this[kInternals];
        if (internals.onReadCallback) {
          internals.onReadCallback();
        }
        return super._read(size);
      }
      _transform(chunk, encoding, callback) {
        const internals = this[kInternals];
        const maxRate = internals.maxRate;
        const readableHighWaterMark = this.readableHighWaterMark;
        const timeWindow = internals.timeWindow;
        const divider = 1e3 / timeWindow;
        const bytesThreshold = maxRate / divider;
        const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;
        const pushChunk = (_chunk, _callback) => {
          const bytes = Buffer.byteLength(_chunk);
          internals.bytesSeen += bytes;
          internals.bytes += bytes;
          internals.isCaptured && this.emit("progress", internals.bytesSeen);
          if (this.push(_chunk)) {
            process.nextTick(_callback);
          } else {
            internals.onReadCallback = () => {
              internals.onReadCallback = null;
              process.nextTick(_callback);
            };
          }
        };
        const transformChunk = (_chunk, _callback) => {
          const chunkSize = Buffer.byteLength(_chunk);
          let chunkRemainder = null;
          let maxChunkSize = readableHighWaterMark;
          let bytesLeft;
          let passed = 0;
          if (maxRate) {
            const now = Date.now();
            if (!internals.ts || (passed = now - internals.ts) >= timeWindow) {
              internals.ts = now;
              bytesLeft = bytesThreshold - internals.bytes;
              internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;
              passed = 0;
            }
            bytesLeft = bytesThreshold - internals.bytes;
          }
          if (maxRate) {
            if (bytesLeft <= 0) {
              return setTimeout(() => {
                _callback(null, _chunk);
              }, timeWindow - passed);
            }
            if (bytesLeft < maxChunkSize) {
              maxChunkSize = bytesLeft;
            }
          }
          if (maxChunkSize && chunkSize > maxChunkSize && chunkSize - maxChunkSize > minChunkSize) {
            chunkRemainder = _chunk.subarray(maxChunkSize);
            _chunk = _chunk.subarray(0, maxChunkSize);
          }
          pushChunk(_chunk, chunkRemainder ? () => {
            process.nextTick(_callback, null, chunkRemainder);
          } : _callback);
        };
        transformChunk(chunk, function transformNextChunk(err, _chunk) {
          if (err) {
            return callback(err);
          }
          if (_chunk) {
            transformChunk(_chunk, transformNextChunk);
          } else {
            callback(null);
          }
        });
      }
    };
    var AxiosTransformStream$1 = AxiosTransformStream;
    var { asyncIterator } = Symbol;
    var readBlob = async function* (blob) {
      if (blob.stream) {
        yield* blob.stream();
      } else if (blob.arrayBuffer) {
        yield await blob.arrayBuffer();
      } else if (blob[asyncIterator]) {
        yield* blob[asyncIterator]();
      } else {
        yield blob;
      }
    };
    var readBlob$1 = readBlob;
    var BOUNDARY_ALPHABET = utils$1.ALPHABET.ALPHA_DIGIT + "-_";
    var textEncoder = typeof TextEncoder === "function" ? new TextEncoder() : new util__default["default"].TextEncoder();
    var CRLF = "\r\n";
    var CRLF_BYTES = textEncoder.encode(CRLF);
    var CRLF_BYTES_COUNT = 2;
    var FormDataPart = class {
      constructor(name, value) {
        const { escapeName } = this.constructor;
        const isStringValue = utils$1.isString(value);
        let headers = `Content-Disposition: form-data; name="${escapeName(name)}"${!isStringValue && value.name ? `; filename="${escapeName(value.name)}"` : ""}${CRLF}`;
        if (isStringValue) {
          value = textEncoder.encode(String(value).replace(/\r?\n|\r\n?/g, CRLF));
        } else {
          headers += `Content-Type: ${value.type || "application/octet-stream"}${CRLF}`;
        }
        this.headers = textEncoder.encode(headers + CRLF);
        this.contentLength = isStringValue ? value.byteLength : value.size;
        this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;
        this.name = name;
        this.value = value;
      }
      async *encode() {
        yield this.headers;
        const { value } = this;
        if (utils$1.isTypedArray(value)) {
          yield value;
        } else {
          yield* readBlob$1(value);
        }
        yield CRLF_BYTES;
      }
      static escapeName(name) {
        return String(name).replace(/[\r\n"]/g, (match) => ({
          "\r": "%0D",
          "\n": "%0A",
          '"': "%22"
        })[match]);
      }
    };
    var formDataToStream = (form, headersHandler, options) => {
      const {
        tag = "form-data-boundary",
        size = 25,
        boundary = tag + "-" + utils$1.generateString(size, BOUNDARY_ALPHABET)
      } = options || {};
      if (!utils$1.isFormData(form)) {
        throw TypeError("FormData instance required");
      }
      if (boundary.length < 1 || boundary.length > 70) {
        throw Error("boundary must be 10-70 characters long");
      }
      const boundaryBytes = textEncoder.encode("--" + boundary + CRLF);
      const footerBytes = textEncoder.encode("--" + boundary + "--" + CRLF + CRLF);
      let contentLength = footerBytes.byteLength;
      const parts = Array.from(form.entries()).map(([name, value]) => {
        const part = new FormDataPart(name, value);
        contentLength += part.size;
        return part;
      });
      contentLength += boundaryBytes.byteLength * parts.length;
      contentLength = utils$1.toFiniteNumber(contentLength);
      const computedHeaders = {
        "Content-Type": `multipart/form-data; boundary=${boundary}`
      };
      if (Number.isFinite(contentLength)) {
        computedHeaders["Content-Length"] = contentLength;
      }
      headersHandler && headersHandler(computedHeaders);
      return stream.Readable.from(async function* () {
        for (const part of parts) {
          yield boundaryBytes;
          yield* part.encode();
        }
        yield footerBytes;
      }());
    };
    var formDataToStream$1 = formDataToStream;
    var ZlibHeaderTransformStream = class extends stream__default["default"].Transform {
      __transform(chunk, encoding, callback) {
        this.push(chunk);
        callback();
      }
      _transform(chunk, encoding, callback) {
        if (chunk.length !== 0) {
          this._transform = this.__transform;
          if (chunk[0] !== 120) {
            const header = Buffer.alloc(2);
            header[0] = 120;
            header[1] = 156;
            this.push(header, encoding);
          }
        }
        this.__transform(chunk, encoding, callback);
      }
    };
    var ZlibHeaderTransformStream$1 = ZlibHeaderTransformStream;
    var callbackify = (fn, reducer) => {
      return utils$1.isAsyncFn(fn) ? function(...args) {
        const cb = args.pop();
        fn.apply(this, args).then((value) => {
          try {
            reducer ? cb(null, ...reducer(value)) : cb(null, value);
          } catch (err) {
            cb(err);
          }
        }, cb);
      } : fn;
    };
    var callbackify$1 = callbackify;
    function speedometer(samplesCount, min) {
      samplesCount = samplesCount || 10;
      const bytes = new Array(samplesCount);
      const timestamps = new Array(samplesCount);
      let head = 0;
      let tail = 0;
      let firstSampleTS;
      min = min !== void 0 ? min : 1e3;
      return function push(chunkLength) {
        const now = Date.now();
        const startedAt = timestamps[tail];
        if (!firstSampleTS) {
          firstSampleTS = now;
        }
        bytes[head] = chunkLength;
        timestamps[head] = now;
        let i = tail;
        let bytesCount = 0;
        while (i !== head) {
          bytesCount += bytes[i++];
          i = i % samplesCount;
        }
        head = (head + 1) % samplesCount;
        if (head === tail) {
          tail = (tail + 1) % samplesCount;
        }
        if (now - firstSampleTS < min) {
          return;
        }
        const passed = startedAt && now - startedAt;
        return passed ? Math.round(bytesCount * 1e3 / passed) : void 0;
      };
    }
    function throttle(fn, freq) {
      let timestamp = 0;
      let threshold = 1e3 / freq;
      let lastArgs;
      let timer;
      const invoke = (args, now = Date.now()) => {
        timestamp = now;
        lastArgs = null;
        if (timer) {
          clearTimeout(timer);
          timer = null;
        }
        fn.apply(null, args);
      };
      const throttled = (...args) => {
        const now = Date.now();
        const passed = now - timestamp;
        if (passed >= threshold) {
          invoke(args, now);
        } else {
          lastArgs = args;
          if (!timer) {
            timer = setTimeout(() => {
              timer = null;
              invoke(lastArgs);
            }, threshold - passed);
          }
        }
      };
      const flush = () => lastArgs && invoke(lastArgs);
      return [throttled, flush];
    }
    var progressEventReducer = (listener, isDownloadStream, freq = 3) => {
      let bytesNotified = 0;
      const _speedometer = speedometer(50, 250);
      return throttle((e) => {
        const loaded = e.loaded;
        const total = e.lengthComputable ? e.total : void 0;
        const progressBytes = loaded - bytesNotified;
        const rate = _speedometer(progressBytes);
        const inRange = loaded <= total;
        bytesNotified = loaded;
        const data = {
          loaded,
          total,
          progress: total ? loaded / total : void 0,
          bytes: progressBytes,
          rate: rate ? rate : void 0,
          estimated: rate && total && inRange ? (total - loaded) / rate : void 0,
          event: e,
          lengthComputable: total != null,
          [isDownloadStream ? "download" : "upload"]: true
        };
        listener(data);
      }, freq);
    };
    var progressEventDecorator = (total, throttled) => {
      const lengthComputable = total != null;
      return [(loaded) => throttled[0]({
        lengthComputable,
        total,
        loaded
      }), throttled[1]];
    };
    var asyncDecorator = (fn) => (...args) => utils$1.asap(() => fn(...args));
    var zlibOptions = {
      flush: zlib__default["default"].constants.Z_SYNC_FLUSH,
      finishFlush: zlib__default["default"].constants.Z_SYNC_FLUSH
    };
    var brotliOptions = {
      flush: zlib__default["default"].constants.BROTLI_OPERATION_FLUSH,
      finishFlush: zlib__default["default"].constants.BROTLI_OPERATION_FLUSH
    };
    var isBrotliSupported = utils$1.isFunction(zlib__default["default"].createBrotliDecompress);
    var { http: httpFollow, https: httpsFollow } = followRedirects__default["default"];
    var isHttps = /https:?/;
    var supportedProtocols = platform.protocols.map((protocol) => {
      return protocol + ":";
    });
    var flushOnFinish = (stream2, [throttled, flush]) => {
      stream2.on("end", flush).on("error", flush);
      return throttled;
    };
    function dispatchBeforeRedirect(options, responseDetails) {
      if (options.beforeRedirects.proxy) {
        options.beforeRedirects.proxy(options);
      }
      if (options.beforeRedirects.config) {
        options.beforeRedirects.config(options, responseDetails);
      }
    }
    function setProxy(options, configProxy, location) {
      let proxy = configProxy;
      if (!proxy && proxy !== false) {
        const proxyUrl = proxyFromEnv__default["default"].getProxyForUrl(location);
        if (proxyUrl) {
          proxy = new URL(proxyUrl);
        }
      }
      if (proxy) {
        if (proxy.username) {
          proxy.auth = (proxy.username || "") + ":" + (proxy.password || "");
        }
        if (proxy.auth) {
          if (proxy.auth.username || proxy.auth.password) {
            proxy.auth = (proxy.auth.username || "") + ":" + (proxy.auth.password || "");
          }
          const base64 = Buffer.from(proxy.auth, "utf8").toString("base64");
          options.headers["Proxy-Authorization"] = "Basic " + base64;
        }
        options.headers.host = options.hostname + (options.port ? ":" + options.port : "");
        const proxyHost = proxy.hostname || proxy.host;
        options.hostname = proxyHost;
        options.host = proxyHost;
        options.port = proxy.port;
        options.path = location;
        if (proxy.protocol) {
          options.protocol = proxy.protocol.includes(":") ? proxy.protocol : `${proxy.protocol}:`;
        }
      }
      options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {
        setProxy(redirectOptions, configProxy, redirectOptions.href);
      };
    }
    var isHttpAdapterSupported = typeof process !== "undefined" && utils$1.kindOf(process) === "process";
    var wrapAsync = (asyncExecutor) => {
      return new Promise((resolve, reject) => {
        let onDone;
        let isDone;
        const done = (value, isRejected) => {
          if (isDone) return;
          isDone = true;
          onDone && onDone(value, isRejected);
        };
        const _resolve = (value) => {
          done(value);
          resolve(value);
        };
        const _reject = (reason) => {
          done(reason, true);
          reject(reason);
        };
        asyncExecutor(_resolve, _reject, (onDoneHandler) => onDone = onDoneHandler).catch(_reject);
      });
    };
    var resolveFamily = ({ address, family }) => {
      if (!utils$1.isString(address)) {
        throw TypeError("address must be a string");
      }
      return {
        address,
        family: family || (address.indexOf(".") < 0 ? 6 : 4)
      };
    };
    var buildAddressEntry = (address, family) => resolveFamily(utils$1.isObject(address) ? address : { address, family });
    var httpAdapter = isHttpAdapterSupported && function httpAdapter2(config) {
      return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {
        let { data, lookup, family } = config;
        const { responseType, responseEncoding } = config;
        const method = config.method.toUpperCase();
        let isDone;
        let rejected = false;
        let req;
        if (lookup) {
          const _lookup = callbackify$1(lookup, (value) => utils$1.isArray(value) ? value : [value]);
          lookup = (hostname, opt, cb) => {
            _lookup(hostname, opt, (err, arg0, arg1) => {
              if (err) {
                return cb(err);
              }
              const addresses = utils$1.isArray(arg0) ? arg0.map((addr) => buildAddressEntry(addr)) : [buildAddressEntry(arg0, arg1)];
              opt.all ? cb(err, addresses) : cb(err, addresses[0].address, addresses[0].family);
            });
          };
        }
        const emitter = new events.EventEmitter();
        const onFinished = () => {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(abort);
          }
          if (config.signal) {
            config.signal.removeEventListener("abort", abort);
          }
          emitter.removeAllListeners();
        };
        onDone((value, isRejected) => {
          isDone = true;
          if (isRejected) {
            rejected = true;
            onFinished();
          }
        });
        function abort(reason) {
          emitter.emit("abort", !reason || reason.type ? new CanceledError(null, config, req) : reason);
        }
        emitter.once("abort", reject);
        if (config.cancelToken || config.signal) {
          config.cancelToken && config.cancelToken.subscribe(abort);
          if (config.signal) {
            config.signal.aborted ? abort() : config.signal.addEventListener("abort", abort);
          }
        }
        const fullPath = buildFullPath(config.baseURL, config.url);
        const parsed = new URL(fullPath, platform.hasBrowserEnv ? platform.origin : void 0);
        const protocol = parsed.protocol || supportedProtocols[0];
        if (protocol === "data:") {
          let convertedData;
          if (method !== "GET") {
            return settle(resolve, reject, {
              status: 405,
              statusText: "method not allowed",
              headers: {},
              config
            });
          }
          try {
            convertedData = fromDataURI(config.url, responseType === "blob", {
              Blob: config.env && config.env.Blob
            });
          } catch (err) {
            throw AxiosError.from(err, AxiosError.ERR_BAD_REQUEST, config);
          }
          if (responseType === "text") {
            convertedData = convertedData.toString(responseEncoding);
            if (!responseEncoding || responseEncoding === "utf8") {
              convertedData = utils$1.stripBOM(convertedData);
            }
          } else if (responseType === "stream") {
            convertedData = stream__default["default"].Readable.from(convertedData);
          }
          return settle(resolve, reject, {
            data: convertedData,
            status: 200,
            statusText: "OK",
            headers: new AxiosHeaders$1(),
            config
          });
        }
        if (supportedProtocols.indexOf(protocol) === -1) {
          return reject(new AxiosError(
            "Unsupported protocol " + protocol,
            AxiosError.ERR_BAD_REQUEST,
            config
          ));
        }
        const headers = AxiosHeaders$1.from(config.headers).normalize();
        headers.set("User-Agent", "axios/" + VERSION, false);
        const { onUploadProgress, onDownloadProgress } = config;
        const maxRate = config.maxRate;
        let maxUploadRate = void 0;
        let maxDownloadRate = void 0;
        if (utils$1.isSpecCompliantForm(data)) {
          const userBoundary = headers.getContentType(/boundary=([-_\w\d]{10,70})/i);
          data = formDataToStream$1(data, (formHeaders) => {
            headers.set(formHeaders);
          }, {
            tag: `axios-${VERSION}-boundary`,
            boundary: userBoundary && userBoundary[1] || void 0
          });
        } else if (utils$1.isFormData(data) && utils$1.isFunction(data.getHeaders)) {
          headers.set(data.getHeaders());
          if (!headers.hasContentLength()) {
            try {
              const knownLength = await util__default["default"].promisify(data.getLength).call(data);
              Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);
            } catch (e) {
            }
          }
        } else if (utils$1.isBlob(data) || utils$1.isFile(data)) {
          data.size && headers.setContentType(data.type || "application/octet-stream");
          headers.setContentLength(data.size || 0);
          data = stream__default["default"].Readable.from(readBlob$1(data));
        } else if (data && !utils$1.isStream(data)) {
          if (Buffer.isBuffer(data)) ;
          else if (utils$1.isArrayBuffer(data)) {
            data = Buffer.from(new Uint8Array(data));
          } else if (utils$1.isString(data)) {
            data = Buffer.from(data, "utf-8");
          } else {
            return reject(new AxiosError(
              "Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",
              AxiosError.ERR_BAD_REQUEST,
              config
            ));
          }
          headers.setContentLength(data.length, false);
          if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {
            return reject(new AxiosError(
              "Request body larger than maxBodyLength limit",
              AxiosError.ERR_BAD_REQUEST,
              config
            ));
          }
        }
        const contentLength = utils$1.toFiniteNumber(headers.getContentLength());
        if (utils$1.isArray(maxRate)) {
          maxUploadRate = maxRate[0];
          maxDownloadRate = maxRate[1];
        } else {
          maxUploadRate = maxDownloadRate = maxRate;
        }
        if (data && (onUploadProgress || maxUploadRate)) {
          if (!utils$1.isStream(data)) {
            data = stream__default["default"].Readable.from(data, { objectMode: false });
          }
          data = stream__default["default"].pipeline([data, new AxiosTransformStream$1({
            maxRate: utils$1.toFiniteNumber(maxUploadRate)
          })], utils$1.noop);
          onUploadProgress && data.on("progress", flushOnFinish(
            data,
            progressEventDecorator(
              contentLength,
              progressEventReducer(asyncDecorator(onUploadProgress), false, 3)
            )
          ));
        }
        let auth = void 0;
        if (config.auth) {
          const username = config.auth.username || "";
          const password = config.auth.password || "";
          auth = username + ":" + password;
        }
        if (!auth && parsed.username) {
          const urlUsername = parsed.username;
          const urlPassword = parsed.password;
          auth = urlUsername + ":" + urlPassword;
        }
        auth && headers.delete("authorization");
        let path;
        try {
          path = buildURL(
            parsed.pathname + parsed.search,
            config.params,
            config.paramsSerializer
          ).replace(/^\?/, "");
        } catch (err) {
          const customErr = new Error(err.message);
          customErr.config = config;
          customErr.url = config.url;
          customErr.exists = true;
          return reject(customErr);
        }
        headers.set(
          "Accept-Encoding",
          "gzip, compress, deflate" + (isBrotliSupported ? ", br" : ""),
          false
        );
        const options = {
          path,
          method,
          headers: headers.toJSON(),
          agents: { http: config.httpAgent, https: config.httpsAgent },
          auth,
          protocol,
          family,
          beforeRedirect: dispatchBeforeRedirect,
          beforeRedirects: {}
        };
        !utils$1.isUndefined(lookup) && (options.lookup = lookup);
        if (config.socketPath) {
          options.socketPath = config.socketPath;
        } else {
          options.hostname = parsed.hostname.startsWith("[") ? parsed.hostname.slice(1, -1) : parsed.hostname;
          options.port = parsed.port;
          setProxy(options, config.proxy, protocol + "//" + parsed.hostname + (parsed.port ? ":" + parsed.port : "") + options.path);
        }
        let transport;
        const isHttpsRequest = isHttps.test(options.protocol);
        options.agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;
        if (config.transport) {
          transport = config.transport;
        } else if (config.maxRedirects === 0) {
          transport = isHttpsRequest ? https__default["default"] : http__default["default"];
        } else {
          if (config.maxRedirects) {
            options.maxRedirects = config.maxRedirects;
          }
          if (config.beforeRedirect) {
            options.beforeRedirects.config = config.beforeRedirect;
          }
          transport = isHttpsRequest ? httpsFollow : httpFollow;
        }
        if (config.maxBodyLength > -1) {
          options.maxBodyLength = config.maxBodyLength;
        } else {
          options.maxBodyLength = Infinity;
        }
        if (config.insecureHTTPParser) {
          options.insecureHTTPParser = config.insecureHTTPParser;
        }
        req = transport.request(options, function handleResponse(res) {
          if (req.destroyed) return;
          const streams = [res];
          const responseLength = +res.headers["content-length"];
          if (onDownloadProgress || maxDownloadRate) {
            const transformStream = new AxiosTransformStream$1({
              maxRate: utils$1.toFiniteNumber(maxDownloadRate)
            });
            onDownloadProgress && transformStream.on("progress", flushOnFinish(
              transformStream,
              progressEventDecorator(
                responseLength,
                progressEventReducer(asyncDecorator(onDownloadProgress), true, 3)
              )
            ));
            streams.push(transformStream);
          }
          let responseStream = res;
          const lastRequest = res.req || req;
          if (config.decompress !== false && res.headers["content-encoding"]) {
            if (method === "HEAD" || res.statusCode === 204) {
              delete res.headers["content-encoding"];
            }
            switch ((res.headers["content-encoding"] || "").toLowerCase()) {
              /*eslint default-case:0*/
              case "gzip":
              case "x-gzip":
              case "compress":
              case "x-compress":
                streams.push(zlib__default["default"].createUnzip(zlibOptions));
                delete res.headers["content-encoding"];
                break;
              case "deflate":
                streams.push(new ZlibHeaderTransformStream$1());
                streams.push(zlib__default["default"].createUnzip(zlibOptions));
                delete res.headers["content-encoding"];
                break;
              case "br":
                if (isBrotliSupported) {
                  streams.push(zlib__default["default"].createBrotliDecompress(brotliOptions));
                  delete res.headers["content-encoding"];
                }
            }
          }
          responseStream = streams.length > 1 ? stream__default["default"].pipeline(streams, utils$1.noop) : streams[0];
          const offListeners = stream__default["default"].finished(responseStream, () => {
            offListeners();
            onFinished();
          });
          const response = {
            status: res.statusCode,
            statusText: res.statusMessage,
            headers: new AxiosHeaders$1(res.headers),
            config,
            request: lastRequest
          };
          if (responseType === "stream") {
            response.data = responseStream;
            settle(resolve, reject, response);
          } else {
            const responseBuffer = [];
            let totalResponseBytes = 0;
            responseStream.on("data", function handleStreamData(chunk) {
              responseBuffer.push(chunk);
              totalResponseBytes += chunk.length;
              if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {
                rejected = true;
                responseStream.destroy();
                reject(new AxiosError(
                  "maxContentLength size of " + config.maxContentLength + " exceeded",
                  AxiosError.ERR_BAD_RESPONSE,
                  config,
                  lastRequest
                ));
              }
            });
            responseStream.on("aborted", function handlerStreamAborted() {
              if (rejected) {
                return;
              }
              const err = new AxiosError(
                "stream has been aborted",
                AxiosError.ERR_BAD_RESPONSE,
                config,
                lastRequest
              );
              responseStream.destroy(err);
              reject(err);
            });
            responseStream.on("error", function handleStreamError(err) {
              if (req.destroyed) return;
              reject(AxiosError.from(err, null, config, lastRequest));
            });
            responseStream.on("end", function handleStreamEnd() {
              try {
                let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);
                if (responseType !== "arraybuffer") {
                  responseData = responseData.toString(responseEncoding);
                  if (!responseEncoding || responseEncoding === "utf8") {
                    responseData = utils$1.stripBOM(responseData);
                  }
                }
                response.data = responseData;
              } catch (err) {
                return reject(AxiosError.from(err, null, config, response.request, response));
              }
              settle(resolve, reject, response);
            });
          }
          emitter.once("abort", (err) => {
            if (!responseStream.destroyed) {
              responseStream.emit("error", err);
              responseStream.destroy();
            }
          });
        });
        emitter.once("abort", (err) => {
          reject(err);
          req.destroy(err);
        });
        req.on("error", function handleRequestError(err) {
          reject(AxiosError.from(err, null, config, req));
        });
        req.on("socket", function handleRequestSocket(socket) {
          socket.setKeepAlive(true, 1e3 * 60);
        });
        if (config.timeout) {
          const timeout = parseInt(config.timeout, 10);
          if (Number.isNaN(timeout)) {
            reject(new AxiosError(
              "error trying to parse `config.timeout` to int",
              AxiosError.ERR_BAD_OPTION_VALUE,
              config,
              req
            ));
            return;
          }
          req.setTimeout(timeout, function handleRequestTimeout() {
            if (isDone) return;
            let timeoutErrorMessage = config.timeout ? "timeout of " + config.timeout + "ms exceeded" : "timeout exceeded";
            const transitional = config.transitional || transitionalDefaults;
            if (config.timeoutErrorMessage) {
              timeoutErrorMessage = config.timeoutErrorMessage;
            }
            reject(new AxiosError(
              timeoutErrorMessage,
              transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,
              config,
              req
            ));
            abort();
          });
        }
        if (utils$1.isStream(data)) {
          let ended = false;
          let errored = false;
          data.on("end", () => {
            ended = true;
          });
          data.once("error", (err) => {
            errored = true;
            req.destroy(err);
          });
          data.on("close", () => {
            if (!ended && !errored) {
              abort(new CanceledError("Request stream has been aborted", config, req));
            }
          });
          data.pipe(req);
        } else {
          req.end(data);
        }
      });
    };
    var isURLSameOrigin = platform.hasStandardBrowserEnv ? /* @__PURE__ */ ((origin2, isMSIE) => (url2) => {
      url2 = new URL(url2, platform.origin);
      return origin2.protocol === url2.protocol && origin2.host === url2.host && (isMSIE || origin2.port === url2.port);
    })(
      new URL(platform.origin),
      platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)
    ) : () => true;
    var cookies = platform.hasStandardBrowserEnv ? (
      // Standard browser envs support document.cookie
      {
        write(name, value, expires, path, domain, secure) {
          const cookie = [name + "=" + encodeURIComponent(value)];
          utils$1.isNumber(expires) && cookie.push("expires=" + new Date(expires).toGMTString());
          utils$1.isString(path) && cookie.push("path=" + path);
          utils$1.isString(domain) && cookie.push("domain=" + domain);
          secure === true && cookie.push("secure");
          document.cookie = cookie.join("; ");
        },
        read(name) {
          const match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove(name) {
          this.write(name, "", Date.now() - 864e5);
        }
      }
    ) : (
      // Non-standard browser env (web workers, react-native) lack needed support.
      {
        write() {
        },
        read() {
          return null;
        },
        remove() {
        }
      }
    );
    var headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? { ...thing } : thing;
    function mergeConfig(config1, config2) {
      config2 = config2 || {};
      const config = {};
      function getMergedValue(target, source, prop, caseless) {
        if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {
          return utils$1.merge.call({ caseless }, target, source);
        } else if (utils$1.isPlainObject(source)) {
          return utils$1.merge({}, source);
        } else if (utils$1.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(a, b, prop, caseless) {
        if (!utils$1.isUndefined(b)) {
          return getMergedValue(a, b, prop, caseless);
        } else if (!utils$1.isUndefined(a)) {
          return getMergedValue(void 0, a, prop, caseless);
        }
      }
      function valueFromConfig2(a, b) {
        if (!utils$1.isUndefined(b)) {
          return getMergedValue(void 0, b);
        }
      }
      function defaultToConfig2(a, b) {
        if (!utils$1.isUndefined(b)) {
          return getMergedValue(void 0, b);
        } else if (!utils$1.isUndefined(a)) {
          return getMergedValue(void 0, a);
        }
      }
      function mergeDirectKeys(a, b, prop) {
        if (prop in config2) {
          return getMergedValue(a, b);
        } else if (prop in config1) {
          return getMergedValue(void 0, a);
        }
      }
      const mergeMap = {
        url: valueFromConfig2,
        method: valueFromConfig2,
        data: valueFromConfig2,
        baseURL: defaultToConfig2,
        transformRequest: defaultToConfig2,
        transformResponse: defaultToConfig2,
        paramsSerializer: defaultToConfig2,
        timeout: defaultToConfig2,
        timeoutMessage: defaultToConfig2,
        withCredentials: defaultToConfig2,
        withXSRFToken: defaultToConfig2,
        adapter: defaultToConfig2,
        responseType: defaultToConfig2,
        xsrfCookieName: defaultToConfig2,
        xsrfHeaderName: defaultToConfig2,
        onUploadProgress: defaultToConfig2,
        onDownloadProgress: defaultToConfig2,
        decompress: defaultToConfig2,
        maxContentLength: defaultToConfig2,
        maxBodyLength: defaultToConfig2,
        beforeRedirect: defaultToConfig2,
        transport: defaultToConfig2,
        httpAgent: defaultToConfig2,
        httpsAgent: defaultToConfig2,
        cancelToken: defaultToConfig2,
        socketPath: defaultToConfig2,
        responseEncoding: defaultToConfig2,
        validateStatus: mergeDirectKeys,
        headers: (a, b, prop) => mergeDeepProperties(headersToObject(a), headersToObject(b), prop, true)
      };
      utils$1.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
        const merge2 = mergeMap[prop] || mergeDeepProperties;
        const configValue = merge2(config1[prop], config2[prop], prop);
        utils$1.isUndefined(configValue) && merge2 !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    }
    var resolveConfig = (config) => {
      const newConfig = mergeConfig({}, config);
      let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;
      newConfig.headers = headers = AxiosHeaders$1.from(headers);
      newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);
      if (auth) {
        headers.set(
          "Authorization",
          "Basic " + btoa((auth.username || "") + ":" + (auth.password ? unescape(encodeURIComponent(auth.password)) : ""))
        );
      }
      let contentType;
      if (utils$1.isFormData(data)) {
        if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {
          headers.setContentType(void 0);
        } else if ((contentType = headers.getContentType()) !== false) {
          const [type, ...tokens] = contentType ? contentType.split(";").map((token) => token.trim()).filter(Boolean) : [];
          headers.setContentType([type || "multipart/form-data", ...tokens].join("; "));
        }
      }
      if (platform.hasStandardBrowserEnv) {
        withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
        if (withXSRFToken || withXSRFToken !== false && isURLSameOrigin(newConfig.url)) {
          const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);
          if (xsrfValue) {
            headers.set(xsrfHeaderName, xsrfValue);
          }
        }
      }
      return newConfig;
    };
    var isXHRAdapterSupported = typeof XMLHttpRequest !== "undefined";
    var xhrAdapter = isXHRAdapterSupported && function(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        const _config = resolveConfig(config);
        let requestData = _config.data;
        const requestHeaders = AxiosHeaders$1.from(_config.headers).normalize();
        let { responseType, onUploadProgress, onDownloadProgress } = _config;
        let onCanceled;
        let uploadThrottled, downloadThrottled;
        let flushUpload, flushDownload;
        function done() {
          flushUpload && flushUpload();
          flushDownload && flushDownload();
          _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
          _config.signal && _config.signal.removeEventListener("abort", onCanceled);
        }
        let request = new XMLHttpRequest();
        request.open(_config.method.toUpperCase(), _config.url, true);
        request.timeout = _config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          const responseHeaders = AxiosHeaders$1.from(
            "getAllResponseHeaders" in request && request.getAllResponseHeaders()
          );
          const responseData = !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response;
          const response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if ("onloadend" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError("Request aborted", AxiosError.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(new AxiosError("Network Error", AxiosError.ERR_NETWORK, config, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          let timeoutErrorMessage = _config.timeout ? "timeout of " + _config.timeout + "ms exceeded" : "timeout exceeded";
          const transitional = _config.transitional || transitionalDefaults;
          if (_config.timeoutErrorMessage) {
            timeoutErrorMessage = _config.timeoutErrorMessage;
          }
          reject(new AxiosError(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        requestData === void 0 && requestHeaders.setContentType(null);
        if ("setRequestHeader" in request) {
          utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
            request.setRequestHeader(key, val);
          });
        }
        if (!utils$1.isUndefined(_config.withCredentials)) {
          request.withCredentials = !!_config.withCredentials;
        }
        if (responseType && responseType !== "json") {
          request.responseType = _config.responseType;
        }
        if (onDownloadProgress) {
          [downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true);
          request.addEventListener("progress", downloadThrottled);
        }
        if (onUploadProgress && request.upload) {
          [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);
          request.upload.addEventListener("progress", uploadThrottled);
          request.upload.addEventListener("loadend", flushUpload);
        }
        if (_config.cancelToken || _config.signal) {
          onCanceled = (cancel) => {
            if (!request) {
              return;
            }
            reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);
            request.abort();
            request = null;
          };
          _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
          if (_config.signal) {
            _config.signal.aborted ? onCanceled() : _config.signal.addEventListener("abort", onCanceled);
          }
        }
        const protocol = parseProtocol(_config.url);
        if (protocol && platform.protocols.indexOf(protocol) === -1) {
          reject(new AxiosError("Unsupported protocol " + protocol + ":", AxiosError.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData || null);
      });
    };
    var composeSignals = (signals, timeout) => {
      const { length } = signals = signals ? signals.filter(Boolean) : [];
      if (timeout || length) {
        let controller = new AbortController();
        let aborted;
        const onabort = function(reason) {
          if (!aborted) {
            aborted = true;
            unsubscribe();
            const err = reason instanceof Error ? reason : this.reason;
            controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));
          }
        };
        let timer = timeout && setTimeout(() => {
          timer = null;
          onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT));
        }, timeout);
        const unsubscribe = () => {
          if (signals) {
            timer && clearTimeout(timer);
            timer = null;
            signals.forEach((signal2) => {
              signal2.unsubscribe ? signal2.unsubscribe(onabort) : signal2.removeEventListener("abort", onabort);
            });
            signals = null;
          }
        };
        signals.forEach((signal2) => signal2.addEventListener("abort", onabort));
        const { signal } = controller;
        signal.unsubscribe = () => utils$1.asap(unsubscribe);
        return signal;
      }
    };
    var composeSignals$1 = composeSignals;
    var streamChunk = function* (chunk, chunkSize) {
      let len = chunk.byteLength;
      if (!chunkSize || len < chunkSize) {
        yield chunk;
        return;
      }
      let pos = 0;
      let end;
      while (pos < len) {
        end = pos + chunkSize;
        yield chunk.slice(pos, end);
        pos = end;
      }
    };
    var readBytes = async function* (iterable, chunkSize) {
      for await (const chunk of readStream(iterable)) {
        yield* streamChunk(chunk, chunkSize);
      }
    };
    var readStream = async function* (stream2) {
      if (stream2[Symbol.asyncIterator]) {
        yield* stream2;
        return;
      }
      const reader = stream2.getReader();
      try {
        for (; ; ) {
          const { done, value } = await reader.read();
          if (done) {
            break;
          }
          yield value;
        }
      } finally {
        await reader.cancel();
      }
    };
    var trackStream = (stream2, chunkSize, onProgress, onFinish) => {
      const iterator = readBytes(stream2, chunkSize);
      let bytes = 0;
      let done;
      let _onFinish = (e) => {
        if (!done) {
          done = true;
          onFinish && onFinish(e);
        }
      };
      return new ReadableStream({
        async pull(controller) {
          try {
            const { done: done2, value } = await iterator.next();
            if (done2) {
              _onFinish();
              controller.close();
              return;
            }
            let len = value.byteLength;
            if (onProgress) {
              let loadedBytes = bytes += len;
              onProgress(loadedBytes);
            }
            controller.enqueue(new Uint8Array(value));
          } catch (err) {
            _onFinish(err);
            throw err;
          }
        },
        cancel(reason) {
          _onFinish(reason);
          return iterator.return();
        }
      }, {
        highWaterMark: 2
      });
    };
    var isFetchSupported = typeof fetch === "function" && typeof Request === "function" && typeof Response === "function";
    var isReadableStreamSupported = isFetchSupported && typeof ReadableStream === "function";
    var encodeText = isFetchSupported && (typeof TextEncoder === "function" ? /* @__PURE__ */ ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) : async (str) => new Uint8Array(await new Response(str).arrayBuffer()));
    var test = (fn, ...args) => {
      try {
        return !!fn(...args);
      } catch (e) {
        return false;
      }
    };
    var supportsRequestStream = isReadableStreamSupported && test(() => {
      let duplexAccessed = false;
      const hasContentType = new Request(platform.origin, {
        body: new ReadableStream(),
        method: "POST",
        get duplex() {
          duplexAccessed = true;
          return "half";
        }
      }).headers.has("Content-Type");
      return duplexAccessed && !hasContentType;
    });
    var DEFAULT_CHUNK_SIZE = 64 * 1024;
    var supportsResponseStream = isReadableStreamSupported && test(() => utils$1.isReadableStream(new Response("").body));
    var resolvers = {
      stream: supportsResponseStream && ((res) => res.body)
    };
    isFetchSupported && ((res) => {
      ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((type) => {
        !resolvers[type] && (resolvers[type] = utils$1.isFunction(res[type]) ? (res2) => res2[type]() : (_, config) => {
          throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);
        });
      });
    })(new Response());
    var getBodyLength = async (body) => {
      if (body == null) {
        return 0;
      }
      if (utils$1.isBlob(body)) {
        return body.size;
      }
      if (utils$1.isSpecCompliantForm(body)) {
        const _request = new Request(platform.origin, {
          method: "POST",
          body
        });
        return (await _request.arrayBuffer()).byteLength;
      }
      if (utils$1.isArrayBufferView(body) || utils$1.isArrayBuffer(body)) {
        return body.byteLength;
      }
      if (utils$1.isURLSearchParams(body)) {
        body = body + "";
      }
      if (utils$1.isString(body)) {
        return (await encodeText(body)).byteLength;
      }
    };
    var resolveBodyLength = async (headers, body) => {
      const length = utils$1.toFiniteNumber(headers.getContentLength());
      return length == null ? getBodyLength(body) : length;
    };
    var fetchAdapter = isFetchSupported && (async (config) => {
      let {
        url: url2,
        method,
        data,
        signal,
        cancelToken,
        timeout,
        onDownloadProgress,
        onUploadProgress,
        responseType,
        headers,
        withCredentials = "same-origin",
        fetchOptions
      } = resolveConfig(config);
      responseType = responseType ? (responseType + "").toLowerCase() : "text";
      let composedSignal = composeSignals$1([signal, cancelToken && cancelToken.toAbortSignal()], timeout);
      let request;
      const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {
        composedSignal.unsubscribe();
      });
      let requestContentLength;
      try {
        if (onUploadProgress && supportsRequestStream && method !== "get" && method !== "head" && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {
          let _request = new Request(url2, {
            method: "POST",
            body: data,
            duplex: "half"
          });
          let contentTypeHeader;
          if (utils$1.isFormData(data) && (contentTypeHeader = _request.headers.get("content-type"))) {
            headers.setContentType(contentTypeHeader);
          }
          if (_request.body) {
            const [onProgress, flush] = progressEventDecorator(
              requestContentLength,
              progressEventReducer(asyncDecorator(onUploadProgress))
            );
            data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
          }
        }
        if (!utils$1.isString(withCredentials)) {
          withCredentials = withCredentials ? "include" : "omit";
        }
        const isCredentialsSupported = "credentials" in Request.prototype;
        request = new Request(url2, {
          ...fetchOptions,
          signal: composedSignal,
          method: method.toUpperCase(),
          headers: headers.normalize().toJSON(),
          body: data,
          duplex: "half",
          credentials: isCredentialsSupported ? withCredentials : void 0
        });
        let response = await fetch(request);
        const isStreamResponse = supportsResponseStream && (responseType === "stream" || responseType === "response");
        if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
          const options = {};
          ["status", "statusText", "headers"].forEach((prop) => {
            options[prop] = response[prop];
          });
          const responseContentLength = utils$1.toFiniteNumber(response.headers.get("content-length"));
          const [onProgress, flush] = onDownloadProgress && progressEventDecorator(
            responseContentLength,
            progressEventReducer(asyncDecorator(onDownloadProgress), true)
          ) || [];
          response = new Response(
            trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {
              flush && flush();
              unsubscribe && unsubscribe();
            }),
            options
          );
        }
        responseType = responseType || "text";
        let responseData = await resolvers[utils$1.findKey(resolvers, responseType) || "text"](response, config);
        !isStreamResponse && unsubscribe && unsubscribe();
        return await new Promise((resolve, reject) => {
          settle(resolve, reject, {
            data: responseData,
            headers: AxiosHeaders$1.from(response.headers),
            status: response.status,
            statusText: response.statusText,
            config,
            request
          });
        });
      } catch (err) {
        unsubscribe && unsubscribe();
        if (err && err.name === "TypeError" && /fetch/i.test(err.message)) {
          throw Object.assign(
            new AxiosError("Network Error", AxiosError.ERR_NETWORK, config, request),
            {
              cause: err.cause || err
            }
          );
        }
        throw AxiosError.from(err, err && err.code, config, request);
      }
    });
    var knownAdapters = {
      http: httpAdapter,
      xhr: xhrAdapter,
      fetch: fetchAdapter
    };
    utils$1.forEach(knownAdapters, (fn, value) => {
      if (fn) {
        try {
          Object.defineProperty(fn, "name", { value });
        } catch (e) {
        }
        Object.defineProperty(fn, "adapterName", { value });
      }
    });
    var renderReason = (reason) => `- ${reason}`;
    var isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;
    var adapters = {
      getAdapter: (adapters2) => {
        adapters2 = utils$1.isArray(adapters2) ? adapters2 : [adapters2];
        const { length } = adapters2;
        let nameOrAdapter;
        let adapter;
        const rejectedReasons = {};
        for (let i = 0; i < length; i++) {
          nameOrAdapter = adapters2[i];
          let id;
          adapter = nameOrAdapter;
          if (!isResolvedHandle(nameOrAdapter)) {
            adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];
            if (adapter === void 0) {
              throw new AxiosError(`Unknown adapter '${id}'`);
            }
          }
          if (adapter) {
            break;
          }
          rejectedReasons[id || "#" + i] = adapter;
        }
        if (!adapter) {
          const reasons = Object.entries(rejectedReasons).map(
            ([id, state]) => `adapter ${id} ` + (state === false ? "is not supported by the environment" : "is not available in the build")
          );
          let s = length ? reasons.length > 1 ? "since :\n" + reasons.map(renderReason).join("\n") : " " + renderReason(reasons[0]) : "as no adapter specified";
          throw new AxiosError(
            `There is no suitable adapter to dispatch the request ` + s,
            "ERR_NOT_SUPPORT"
          );
        }
        return adapter;
      },
      adapters: knownAdapters
    };
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError(null, config);
      }
    }
    function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = AxiosHeaders$1.from(config.headers);
      config.data = transformData.call(
        config,
        config.transformRequest
      );
      if (["post", "put", "patch"].indexOf(config.method) !== -1) {
        config.headers.setContentType("application/x-www-form-urlencoded", false);
      }
      const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          config.transformResponse,
          response
        );
        response.headers = AxiosHeaders$1.from(response.headers);
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              config.transformResponse,
              reason.response
            );
            reason.response.headers = AxiosHeaders$1.from(reason.response.headers);
          }
        }
        return Promise.reject(reason);
      });
    }
    var validators$1 = {};
    ["object", "boolean", "number", "function", "string", "symbol"].forEach((type, i) => {
      validators$1[type] = function validator2(thing) {
        return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
      };
    });
    var deprecatedWarnings = {};
    validators$1.transitional = function transitional(validator2, version, message) {
      function formatMessage(opt, desc) {
        return "[Axios v" + VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
      }
      return (value, opt, opts) => {
        if (validator2 === false) {
          throw new AxiosError(
            formatMessage(opt, " has been removed" + (version ? " in " + version : "")),
            AxiosError.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              " has been deprecated since v" + version + " and will be removed in the near future"
            )
          );
        }
        return validator2 ? validator2(value, opt, opts) : true;
      };
    };
    validators$1.spelling = function spelling(correctSpelling) {
      return (value, opt) => {
        console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);
        return true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== "object") {
        throw new AxiosError("options must be an object", AxiosError.ERR_BAD_OPTION_VALUE);
      }
      const keys = Object.keys(options);
      let i = keys.length;
      while (i-- > 0) {
        const opt = keys[i];
        const validator2 = schema[opt];
        if (validator2) {
          const value = options[opt];
          const result = value === void 0 || validator2(value, opt, options);
          if (result !== true) {
            throw new AxiosError("option " + opt + " must be " + result, AxiosError.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError("Unknown option " + opt, AxiosError.ERR_BAD_OPTION);
        }
      }
    }
    var validator = {
      assertOptions,
      validators: validators$1
    };
    var validators = validator.validators;
    var Axios = class {
      constructor(instanceConfig) {
        this.defaults = instanceConfig;
        this.interceptors = {
          request: new InterceptorManager$1(),
          response: new InterceptorManager$1()
        };
      }
      /**
       * Dispatch a request
       *
       * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
       * @param {?Object} config
       *
       * @returns {Promise} The Promise to be fulfilled
       */
      async request(configOrUrl, config) {
        try {
          return await this._request(configOrUrl, config);
        } catch (err) {
          if (err instanceof Error) {
            let dummy = {};
            Error.captureStackTrace ? Error.captureStackTrace(dummy) : dummy = new Error();
            const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, "") : "";
            try {
              if (!err.stack) {
                err.stack = stack;
              } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ""))) {
                err.stack += "\n" + stack;
              }
            } catch (e) {
            }
          }
          throw err;
        }
      }
      _request(configOrUrl, config) {
        if (typeof configOrUrl === "string") {
          config = config || {};
          config.url = configOrUrl;
        } else {
          config = configOrUrl || {};
        }
        config = mergeConfig(this.defaults, config);
        const { transitional, paramsSerializer, headers } = config;
        if (transitional !== void 0) {
          validator.assertOptions(transitional, {
            silentJSONParsing: validators.transitional(validators.boolean),
            forcedJSONParsing: validators.transitional(validators.boolean),
            clarifyTimeoutError: validators.transitional(validators.boolean)
          }, false);
        }
        if (paramsSerializer != null) {
          if (utils$1.isFunction(paramsSerializer)) {
            config.paramsSerializer = {
              serialize: paramsSerializer
            };
          } else {
            validator.assertOptions(paramsSerializer, {
              encode: validators.function,
              serialize: validators.function
            }, true);
          }
        }
        validator.assertOptions(config, {
          baseUrl: validators.spelling("baseURL"),
          withXsrfToken: validators.spelling("withXSRFToken")
        }, true);
        config.method = (config.method || this.defaults.method || "get").toLowerCase();
        let contextHeaders = headers && utils$1.merge(
          headers.common,
          headers[config.method]
        );
        headers && utils$1.forEach(
          ["delete", "get", "head", "post", "put", "patch", "common"],
          (method) => {
            delete headers[method];
          }
        );
        config.headers = AxiosHeaders$1.concat(contextHeaders, headers);
        const requestInterceptorChain = [];
        let synchronousRequestInterceptors = true;
        this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
          if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
            return;
          }
          synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
          requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
        });
        const responseInterceptorChain = [];
        this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
          responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
        });
        let promise;
        let i = 0;
        let len;
        if (!synchronousRequestInterceptors) {
          const chain = [dispatchRequest.bind(this), void 0];
          chain.unshift.apply(chain, requestInterceptorChain);
          chain.push.apply(chain, responseInterceptorChain);
          len = chain.length;
          promise = Promise.resolve(config);
          while (i < len) {
            promise = promise.then(chain[i++], chain[i++]);
          }
          return promise;
        }
        len = requestInterceptorChain.length;
        let newConfig = config;
        i = 0;
        while (i < len) {
          const onFulfilled = requestInterceptorChain[i++];
          const onRejected = requestInterceptorChain[i++];
          try {
            newConfig = onFulfilled(newConfig);
          } catch (error) {
            onRejected.call(this, error);
            break;
          }
        }
        try {
          promise = dispatchRequest.call(this, newConfig);
        } catch (error) {
          return Promise.reject(error);
        }
        i = 0;
        len = responseInterceptorChain.length;
        while (i < len) {
          promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
        }
        return promise;
      }
      getUri(config) {
        config = mergeConfig(this.defaults, config);
        const fullPath = buildFullPath(config.baseURL, config.url);
        return buildURL(fullPath, config.params, config.paramsSerializer);
      }
    };
    utils$1.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url2, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url: url2,
          data: (config || {}).data
        }));
      };
    });
    utils$1.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url2, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              "Content-Type": "multipart/form-data"
            } : {},
            url: url2,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + "Form"] = generateHTTPMethod(true);
    });
    var Axios$1 = Axios;
    var CancelToken = class _CancelToken {
      constructor(executor) {
        if (typeof executor !== "function") {
          throw new TypeError("executor must be a function.");
        }
        let resolvePromise;
        this.promise = new Promise(function promiseExecutor(resolve) {
          resolvePromise = resolve;
        });
        const token = this;
        this.promise.then((cancel) => {
          if (!token._listeners) return;
          let i = token._listeners.length;
          while (i-- > 0) {
            token._listeners[i](cancel);
          }
          token._listeners = null;
        });
        this.promise.then = (onfulfilled) => {
          let _resolve;
          const promise = new Promise((resolve) => {
            token.subscribe(resolve);
            _resolve = resolve;
          }).then(onfulfilled);
          promise.cancel = function reject() {
            token.unsubscribe(_resolve);
          };
          return promise;
        };
        executor(function cancel(message, config, request) {
          if (token.reason) {
            return;
          }
          token.reason = new CanceledError(message, config, request);
          resolvePromise(token.reason);
        });
      }
      /**
       * Throws a `CanceledError` if cancellation has been requested.
       */
      throwIfRequested() {
        if (this.reason) {
          throw this.reason;
        }
      }
      /**
       * Subscribe to the cancel signal
       */
      subscribe(listener) {
        if (this.reason) {
          listener(this.reason);
          return;
        }
        if (this._listeners) {
          this._listeners.push(listener);
        } else {
          this._listeners = [listener];
        }
      }
      /**
       * Unsubscribe from the cancel signal
       */
      unsubscribe(listener) {
        if (!this._listeners) {
          return;
        }
        const index = this._listeners.indexOf(listener);
        if (index !== -1) {
          this._listeners.splice(index, 1);
        }
      }
      toAbortSignal() {
        const controller = new AbortController();
        const abort = (err) => {
          controller.abort(err);
        };
        this.subscribe(abort);
        controller.signal.unsubscribe = () => this.unsubscribe(abort);
        return controller.signal;
      }
      /**
       * Returns an object that contains a new `CancelToken` and a function that, when called,
       * cancels the `CancelToken`.
       */
      static source() {
        let cancel;
        const token = new _CancelToken(function executor(c) {
          cancel = c;
        });
        return {
          token,
          cancel
        };
      }
    };
    var CancelToken$1 = CancelToken;
    function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    }
    function isAxiosError(payload) {
      return utils$1.isObject(payload) && payload.isAxiosError === true;
    }
    var HttpStatusCode = {
      Continue: 100,
      SwitchingProtocols: 101,
      Processing: 102,
      EarlyHints: 103,
      Ok: 200,
      Created: 201,
      Accepted: 202,
      NonAuthoritativeInformation: 203,
      NoContent: 204,
      ResetContent: 205,
      PartialContent: 206,
      MultiStatus: 207,
      AlreadyReported: 208,
      ImUsed: 226,
      MultipleChoices: 300,
      MovedPermanently: 301,
      Found: 302,
      SeeOther: 303,
      NotModified: 304,
      UseProxy: 305,
      Unused: 306,
      TemporaryRedirect: 307,
      PermanentRedirect: 308,
      BadRequest: 400,
      Unauthorized: 401,
      PaymentRequired: 402,
      Forbidden: 403,
      NotFound: 404,
      MethodNotAllowed: 405,
      NotAcceptable: 406,
      ProxyAuthenticationRequired: 407,
      RequestTimeout: 408,
      Conflict: 409,
      Gone: 410,
      LengthRequired: 411,
      PreconditionFailed: 412,
      PayloadTooLarge: 413,
      UriTooLong: 414,
      UnsupportedMediaType: 415,
      RangeNotSatisfiable: 416,
      ExpectationFailed: 417,
      ImATeapot: 418,
      MisdirectedRequest: 421,
      UnprocessableEntity: 422,
      Locked: 423,
      FailedDependency: 424,
      TooEarly: 425,
      UpgradeRequired: 426,
      PreconditionRequired: 428,
      TooManyRequests: 429,
      RequestHeaderFieldsTooLarge: 431,
      UnavailableForLegalReasons: 451,
      InternalServerError: 500,
      NotImplemented: 501,
      BadGateway: 502,
      ServiceUnavailable: 503,
      GatewayTimeout: 504,
      HttpVersionNotSupported: 505,
      VariantAlsoNegotiates: 506,
      InsufficientStorage: 507,
      LoopDetected: 508,
      NotExtended: 510,
      NetworkAuthenticationRequired: 511
    };
    Object.entries(HttpStatusCode).forEach(([key, value]) => {
      HttpStatusCode[value] = key;
    });
    var HttpStatusCode$1 = HttpStatusCode;
    function createInstance(defaultConfig) {
      const context = new Axios$1(defaultConfig);
      const instance = bind(Axios$1.prototype.request, context);
      utils$1.extend(instance, Axios$1.prototype, context, { allOwnKeys: true });
      utils$1.extend(instance, context, null, { allOwnKeys: true });
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios = createInstance(defaults$1);
    axios.Axios = Axios$1;
    axios.CanceledError = CanceledError;
    axios.CancelToken = CancelToken$1;
    axios.isCancel = isCancel;
    axios.VERSION = VERSION;
    axios.toFormData = toFormData;
    axios.AxiosError = AxiosError;
    axios.Cancel = axios.CanceledError;
    axios.all = function all(promises) {
      return Promise.all(promises);
    };
    axios.spread = spread;
    axios.isAxiosError = isAxiosError;
    axios.mergeConfig = mergeConfig;
    axios.AxiosHeaders = AxiosHeaders$1;
    axios.formToJSON = (thing) => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);
    axios.getAdapter = adapters.getAdapter;
    axios.HttpStatusCode = HttpStatusCode$1;
    axios.default = axios;
    module2.exports = axios;
  }
});

// out/pro/localComp.js
var require_localComp = __commonJS({
  "out/pro/localComp.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var vscode_1 = require("vscode");
    var helper_12 = require_helper();
    var webviewMgn_1 = require_webviewMgn();
    var LocalComp = class {
      constructor(helper, options) {
        this.type = helper_12.FuncType.Pro;
        this.helper = helper;
        this.options = options;
      }
      init() {
        vscode_1.commands.registerCommand("vue-helper.localComp.update", () => {
          this.helper.traverse.initLocalComponent();
          vscode_1.window.showInformationMessage("\u66F4\u65B0\u6210\u529F");
        });
        vscode_1.commands.registerCommand("vue-helper.localComp.doc", () => {
          const webviewMgn = this.helper.getPlugin(webviewMgn_1.WebviewMgn);
          webviewMgn.openView({
            title: "\u672C\u5730\u7EC4\u4EF6",
            page: "localDoc",
            messageHandler: (message) => {
              switch (message.command) {
                case "init":
                  let params = {};
                  for (const key in this.helper.localVues) {
                    const localVue = this.helper.localVues[key];
                    localVue.sort((a, b) => {
                      return a.name < b.name ? -1 : 1;
                    });
                    params[key] = localVue;
                  }
                  webviewMgn.postMessage({
                    command: "init",
                    params
                  });
                  break;
              }
            }
          });
        });
      }
    };
    exports2.default = LocalComp;
  }
});

// out/pro/traverse.js
var require_traverse = __commonJS({
  "out/pro/traverse.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var fs = require("fs");
    var path = require("path");
    var Traverse = class {
      constructor(explorer, prefix) {
        this.commentKeys = ["description", "type", "default", "enum", "example"];
        this.propKeys = ["type", "default", "required"];
        this.importReg = new RegExp(`import([ 
	]*(?:[^ 
	{}]+[ 
	]*,?)?(?:[ 
	]*{(?:[ 
	]*[^ 
	"'{}]+[ 
	]*,?)+})?[ 
	]*)from[ 
	]*(['"])([^'"
]+)(?:['"])`);
        this.explorer = explorer;
        this.prefix = prefix;
      }
      // 遍历组件
      search(poster, searchName, usePrefix) {
        let files = [];
        let cond;
        let componentPath = "";
        let prefix = usePrefix ? this.prefix : {};
        if (!this.explorer.projectPath) {
          return [];
        }
        if (componentPath && Array.isArray(componentPath) && componentPath.length > 0) {
          cond = function(rootPath) {
            return componentPath.indexOf(rootPath) !== -1;
          };
        } else {
          let ignore = ["node_modules", "dist", "build"];
          cond = function(rootPath) {
            return !(rootPath.charAt(0) === "." || ignore.indexOf(rootPath) !== -1);
          };
        }
        let rootPathes = fs.readdirSync(this.explorer.projectPath || "");
        for (let i = 0; i < rootPathes.length; i++) {
          const rootPath = rootPathes[i];
          if (cond(rootPath)) {
            let stat = fs.statSync(path.join(this.explorer.projectPath || "", rootPath));
            if (stat.isDirectory()) {
              this.traverseHandle(rootPath, files, prefix, poster, searchName);
            } else {
              this.traverseAdd(rootPath, rootPath, files, prefix, poster, searchName);
            }
          }
        }
        return files;
      }
      // 遍历添加
      traverseAdd(rootPath, dir, files, prefix, poster, search) {
        if (rootPath.endsWith(poster)) {
          let posterReg = new RegExp("-?(.*)" + (poster ? poster : "\\.\\w*") + "$", "gi");
          let name = rootPath;
          name = name.replace(posterReg, "$1");
          if (!search || search && dir.includes(search)) {
            files.push({
              name,
              path: dir.replace(new RegExp(`^${prefix.path}`, "gi"), prefix.alias).replace(/\\/gi, "/")
            });
            if (name === "index") {
              name = dir.replace(/\\/gi, "/").replace(/.*\/(\w*)\/\w*.\w*/gi, "$1");
              files.push({
                name,
                path: dir.replace(new RegExp(`^${prefix.path}`, "gi"), prefix.alias).replace(/\\/gi, "/")
              });
            }
          }
        }
      }
      // 遍历处理
      traverseHandle(postPath, files, prefix, poster, search) {
        let fileDirs = fs.readdirSync(path.join(this.explorer.projectPath || "", postPath));
        for (let i = 0; i < fileDirs.length; i++) {
          const rootPath = fileDirs[i];
          if (!(rootPath.charAt(0) === ".")) {
            let dir = path.join(postPath, rootPath);
            let stat = fs.statSync(path.join(this.explorer.projectPath || "", dir));
            if (stat.isDirectory()) {
              this.traverseHandle(dir, files, prefix, poster, search);
            } else {
              this.traverseAdd(rootPath, dir, files, prefix, poster, search);
            }
          }
        }
      }
      // 遍历vue组件
      component(vueVersion) {
        if (vueVersion === "2") {
          return this.componentV2();
        } else {
          return this.componentV3();
        }
      }
      componentV3() {
        let mainPath = path.join(this.explorer.projectPath, "src/main." + (this.explorer.isTs ? "ts" : "js"));
        if (fs.existsSync(mainPath)) {
          return this.findCommon(mainPath, true, "");
        }
        return {
          plugin: [],
          component: []
        };
      }
      componentV2() {
        let mainPath = path.join(this.explorer.projectPath, "src/main." + (this.explorer.isTs ? "ts" : "js"));
        if (fs.existsSync(mainPath)) {
          return this.findCommon(mainPath, true, "");
        }
        return {
          plugin: [],
          component: []
        };
      }
      parseImport(text, obj, lineText, line) {
        const matchs = text.match(this.importReg);
        if (matchs && matchs.length > 3) {
          let importPath = matchs[3];
          let character = lineText.indexOf(importPath);
          if (character === -1) {
            character = 0;
          }
          let importInfo = {
            path: importPath,
            type: "module",
            position: "2",
            start: {
              x: character,
              y: line
            },
            end: {
              x: character + importPath.length,
              y: line
            }
          };
          const localReg = new RegExp(`^(\\.|\\.\\.|${this.prefix.alias})/`, "gi");
          if (localReg.test(importInfo.path)) {
            importInfo.position = "1";
          }
          if (matchs[1].includes("{")) {
            importInfo.type = "var";
            let elList = matchs[1].replace(/.*{/gi, "").replace(/}.*/gi, "").split(",");
            elList.forEach((el) => {
              obj[el.trim()] = importInfo;
            });
          } else {
            obj[matchs[1].trim()] = importInfo;
          }
        }
      }
      getVarProperties(text) {
        let properties = text.replace(/.*({|\[)/gi, "").replace(/(}|]).*/gi, "").split(",");
        let ret = [];
        if (properties.length > 0) {
          properties.forEach((prop) => {
            ret.push(prop.trim());
          });
        }
        return ret;
      }
      getVarName(text) {
        if (/^\s*\/\//gi.test(text)) {
          return "";
        }
        return text.replace(/:.*/gi, "").replace(/\?/gi, "").trim();
      }
      getVarValue(text) {
        let ret = text.replace(/.*:\s*/gi, "").replace(/,/gi, "").replace(/as\s.*/gi, "");
        if (ret.includes("(")) {
          return "Function";
        } else if (ret.includes("[")) {
          return "Array";
        } else if (ret.includes("{")) {
          return "Object";
        } else {
          return ret.trim();
        }
      }
      getArrValue(text) {
        text = text.replace(/.*\[/gi, "").replace(/].*/gi, "");
        const textArr = text.split(",");
        const ret = [];
        textArr.forEach((txt) => {
          if (txt.trim()) {
            ret.push(txt.replace(/.*('|")(.*)('|")/gi, "$2").trim());
          }
        });
        return ret;
      }
      findCommon(filePath, isMain, refVar) {
        const common = {
          plugin: [],
          component: []
        };
        const main = fs.readFileSync(filePath, "utf-8");
        const mainList = main.split("\n");
        const mainImportKv = {};
        const vars = {};
        let foreachVar = "";
        let isVar = false;
        let isFor = false;
        let varName = "";
        let varText = "";
        let isImport = false;
        let importText = "";
        let appVar = "Vue";
        let appReg = new RegExp(`\\(\\s*${appVar}\\s*\\)`, "gi");
        let createAppReg = new RegExp(`${refVar || "createApp"}\\s*\\(\\s*.*\\s*\\)`, "gi");
        mainList.forEach((mainLine, mainIndex) => {
          if (mainLine.includes("import")) {
            isImport = true;
            if (mainLine.includes("{")) {
              if (mainLine.includes("from")) {
                this.parseImport(mainLine, mainImportKv, mainLine, mainIndex);
                isImport = false;
              } else {
                importText += mainLine;
              }
            } else {
              this.parseImport(mainLine, mainImportKv, mainLine, mainIndex);
              isImport = false;
            }
          } else if (isImport) {
            importText += mainLine;
            if (mainLine.includes("from")) {
              importText += mainLine;
              this.parseImport(importText, mainImportKv, mainLine, mainIndex);
              importText = "";
              isImport = false;
            }
          } else if (createAppReg.test(mainLine)) {
            if (isMain) {
              appVar = mainLine.replace(/\s*(let|const|var)\s/gi, "").replace(/\s*=.*/gi, "").trim();
              appReg = new RegExp(`\\(\\s*${appVar}\\s*\\)`, "gi");
            } else {
              appVar = mainLine.replace(/.*\(/gi, "").replace(/\).*/gi, "").trim().replace(/\s.*/gi, "").replace(/:.*/gi, "").trim();
              appReg = new RegExp(`\\(\\s*${appVar}\\s*\\)`, "gi");
            }
          } else if (appReg.test(mainLine)) {
            let name = mainLine.replace(/\(.*/gi, "").trim();
            const refInfo = mainImportKv[name];
            if (refInfo && refInfo.position === "1") {
              let refPath = "";
              if (refInfo.path.includes(this.explorer.prefix.alias + "/")) {
                refPath = path.join(this.explorer.projectPath, refInfo.path.replace(this.explorer.prefix.alias, this.explorer.prefix.path));
              } else {
                refPath = path.join(filePath, "..", refInfo.path);
              }
              if (!refPath.includes(".")) {
                if (fs.existsSync(refPath + ".js")) {
                  refPath = refPath + ".js";
                } else if (fs.existsSync(refPath + ".ts")) {
                  refPath = refPath + ".ts";
                } else if (fs.existsSync(refPath + ".vue")) {
                  refPath = refPath + ".vue";
                } else {
                  return;
                }
              }
              if (isMain) {
                if (fs.existsSync(refPath)) {
                  const refCommon = this.findCommon(refPath, false, refInfo.type === "module" ? "export default" : name);
                  refCommon.component.forEach((refComponent) => {
                    common.component.push(refComponent);
                  });
                  refCommon.plugin.forEach((refPlugin) => {
                    common.plugin.push(refPlugin);
                  });
                }
              } else if (refVar) {
                if (fs.existsSync(refPath)) {
                  const refCommon = this.findCommon(refPath, false, "");
                  refCommon.component.forEach((refComponent) => {
                    common.component.push(refComponent);
                  });
                  refCommon.plugin.forEach((refPlugin) => {
                    common.plugin.push(refPlugin);
                  });
                }
              }
            }
          } else if (/(let|const|var)\s/gi.test(mainLine)) {
            varName = mainLine.replace(/\s*(let|const|var)\s/gi, "").replace(/\s*=.*/gi, "");
            isVar = true;
            varText = mainLine;
            if (mainLine.includes("]") || mainLine.includes("}")) {
              vars[varName.trim()] = this.getVarProperties(varText);
              isVar = false;
            }
          } else if (isVar) {
            varText += mainLine;
            if (mainLine.includes("]") || mainLine.includes("}")) {
              vars[varName.trim()] = this.getVarProperties(varText);
              isVar = false;
            }
          } else if (mainLine.includes(".use")) {
            if (isFor) {
              const forComponents = vars[foreachVar];
              if (forComponents) {
                forComponents.forEach((componentName) => {
                  const componentInfo = mainImportKv[componentName];
                  if (componentInfo) {
                    common.plugin.push({
                      name: componentName,
                      from: componentInfo.position === "2" ? componentInfo.path.replace(/.*\//gi, "") : "",
                      item: componentInfo,
                      file: filePath
                    });
                  }
                });
              }
            } else {
              const pluginName = mainLine.replace(/.*\((.*)\).*/gi, "$1").replace(/,.*/gi, "").trim();
              const pluginInfo = mainImportKv[pluginName];
              if (pluginInfo) {
                common.plugin.push({
                  name: pluginName,
                  from: pluginInfo.position === "2" ? pluginInfo.path.replace(/.*\//gi, "") : "",
                  item: pluginInfo,
                  file: filePath
                });
                if (pluginInfo.position === "1") {
                  if (isMain || refVar) {
                    let usePath = path.join(this.explorer.projectPath, pluginInfo.path.replace(this.explorer.prefix.alias, this.explorer.prefix.path));
                    if (!usePath.includes(".")) {
                      if (fs.existsSync(usePath + ".js")) {
                        usePath = usePath + ".js";
                      } else if (fs.existsSync(usePath + ".ts")) {
                        usePath = usePath + ".ts";
                      } else if (fs.existsSync(usePath + ".vue")) {
                        usePath = usePath + ".vue";
                      } else {
                        return;
                      }
                    }
                    if (fs.existsSync(usePath)) {
                      const useCommon = this.findCommon(usePath, false, "");
                      useCommon.component.forEach((useComponent) => {
                        common.component.push(useComponent);
                      });
                      useCommon.plugin.forEach((usePlugin) => {
                        common.plugin.push(usePlugin);
                      });
                    }
                  }
                }
              }
            }
          } else if (mainLine.includes(".component")) {
            if (isFor) {
              const forComponents = vars[foreachVar];
              if (forComponents) {
                forComponents.forEach((componentName) => {
                  const componentInfo = mainImportKv[componentName];
                  if (componentInfo) {
                    common.component.push({
                      name: componentName,
                      from: componentInfo.position === "2" ? componentInfo.path.replace(/.*\//gi, "") : "",
                      item: componentInfo,
                      file: filePath
                    });
                  }
                });
              }
            } else {
              const componentArr = mainLine.replace(/.*\((.*)\).*/gi, "$1").split(",");
              if (componentArr.length === 2) {
                let componentInfo = mainImportKv[componentArr[1].trim()];
                if (componentInfo) {
                  let componentName = componentArr[0].trim();
                  if (componentName.includes(".")) {
                    common.component.push({
                      name: componentName.replace(/\.*/gi, ""),
                      from: componentInfo.position === "2" ? componentInfo.path.replace(/.*\//gi, "") : "",
                      item: componentInfo,
                      file: filePath
                    });
                  } else {
                    common.component.push({
                      name: componentName.replace(/('|")/gi, ""),
                      from: componentInfo.position === "2" ? componentInfo.path.replace(/.*\//gi, "") : "",
                      item: componentInfo,
                      file: filePath
                    });
                  }
                }
              }
            }
          } else if (mainLine.includes(".forEach")) {
            foreachVar = mainLine.replace(/\.forEach.*/gi, "").trim();
            isFor = true;
          }
          if (mainLine.includes("}")) {
            isFor = false;
          }
        });
        return common;
      }
      initLocalComponent() {
        if (this.explorer.projectConfig.component && this.explorer.projectConfig.component.scope) {
          const scopeList = this.explorer.projectConfig.component.scope;
          scopeList.forEach((scope) => {
            let componentList = this.searchLocalComponent(scope);
            this.explorer.localVues[scope] = componentList;
            componentList.forEach((comp) => {
              this.explorer.localAttrs[comp.path + comp.name] = comp;
            });
          });
        }
      }
      // 遍历处理本地组件
      traverseHandleLocalComponent(postPath, files) {
        let fileDirs = fs.readdirSync(path.join(this.explorer.projectPath || "", postPath));
        for (let i = 0; i < fileDirs.length; i++) {
          const rootPath = fileDirs[i];
          if (!(rootPath.charAt(0) === ".")) {
            let dir = path.join(postPath, rootPath);
            let stat = fs.statSync(path.join(this.explorer.projectPath || "", dir));
            if (stat.isDirectory()) {
              this.traverseHandleLocalComponent(dir, files);
            } else {
              this.traverseAddLocalComponent(rootPath, dir, files);
            }
          }
        }
      }
      getVarConstantValue(text) {
        return text.replace(/.*:\s*('|")/gi, "").replace(/('|").*/gi, "");
      }
      // 遍历添加本地组件
      traverseAddLocalComponent(rootPath, dir, files) {
        if (dir.endsWith(".vue")) {
          try {
            let cFile = fs.readFileSync(path.join(this.explorer.projectPath, dir), "utf-8");
            let cName = rootPath.replace(/\..*/gi, "");
            let emits = {};
            let props = {};
            let slots = {};
            let cComment = null;
            let fileName = cName;
            if (cName === "index" || cName === "Index") {
              cName = dir.replace(/\\/gi, "/").replace(/.*\/(\w*)\/\w*.\w*/gi, "$1");
            }
            if (dir.includes(".vue")) {
              const slotList = cFile.match(/<slot\s[^>]*>/gi);
              if (slotList) {
                for (let i = 0; i < slotList.length; i++) {
                  const slotItem = slotList[i];
                  let slotName = "default";
                  if (slotItem.includes("name=")) {
                    if (!slotItem.includes(":name=")) {
                      slotName = slotItem.replace(/.*\sname="/gi, "").replace(/".*/gi, "");
                    }
                  }
                  slots[slotName] = [];
                  const slotFields = slotItem.match(/[\w-]*=/gi);
                  if (slotFields) {
                    slotFields.forEach((slotField) => {
                      const slotFieldName = slotField.replace(/=/gi, "");
                      if (slotFieldName && !(slotFieldName === "name" || slotFieldName === "v-if" || slotFieldName === "v-for")) {
                        slots[slotName].push(slotFieldName);
                      }
                    });
                  }
                }
              }
              cFile = cFile.replace(/.*<script/gi, "").replace(/<\/script.*/gi, "");
              let componentLines = cFile.split("\n");
              let isDefine = false;
              let inProps = false;
              let propType = "";
              let inPropsDefault = false;
              let braceLeftCount = 0;
              let comment = {};
              let commentKey = "description";
              let inComments = false;
              let propName = "";
              let smallBracketCount = 0;
              let emitText = "";
              let commentLine = 0;
              let hasDefineEmits = false;
              for (let i = 0; i < componentLines.length; i++) {
                const text = componentLines[i];
                if (/export\s*default\s*defineComponent/gi.test(text)) {
                  isDefine = true;
                  let braceLeftList2 = text.match(/{/gi);
                  braceLeftCount += braceLeftList2 ? braceLeftList2.length : 0;
                  continue;
                }
                let braceLeftList = text.match(/{/gi);
                let braceRightList = text.match(/}/gi);
                let braceLeft = braceLeftList ? braceLeftList.length : 0;
                let braceRight = braceRightList ? braceRightList.length : 0;
                braceLeftCount += braceLeft - braceRight;
                if (text.includes("*/")) {
                  inComments = false;
                  commentLine = i;
                  if (braceLeftCount === 0 && !cComment) {
                    cComment = comment;
                  }
                  continue;
                }
                if (text.includes("/**")) {
                  commentKey = "description";
                  comment = {};
                  inComments = true;
                  continue;
                }
                if (text.includes("// ")) {
                  commentLine = i;
                  comment.description = text.replace(/.*\/\/\s/gi, "").trim();
                }
                if (text.includes("@description")) {
                  commentKey = "description";
                  if (comment["description"]) {
                    comment["description"] += "\n" + text.replace(/.*@description/gi, "").trim();
                  } else {
                    comment["description"] = text.replace(/.*@description/gi, "").trim();
                  }
                  continue;
                }
                if (text.includes("@type")) {
                  commentKey = "type";
                  comment["type"] = text.replace(/.*@type/gi, "").trim();
                  continue;
                }
                if (text.includes("@default")) {
                  commentKey = "default";
                  comment["default"] = text.replace(/.*@default/gi, "").trim();
                  continue;
                }
                if (text.includes("@requires")) {
                  let requireText = text.replace(/.*@requires/, "").trim();
                  if (requireText) {
                    comment["required"] = requireText;
                  } else {
                    comment["required"] = "true";
                  }
                  continue;
                }
                if (text.includes("@enum")) {
                  commentKey = "enum";
                  comment["enum"] = text.replace(/.*@enum/gi, "").trim();
                  continue;
                }
                if (text.includes("@example")) {
                  commentKey = "example";
                  comment["example"] = text.replace(/.*@example/gi, "").trim();
                  continue;
                }
                if (inComments) {
                  if (commentKey && this.commentKeys.includes(commentKey)) {
                    if (comment[commentKey]) {
                      comment[commentKey] += "\n" + text.replace(/.*\*\s/gi, "").trim();
                    } else {
                      comment[commentKey] = text.replace(/.*\*\s/gi, "").trim();
                    }
                  }
                  continue;
                }
                if (text.includes("emit(") && !hasDefineEmits) {
                  const emitName = text.replace(/.*emit\(('|")/gi, "").replace(/('|").*/gi, "").trim();
                  if (emitName) {
                    if (!(emits[emitName] && emits[emitName].description)) {
                      if (i - commentLine < 5) {
                        emits[emitName] = {
                          description: comment.description || "",
                          example: comment.example || "",
                          required: comment.required && comment.required.includes(emitName + "") ? "true" : "false"
                        };
                      } else {
                        if (!emits[emitName]) {
                          emits[emitName] = {
                            description: ""
                          };
                        }
                      }
                    }
                  }
                }
                if (isDefine) {
                  if (braceLeftCount === 1) {
                    if (/name\s*:/gi.test(text)) {
                      const defineName = this.getVarConstantValue(text);
                      if (defineName) {
                        cName = defineName;
                      }
                    }
                    if (/emits\s*:/gi.test(text)) {
                      emitText = text;
                      if (text.includes("[") && !text.includes("]")) {
                        while (!emitText.includes("]") && i <= componentLines.length) {
                          i++;
                          emitText += componentLines[i];
                        }
                      }
                      const emitList = this.getArrValue(emitText);
                      let description = {};
                      if (comment.description) {
                        let descriptions = comment.description.split("\n");
                        descriptions.forEach((desc) => {
                          if (desc) {
                            const descs = desc.split(" ");
                            if (descs.length > 1) {
                              const descName = descs.shift();
                              description[descName] = descs.join(" ");
                            }
                          }
                        });
                      }
                      let example = {};
                      if (comment.example) {
                        let examples = comment.example.split("\n");
                        examples.forEach((desc) => {
                          if (desc) {
                            const descs = desc.split(" ");
                            if (descs.length > 1) {
                              const descName = descs.shift();
                              example[descName] = descs.join(" ");
                            }
                          }
                        });
                      }
                      emitList.forEach((emit) => {
                        emits[emit] = {
                          description: description[emit] || "",
                          example: example[emit] || "",
                          required: comment.required && comment.required.includes(emit + "") ? "true" : "false"
                        };
                      });
                      commentKey = "description";
                      comment = {};
                    }
                    inProps = false;
                  }
                  if (braceLeftCount === 2) {
                    if (/props\s*:/gi.test(text)) {
                      commentKey = "description";
                      comment = {};
                      inProps = true;
                      continue;
                    }
                    if (inProps) {
                      if (text.includes("}")) {
                        commentKey = "description";
                        comment = {};
                      }
                      if (text.includes(":")) {
                        const name = this.getVarName(text);
                        if (name) {
                          comment["type"] = this.getVarValue(text);
                          props[name] = comment;
                          commentKey = "description";
                          comment = {};
                        }
                      }
                    }
                  }
                  if (braceLeftCount === 3) {
                    if (inProps) {
                      if (text.includes(":")) {
                        const name = this.getVarName(text);
                        if (name) {
                          if (text.includes("{")) {
                            propName = name;
                            props[name] = comment;
                          } else {
                            if (propName && this.propKeys.includes(name)) {
                              props[propName][name] = this.getVarValue(text);
                            }
                          }
                        }
                      }
                    }
                  }
                } else {
                  if (text.includes("defineProps")) {
                    commentKey = "description";
                    comment = {};
                    inProps = true;
                    continue;
                  }
                  if (text.includes("withDefaults")) {
                    inPropsDefault = true;
                    continue;
                  }
                  if (braceLeftCount === 0) {
                    if (text.includes("defineEmits")) {
                      hasDefineEmits = true;
                      emitText = text;
                      if (text.includes("[") && !text.includes("]")) {
                        while (!emitText.includes("]") && i <= componentLines.length) {
                          i++;
                          emitText += componentLines[i];
                        }
                      }
                      const emitList = this.getArrValue(emitText);
                      let description = {};
                      if (comment.description) {
                        let descriptions = comment.description.split("\n");
                        descriptions.forEach((desc) => {
                          if (desc) {
                            const descs = desc.split(" ");
                            if (descs.length > 1) {
                              const descName = descs.shift();
                              description[descName] = descs.join(" ");
                            }
                          }
                        });
                      }
                      let example = {};
                      if (comment.example) {
                        let examples = comment.example.split("\n");
                        examples.forEach((desc) => {
                          if (desc) {
                            const descs = desc.split(" ");
                            if (descs.length > 1) {
                              const descName = descs.shift();
                              example[descName] = descs.join(" ");
                            }
                          }
                        });
                      }
                      emitList.forEach((emit) => {
                        emits[emit] = {
                          description: description[emit] || "",
                          example: example[emit] || "",
                          required: comment.required && comment.required.includes(emit + "") ? "true" : "false"
                        };
                      });
                      commentKey = "description";
                      comment = {};
                      continue;
                    }
                    if (!inProps) {
                      inPropsDefault = false;
                    }
                    inProps = false;
                  }
                  if (braceLeftCount === 1) {
                    if (/emits\s*:/gi.test(text)) {
                      emitText = text;
                      if (text.includes("[") && !text.includes("]")) {
                        while (!emitText.includes("]") && i <= componentLines.length) {
                          i++;
                          emitText += componentLines[i];
                        }
                      }
                      const emitList = this.getArrValue(emitText);
                      let description = {};
                      if (comment.description) {
                        let descriptions = comment.description.split("\n");
                        descriptions.forEach((desc) => {
                          if (desc) {
                            const descs = desc.split(" ");
                            if (descs.length > 1) {
                              const descName = descs.shift();
                              description[descName] = descs.join(" ");
                            }
                          }
                        });
                      }
                      let example = {};
                      if (comment.example) {
                        let examples = comment.example.split("\n");
                        examples.forEach((desc) => {
                          if (desc) {
                            const descs = desc.split(" ");
                            if (descs.length > 1) {
                              const descName = descs.shift();
                              example[descName] = descs.join(" ");
                            }
                          }
                        });
                      }
                      emitList.forEach((emit) => {
                        emits[emit] = {
                          description: description[emit] || "",
                          example: example[emit] || "",
                          required: comment.required && comment.required.includes(emit + "") ? "true" : "false"
                        };
                      });
                      commentKey = "description";
                      comment = {};
                    }
                    if (inProps) {
                      if (text.includes("}")) {
                        commentKey = "description";
                        comment = {};
                      }
                      if (text.includes(":")) {
                        const name = this.getVarName(text);
                        if (name) {
                          if (text.includes("(")) {
                            comment["type"] = "Function";
                          } else {
                            comment["type"] = this.getVarValue(text);
                          }
                          if (smallBracketCount === 0) {
                            props[name] = comment;
                          }
                          commentKey = "description";
                          comment = {};
                          if (text.includes("(")) {
                            let braceSmallLeftList = text.match(/\(/gi);
                            let braceSmallRightList = text.match(/\)/gi);
                            let braceSmallLeft = braceSmallLeftList ? braceSmallLeftList.length : 0;
                            let braceSmallRight = braceSmallRightList ? braceSmallRightList.length : 0;
                            smallBracketCount += braceSmallLeft - braceSmallRight;
                          }
                        }
                      }
                    } else if (!inProps && inPropsDefault) {
                      if (text.includes(":")) {
                        const name = this.getVarName(text);
                        if (name && props[name]) {
                          props[name]["default"] = this.getVarValue(text);
                        }
                      }
                    }
                    if (propType === "props") {
                      inProps = false;
                    }
                  }
                  if (braceLeftCount === 2) {
                    if (/props\s*:/gi.test(text)) {
                      propType = "props";
                      commentKey = "description";
                      comment = {};
                      inProps = true;
                      continue;
                    }
                    if (inProps) {
                      if (propType === "props") {
                        if (text.includes("}")) {
                          commentKey = "description";
                          comment = {};
                        }
                        if (text.includes(":")) {
                          const name = this.getVarName(text);
                          if (name) {
                            comment["type"] = this.getVarValue(text);
                            props[name] = comment;
                            commentKey = "description";
                            comment = {};
                          }
                        }
                      } else {
                        if (text.includes(":")) {
                          const name = this.getVarName(text);
                          if (name) {
                            if (text.includes("{") && !text.includes("(")) {
                              propName = name;
                              props[name] = comment;
                            } else {
                              if (propName && this.propKeys.includes(name)) {
                                props[propName][name] = this.getVarValue(text);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  if (braceLeftCount === 3) {
                    if (inProps) {
                      if (propType === "props") {
                        if (text.includes(":")) {
                          const name = this.getVarName(text);
                          if (name) {
                            if (text.includes("{") && !text.includes("(")) {
                              propName = name;
                              props[name] = comment;
                            } else {
                              if (propName && this.propKeys.includes(name)) {
                                props[propName][name] = this.getVarValue(text);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  if (braceLeftCount === 4 && propType === "props") {
                    if (inProps) {
                      if (text.includes(":")) {
                        const name = this.getVarName(text);
                        if (name && props[propName]) {
                          props[propName][name] = this.getVarValue(text);
                        }
                      }
                    }
                  }
                }
              }
              files.push({
                name: cName,
                fileName,
                comment: cComment,
                path: dir.replace(/\\/gi, "/"),
                emits,
                props,
                slots,
                insertText: cComment && cComment.example ? cComment.example : this.getInsertText(cName, emits, props)
              });
            } else {
            }
          } catch (error) {
            console.log(error);
          }
        }
      }
      getInsertText(name, emits, props) {
        let ret = `${name}`;
        let i = 1;
        for (const key in props) {
          const propItem = props[key];
          if (propItem && propItem.required === "true") {
            if (propItem.type === "string" || propItem.type === "String") {
              ret += ` ${key}="$${i}"`;
            } else {
              ret += ` :${key}="$${i}"`;
            }
            i++;
          }
        }
        for (const key in emits) {
          const emitItem = emits[key];
          if (emitItem && emitItem.required === "true") {
            ret += ` @${key}="$${i}"`;
            i++;
          }
        }
        ret += `>$${i}</${name}>`;
        return ret;
      }
      searchLocalComponent(filePath) {
        let files = [];
        let cond;
        let ignore = ["node_modules", "dist", "build"];
        cond = function(rootPath) {
          return !(rootPath.charAt(0) === "." || ignore.indexOf(rootPath) !== -1);
        };
        if (cond(filePath)) {
          let stat = fs.statSync(path.join(this.explorer.projectPath || "", filePath));
          if (stat.isDirectory()) {
            this.traverseHandleLocalComponent(filePath, files);
          } else {
            this.traverseAddLocalComponent(filePath, filePath, files);
          }
        }
        return files;
      }
      traverseDir(dir) {
        let ret = [];
        const dirList = fs.readdirSync(dir);
        for (let i = 0; i < dirList.length; i++) {
          const childDir = dirList[i];
          if (!(childDir.charAt(0) === ".")) {
            let childPath = path.join(dir, childDir);
            let stat = fs.statSync(childPath);
            if (stat.isDirectory()) {
              ret.push({
                label: childDir,
                children: this.traverseDir(childPath)
              });
            } else {
              ret.push({
                label: childDir
              });
            }
          }
        }
        return ret;
      }
    };
    exports2.default = Traverse;
  }
});

// out/vue/snippets-html.js
var require_snippets_html = __commonJS({
  "out/vue/snippets-html.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.default = (tabSize) => {
      return {
        "vcomponent": `<component :is="\${1:componentId}"></component>$0`,
        "vka": `<keep-alive$1>
${tabSize}$2
</keep-alive>$0`,
        "vtransition": `<transition$1>
${tabSize}$2
</transition>$0`,
        "vtg": `<transition-group$1>
${tabSize}$2
</transition-group>`,
        "vrl": `<router-link $1>$2</router-link>$0`,
        "vrlt": `<router-link to="$1">$2</router-link>$0`,
        "vrv": `<router-view>$1</router-view>$0`
      };
    };
  }
});

// out/vue/snippets-js.js
var require_snippets_js = __commonJS({
  "out/vue/snippets-js.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.default = (tabSize) => {
      return {
        "vnew": `new Vue({
${tabSize}$1
})`,
        "vgsilent": `Vue.config.silent = \${1:true}`,
        "vgeh": `Vue.config.errorHandler = function (err, vm, info) {
${tabSize}\${1:// handle error}
}`,
        "vgwh": `Vue.config.warnHandler = function (msg, vm, trace) {
${tabSize}\${1:// handle warn}
}`,
        "vgextend": `Vue.extend({
${tabSize}template:\${1:template}
})`,
        "vgnt": `Vue.nextTick({
${tabSize}$1
})`,
        "vgset": `Vue.set(\${2:target}, \${3:key}, \${4:value})`,
        "vgdelete": `Vue.delete(\${2:target}, \${3:key})`,
        "vgdirective": `Vue.directive(\${2:id}\${3:, [definition]})`,
        "vgfilter": `Vue.filter(\${1:id}\${2:, [definition]})`,
        "vgcomponent": `Vue.component(\${1:id}\${2:, [definition]})$0`,
        "vguse": `Vue.use(\${1:plugin})$0`,
        "vgmixin": `Vue.mixin({\${1:mixin}})`,
        "vgcompile": `Vue.compile(\${1:template})`,
        "vdata": `data() {
${tabSize}return {
${tabSize}${tabSize}$1
${tabSize}}
},$0`,
        "vmounted": `mounted () {
${tabSize}$1
}`,
        "vbm": `beforeMount () {
${tabSize}$1
}`,
        "vcreated": `created () {
${tabSize}$1
}`,
        "vbc": `beforeCreate () {
${tabSize}$1
}`,
        "vupdated": `updated () {
${tabSize}$1
}`,
        "vbu": `beforeUpdate () {
${tabSize}$1
}`,
        "vactivated": `activated () {
${tabSize}$1
}`,
        "vdeactivated": `deactivated () {
${tabSize}$1
}`,
        "vbd": `beforeDestroy () {
${tabSize}$1
}`,
        "vdestroyed": `destroyed () {
${tabSize}$1
}`,
        "vprops": `props: {
${tabSize}$1
}`,
        "vpd": `propsData: {
${tabSize}$1
}`,
        "vcomputed": `computed: {
${tabSize}$1
}`,
        "vmethods": `methods: {
${tabSize}$1
}`,
        "vwatch": `watch: {
${tabSize}$1
}`,
        "vwo": `\${1:key}: {
${tabSize}deep: \${2:true},
${tabSize}immediate: \${3:true},
${tabSize}handler: function (\${4:val}, \${5:oldVal}) {
${tabSize}${tabSize}$6
${tabSize}}
},$0`,
        "vdirectives": `directives: {
${tabSize}$1
}`,
        "vfilters": `filters: {
${tabSize}$1
}`,
        "vcomponents": `components: {
${tabSize}$1
}`,
        "vmixins": `mixins:[$1],`,
        "vprovide": `provide: {
${tabSize}$1
}`,
        "vinject": `inject: [$1],`,
        "vmodel": `model: {
${tabSize}prop: $1,
${tabSize}event: $2
}`,
        "vrender": `render(h) {
${tabSize}$1
},`,
        "vel": `\${1|this,vm|}.$el$2`,
        "voptions": `\${1|this,vm|}.$options$2`,
        "vparent": `\${1|this,vm|}.$parent$2`,
        "vroot": `\${1|this,vm|}.$root$2`,
        "vchildren": `\${1|this,vm|}.$children$2`,
        "vslots": `\${1|this,vm|}.$slots$2`,
        "vss": `\${1|this,vm|}.$scopedSlots.default({
${tabSize}$2
})`,
        "vrefs": `\${1|this,vm|}.$refs$2`,
        "vis": `\${1|this,vm|}.$isServer$2`,
        "vattrs": `\${1|this,vm|}.$attrs$2`,
        "vlisteners": `\${1|this,vm|}.$listeners$2`,
        "vset": `\${1|this,vm|}.$set(\${2:target}, \${3:key}, \${4:value})`,
        "vdelete": `\${1|this,vm|}.$delete(\${2:target}, \${3:key})`,
        "von": `\${1|this,vm|}.$on('\${2:event}', \${3:callback})$4`,
        "vonce": `\${1|this,vm|}.$once('\${2:event}', \${3:callback})$4`,
        "voff": `\${1|this,vm|}.$off('\${2:event}', \${3:callback})$4`,
        "vemit": `\${1|this,vm|}.$emit('\${2:event}'\${3:, args})$4`,
        "vmount": `\${1|this,vm|}.$mount('$2')`,
        "vfu": `\${1|this,vm|}.$forceUpdate()`,
        "vdestroy": `\${1|this,vm|}.$destroy()$2`,
        "vnt": `\${1|this,vm|}.$nextTick(() => {
${tabSize}$2
})`
      };
    };
  }
});

// node_modules/balanced-match/index.js
var require_balanced_match = __commonJS({
  "node_modules/balanced-match/index.js"(exports2, module2) {
    "use strict";
    module2.exports = balanced;
    function balanced(a, b, str) {
      if (a instanceof RegExp) a = maybeMatch(a, str);
      if (b instanceof RegExp) b = maybeMatch(b, str);
      var r = range(a, b, str);
      return r && {
        start: r[0],
        end: r[1],
        pre: str.slice(0, r[0]),
        body: str.slice(r[0] + a.length, r[1]),
        post: str.slice(r[1] + b.length)
      };
    }
    function maybeMatch(reg, str) {
      var m = str.match(reg);
      return m ? m[0] : null;
    }
    balanced.range = range;
    function range(a, b, str) {
      var begs, beg, left, right, result;
      var ai = str.indexOf(a);
      var bi = str.indexOf(b, ai + 1);
      var i = ai;
      if (ai >= 0 && bi > 0) {
        if (a === b) {
          return [ai, bi];
        }
        begs = [];
        left = str.length;
        while (i >= 0 && !result) {
          if (i == ai) {
            begs.push(i);
            ai = str.indexOf(a, i + 1);
          } else if (begs.length == 1) {
            result = [begs.pop(), bi];
          } else {
            beg = begs.pop();
            if (beg < left) {
              left = beg;
              right = bi;
            }
            bi = str.indexOf(b, i + 1);
          }
          i = ai < bi && ai >= 0 ? ai : bi;
        }
        if (begs.length) {
          result = [left, right];
        }
      }
      return result;
    }
  }
});

// node_modules/brace-expansion/index.js
var require_brace_expansion = __commonJS({
  "node_modules/brace-expansion/index.js"(exports2, module2) {
    var balanced = require_balanced_match();
    module2.exports = expandTop;
    var escSlash = "\0SLASH" + Math.random() + "\0";
    var escOpen = "\0OPEN" + Math.random() + "\0";
    var escClose = "\0CLOSE" + Math.random() + "\0";
    var escComma = "\0COMMA" + Math.random() + "\0";
    var escPeriod = "\0PERIOD" + Math.random() + "\0";
    function numeric(str) {
      return parseInt(str, 10) == str ? parseInt(str, 10) : str.charCodeAt(0);
    }
    function escapeBraces(str) {
      return str.split("\\\\").join(escSlash).split("\\{").join(escOpen).split("\\}").join(escClose).split("\\,").join(escComma).split("\\.").join(escPeriod);
    }
    function unescapeBraces(str) {
      return str.split(escSlash).join("\\").split(escOpen).join("{").split(escClose).join("}").split(escComma).join(",").split(escPeriod).join(".");
    }
    function parseCommaParts(str) {
      if (!str)
        return [""];
      var parts = [];
      var m = balanced("{", "}", str);
      if (!m)
        return str.split(",");
      var pre = m.pre;
      var body = m.body;
      var post = m.post;
      var p = pre.split(",");
      p[p.length - 1] += "{" + body + "}";
      var postParts = parseCommaParts(post);
      if (post.length) {
        p[p.length - 1] += postParts.shift();
        p.push.apply(p, postParts);
      }
      parts.push.apply(parts, p);
      return parts;
    }
    function expandTop(str) {
      if (!str)
        return [];
      if (str.substr(0, 2) === "{}") {
        str = "\\{\\}" + str.substr(2);
      }
      return expand(escapeBraces(str), true).map(unescapeBraces);
    }
    function embrace(str) {
      return "{" + str + "}";
    }
    function isPadded(el) {
      return /^-?0\d/.test(el);
    }
    function lte(i, y) {
      return i <= y;
    }
    function gte(i, y) {
      return i >= y;
    }
    function expand(str, isTop) {
      var expansions = [];
      var m = balanced("{", "}", str);
      if (!m) return [str];
      var pre = m.pre;
      var post = m.post.length ? expand(m.post, false) : [""];
      if (/\$$/.test(m.pre)) {
        for (var k = 0; k < post.length; k++) {
          var expansion = pre + "{" + m.body + "}" + post[k];
          expansions.push(expansion);
        }
      } else {
        var isNumericSequence = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);
        var isAlphaSequence = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);
        var isSequence = isNumericSequence || isAlphaSequence;
        var isOptions = m.body.indexOf(",") >= 0;
        if (!isSequence && !isOptions) {
          if (m.post.match(/,.*\}/)) {
            str = m.pre + "{" + m.body + escClose + m.post;
            return expand(str);
          }
          return [str];
        }
        var n;
        if (isSequence) {
          n = m.body.split(/\.\./);
        } else {
          n = parseCommaParts(m.body);
          if (n.length === 1) {
            n = expand(n[0], false).map(embrace);
            if (n.length === 1) {
              return post.map(function(p) {
                return m.pre + n[0] + p;
              });
            }
          }
        }
        var N;
        if (isSequence) {
          var x = numeric(n[0]);
          var y = numeric(n[1]);
          var width = Math.max(n[0].length, n[1].length);
          var incr = n.length == 3 ? Math.abs(numeric(n[2])) : 1;
          var test = lte;
          var reverse = y < x;
          if (reverse) {
            incr *= -1;
            test = gte;
          }
          var pad = n.some(isPadded);
          N = [];
          for (var i = x; test(i, y); i += incr) {
            var c;
            if (isAlphaSequence) {
              c = String.fromCharCode(i);
              if (c === "\\")
                c = "";
            } else {
              c = String(i);
              if (pad) {
                var need = width - c.length;
                if (need > 0) {
                  var z = new Array(need + 1).join("0");
                  if (i < 0)
                    c = "-" + z + c.slice(1);
                  else
                    c = z + c;
                }
              }
            }
            N.push(c);
          }
        } else {
          N = [];
          for (var j = 0; j < n.length; j++) {
            N.push.apply(N, expand(n[j], false));
          }
        }
        for (var j = 0; j < N.length; j++) {
          for (var k = 0; k < post.length; k++) {
            var expansion = pre + N[j] + post[k];
            if (!isTop || isSequence || expansion)
              expansions.push(expansion);
          }
        }
      }
      return expansions;
    }
  }
});

// node_modules/minimatch/dist/commonjs/assert-valid-pattern.js
var require_assert_valid_pattern = __commonJS({
  "node_modules/minimatch/dist/commonjs/assert-valid-pattern.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.assertValidPattern = void 0;
    var MAX_PATTERN_LENGTH = 1024 * 64;
    var assertValidPattern = (pattern) => {
      if (typeof pattern !== "string") {
        throw new TypeError("invalid pattern");
      }
      if (pattern.length > MAX_PATTERN_LENGTH) {
        throw new TypeError("pattern is too long");
      }
    };
    exports2.assertValidPattern = assertValidPattern;
  }
});

// node_modules/minimatch/dist/commonjs/brace-expressions.js
var require_brace_expressions = __commonJS({
  "node_modules/minimatch/dist/commonjs/brace-expressions.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.parseClass = void 0;
    var posixClasses = {
      "[:alnum:]": ["\\p{L}\\p{Nl}\\p{Nd}", true],
      "[:alpha:]": ["\\p{L}\\p{Nl}", true],
      "[:ascii:]": ["\\x00-\\x7f", false],
      "[:blank:]": ["\\p{Zs}\\t", true],
      "[:cntrl:]": ["\\p{Cc}", true],
      "[:digit:]": ["\\p{Nd}", true],
      "[:graph:]": ["\\p{Z}\\p{C}", true, true],
      "[:lower:]": ["\\p{Ll}", true],
      "[:print:]": ["\\p{C}", true],
      "[:punct:]": ["\\p{P}", true],
      "[:space:]": ["\\p{Z}\\t\\r\\n\\v\\f", true],
      "[:upper:]": ["\\p{Lu}", true],
      "[:word:]": ["\\p{L}\\p{Nl}\\p{Nd}\\p{Pc}", true],
      "[:xdigit:]": ["A-Fa-f0-9", false]
    };
    var braceEscape = (s) => s.replace(/[[\]\\-]/g, "\\$&");
    var regexpEscape = (s) => s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    var rangesToString = (ranges) => ranges.join("");
    var parseClass = (glob, position) => {
      const pos = position;
      if (glob.charAt(pos) !== "[") {
        throw new Error("not in a brace expression");
      }
      const ranges = [];
      const negs = [];
      let i = pos + 1;
      let sawStart = false;
      let uflag = false;
      let escaping = false;
      let negate = false;
      let endPos = pos;
      let rangeStart = "";
      WHILE: while (i < glob.length) {
        const c = glob.charAt(i);
        if ((c === "!" || c === "^") && i === pos + 1) {
          negate = true;
          i++;
          continue;
        }
        if (c === "]" && sawStart && !escaping) {
          endPos = i + 1;
          break;
        }
        sawStart = true;
        if (c === "\\") {
          if (!escaping) {
            escaping = true;
            i++;
            continue;
          }
        }
        if (c === "[" && !escaping) {
          for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {
            if (glob.startsWith(cls, i)) {
              if (rangeStart) {
                return ["$.", false, glob.length - pos, true];
              }
              i += cls.length;
              if (neg)
                negs.push(unip);
              else
                ranges.push(unip);
              uflag = uflag || u;
              continue WHILE;
            }
          }
        }
        escaping = false;
        if (rangeStart) {
          if (c > rangeStart) {
            ranges.push(braceEscape(rangeStart) + "-" + braceEscape(c));
          } else if (c === rangeStart) {
            ranges.push(braceEscape(c));
          }
          rangeStart = "";
          i++;
          continue;
        }
        if (glob.startsWith("-]", i + 1)) {
          ranges.push(braceEscape(c + "-"));
          i += 2;
          continue;
        }
        if (glob.startsWith("-", i + 1)) {
          rangeStart = c;
          i += 2;
          continue;
        }
        ranges.push(braceEscape(c));
        i++;
      }
      if (endPos < i) {
        return ["", false, 0, false];
      }
      if (!ranges.length && !negs.length) {
        return ["$.", false, glob.length - pos, true];
      }
      if (negs.length === 0 && ranges.length === 1 && /^\\?.$/.test(ranges[0]) && !negate) {
        const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0];
        return [regexpEscape(r), false, endPos - pos, false];
      }
      const sranges = "[" + (negate ? "^" : "") + rangesToString(ranges) + "]";
      const snegs = "[" + (negate ? "" : "^") + rangesToString(negs) + "]";
      const comb = ranges.length && negs.length ? "(" + sranges + "|" + snegs + ")" : ranges.length ? sranges : snegs;
      return [comb, uflag, endPos - pos, true];
    };
    exports2.parseClass = parseClass;
  }
});

// node_modules/minimatch/dist/commonjs/unescape.js
var require_unescape = __commonJS({
  "node_modules/minimatch/dist/commonjs/unescape.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.unescape = void 0;
    var unescape2 = (s, { windowsPathsNoEscape = false } = {}) => {
      return windowsPathsNoEscape ? s.replace(/\[([^\/\\])\]/g, "$1") : s.replace(/((?!\\).|^)\[([^\/\\])\]/g, "$1$2").replace(/\\([^\/])/g, "$1");
    };
    exports2.unescape = unescape2;
  }
});

// node_modules/minimatch/dist/commonjs/ast.js
var require_ast = __commonJS({
  "node_modules/minimatch/dist/commonjs/ast.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.AST = void 0;
    var brace_expressions_js_1 = require_brace_expressions();
    var unescape_js_1 = require_unescape();
    var types = /* @__PURE__ */ new Set(["!", "?", "+", "*", "@"]);
    var isExtglobType = (c) => types.has(c);
    var startNoTraversal = "(?!(?:^|/)\\.\\.?(?:$|/))";
    var startNoDot = "(?!\\.)";
    var addPatternStart = /* @__PURE__ */ new Set(["[", "."]);
    var justDots = /* @__PURE__ */ new Set(["..", "."]);
    var reSpecials = new Set("().*{}+?[]^$\\!");
    var regExpEscape = (s) => s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    var qmark = "[^/]";
    var star = qmark + "*?";
    var starNoEmpty = qmark + "+?";
    var AST = class _AST {
      type;
      #root;
      #hasMagic;
      #uflag = false;
      #parts = [];
      #parent;
      #parentIndex;
      #negs;
      #filledNegs = false;
      #options;
      #toString;
      // set to true if it's an extglob with no children
      // (which really means one child of '')
      #emptyExt = false;
      constructor(type, parent, options = {}) {
        this.type = type;
        if (type)
          this.#hasMagic = true;
        this.#parent = parent;
        this.#root = this.#parent ? this.#parent.#root : this;
        this.#options = this.#root === this ? options : this.#root.#options;
        this.#negs = this.#root === this ? [] : this.#root.#negs;
        if (type === "!" && !this.#root.#filledNegs)
          this.#negs.push(this);
        this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0;
      }
      get hasMagic() {
        if (this.#hasMagic !== void 0)
          return this.#hasMagic;
        for (const p of this.#parts) {
          if (typeof p === "string")
            continue;
          if (p.type || p.hasMagic)
            return this.#hasMagic = true;
        }
        return this.#hasMagic;
      }
      // reconstructs the pattern
      toString() {
        if (this.#toString !== void 0)
          return this.#toString;
        if (!this.type) {
          return this.#toString = this.#parts.map((p) => String(p)).join("");
        } else {
          return this.#toString = this.type + "(" + this.#parts.map((p) => String(p)).join("|") + ")";
        }
      }
      #fillNegs() {
        if (this !== this.#root)
          throw new Error("should only call on root");
        if (this.#filledNegs)
          return this;
        this.toString();
        this.#filledNegs = true;
        let n;
        while (n = this.#negs.pop()) {
          if (n.type !== "!")
            continue;
          let p = n;
          let pp = p.#parent;
          while (pp) {
            for (let i = p.#parentIndex + 1; !pp.type && i < pp.#parts.length; i++) {
              for (const part of n.#parts) {
                if (typeof part === "string") {
                  throw new Error("string part in extglob AST??");
                }
                part.copyIn(pp.#parts[i]);
              }
            }
            p = pp;
            pp = p.#parent;
          }
        }
        return this;
      }
      push(...parts) {
        for (const p of parts) {
          if (p === "")
            continue;
          if (typeof p !== "string" && !(p instanceof _AST && p.#parent === this)) {
            throw new Error("invalid part: " + p);
          }
          this.#parts.push(p);
        }
      }
      toJSON() {
        const ret = this.type === null ? this.#parts.slice().map((p) => typeof p === "string" ? p : p.toJSON()) : [this.type, ...this.#parts.map((p) => p.toJSON())];
        if (this.isStart() && !this.type)
          ret.unshift([]);
        if (this.isEnd() && (this === this.#root || this.#root.#filledNegs && this.#parent?.type === "!")) {
          ret.push({});
        }
        return ret;
      }
      isStart() {
        if (this.#root === this)
          return true;
        if (!this.#parent?.isStart())
          return false;
        if (this.#parentIndex === 0)
          return true;
        const p = this.#parent;
        for (let i = 0; i < this.#parentIndex; i++) {
          const pp = p.#parts[i];
          if (!(pp instanceof _AST && pp.type === "!")) {
            return false;
          }
        }
        return true;
      }
      isEnd() {
        if (this.#root === this)
          return true;
        if (this.#parent?.type === "!")
          return true;
        if (!this.#parent?.isEnd())
          return false;
        if (!this.type)
          return this.#parent?.isEnd();
        const pl = this.#parent ? this.#parent.#parts.length : 0;
        return this.#parentIndex === pl - 1;
      }
      copyIn(part) {
        if (typeof part === "string")
          this.push(part);
        else
          this.push(part.clone(this));
      }
      clone(parent) {
        const c = new _AST(this.type, parent);
        for (const p of this.#parts) {
          c.copyIn(p);
        }
        return c;
      }
      static #parseAST(str, ast, pos, opt) {
        let escaping = false;
        let inBrace = false;
        let braceStart = -1;
        let braceNeg = false;
        if (ast.type === null) {
          let i2 = pos;
          let acc2 = "";
          while (i2 < str.length) {
            const c = str.charAt(i2++);
            if (escaping || c === "\\") {
              escaping = !escaping;
              acc2 += c;
              continue;
            }
            if (inBrace) {
              if (i2 === braceStart + 1) {
                if (c === "^" || c === "!") {
                  braceNeg = true;
                }
              } else if (c === "]" && !(i2 === braceStart + 2 && braceNeg)) {
                inBrace = false;
              }
              acc2 += c;
              continue;
            } else if (c === "[") {
              inBrace = true;
              braceStart = i2;
              braceNeg = false;
              acc2 += c;
              continue;
            }
            if (!opt.noext && isExtglobType(c) && str.charAt(i2) === "(") {
              ast.push(acc2);
              acc2 = "";
              const ext = new _AST(c, ast);
              i2 = _AST.#parseAST(str, ext, i2, opt);
              ast.push(ext);
              continue;
            }
            acc2 += c;
          }
          ast.push(acc2);
          return i2;
        }
        let i = pos + 1;
        let part = new _AST(null, ast);
        const parts = [];
        let acc = "";
        while (i < str.length) {
          const c = str.charAt(i++);
          if (escaping || c === "\\") {
            escaping = !escaping;
            acc += c;
            continue;
          }
          if (inBrace) {
            if (i === braceStart + 1) {
              if (c === "^" || c === "!") {
                braceNeg = true;
              }
            } else if (c === "]" && !(i === braceStart + 2 && braceNeg)) {
              inBrace = false;
            }
            acc += c;
            continue;
          } else if (c === "[") {
            inBrace = true;
            braceStart = i;
            braceNeg = false;
            acc += c;
            continue;
          }
          if (isExtglobType(c) && str.charAt(i) === "(") {
            part.push(acc);
            acc = "";
            const ext = new _AST(c, part);
            part.push(ext);
            i = _AST.#parseAST(str, ext, i, opt);
            continue;
          }
          if (c === "|") {
            part.push(acc);
            acc = "";
            parts.push(part);
            part = new _AST(null, ast);
            continue;
          }
          if (c === ")") {
            if (acc === "" && ast.#parts.length === 0) {
              ast.#emptyExt = true;
            }
            part.push(acc);
            acc = "";
            ast.push(...parts, part);
            return i;
          }
          acc += c;
        }
        ast.type = null;
        ast.#hasMagic = void 0;
        ast.#parts = [str.substring(pos - 1)];
        return i;
      }
      static fromGlob(pattern, options = {}) {
        const ast = new _AST(null, void 0, options);
        _AST.#parseAST(pattern, ast, 0, options);
        return ast;
      }
      // returns the regular expression if there's magic, or the unescaped
      // string if not.
      toMMPattern() {
        if (this !== this.#root)
          return this.#root.toMMPattern();
        const glob = this.toString();
        const [re, body, hasMagic, uflag] = this.toRegExpSource();
        const anyMagic = hasMagic || this.#hasMagic || this.#options.nocase && !this.#options.nocaseMagicOnly && glob.toUpperCase() !== glob.toLowerCase();
        if (!anyMagic) {
          return body;
        }
        const flags = (this.#options.nocase ? "i" : "") + (uflag ? "u" : "");
        return Object.assign(new RegExp(`^${re}$`, flags), {
          _src: re,
          _glob: glob
        });
      }
      get options() {
        return this.#options;
      }
      // returns the string match, the regexp source, whether there's magic
      // in the regexp (so a regular expression is required) and whether or
      // not the uflag is needed for the regular expression (for posix classes)
      // TODO: instead of injecting the start/end at this point, just return
      // the BODY of the regexp, along with the start/end portions suitable
      // for binding the start/end in either a joined full-path makeRe context
      // (where we bind to (^|/), or a standalone matchPart context (where
      // we bind to ^, and not /).  Otherwise slashes get duped!
      //
      // In part-matching mode, the start is:
      // - if not isStart: nothing
      // - if traversal possible, but not allowed: ^(?!\.\.?$)
      // - if dots allowed or not possible: ^
      // - if dots possible and not allowed: ^(?!\.)
      // end is:
      // - if not isEnd(): nothing
      // - else: $
      //
      // In full-path matching mode, we put the slash at the START of the
      // pattern, so start is:
      // - if first pattern: same as part-matching mode
      // - if not isStart(): nothing
      // - if traversal possible, but not allowed: /(?!\.\.?(?:$|/))
      // - if dots allowed or not possible: /
      // - if dots possible and not allowed: /(?!\.)
      // end is:
      // - if last pattern, same as part-matching mode
      // - else nothing
      //
      // Always put the (?:$|/) on negated tails, though, because that has to be
      // there to bind the end of the negated pattern portion, and it's easier to
      // just stick it in now rather than try to inject it later in the middle of
      // the pattern.
      //
      // We can just always return the same end, and leave it up to the caller
      // to know whether it's going to be used joined or in parts.
      // And, if the start is adjusted slightly, can do the same there:
      // - if not isStart: nothing
      // - if traversal possible, but not allowed: (?:/|^)(?!\.\.?$)
      // - if dots allowed or not possible: (?:/|^)
      // - if dots possible and not allowed: (?:/|^)(?!\.)
      //
      // But it's better to have a simpler binding without a conditional, for
      // performance, so probably better to return both start options.
      //
      // Then the caller just ignores the end if it's not the first pattern,
      // and the start always gets applied.
      //
      // But that's always going to be $ if it's the ending pattern, or nothing,
      // so the caller can just attach $ at the end of the pattern when building.
      //
      // So the todo is:
      // - better detect what kind of start is needed
      // - return both flavors of starting pattern
      // - attach $ at the end of the pattern when creating the actual RegExp
      //
      // Ah, but wait, no, that all only applies to the root when the first pattern
      // is not an extglob. If the first pattern IS an extglob, then we need all
      // that dot prevention biz to live in the extglob portions, because eg
      // +(*|.x*) can match .xy but not .yx.
      //
      // So, return the two flavors if it's #root and the first child is not an
      // AST, otherwise leave it to the child AST to handle it, and there,
      // use the (?:^|/) style of start binding.
      //
      // Even simplified further:
      // - Since the start for a join is eg /(?!\.) and the start for a part
      // is ^(?!\.), we can just prepend (?!\.) to the pattern (either root
      // or start or whatever) and prepend ^ or / at the Regexp construction.
      toRegExpSource(allowDot) {
        const dot = allowDot ?? !!this.#options.dot;
        if (this.#root === this)
          this.#fillNegs();
        if (!this.type) {
          const noEmpty = this.isStart() && this.isEnd();
          const src = this.#parts.map((p) => {
            const [re, _, hasMagic, uflag] = typeof p === "string" ? _AST.#parseGlob(p, this.#hasMagic, noEmpty) : p.toRegExpSource(allowDot);
            this.#hasMagic = this.#hasMagic || hasMagic;
            this.#uflag = this.#uflag || uflag;
            return re;
          }).join("");
          let start2 = "";
          if (this.isStart()) {
            if (typeof this.#parts[0] === "string") {
              const dotTravAllowed = this.#parts.length === 1 && justDots.has(this.#parts[0]);
              if (!dotTravAllowed) {
                const aps = addPatternStart;
                const needNoTrav = (
                  // dots are allowed, and the pattern starts with [ or .
                  dot && aps.has(src.charAt(0)) || // the pattern starts with \., and then [ or .
                  src.startsWith("\\.") && aps.has(src.charAt(2)) || // the pattern starts with \.\., and then [ or .
                  src.startsWith("\\.\\.") && aps.has(src.charAt(4))
                );
                const needNoDot = !dot && !allowDot && aps.has(src.charAt(0));
                start2 = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : "";
              }
            }
          }
          let end = "";
          if (this.isEnd() && this.#root.#filledNegs && this.#parent?.type === "!") {
            end = "(?:$|\\/)";
          }
          const final2 = start2 + src + end;
          return [
            final2,
            (0, unescape_js_1.unescape)(src),
            this.#hasMagic = !!this.#hasMagic,
            this.#uflag
          ];
        }
        const repeated = this.type === "*" || this.type === "+";
        const start = this.type === "!" ? "(?:(?!(?:" : "(?:";
        let body = this.#partsToRegExp(dot);
        if (this.isStart() && this.isEnd() && !body && this.type !== "!") {
          const s = this.toString();
          this.#parts = [s];
          this.type = null;
          this.#hasMagic = void 0;
          return [s, (0, unescape_js_1.unescape)(this.toString()), false, false];
        }
        let bodyDotAllowed = !repeated || allowDot || dot || !startNoDot ? "" : this.#partsToRegExp(true);
        if (bodyDotAllowed === body) {
          bodyDotAllowed = "";
        }
        if (bodyDotAllowed) {
          body = `(?:${body})(?:${bodyDotAllowed})*?`;
        }
        let final = "";
        if (this.type === "!" && this.#emptyExt) {
          final = (this.isStart() && !dot ? startNoDot : "") + starNoEmpty;
        } else {
          const close = this.type === "!" ? (
            // !() must match something,but !(x) can match ''
            "))" + (this.isStart() && !dot && !allowDot ? startNoDot : "") + star + ")"
          ) : this.type === "@" ? ")" : this.type === "?" ? ")?" : this.type === "+" && bodyDotAllowed ? ")" : this.type === "*" && bodyDotAllowed ? `)?` : `)${this.type}`;
          final = start + body + close;
        }
        return [
          final,
          (0, unescape_js_1.unescape)(body),
          this.#hasMagic = !!this.#hasMagic,
          this.#uflag
        ];
      }
      #partsToRegExp(dot) {
        return this.#parts.map((p) => {
          if (typeof p === "string") {
            throw new Error("string type in extglob ast??");
          }
          const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot);
          this.#uflag = this.#uflag || uflag;
          return re;
        }).filter((p) => !(this.isStart() && this.isEnd()) || !!p).join("|");
      }
      static #parseGlob(glob, hasMagic, noEmpty = false) {
        let escaping = false;
        let re = "";
        let uflag = false;
        for (let i = 0; i < glob.length; i++) {
          const c = glob.charAt(i);
          if (escaping) {
            escaping = false;
            re += (reSpecials.has(c) ? "\\" : "") + c;
            continue;
          }
          if (c === "\\") {
            if (i === glob.length - 1) {
              re += "\\\\";
            } else {
              escaping = true;
            }
            continue;
          }
          if (c === "[") {
            const [src, needUflag, consumed, magic] = (0, brace_expressions_js_1.parseClass)(glob, i);
            if (consumed) {
              re += src;
              uflag = uflag || needUflag;
              i += consumed - 1;
              hasMagic = hasMagic || magic;
              continue;
            }
          }
          if (c === "*") {
            if (noEmpty && glob === "*")
              re += starNoEmpty;
            else
              re += star;
            hasMagic = true;
            continue;
          }
          if (c === "?") {
            re += qmark;
            hasMagic = true;
            continue;
          }
          re += regExpEscape(c);
        }
        return [re, (0, unescape_js_1.unescape)(glob), !!hasMagic, uflag];
      }
    };
    exports2.AST = AST;
  }
});

// node_modules/minimatch/dist/commonjs/escape.js
var require_escape = __commonJS({
  "node_modules/minimatch/dist/commonjs/escape.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.escape = void 0;
    var escape = (s, { windowsPathsNoEscape = false } = {}) => {
      return windowsPathsNoEscape ? s.replace(/[?*()[\]]/g, "[$&]") : s.replace(/[?*()[\]\\]/g, "\\$&");
    };
    exports2.escape = escape;
  }
});

// node_modules/minimatch/dist/commonjs/index.js
var require_commonjs = __commonJS({
  "node_modules/minimatch/dist/commonjs/index.js"(exports2) {
    "use strict";
    var __importDefault = exports2 && exports2.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.unescape = exports2.escape = exports2.AST = exports2.Minimatch = exports2.match = exports2.makeRe = exports2.braceExpand = exports2.defaults = exports2.filter = exports2.GLOBSTAR = exports2.sep = exports2.minimatch = void 0;
    var brace_expansion_1 = __importDefault(require_brace_expansion());
    var assert_valid_pattern_js_1 = require_assert_valid_pattern();
    var ast_js_1 = require_ast();
    var escape_js_1 = require_escape();
    var unescape_js_1 = require_unescape();
    var minimatch = (p, pattern, options = {}) => {
      (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);
      if (!options.nocomment && pattern.charAt(0) === "#") {
        return false;
      }
      return new Minimatch(pattern, options).match(p);
    };
    exports2.minimatch = minimatch;
    var starDotExtRE = /^\*+([^+@!?\*\[\(]*)$/;
    var starDotExtTest = (ext2) => (f) => !f.startsWith(".") && f.endsWith(ext2);
    var starDotExtTestDot = (ext2) => (f) => f.endsWith(ext2);
    var starDotExtTestNocase = (ext2) => {
      ext2 = ext2.toLowerCase();
      return (f) => !f.startsWith(".") && f.toLowerCase().endsWith(ext2);
    };
    var starDotExtTestNocaseDot = (ext2) => {
      ext2 = ext2.toLowerCase();
      return (f) => f.toLowerCase().endsWith(ext2);
    };
    var starDotStarRE = /^\*+\.\*+$/;
    var starDotStarTest = (f) => !f.startsWith(".") && f.includes(".");
    var starDotStarTestDot = (f) => f !== "." && f !== ".." && f.includes(".");
    var dotStarRE = /^\.\*+$/;
    var dotStarTest = (f) => f !== "." && f !== ".." && f.startsWith(".");
    var starRE = /^\*+$/;
    var starTest = (f) => f.length !== 0 && !f.startsWith(".");
    var starTestDot = (f) => f.length !== 0 && f !== "." && f !== "..";
    var qmarksRE = /^\?+([^+@!?\*\[\(]*)?$/;
    var qmarksTestNocase = ([$0, ext2 = ""]) => {
      const noext = qmarksTestNoExt([$0]);
      if (!ext2)
        return noext;
      ext2 = ext2.toLowerCase();
      return (f) => noext(f) && f.toLowerCase().endsWith(ext2);
    };
    var qmarksTestNocaseDot = ([$0, ext2 = ""]) => {
      const noext = qmarksTestNoExtDot([$0]);
      if (!ext2)
        return noext;
      ext2 = ext2.toLowerCase();
      return (f) => noext(f) && f.toLowerCase().endsWith(ext2);
    };
    var qmarksTestDot = ([$0, ext2 = ""]) => {
      const noext = qmarksTestNoExtDot([$0]);
      return !ext2 ? noext : (f) => noext(f) && f.endsWith(ext2);
    };
    var qmarksTest = ([$0, ext2 = ""]) => {
      const noext = qmarksTestNoExt([$0]);
      return !ext2 ? noext : (f) => noext(f) && f.endsWith(ext2);
    };
    var qmarksTestNoExt = ([$0]) => {
      const len = $0.length;
      return (f) => f.length === len && !f.startsWith(".");
    };
    var qmarksTestNoExtDot = ([$0]) => {
      const len = $0.length;
      return (f) => f.length === len && f !== "." && f !== "..";
    };
    var defaultPlatform = typeof process === "object" && process ? typeof process.env === "object" && process.env && process.env.__MINIMATCH_TESTING_PLATFORM__ || process.platform : "posix";
    var path = {
      win32: { sep: "\\" },
      posix: { sep: "/" }
    };
    exports2.sep = defaultPlatform === "win32" ? path.win32.sep : path.posix.sep;
    exports2.minimatch.sep = exports2.sep;
    exports2.GLOBSTAR = Symbol("globstar **");
    exports2.minimatch.GLOBSTAR = exports2.GLOBSTAR;
    var qmark = "[^/]";
    var star = qmark + "*?";
    var twoStarDot = "(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?";
    var twoStarNoDot = "(?:(?!(?:\\/|^)\\.).)*?";
    var filter = (pattern, options = {}) => (p) => (0, exports2.minimatch)(p, pattern, options);
    exports2.filter = filter;
    exports2.minimatch.filter = exports2.filter;
    var ext = (a, b = {}) => Object.assign({}, a, b);
    var defaults = (def) => {
      if (!def || typeof def !== "object" || !Object.keys(def).length) {
        return exports2.minimatch;
      }
      const orig = exports2.minimatch;
      const m = (p, pattern, options = {}) => orig(p, pattern, ext(def, options));
      return Object.assign(m, {
        Minimatch: class Minimatch extends orig.Minimatch {
          constructor(pattern, options = {}) {
            super(pattern, ext(def, options));
          }
          static defaults(options) {
            return orig.defaults(ext(def, options)).Minimatch;
          }
        },
        AST: class AST extends orig.AST {
          /* c8 ignore start */
          constructor(type, parent, options = {}) {
            super(type, parent, ext(def, options));
          }
          /* c8 ignore stop */
          static fromGlob(pattern, options = {}) {
            return orig.AST.fromGlob(pattern, ext(def, options));
          }
        },
        unescape: (s, options = {}) => orig.unescape(s, ext(def, options)),
        escape: (s, options = {}) => orig.escape(s, ext(def, options)),
        filter: (pattern, options = {}) => orig.filter(pattern, ext(def, options)),
        defaults: (options) => orig.defaults(ext(def, options)),
        makeRe: (pattern, options = {}) => orig.makeRe(pattern, ext(def, options)),
        braceExpand: (pattern, options = {}) => orig.braceExpand(pattern, ext(def, options)),
        match: (list, pattern, options = {}) => orig.match(list, pattern, ext(def, options)),
        sep: orig.sep,
        GLOBSTAR: exports2.GLOBSTAR
      });
    };
    exports2.defaults = defaults;
    exports2.minimatch.defaults = exports2.defaults;
    var braceExpand = (pattern, options = {}) => {
      (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);
      if (options.nobrace || !/\{(?:(?!\{).)*\}/.test(pattern)) {
        return [pattern];
      }
      return (0, brace_expansion_1.default)(pattern);
    };
    exports2.braceExpand = braceExpand;
    exports2.minimatch.braceExpand = exports2.braceExpand;
    var makeRe = (pattern, options = {}) => new Minimatch(pattern, options).makeRe();
    exports2.makeRe = makeRe;
    exports2.minimatch.makeRe = exports2.makeRe;
    var match = (list, pattern, options = {}) => {
      const mm = new Minimatch(pattern, options);
      list = list.filter((f) => mm.match(f));
      if (mm.options.nonull && !list.length) {
        list.push(pattern);
      }
      return list;
    };
    exports2.match = match;
    exports2.minimatch.match = exports2.match;
    var globMagic = /[?*]|[+@!]\(.*?\)|\[|\]/;
    var regExpEscape = (s) => s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    var Minimatch = class {
      options;
      set;
      pattern;
      windowsPathsNoEscape;
      nonegate;
      negate;
      comment;
      empty;
      preserveMultipleSlashes;
      partial;
      globSet;
      globParts;
      nocase;
      isWindows;
      platform;
      windowsNoMagicRoot;
      regexp;
      constructor(pattern, options = {}) {
        (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);
        options = options || {};
        this.options = options;
        this.pattern = pattern;
        this.platform = options.platform || defaultPlatform;
        this.isWindows = this.platform === "win32";
        this.windowsPathsNoEscape = !!options.windowsPathsNoEscape || options.allowWindowsEscape === false;
        if (this.windowsPathsNoEscape) {
          this.pattern = this.pattern.replace(/\\/g, "/");
        }
        this.preserveMultipleSlashes = !!options.preserveMultipleSlashes;
        this.regexp = null;
        this.negate = false;
        this.nonegate = !!options.nonegate;
        this.comment = false;
        this.empty = false;
        this.partial = !!options.partial;
        this.nocase = !!this.options.nocase;
        this.windowsNoMagicRoot = options.windowsNoMagicRoot !== void 0 ? options.windowsNoMagicRoot : !!(this.isWindows && this.nocase);
        this.globSet = [];
        this.globParts = [];
        this.set = [];
        this.make();
      }
      hasMagic() {
        if (this.options.magicalBraces && this.set.length > 1) {
          return true;
        }
        for (const pattern of this.set) {
          for (const part of pattern) {
            if (typeof part !== "string")
              return true;
          }
        }
        return false;
      }
      debug(..._) {
      }
      make() {
        const pattern = this.pattern;
        const options = this.options;
        if (!options.nocomment && pattern.charAt(0) === "#") {
          this.comment = true;
          return;
        }
        if (!pattern) {
          this.empty = true;
          return;
        }
        this.parseNegate();
        this.globSet = [...new Set(this.braceExpand())];
        if (options.debug) {
          this.debug = (...args) => console.error(...args);
        }
        this.debug(this.pattern, this.globSet);
        const rawGlobParts = this.globSet.map((s) => this.slashSplit(s));
        this.globParts = this.preprocess(rawGlobParts);
        this.debug(this.pattern, this.globParts);
        let set = this.globParts.map((s, _, __) => {
          if (this.isWindows && this.windowsNoMagicRoot) {
            const isUNC = s[0] === "" && s[1] === "" && (s[2] === "?" || !globMagic.test(s[2])) && !globMagic.test(s[3]);
            const isDrive = /^[a-z]:/i.test(s[0]);
            if (isUNC) {
              return [...s.slice(0, 4), ...s.slice(4).map((ss) => this.parse(ss))];
            } else if (isDrive) {
              return [s[0], ...s.slice(1).map((ss) => this.parse(ss))];
            }
          }
          return s.map((ss) => this.parse(ss));
        });
        this.debug(this.pattern, set);
        this.set = set.filter((s) => s.indexOf(false) === -1);
        if (this.isWindows) {
          for (let i = 0; i < this.set.length; i++) {
            const p = this.set[i];
            if (p[0] === "" && p[1] === "" && this.globParts[i][2] === "?" && typeof p[3] === "string" && /^[a-z]:$/i.test(p[3])) {
              p[2] = "?";
            }
          }
        }
        this.debug(this.pattern, this.set);
      }
      // various transforms to equivalent pattern sets that are
      // faster to process in a filesystem walk.  The goal is to
      // eliminate what we can, and push all ** patterns as far
      // to the right as possible, even if it increases the number
      // of patterns that we have to process.
      preprocess(globParts) {
        if (this.options.noglobstar) {
          for (let i = 0; i < globParts.length; i++) {
            for (let j = 0; j < globParts[i].length; j++) {
              if (globParts[i][j] === "**") {
                globParts[i][j] = "*";
              }
            }
          }
        }
        const { optimizationLevel = 1 } = this.options;
        if (optimizationLevel >= 2) {
          globParts = this.firstPhasePreProcess(globParts);
          globParts = this.secondPhasePreProcess(globParts);
        } else if (optimizationLevel >= 1) {
          globParts = this.levelOneOptimize(globParts);
        } else {
          globParts = this.adjascentGlobstarOptimize(globParts);
        }
        return globParts;
      }
      // just get rid of adjascent ** portions
      adjascentGlobstarOptimize(globParts) {
        return globParts.map((parts) => {
          let gs = -1;
          while (-1 !== (gs = parts.indexOf("**", gs + 1))) {
            let i = gs;
            while (parts[i + 1] === "**") {
              i++;
            }
            if (i !== gs) {
              parts.splice(gs, i - gs);
            }
          }
          return parts;
        });
      }
      // get rid of adjascent ** and resolve .. portions
      levelOneOptimize(globParts) {
        return globParts.map((parts) => {
          parts = parts.reduce((set, part) => {
            const prev = set[set.length - 1];
            if (part === "**" && prev === "**") {
              return set;
            }
            if (part === "..") {
              if (prev && prev !== ".." && prev !== "." && prev !== "**") {
                set.pop();
                return set;
              }
            }
            set.push(part);
            return set;
          }, []);
          return parts.length === 0 ? [""] : parts;
        });
      }
      levelTwoFileOptimize(parts) {
        if (!Array.isArray(parts)) {
          parts = this.slashSplit(parts);
        }
        let didSomething = false;
        do {
          didSomething = false;
          if (!this.preserveMultipleSlashes) {
            for (let i = 1; i < parts.length - 1; i++) {
              const p = parts[i];
              if (i === 1 && p === "" && parts[0] === "")
                continue;
              if (p === "." || p === "") {
                didSomething = true;
                parts.splice(i, 1);
                i--;
              }
            }
            if (parts[0] === "." && parts.length === 2 && (parts[1] === "." || parts[1] === "")) {
              didSomething = true;
              parts.pop();
            }
          }
          let dd = 0;
          while (-1 !== (dd = parts.indexOf("..", dd + 1))) {
            const p = parts[dd - 1];
            if (p && p !== "." && p !== ".." && p !== "**") {
              didSomething = true;
              parts.splice(dd - 1, 2);
              dd -= 2;
            }
          }
        } while (didSomething);
        return parts.length === 0 ? [""] : parts;
      }
      // First phase: single-pattern processing
      // <pre> is 1 or more portions
      // <rest> is 1 or more portions
      // <p> is any portion other than ., .., '', or **
      // <e> is . or ''
      //
      // **/.. is *brutal* for filesystem walking performance, because
      // it effectively resets the recursive walk each time it occurs,
      // and ** cannot be reduced out by a .. pattern part like a regexp
      // or most strings (other than .., ., and '') can be.
      //
      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}
      // <pre>/<e>/<rest> -> <pre>/<rest>
      // <pre>/<p>/../<rest> -> <pre>/<rest>
      // **/**/<rest> -> **/<rest>
      //
      // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow
      // this WOULD be allowed if ** did follow symlinks, or * didn't
      firstPhasePreProcess(globParts) {
        let didSomething = false;
        do {
          didSomething = false;
          for (let parts of globParts) {
            let gs = -1;
            while (-1 !== (gs = parts.indexOf("**", gs + 1))) {
              let gss = gs;
              while (parts[gss + 1] === "**") {
                gss++;
              }
              if (gss > gs) {
                parts.splice(gs + 1, gss - gs);
              }
              let next = parts[gs + 1];
              const p = parts[gs + 2];
              const p2 = parts[gs + 3];
              if (next !== "..")
                continue;
              if (!p || p === "." || p === ".." || !p2 || p2 === "." || p2 === "..") {
                continue;
              }
              didSomething = true;
              parts.splice(gs, 1);
              const other = parts.slice(0);
              other[gs] = "**";
              globParts.push(other);
              gs--;
            }
            if (!this.preserveMultipleSlashes) {
              for (let i = 1; i < parts.length - 1; i++) {
                const p = parts[i];
                if (i === 1 && p === "" && parts[0] === "")
                  continue;
                if (p === "." || p === "") {
                  didSomething = true;
                  parts.splice(i, 1);
                  i--;
                }
              }
              if (parts[0] === "." && parts.length === 2 && (parts[1] === "." || parts[1] === "")) {
                didSomething = true;
                parts.pop();
              }
            }
            let dd = 0;
            while (-1 !== (dd = parts.indexOf("..", dd + 1))) {
              const p = parts[dd - 1];
              if (p && p !== "." && p !== ".." && p !== "**") {
                didSomething = true;
                const needDot = dd === 1 && parts[dd + 1] === "**";
                const splin = needDot ? ["."] : [];
                parts.splice(dd - 1, 2, ...splin);
                if (parts.length === 0)
                  parts.push("");
                dd -= 2;
              }
            }
          }
        } while (didSomething);
        return globParts;
      }
      // second phase: multi-pattern dedupes
      // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>
      // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>
      // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>
      //
      // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>
      // ^-- not valid because ** doens't follow symlinks
      secondPhasePreProcess(globParts) {
        for (let i = 0; i < globParts.length - 1; i++) {
          for (let j = i + 1; j < globParts.length; j++) {
            const matched = this.partsMatch(globParts[i], globParts[j], !this.preserveMultipleSlashes);
            if (matched) {
              globParts[i] = [];
              globParts[j] = matched;
              break;
            }
          }
        }
        return globParts.filter((gs) => gs.length);
      }
      partsMatch(a, b, emptyGSMatch = false) {
        let ai = 0;
        let bi = 0;
        let result = [];
        let which = "";
        while (ai < a.length && bi < b.length) {
          if (a[ai] === b[bi]) {
            result.push(which === "b" ? b[bi] : a[ai]);
            ai++;
            bi++;
          } else if (emptyGSMatch && a[ai] === "**" && b[bi] === a[ai + 1]) {
            result.push(a[ai]);
            ai++;
          } else if (emptyGSMatch && b[bi] === "**" && a[ai] === b[bi + 1]) {
            result.push(b[bi]);
            bi++;
          } else if (a[ai] === "*" && b[bi] && (this.options.dot || !b[bi].startsWith(".")) && b[bi] !== "**") {
            if (which === "b")
              return false;
            which = "a";
            result.push(a[ai]);
            ai++;
            bi++;
          } else if (b[bi] === "*" && a[ai] && (this.options.dot || !a[ai].startsWith(".")) && a[ai] !== "**") {
            if (which === "a")
              return false;
            which = "b";
            result.push(b[bi]);
            ai++;
            bi++;
          } else {
            return false;
          }
        }
        return a.length === b.length && result;
      }
      parseNegate() {
        if (this.nonegate)
          return;
        const pattern = this.pattern;
        let negate = false;
        let negateOffset = 0;
        for (let i = 0; i < pattern.length && pattern.charAt(i) === "!"; i++) {
          negate = !negate;
          negateOffset++;
        }
        if (negateOffset)
          this.pattern = pattern.slice(negateOffset);
        this.negate = negate;
      }
      // set partial to true to test if, for example,
      // "/a/b" matches the start of "/*/b/*/d"
      // Partial means, if you run out of file before you run
      // out of pattern, then that's fine, as long as all
      // the parts match.
      matchOne(file, pattern, partial = false) {
        const options = this.options;
        if (this.isWindows) {
          const fileDrive = typeof file[0] === "string" && /^[a-z]:$/i.test(file[0]);
          const fileUNC = !fileDrive && file[0] === "" && file[1] === "" && file[2] === "?" && /^[a-z]:$/i.test(file[3]);
          const patternDrive = typeof pattern[0] === "string" && /^[a-z]:$/i.test(pattern[0]);
          const patternUNC = !patternDrive && pattern[0] === "" && pattern[1] === "" && pattern[2] === "?" && typeof pattern[3] === "string" && /^[a-z]:$/i.test(pattern[3]);
          const fdi = fileUNC ? 3 : fileDrive ? 0 : void 0;
          const pdi = patternUNC ? 3 : patternDrive ? 0 : void 0;
          if (typeof fdi === "number" && typeof pdi === "number") {
            const [fd, pd] = [file[fdi], pattern[pdi]];
            if (fd.toLowerCase() === pd.toLowerCase()) {
              pattern[pdi] = fd;
              if (pdi > fdi) {
                pattern = pattern.slice(pdi);
              } else if (fdi > pdi) {
                file = file.slice(fdi);
              }
            }
          }
        }
        const { optimizationLevel = 1 } = this.options;
        if (optimizationLevel >= 2) {
          file = this.levelTwoFileOptimize(file);
        }
        this.debug("matchOne", this, { file, pattern });
        this.debug("matchOne", file.length, pattern.length);
        for (var fi = 0, pi = 0, fl = file.length, pl = pattern.length; fi < fl && pi < pl; fi++, pi++) {
          this.debug("matchOne loop");
          var p = pattern[pi];
          var f = file[fi];
          this.debug(pattern, p, f);
          if (p === false) {
            return false;
          }
          if (p === exports2.GLOBSTAR) {
            this.debug("GLOBSTAR", [pattern, p, f]);
            var fr = fi;
            var pr = pi + 1;
            if (pr === pl) {
              this.debug("** at the end");
              for (; fi < fl; fi++) {
                if (file[fi] === "." || file[fi] === ".." || !options.dot && file[fi].charAt(0) === ".")
                  return false;
              }
              return true;
            }
            while (fr < fl) {
              var swallowee = file[fr];
              this.debug("\nglobstar while", file, fr, pattern, pr, swallowee);
              if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {
                this.debug("globstar found match!", fr, fl, swallowee);
                return true;
              } else {
                if (swallowee === "." || swallowee === ".." || !options.dot && swallowee.charAt(0) === ".") {
                  this.debug("dot detected!", file, fr, pattern, pr);
                  break;
                }
                this.debug("globstar swallow a segment, and continue");
                fr++;
              }
            }
            if (partial) {
              this.debug("\n>>> no match, partial?", file, fr, pattern, pr);
              if (fr === fl) {
                return true;
              }
            }
            return false;
          }
          let hit;
          if (typeof p === "string") {
            hit = f === p;
            this.debug("string match", p, f, hit);
          } else {
            hit = p.test(f);
            this.debug("pattern match", p, f, hit);
          }
          if (!hit)
            return false;
        }
        if (fi === fl && pi === pl) {
          return true;
        } else if (fi === fl) {
          return partial;
        } else if (pi === pl) {
          return fi === fl - 1 && file[fi] === "";
        } else {
          throw new Error("wtf?");
        }
      }
      braceExpand() {
        return (0, exports2.braceExpand)(this.pattern, this.options);
      }
      parse(pattern) {
        (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);
        const options = this.options;
        if (pattern === "**")
          return exports2.GLOBSTAR;
        if (pattern === "")
          return "";
        let m;
        let fastTest = null;
        if (m = pattern.match(starRE)) {
          fastTest = options.dot ? starTestDot : starTest;
        } else if (m = pattern.match(starDotExtRE)) {
          fastTest = (options.nocase ? options.dot ? starDotExtTestNocaseDot : starDotExtTestNocase : options.dot ? starDotExtTestDot : starDotExtTest)(m[1]);
        } else if (m = pattern.match(qmarksRE)) {
          fastTest = (options.nocase ? options.dot ? qmarksTestNocaseDot : qmarksTestNocase : options.dot ? qmarksTestDot : qmarksTest)(m);
        } else if (m = pattern.match(starDotStarRE)) {
          fastTest = options.dot ? starDotStarTestDot : starDotStarTest;
        } else if (m = pattern.match(dotStarRE)) {
          fastTest = dotStarTest;
        }
        const re = ast_js_1.AST.fromGlob(pattern, this.options).toMMPattern();
        if (fastTest && typeof re === "object") {
          Reflect.defineProperty(re, "test", { value: fastTest });
        }
        return re;
      }
      makeRe() {
        if (this.regexp || this.regexp === false)
          return this.regexp;
        const set = this.set;
        if (!set.length) {
          this.regexp = false;
          return this.regexp;
        }
        const options = this.options;
        const twoStar = options.noglobstar ? star : options.dot ? twoStarDot : twoStarNoDot;
        const flags = new Set(options.nocase ? ["i"] : []);
        let re = set.map((pattern) => {
          const pp = pattern.map((p) => {
            if (p instanceof RegExp) {
              for (const f of p.flags.split(""))
                flags.add(f);
            }
            return typeof p === "string" ? regExpEscape(p) : p === exports2.GLOBSTAR ? exports2.GLOBSTAR : p._src;
          });
          pp.forEach((p, i) => {
            const next = pp[i + 1];
            const prev = pp[i - 1];
            if (p !== exports2.GLOBSTAR || prev === exports2.GLOBSTAR) {
              return;
            }
            if (prev === void 0) {
              if (next !== void 0 && next !== exports2.GLOBSTAR) {
                pp[i + 1] = "(?:\\/|" + twoStar + "\\/)?" + next;
              } else {
                pp[i] = twoStar;
              }
            } else if (next === void 0) {
              pp[i - 1] = prev + "(?:\\/|" + twoStar + ")?";
            } else if (next !== exports2.GLOBSTAR) {
              pp[i - 1] = prev + "(?:\\/|\\/" + twoStar + "\\/)" + next;
              pp[i + 1] = exports2.GLOBSTAR;
            }
          });
          return pp.filter((p) => p !== exports2.GLOBSTAR).join("/");
        }).join("|");
        const [open, close] = set.length > 1 ? ["(?:", ")"] : ["", ""];
        re = "^" + open + re + close + "$";
        if (this.negate)
          re = "^(?!" + re + ").+$";
        try {
          this.regexp = new RegExp(re, [...flags].join(""));
        } catch (ex) {
          this.regexp = false;
        }
        return this.regexp;
      }
      slashSplit(p) {
        if (this.preserveMultipleSlashes) {
          return p.split("/");
        } else if (this.isWindows && /^\/\/[^\/]+/.test(p)) {
          return ["", ...p.split(/\/+/)];
        } else {
          return p.split(/\/+/);
        }
      }
      match(f, partial = this.partial) {
        this.debug("match", f, this.pattern);
        if (this.comment) {
          return false;
        }
        if (this.empty) {
          return f === "";
        }
        if (f === "/" && partial) {
          return true;
        }
        const options = this.options;
        if (this.isWindows) {
          f = f.split("\\").join("/");
        }
        const ff = this.slashSplit(f);
        this.debug(this.pattern, "split", ff);
        const set = this.set;
        this.debug(this.pattern, "set", set);
        let filename = ff[ff.length - 1];
        if (!filename) {
          for (let i = ff.length - 2; !filename && i >= 0; i--) {
            filename = ff[i];
          }
        }
        for (let i = 0; i < set.length; i++) {
          const pattern = set[i];
          let file = ff;
          if (options.matchBase && pattern.length === 1) {
            file = [filename];
          }
          const hit = this.matchOne(file, pattern, partial);
          if (hit) {
            if (options.flipNegate) {
              return true;
            }
            return !this.negate;
          }
        }
        if (options.flipNegate) {
          return false;
        }
        return this.negate;
      }
      static defaults(def) {
        return exports2.minimatch.defaults(def).Minimatch;
      }
    };
    exports2.Minimatch = Minimatch;
    var ast_js_2 = require_ast();
    Object.defineProperty(exports2, "AST", { enumerable: true, get: function() {
      return ast_js_2.AST;
    } });
    var escape_js_2 = require_escape();
    Object.defineProperty(exports2, "escape", { enumerable: true, get: function() {
      return escape_js_2.escape;
    } });
    var unescape_js_2 = require_unescape();
    Object.defineProperty(exports2, "unescape", { enumerable: true, get: function() {
      return unescape_js_2.unescape;
    } });
    exports2.minimatch.AST = ast_js_1.AST;
    exports2.minimatch.Minimatch = Minimatch;
    exports2.minimatch.escape = escape_js_1.escape;
    exports2.minimatch.unescape = unescape_js_1.unescape;
  }
});

// node_modules/lru-cache/dist/commonjs/index.js
var require_commonjs2 = __commonJS({
  "node_modules/lru-cache/dist/commonjs/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.LRUCache = void 0;
    var perf = typeof performance === "object" && performance && typeof performance.now === "function" ? performance : Date;
    var warned = /* @__PURE__ */ new Set();
    var PROCESS = typeof process === "object" && !!process ? process : {};
    var emitWarning = (msg, type, code, fn) => {
      typeof PROCESS.emitWarning === "function" ? PROCESS.emitWarning(msg, type, code, fn) : console.error(`[${code}] ${type}: ${msg}`);
    };
    var AC = globalThis.AbortController;
    var AS = globalThis.AbortSignal;
    if (typeof AC === "undefined") {
      AS = class AbortSignal {
        onabort;
        _onabort = [];
        reason;
        aborted = false;
        addEventListener(_, fn) {
          this._onabort.push(fn);
        }
      };
      AC = class AbortController {
        constructor() {
          warnACPolyfill();
        }
        signal = new AS();
        abort(reason) {
          if (this.signal.aborted)
            return;
          this.signal.reason = reason;
          this.signal.aborted = true;
          for (const fn of this.signal._onabort) {
            fn(reason);
          }
          this.signal.onabort?.(reason);
        }
      };
      let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== "1";
      const warnACPolyfill = () => {
        if (!printACPolyfillWarning)
          return;
        printACPolyfillWarning = false;
        emitWarning("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.", "NO_ABORT_CONTROLLER", "ENOTSUP", warnACPolyfill);
      };
    }
    var shouldWarn = (code) => !warned.has(code);
    var TYPE = Symbol("type");
    var isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);
    var getUintArray = (max) => !isPosInt(max) ? null : max <= Math.pow(2, 8) ? Uint8Array : max <= Math.pow(2, 16) ? Uint16Array : max <= Math.pow(2, 32) ? Uint32Array : max <= Number.MAX_SAFE_INTEGER ? ZeroArray : null;
    var ZeroArray = class extends Array {
      constructor(size) {
        super(size);
        this.fill(0);
      }
    };
    var Stack = class _Stack {
      heap;
      length;
      // private constructor
      static #constructing = false;
      static create(max) {
        const HeapCls = getUintArray(max);
        if (!HeapCls)
          return [];
        _Stack.#constructing = true;
        const s = new _Stack(max, HeapCls);
        _Stack.#constructing = false;
        return s;
      }
      constructor(max, HeapCls) {
        if (!_Stack.#constructing) {
          throw new TypeError("instantiate Stack using Stack.create(n)");
        }
        this.heap = new HeapCls(max);
        this.length = 0;
      }
      push(n) {
        this.heap[this.length++] = n;
      }
      pop() {
        return this.heap[--this.length];
      }
    };
    var LRUCache = class _LRUCache {
      // options that cannot be changed without disaster
      #max;
      #maxSize;
      #dispose;
      #disposeAfter;
      #fetchMethod;
      #memoMethod;
      /**
       * {@link LRUCache.OptionsBase.ttl}
       */
      ttl;
      /**
       * {@link LRUCache.OptionsBase.ttlResolution}
       */
      ttlResolution;
      /**
       * {@link LRUCache.OptionsBase.ttlAutopurge}
       */
      ttlAutopurge;
      /**
       * {@link LRUCache.OptionsBase.updateAgeOnGet}
       */
      updateAgeOnGet;
      /**
       * {@link LRUCache.OptionsBase.updateAgeOnHas}
       */
      updateAgeOnHas;
      /**
       * {@link LRUCache.OptionsBase.allowStale}
       */
      allowStale;
      /**
       * {@link LRUCache.OptionsBase.noDisposeOnSet}
       */
      noDisposeOnSet;
      /**
       * {@link LRUCache.OptionsBase.noUpdateTTL}
       */
      noUpdateTTL;
      /**
       * {@link LRUCache.OptionsBase.maxEntrySize}
       */
      maxEntrySize;
      /**
       * {@link LRUCache.OptionsBase.sizeCalculation}
       */
      sizeCalculation;
      /**
       * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}
       */
      noDeleteOnFetchRejection;
      /**
       * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}
       */
      noDeleteOnStaleGet;
      /**
       * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}
       */
      allowStaleOnFetchAbort;
      /**
       * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}
       */
      allowStaleOnFetchRejection;
      /**
       * {@link LRUCache.OptionsBase.ignoreFetchAbort}
       */
      ignoreFetchAbort;
      // computed properties
      #size;
      #calculatedSize;
      #keyMap;
      #keyList;
      #valList;
      #next;
      #prev;
      #head;
      #tail;
      #free;
      #disposed;
      #sizes;
      #starts;
      #ttls;
      #hasDispose;
      #hasFetchMethod;
      #hasDisposeAfter;
      /**
       * Do not call this method unless you need to inspect the
       * inner workings of the cache.  If anything returned by this
       * object is modified in any way, strange breakage may occur.
       *
       * These fields are private for a reason!
       *
       * @internal
       */
      static unsafeExposeInternals(c) {
        return {
          // properties
          starts: c.#starts,
          ttls: c.#ttls,
          sizes: c.#sizes,
          keyMap: c.#keyMap,
          keyList: c.#keyList,
          valList: c.#valList,
          next: c.#next,
          prev: c.#prev,
          get head() {
            return c.#head;
          },
          get tail() {
            return c.#tail;
          },
          free: c.#free,
          // methods
          isBackgroundFetch: (p) => c.#isBackgroundFetch(p),
          backgroundFetch: (k, index, options, context) => c.#backgroundFetch(k, index, options, context),
          moveToTail: (index) => c.#moveToTail(index),
          indexes: (options) => c.#indexes(options),
          rindexes: (options) => c.#rindexes(options),
          isStale: (index) => c.#isStale(index)
        };
      }
      // Protected read-only members
      /**
       * {@link LRUCache.OptionsBase.max} (read-only)
       */
      get max() {
        return this.#max;
      }
      /**
       * {@link LRUCache.OptionsBase.maxSize} (read-only)
       */
      get maxSize() {
        return this.#maxSize;
      }
      /**
       * The total computed size of items in the cache (read-only)
       */
      get calculatedSize() {
        return this.#calculatedSize;
      }
      /**
       * The number of items stored in the cache (read-only)
       */
      get size() {
        return this.#size;
      }
      /**
       * {@link LRUCache.OptionsBase.fetchMethod} (read-only)
       */
      get fetchMethod() {
        return this.#fetchMethod;
      }
      get memoMethod() {
        return this.#memoMethod;
      }
      /**
       * {@link LRUCache.OptionsBase.dispose} (read-only)
       */
      get dispose() {
        return this.#dispose;
      }
      /**
       * {@link LRUCache.OptionsBase.disposeAfter} (read-only)
       */
      get disposeAfter() {
        return this.#disposeAfter;
      }
      constructor(options) {
        const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, memoMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort } = options;
        if (max !== 0 && !isPosInt(max)) {
          throw new TypeError("max option must be a nonnegative integer");
        }
        const UintArray = max ? getUintArray(max) : Array;
        if (!UintArray) {
          throw new Error("invalid max value: " + max);
        }
        this.#max = max;
        this.#maxSize = maxSize;
        this.maxEntrySize = maxEntrySize || this.#maxSize;
        this.sizeCalculation = sizeCalculation;
        if (this.sizeCalculation) {
          if (!this.#maxSize && !this.maxEntrySize) {
            throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");
          }
          if (typeof this.sizeCalculation !== "function") {
            throw new TypeError("sizeCalculation set to non-function");
          }
        }
        if (memoMethod !== void 0 && typeof memoMethod !== "function") {
          throw new TypeError("memoMethod must be a function if defined");
        }
        this.#memoMethod = memoMethod;
        if (fetchMethod !== void 0 && typeof fetchMethod !== "function") {
          throw new TypeError("fetchMethod must be a function if specified");
        }
        this.#fetchMethod = fetchMethod;
        this.#hasFetchMethod = !!fetchMethod;
        this.#keyMap = /* @__PURE__ */ new Map();
        this.#keyList = new Array(max).fill(void 0);
        this.#valList = new Array(max).fill(void 0);
        this.#next = new UintArray(max);
        this.#prev = new UintArray(max);
        this.#head = 0;
        this.#tail = 0;
        this.#free = Stack.create(max);
        this.#size = 0;
        this.#calculatedSize = 0;
        if (typeof dispose === "function") {
          this.#dispose = dispose;
        }
        if (typeof disposeAfter === "function") {
          this.#disposeAfter = disposeAfter;
          this.#disposed = [];
        } else {
          this.#disposeAfter = void 0;
          this.#disposed = void 0;
        }
        this.#hasDispose = !!this.#dispose;
        this.#hasDisposeAfter = !!this.#disposeAfter;
        this.noDisposeOnSet = !!noDisposeOnSet;
        this.noUpdateTTL = !!noUpdateTTL;
        this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;
        this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;
        this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;
        this.ignoreFetchAbort = !!ignoreFetchAbort;
        if (this.maxEntrySize !== 0) {
          if (this.#maxSize !== 0) {
            if (!isPosInt(this.#maxSize)) {
              throw new TypeError("maxSize must be a positive integer if specified");
            }
          }
          if (!isPosInt(this.maxEntrySize)) {
            throw new TypeError("maxEntrySize must be a positive integer if specified");
          }
          this.#initializeSizeTracking();
        }
        this.allowStale = !!allowStale;
        this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;
        this.updateAgeOnGet = !!updateAgeOnGet;
        this.updateAgeOnHas = !!updateAgeOnHas;
        this.ttlResolution = isPosInt(ttlResolution) || ttlResolution === 0 ? ttlResolution : 1;
        this.ttlAutopurge = !!ttlAutopurge;
        this.ttl = ttl || 0;
        if (this.ttl) {
          if (!isPosInt(this.ttl)) {
            throw new TypeError("ttl must be a positive integer if specified");
          }
          this.#initializeTTLTracking();
        }
        if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {
          throw new TypeError("At least one of max, maxSize, or ttl is required");
        }
        if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {
          const code = "LRU_CACHE_UNBOUNDED";
          if (shouldWarn(code)) {
            warned.add(code);
            const msg = "TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.";
            emitWarning(msg, "UnboundedCacheWarning", code, _LRUCache);
          }
        }
      }
      /**
       * Return the number of ms left in the item's TTL. If item is not in cache,
       * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.
       */
      getRemainingTTL(key) {
        return this.#keyMap.has(key) ? Infinity : 0;
      }
      #initializeTTLTracking() {
        const ttls = new ZeroArray(this.#max);
        const starts = new ZeroArray(this.#max);
        this.#ttls = ttls;
        this.#starts = starts;
        this.#setItemTTL = (index, ttl, start = perf.now()) => {
          starts[index] = ttl !== 0 ? start : 0;
          ttls[index] = ttl;
          if (ttl !== 0 && this.ttlAutopurge) {
            const t = setTimeout(() => {
              if (this.#isStale(index)) {
                this.#delete(this.#keyList[index], "expire");
              }
            }, ttl + 1);
            if (t.unref) {
              t.unref();
            }
          }
        };
        this.#updateItemAge = (index) => {
          starts[index] = ttls[index] !== 0 ? perf.now() : 0;
        };
        this.#statusTTL = (status, index) => {
          if (ttls[index]) {
            const ttl = ttls[index];
            const start = starts[index];
            if (!ttl || !start)
              return;
            status.ttl = ttl;
            status.start = start;
            status.now = cachedNow || getNow();
            const age = status.now - start;
            status.remainingTTL = ttl - age;
          }
        };
        let cachedNow = 0;
        const getNow = () => {
          const n = perf.now();
          if (this.ttlResolution > 0) {
            cachedNow = n;
            const t = setTimeout(() => cachedNow = 0, this.ttlResolution);
            if (t.unref) {
              t.unref();
            }
          }
          return n;
        };
        this.getRemainingTTL = (key) => {
          const index = this.#keyMap.get(key);
          if (index === void 0) {
            return 0;
          }
          const ttl = ttls[index];
          const start = starts[index];
          if (!ttl || !start) {
            return Infinity;
          }
          const age = (cachedNow || getNow()) - start;
          return ttl - age;
        };
        this.#isStale = (index) => {
          const s = starts[index];
          const t = ttls[index];
          return !!t && !!s && (cachedNow || getNow()) - s > t;
        };
      }
      // conditionally set private methods related to TTL
      #updateItemAge = () => {
      };
      #statusTTL = () => {
      };
      #setItemTTL = () => {
      };
      /* c8 ignore stop */
      #isStale = () => false;
      #initializeSizeTracking() {
        const sizes = new ZeroArray(this.#max);
        this.#calculatedSize = 0;
        this.#sizes = sizes;
        this.#removeItemSize = (index) => {
          this.#calculatedSize -= sizes[index];
          sizes[index] = 0;
        };
        this.#requireSize = (k, v, size, sizeCalculation) => {
          if (this.#isBackgroundFetch(v)) {
            return 0;
          }
          if (!isPosInt(size)) {
            if (sizeCalculation) {
              if (typeof sizeCalculation !== "function") {
                throw new TypeError("sizeCalculation must be a function");
              }
              size = sizeCalculation(v, k);
              if (!isPosInt(size)) {
                throw new TypeError("sizeCalculation return invalid (expect positive integer)");
              }
            } else {
              throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");
            }
          }
          return size;
        };
        this.#addItemSize = (index, size, status) => {
          sizes[index] = size;
          if (this.#maxSize) {
            const maxSize = this.#maxSize - sizes[index];
            while (this.#calculatedSize > maxSize) {
              this.#evict(true);
            }
          }
          this.#calculatedSize += sizes[index];
          if (status) {
            status.entrySize = size;
            status.totalCalculatedSize = this.#calculatedSize;
          }
        };
      }
      #removeItemSize = (_i) => {
      };
      #addItemSize = (_i, _s, _st) => {
      };
      #requireSize = (_k, _v, size, sizeCalculation) => {
        if (size || sizeCalculation) {
          throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");
        }
        return 0;
      };
      *#indexes({ allowStale = this.allowStale } = {}) {
        if (this.#size) {
          for (let i = this.#tail; true; ) {
            if (!this.#isValidIndex(i)) {
              break;
            }
            if (allowStale || !this.#isStale(i)) {
              yield i;
            }
            if (i === this.#head) {
              break;
            } else {
              i = this.#prev[i];
            }
          }
        }
      }
      *#rindexes({ allowStale = this.allowStale } = {}) {
        if (this.#size) {
          for (let i = this.#head; true; ) {
            if (!this.#isValidIndex(i)) {
              break;
            }
            if (allowStale || !this.#isStale(i)) {
              yield i;
            }
            if (i === this.#tail) {
              break;
            } else {
              i = this.#next[i];
            }
          }
        }
      }
      #isValidIndex(index) {
        return index !== void 0 && this.#keyMap.get(this.#keyList[index]) === index;
      }
      /**
       * Return a generator yielding `[key, value]` pairs,
       * in order from most recently used to least recently used.
       */
      *entries() {
        for (const i of this.#indexes()) {
          if (this.#valList[i] !== void 0 && this.#keyList[i] !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
            yield [this.#keyList[i], this.#valList[i]];
          }
        }
      }
      /**
       * Inverse order version of {@link LRUCache.entries}
       *
       * Return a generator yielding `[key, value]` pairs,
       * in order from least recently used to most recently used.
       */
      *rentries() {
        for (const i of this.#rindexes()) {
          if (this.#valList[i] !== void 0 && this.#keyList[i] !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
            yield [this.#keyList[i], this.#valList[i]];
          }
        }
      }
      /**
       * Return a generator yielding the keys in the cache,
       * in order from most recently used to least recently used.
       */
      *keys() {
        for (const i of this.#indexes()) {
          const k = this.#keyList[i];
          if (k !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
            yield k;
          }
        }
      }
      /**
       * Inverse order version of {@link LRUCache.keys}
       *
       * Return a generator yielding the keys in the cache,
       * in order from least recently used to most recently used.
       */
      *rkeys() {
        for (const i of this.#rindexes()) {
          const k = this.#keyList[i];
          if (k !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
            yield k;
          }
        }
      }
      /**
       * Return a generator yielding the values in the cache,
       * in order from most recently used to least recently used.
       */
      *values() {
        for (const i of this.#indexes()) {
          const v = this.#valList[i];
          if (v !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
            yield this.#valList[i];
          }
        }
      }
      /**
       * Inverse order version of {@link LRUCache.values}
       *
       * Return a generator yielding the values in the cache,
       * in order from least recently used to most recently used.
       */
      *rvalues() {
        for (const i of this.#rindexes()) {
          const v = this.#valList[i];
          if (v !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
            yield this.#valList[i];
          }
        }
      }
      /**
       * Iterating over the cache itself yields the same results as
       * {@link LRUCache.entries}
       */
      [Symbol.iterator]() {
        return this.entries();
      }
      /**
       * A String value that is used in the creation of the default string
       * description of an object. Called by the built-in method
       * `Object.prototype.toString`.
       */
      [Symbol.toStringTag] = "LRUCache";
      /**
       * Find a value for which the supplied fn method returns a truthy value,
       * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.
       */
      find(fn, getOptions = {}) {
        for (const i of this.#indexes()) {
          const v = this.#valList[i];
          const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
          if (value === void 0)
            continue;
          if (fn(value, this.#keyList[i], this)) {
            return this.get(this.#keyList[i], getOptions);
          }
        }
      }
      /**
       * Call the supplied function on each item in the cache, in order from most
       * recently used to least recently used.
       *
       * `fn` is called as `fn(value, key, cache)`.
       *
       * If `thisp` is provided, function will be called in the `this`-context of
       * the provided object, or the cache if no `thisp` object is provided.
       *
       * Does not update age or recenty of use, or iterate over stale values.
       */
      forEach(fn, thisp = this) {
        for (const i of this.#indexes()) {
          const v = this.#valList[i];
          const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
          if (value === void 0)
            continue;
          fn.call(thisp, value, this.#keyList[i], this);
        }
      }
      /**
       * The same as {@link LRUCache.forEach} but items are iterated over in
       * reverse order.  (ie, less recently used items are iterated over first.)
       */
      rforEach(fn, thisp = this) {
        for (const i of this.#rindexes()) {
          const v = this.#valList[i];
          const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
          if (value === void 0)
            continue;
          fn.call(thisp, value, this.#keyList[i], this);
        }
      }
      /**
       * Delete any stale entries. Returns true if anything was removed,
       * false otherwise.
       */
      purgeStale() {
        let deleted = false;
        for (const i of this.#rindexes({ allowStale: true })) {
          if (this.#isStale(i)) {
            this.#delete(this.#keyList[i], "expire");
            deleted = true;
          }
        }
        return deleted;
      }
      /**
       * Get the extended info about a given entry, to get its value, size, and
       * TTL info simultaneously. Returns `undefined` if the key is not present.
       *
       * Unlike {@link LRUCache#dump}, which is designed to be portable and survive
       * serialization, the `start` value is always the current timestamp, and the
       * `ttl` is a calculated remaining time to live (negative if expired).
       *
       * Always returns stale values, if their info is found in the cache, so be
       * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})
       * if relevant.
       */
      info(key) {
        const i = this.#keyMap.get(key);
        if (i === void 0)
          return void 0;
        const v = this.#valList[i];
        const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
        if (value === void 0)
          return void 0;
        const entry = { value };
        if (this.#ttls && this.#starts) {
          const ttl = this.#ttls[i];
          const start = this.#starts[i];
          if (ttl && start) {
            const remain = ttl - (perf.now() - start);
            entry.ttl = remain;
            entry.start = Date.now();
          }
        }
        if (this.#sizes) {
          entry.size = this.#sizes[i];
        }
        return entry;
      }
      /**
       * Return an array of [key, {@link LRUCache.Entry}] tuples which can be
       * passed to {@link LRUCache#load}.
       *
       * The `start` fields are calculated relative to a portable `Date.now()`
       * timestamp, even if `performance.now()` is available.
       *
       * Stale entries are always included in the `dump`, even if
       * {@link LRUCache.OptionsBase.allowStale} is false.
       *
       * Note: this returns an actual array, not a generator, so it can be more
       * easily passed around.
       */
      dump() {
        const arr = [];
        for (const i of this.#indexes({ allowStale: true })) {
          const key = this.#keyList[i];
          const v = this.#valList[i];
          const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
          if (value === void 0 || key === void 0)
            continue;
          const entry = { value };
          if (this.#ttls && this.#starts) {
            entry.ttl = this.#ttls[i];
            const age = perf.now() - this.#starts[i];
            entry.start = Math.floor(Date.now() - age);
          }
          if (this.#sizes) {
            entry.size = this.#sizes[i];
          }
          arr.unshift([key, entry]);
        }
        return arr;
      }
      /**
       * Reset the cache and load in the items in entries in the order listed.
       *
       * The shape of the resulting cache may be different if the same options are
       * not used in both caches.
       *
       * The `start` fields are assumed to be calculated relative to a portable
       * `Date.now()` timestamp, even if `performance.now()` is available.
       */
      load(arr) {
        this.clear();
        for (const [key, entry] of arr) {
          if (entry.start) {
            const age = Date.now() - entry.start;
            entry.start = perf.now() - age;
          }
          this.set(key, entry.value, entry);
        }
      }
      /**
       * Add a value to the cache.
       *
       * Note: if `undefined` is specified as a value, this is an alias for
       * {@link LRUCache#delete}
       *
       * Fields on the {@link LRUCache.SetOptions} options param will override
       * their corresponding values in the constructor options for the scope
       * of this single `set()` operation.
       *
       * If `start` is provided, then that will set the effective start
       * time for the TTL calculation. Note that this must be a previous
       * value of `performance.now()` if supported, or a previous value of
       * `Date.now()` if not.
       *
       * Options object may also include `size`, which will prevent
       * calling the `sizeCalculation` function and just use the specified
       * number if it is a positive integer, and `noDisposeOnSet` which
       * will prevent calling a `dispose` function in the case of
       * overwrites.
       *
       * If the `size` (or return value of `sizeCalculation`) for a given
       * entry is greater than `maxEntrySize`, then the item will not be
       * added to the cache.
       *
       * Will update the recency of the entry.
       *
       * If the value is `undefined`, then this is an alias for
       * `cache.delete(key)`. `undefined` is never stored in the cache.
       */
      set(k, v, setOptions = {}) {
        if (v === void 0) {
          this.delete(k);
          return this;
        }
        const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status } = setOptions;
        let { noUpdateTTL = this.noUpdateTTL } = setOptions;
        const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);
        if (this.maxEntrySize && size > this.maxEntrySize) {
          if (status) {
            status.set = "miss";
            status.maxEntrySizeExceeded = true;
          }
          this.#delete(k, "set");
          return this;
        }
        let index = this.#size === 0 ? void 0 : this.#keyMap.get(k);
        if (index === void 0) {
          index = this.#size === 0 ? this.#tail : this.#free.length !== 0 ? this.#free.pop() : this.#size === this.#max ? this.#evict(false) : this.#size;
          this.#keyList[index] = k;
          this.#valList[index] = v;
          this.#keyMap.set(k, index);
          this.#next[this.#tail] = index;
          this.#prev[index] = this.#tail;
          this.#tail = index;
          this.#size++;
          this.#addItemSize(index, size, status);
          if (status)
            status.set = "add";
          noUpdateTTL = false;
        } else {
          this.#moveToTail(index);
          const oldVal = this.#valList[index];
          if (v !== oldVal) {
            if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {
              oldVal.__abortController.abort(new Error("replaced"));
              const { __staleWhileFetching: s } = oldVal;
              if (s !== void 0 && !noDisposeOnSet) {
                if (this.#hasDispose) {
                  this.#dispose?.(s, k, "set");
                }
                if (this.#hasDisposeAfter) {
                  this.#disposed?.push([s, k, "set"]);
                }
              }
            } else if (!noDisposeOnSet) {
              if (this.#hasDispose) {
                this.#dispose?.(oldVal, k, "set");
              }
              if (this.#hasDisposeAfter) {
                this.#disposed?.push([oldVal, k, "set"]);
              }
            }
            this.#removeItemSize(index);
            this.#addItemSize(index, size, status);
            this.#valList[index] = v;
            if (status) {
              status.set = "replace";
              const oldValue = oldVal && this.#isBackgroundFetch(oldVal) ? oldVal.__staleWhileFetching : oldVal;
              if (oldValue !== void 0)
                status.oldValue = oldValue;
            }
          } else if (status) {
            status.set = "update";
          }
        }
        if (ttl !== 0 && !this.#ttls) {
          this.#initializeTTLTracking();
        }
        if (this.#ttls) {
          if (!noUpdateTTL) {
            this.#setItemTTL(index, ttl, start);
          }
          if (status)
            this.#statusTTL(status, index);
        }
        if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {
          const dt = this.#disposed;
          let task;
          while (task = dt?.shift()) {
            this.#disposeAfter?.(...task);
          }
        }
        return this;
      }
      /**
       * Evict the least recently used item, returning its value or
       * `undefined` if cache is empty.
       */
      pop() {
        try {
          while (this.#size) {
            const val = this.#valList[this.#head];
            this.#evict(true);
            if (this.#isBackgroundFetch(val)) {
              if (val.__staleWhileFetching) {
                return val.__staleWhileFetching;
              }
            } else if (val !== void 0) {
              return val;
            }
          }
        } finally {
          if (this.#hasDisposeAfter && this.#disposed) {
            const dt = this.#disposed;
            let task;
            while (task = dt?.shift()) {
              this.#disposeAfter?.(...task);
            }
          }
        }
      }
      #evict(free) {
        const head = this.#head;
        const k = this.#keyList[head];
        const v = this.#valList[head];
        if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {
          v.__abortController.abort(new Error("evicted"));
        } else if (this.#hasDispose || this.#hasDisposeAfter) {
          if (this.#hasDispose) {
            this.#dispose?.(v, k, "evict");
          }
          if (this.#hasDisposeAfter) {
            this.#disposed?.push([v, k, "evict"]);
          }
        }
        this.#removeItemSize(head);
        if (free) {
          this.#keyList[head] = void 0;
          this.#valList[head] = void 0;
          this.#free.push(head);
        }
        if (this.#size === 1) {
          this.#head = this.#tail = 0;
          this.#free.length = 0;
        } else {
          this.#head = this.#next[head];
        }
        this.#keyMap.delete(k);
        this.#size--;
        return head;
      }
      /**
       * Check if a key is in the cache, without updating the recency of use.
       * Will return false if the item is stale, even though it is technically
       * in the cache.
       *
       * Check if a key is in the cache, without updating the recency of
       * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set
       * to `true` in either the options or the constructor.
       *
       * Will return `false` if the item is stale, even though it is technically in
       * the cache. The difference can be determined (if it matters) by using a
       * `status` argument, and inspecting the `has` field.
       *
       * Will not update item age unless
       * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.
       */
      has(k, hasOptions = {}) {
        const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;
        const index = this.#keyMap.get(k);
        if (index !== void 0) {
          const v = this.#valList[index];
          if (this.#isBackgroundFetch(v) && v.__staleWhileFetching === void 0) {
            return false;
          }
          if (!this.#isStale(index)) {
            if (updateAgeOnHas) {
              this.#updateItemAge(index);
            }
            if (status) {
              status.has = "hit";
              this.#statusTTL(status, index);
            }
            return true;
          } else if (status) {
            status.has = "stale";
            this.#statusTTL(status, index);
          }
        } else if (status) {
          status.has = "miss";
        }
        return false;
      }
      /**
       * Like {@link LRUCache#get} but doesn't update recency or delete stale
       * items.
       *
       * Returns `undefined` if the item is stale, unless
       * {@link LRUCache.OptionsBase.allowStale} is set.
       */
      peek(k, peekOptions = {}) {
        const { allowStale = this.allowStale } = peekOptions;
        const index = this.#keyMap.get(k);
        if (index === void 0 || !allowStale && this.#isStale(index)) {
          return;
        }
        const v = this.#valList[index];
        return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
      }
      #backgroundFetch(k, index, options, context) {
        const v = index === void 0 ? void 0 : this.#valList[index];
        if (this.#isBackgroundFetch(v)) {
          return v;
        }
        const ac = new AC();
        const { signal } = options;
        signal?.addEventListener("abort", () => ac.abort(signal.reason), {
          signal: ac.signal
        });
        const fetchOpts = {
          signal: ac.signal,
          options,
          context
        };
        const cb = (v2, updateCache = false) => {
          const { aborted } = ac.signal;
          const ignoreAbort = options.ignoreFetchAbort && v2 !== void 0;
          if (options.status) {
            if (aborted && !updateCache) {
              options.status.fetchAborted = true;
              options.status.fetchError = ac.signal.reason;
              if (ignoreAbort)
                options.status.fetchAbortIgnored = true;
            } else {
              options.status.fetchResolved = true;
            }
          }
          if (aborted && !ignoreAbort && !updateCache) {
            return fetchFail(ac.signal.reason);
          }
          const bf2 = p;
          if (this.#valList[index] === p) {
            if (v2 === void 0) {
              if (bf2.__staleWhileFetching) {
                this.#valList[index] = bf2.__staleWhileFetching;
              } else {
                this.#delete(k, "fetch");
              }
            } else {
              if (options.status)
                options.status.fetchUpdated = true;
              this.set(k, v2, fetchOpts.options);
            }
          }
          return v2;
        };
        const eb = (er) => {
          if (options.status) {
            options.status.fetchRejected = true;
            options.status.fetchError = er;
          }
          return fetchFail(er);
        };
        const fetchFail = (er) => {
          const { aborted } = ac.signal;
          const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;
          const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;
          const noDelete = allowStale || options.noDeleteOnFetchRejection;
          const bf2 = p;
          if (this.#valList[index] === p) {
            const del = !noDelete || bf2.__staleWhileFetching === void 0;
            if (del) {
              this.#delete(k, "fetch");
            } else if (!allowStaleAborted) {
              this.#valList[index] = bf2.__staleWhileFetching;
            }
          }
          if (allowStale) {
            if (options.status && bf2.__staleWhileFetching !== void 0) {
              options.status.returnedStale = true;
            }
            return bf2.__staleWhileFetching;
          } else if (bf2.__returned === bf2) {
            throw er;
          }
        };
        const pcall = (res, rej) => {
          const fmp = this.#fetchMethod?.(k, v, fetchOpts);
          if (fmp && fmp instanceof Promise) {
            fmp.then((v2) => res(v2 === void 0 ? void 0 : v2), rej);
          }
          ac.signal.addEventListener("abort", () => {
            if (!options.ignoreFetchAbort || options.allowStaleOnFetchAbort) {
              res(void 0);
              if (options.allowStaleOnFetchAbort) {
                res = (v2) => cb(v2, true);
              }
            }
          });
        };
        if (options.status)
          options.status.fetchDispatched = true;
        const p = new Promise(pcall).then(cb, eb);
        const bf = Object.assign(p, {
          __abortController: ac,
          __staleWhileFetching: v,
          __returned: void 0
        });
        if (index === void 0) {
          this.set(k, bf, { ...fetchOpts.options, status: void 0 });
          index = this.#keyMap.get(k);
        } else {
          this.#valList[index] = bf;
        }
        return bf;
      }
      #isBackgroundFetch(p) {
        if (!this.#hasFetchMethod)
          return false;
        const b = p;
        return !!b && b instanceof Promise && b.hasOwnProperty("__staleWhileFetching") && b.__abortController instanceof AC;
      }
      async fetch(k, fetchOptions = {}) {
        const {
          // get options
          allowStale = this.allowStale,
          updateAgeOnGet = this.updateAgeOnGet,
          noDeleteOnStaleGet = this.noDeleteOnStaleGet,
          // set options
          ttl = this.ttl,
          noDisposeOnSet = this.noDisposeOnSet,
          size = 0,
          sizeCalculation = this.sizeCalculation,
          noUpdateTTL = this.noUpdateTTL,
          // fetch exclusive options
          noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,
          allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,
          ignoreFetchAbort = this.ignoreFetchAbort,
          allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,
          context,
          forceRefresh = false,
          status,
          signal
        } = fetchOptions;
        if (!this.#hasFetchMethod) {
          if (status)
            status.fetch = "get";
          return this.get(k, {
            allowStale,
            updateAgeOnGet,
            noDeleteOnStaleGet,
            status
          });
        }
        const options = {
          allowStale,
          updateAgeOnGet,
          noDeleteOnStaleGet,
          ttl,
          noDisposeOnSet,
          size,
          sizeCalculation,
          noUpdateTTL,
          noDeleteOnFetchRejection,
          allowStaleOnFetchRejection,
          allowStaleOnFetchAbort,
          ignoreFetchAbort,
          status,
          signal
        };
        let index = this.#keyMap.get(k);
        if (index === void 0) {
          if (status)
            status.fetch = "miss";
          const p = this.#backgroundFetch(k, index, options, context);
          return p.__returned = p;
        } else {
          const v = this.#valList[index];
          if (this.#isBackgroundFetch(v)) {
            const stale = allowStale && v.__staleWhileFetching !== void 0;
            if (status) {
              status.fetch = "inflight";
              if (stale)
                status.returnedStale = true;
            }
            return stale ? v.__staleWhileFetching : v.__returned = v;
          }
          const isStale = this.#isStale(index);
          if (!forceRefresh && !isStale) {
            if (status)
              status.fetch = "hit";
            this.#moveToTail(index);
            if (updateAgeOnGet) {
              this.#updateItemAge(index);
            }
            if (status)
              this.#statusTTL(status, index);
            return v;
          }
          const p = this.#backgroundFetch(k, index, options, context);
          const hasStale = p.__staleWhileFetching !== void 0;
          const staleVal = hasStale && allowStale;
          if (status) {
            status.fetch = isStale ? "stale" : "refresh";
            if (staleVal && isStale)
              status.returnedStale = true;
          }
          return staleVal ? p.__staleWhileFetching : p.__returned = p;
        }
      }
      async forceFetch(k, fetchOptions = {}) {
        const v = await this.fetch(k, fetchOptions);
        if (v === void 0)
          throw new Error("fetch() returned undefined");
        return v;
      }
      memo(k, memoOptions = {}) {
        const memoMethod = this.#memoMethod;
        if (!memoMethod) {
          throw new Error("no memoMethod provided to constructor");
        }
        const { context, forceRefresh, ...options } = memoOptions;
        const v = this.get(k, options);
        if (!forceRefresh && v !== void 0)
          return v;
        const vv = memoMethod(k, v, {
          options,
          context
        });
        this.set(k, vv, options);
        return vv;
      }
      /**
       * Return a value from the cache. Will update the recency of the cache
       * entry found.
       *
       * If the key is not found, get() will return `undefined`.
       */
      get(k, getOptions = {}) {
        const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status } = getOptions;
        const index = this.#keyMap.get(k);
        if (index !== void 0) {
          const value = this.#valList[index];
          const fetching = this.#isBackgroundFetch(value);
          if (status)
            this.#statusTTL(status, index);
          if (this.#isStale(index)) {
            if (status)
              status.get = "stale";
            if (!fetching) {
              if (!noDeleteOnStaleGet) {
                this.#delete(k, "expire");
              }
              if (status && allowStale)
                status.returnedStale = true;
              return allowStale ? value : void 0;
            } else {
              if (status && allowStale && value.__staleWhileFetching !== void 0) {
                status.returnedStale = true;
              }
              return allowStale ? value.__staleWhileFetching : void 0;
            }
          } else {
            if (status)
              status.get = "hit";
            if (fetching) {
              return value.__staleWhileFetching;
            }
            this.#moveToTail(index);
            if (updateAgeOnGet) {
              this.#updateItemAge(index);
            }
            return value;
          }
        } else if (status) {
          status.get = "miss";
        }
      }
      #connect(p, n) {
        this.#prev[n] = p;
        this.#next[p] = n;
      }
      #moveToTail(index) {
        if (index !== this.#tail) {
          if (index === this.#head) {
            this.#head = this.#next[index];
          } else {
            this.#connect(this.#prev[index], this.#next[index]);
          }
          this.#connect(this.#tail, index);
          this.#tail = index;
        }
      }
      /**
       * Deletes a key out of the cache.
       *
       * Returns true if the key was deleted, false otherwise.
       */
      delete(k) {
        return this.#delete(k, "delete");
      }
      #delete(k, reason) {
        let deleted = false;
        if (this.#size !== 0) {
          const index = this.#keyMap.get(k);
          if (index !== void 0) {
            deleted = true;
            if (this.#size === 1) {
              this.#clear(reason);
            } else {
              this.#removeItemSize(index);
              const v = this.#valList[index];
              if (this.#isBackgroundFetch(v)) {
                v.__abortController.abort(new Error("deleted"));
              } else if (this.#hasDispose || this.#hasDisposeAfter) {
                if (this.#hasDispose) {
                  this.#dispose?.(v, k, reason);
                }
                if (this.#hasDisposeAfter) {
                  this.#disposed?.push([v, k, reason]);
                }
              }
              this.#keyMap.delete(k);
              this.#keyList[index] = void 0;
              this.#valList[index] = void 0;
              if (index === this.#tail) {
                this.#tail = this.#prev[index];
              } else if (index === this.#head) {
                this.#head = this.#next[index];
              } else {
                const pi = this.#prev[index];
                this.#next[pi] = this.#next[index];
                const ni = this.#next[index];
                this.#prev[ni] = this.#prev[index];
              }
              this.#size--;
              this.#free.push(index);
            }
          }
        }
        if (this.#hasDisposeAfter && this.#disposed?.length) {
          const dt = this.#disposed;
          let task;
          while (task = dt?.shift()) {
            this.#disposeAfter?.(...task);
          }
        }
        return deleted;
      }
      /**
       * Clear the cache entirely, throwing away all values.
       */
      clear() {
        return this.#clear("delete");
      }
      #clear(reason) {
        for (const index of this.#rindexes({ allowStale: true })) {
          const v = this.#valList[index];
          if (this.#isBackgroundFetch(v)) {
            v.__abortController.abort(new Error("deleted"));
          } else {
            const k = this.#keyList[index];
            if (this.#hasDispose) {
              this.#dispose?.(v, k, reason);
            }
            if (this.#hasDisposeAfter) {
              this.#disposed?.push([v, k, reason]);
            }
          }
        }
        this.#keyMap.clear();
        this.#valList.fill(void 0);
        this.#keyList.fill(void 0);
        if (this.#ttls && this.#starts) {
          this.#ttls.fill(0);
          this.#starts.fill(0);
        }
        if (this.#sizes) {
          this.#sizes.fill(0);
        }
        this.#head = 0;
        this.#tail = 0;
        this.#free.length = 0;
        this.#calculatedSize = 0;
        this.#size = 0;
        if (this.#hasDisposeAfter && this.#disposed) {
          const dt = this.#disposed;
          let task;
          while (task = dt?.shift()) {
            this.#disposeAfter?.(...task);
          }
        }
      }
    };
    exports2.LRUCache = LRUCache;
  }
});

// node_modules/minipass/dist/commonjs/index.js
var require_commonjs3 = __commonJS({
  "node_modules/minipass/dist/commonjs/index.js"(exports2) {
    "use strict";
    var __importDefault = exports2 && exports2.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.Minipass = exports2.isWritable = exports2.isReadable = exports2.isStream = void 0;
    var proc = typeof process === "object" && process ? process : {
      stdout: null,
      stderr: null
    };
    var node_events_1 = require("node:events");
    var node_stream_1 = __importDefault(require("node:stream"));
    var node_string_decoder_1 = require("node:string_decoder");
    var isStream = (s) => !!s && typeof s === "object" && (s instanceof Minipass || s instanceof node_stream_1.default || (0, exports2.isReadable)(s) || (0, exports2.isWritable)(s));
    exports2.isStream = isStream;
    var isReadable = (s) => !!s && typeof s === "object" && s instanceof node_events_1.EventEmitter && typeof s.pipe === "function" && // node core Writable streams have a pipe() method, but it throws
    s.pipe !== node_stream_1.default.Writable.prototype.pipe;
    exports2.isReadable = isReadable;
    var isWritable = (s) => !!s && typeof s === "object" && s instanceof node_events_1.EventEmitter && typeof s.write === "function" && typeof s.end === "function";
    exports2.isWritable = isWritable;
    var EOF = Symbol("EOF");
    var MAYBE_EMIT_END = Symbol("maybeEmitEnd");
    var EMITTED_END = Symbol("emittedEnd");
    var EMITTING_END = Symbol("emittingEnd");
    var EMITTED_ERROR = Symbol("emittedError");
    var CLOSED = Symbol("closed");
    var READ = Symbol("read");
    var FLUSH = Symbol("flush");
    var FLUSHCHUNK = Symbol("flushChunk");
    var ENCODING = Symbol("encoding");
    var DECODER = Symbol("decoder");
    var FLOWING = Symbol("flowing");
    var PAUSED = Symbol("paused");
    var RESUME = Symbol("resume");
    var BUFFER = Symbol("buffer");
    var PIPES = Symbol("pipes");
    var BUFFERLENGTH = Symbol("bufferLength");
    var BUFFERPUSH = Symbol("bufferPush");
    var BUFFERSHIFT = Symbol("bufferShift");
    var OBJECTMODE = Symbol("objectMode");
    var DESTROYED = Symbol("destroyed");
    var ERROR = Symbol("error");
    var EMITDATA = Symbol("emitData");
    var EMITEND = Symbol("emitEnd");
    var EMITEND2 = Symbol("emitEnd2");
    var ASYNC = Symbol("async");
    var ABORT = Symbol("abort");
    var ABORTED = Symbol("aborted");
    var SIGNAL = Symbol("signal");
    var DATALISTENERS = Symbol("dataListeners");
    var DISCARDED = Symbol("discarded");
    var defer = (fn) => Promise.resolve().then(fn);
    var nodefer = (fn) => fn();
    var isEndish = (ev) => ev === "end" || ev === "finish" || ev === "prefinish";
    var isArrayBufferLike = (b) => b instanceof ArrayBuffer || !!b && typeof b === "object" && b.constructor && b.constructor.name === "ArrayBuffer" && b.byteLength >= 0;
    var isArrayBufferView = (b) => !Buffer.isBuffer(b) && ArrayBuffer.isView(b);
    var Pipe = class {
      src;
      dest;
      opts;
      ondrain;
      constructor(src, dest, opts) {
        this.src = src;
        this.dest = dest;
        this.opts = opts;
        this.ondrain = () => src[RESUME]();
        this.dest.on("drain", this.ondrain);
      }
      unpipe() {
        this.dest.removeListener("drain", this.ondrain);
      }
      // only here for the prototype
      /* c8 ignore start */
      proxyErrors(_er) {
      }
      /* c8 ignore stop */
      end() {
        this.unpipe();
        if (this.opts.end)
          this.dest.end();
      }
    };
    var PipeProxyErrors = class extends Pipe {
      unpipe() {
        this.src.removeListener("error", this.proxyErrors);
        super.unpipe();
      }
      constructor(src, dest, opts) {
        super(src, dest, opts);
        this.proxyErrors = (er) => dest.emit("error", er);
        src.on("error", this.proxyErrors);
      }
    };
    var isObjectModeOptions = (o) => !!o.objectMode;
    var isEncodingOptions = (o) => !o.objectMode && !!o.encoding && o.encoding !== "buffer";
    var Minipass = class extends node_events_1.EventEmitter {
      [FLOWING] = false;
      [PAUSED] = false;
      [PIPES] = [];
      [BUFFER] = [];
      [OBJECTMODE];
      [ENCODING];
      [ASYNC];
      [DECODER];
      [EOF] = false;
      [EMITTED_END] = false;
      [EMITTING_END] = false;
      [CLOSED] = false;
      [EMITTED_ERROR] = null;
      [BUFFERLENGTH] = 0;
      [DESTROYED] = false;
      [SIGNAL];
      [ABORTED] = false;
      [DATALISTENERS] = 0;
      [DISCARDED] = false;
      /**
       * true if the stream can be written
       */
      writable = true;
      /**
       * true if the stream can be read
       */
      readable = true;
      /**
       * If `RType` is Buffer, then options do not need to be provided.
       * Otherwise, an options object must be provided to specify either
       * {@link Minipass.SharedOptions.objectMode} or
       * {@link Minipass.SharedOptions.encoding}, as appropriate.
       */
      constructor(...args) {
        const options = args[0] || {};
        super();
        if (options.objectMode && typeof options.encoding === "string") {
          throw new TypeError("Encoding and objectMode may not be used together");
        }
        if (isObjectModeOptions(options)) {
          this[OBJECTMODE] = true;
          this[ENCODING] = null;
        } else if (isEncodingOptions(options)) {
          this[ENCODING] = options.encoding;
          this[OBJECTMODE] = false;
        } else {
          this[OBJECTMODE] = false;
          this[ENCODING] = null;
        }
        this[ASYNC] = !!options.async;
        this[DECODER] = this[ENCODING] ? new node_string_decoder_1.StringDecoder(this[ENCODING]) : null;
        if (options && options.debugExposeBuffer === true) {
          Object.defineProperty(this, "buffer", { get: () => this[BUFFER] });
        }
        if (options && options.debugExposePipes === true) {
          Object.defineProperty(this, "pipes", { get: () => this[PIPES] });
        }
        const { signal } = options;
        if (signal) {
          this[SIGNAL] = signal;
          if (signal.aborted) {
            this[ABORT]();
          } else {
            signal.addEventListener("abort", () => this[ABORT]());
          }
        }
      }
      /**
       * The amount of data stored in the buffer waiting to be read.
       *
       * For Buffer strings, this will be the total byte length.
       * For string encoding streams, this will be the string character length,
       * according to JavaScript's `string.length` logic.
       * For objectMode streams, this is a count of the items waiting to be
       * emitted.
       */
      get bufferLength() {
        return this[BUFFERLENGTH];
      }
      /**
       * The `BufferEncoding` currently in use, or `null`
       */
      get encoding() {
        return this[ENCODING];
      }
      /**
       * @deprecated - This is a read only property
       */
      set encoding(_enc) {
        throw new Error("Encoding must be set at instantiation time");
      }
      /**
       * @deprecated - Encoding may only be set at instantiation time
       */
      setEncoding(_enc) {
        throw new Error("Encoding must be set at instantiation time");
      }
      /**
       * True if this is an objectMode stream
       */
      get objectMode() {
        return this[OBJECTMODE];
      }
      /**
       * @deprecated - This is a read-only property
       */
      set objectMode(_om) {
        throw new Error("objectMode must be set at instantiation time");
      }
      /**
       * true if this is an async stream
       */
      get ["async"]() {
        return this[ASYNC];
      }
      /**
       * Set to true to make this stream async.
       *
       * Once set, it cannot be unset, as this would potentially cause incorrect
       * behavior.  Ie, a sync stream can be made async, but an async stream
       * cannot be safely made sync.
       */
      set ["async"](a) {
        this[ASYNC] = this[ASYNC] || !!a;
      }
      // drop everything and get out of the flow completely
      [ABORT]() {
        this[ABORTED] = true;
        this.emit("abort", this[SIGNAL]?.reason);
        this.destroy(this[SIGNAL]?.reason);
      }
      /**
       * True if the stream has been aborted.
       */
      get aborted() {
        return this[ABORTED];
      }
      /**
       * No-op setter. Stream aborted status is set via the AbortSignal provided
       * in the constructor options.
       */
      set aborted(_) {
      }
      write(chunk, encoding, cb) {
        if (this[ABORTED])
          return false;
        if (this[EOF])
          throw new Error("write after end");
        if (this[DESTROYED]) {
          this.emit("error", Object.assign(new Error("Cannot call write after a stream was destroyed"), { code: "ERR_STREAM_DESTROYED" }));
          return true;
        }
        if (typeof encoding === "function") {
          cb = encoding;
          encoding = "utf8";
        }
        if (!encoding)
          encoding = "utf8";
        const fn = this[ASYNC] ? defer : nodefer;
        if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {
          if (isArrayBufferView(chunk)) {
            chunk = Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength);
          } else if (isArrayBufferLike(chunk)) {
            chunk = Buffer.from(chunk);
          } else if (typeof chunk !== "string") {
            throw new Error("Non-contiguous data written to non-objectMode stream");
          }
        }
        if (this[OBJECTMODE]) {
          if (this[FLOWING] && this[BUFFERLENGTH] !== 0)
            this[FLUSH](true);
          if (this[FLOWING])
            this.emit("data", chunk);
          else
            this[BUFFERPUSH](chunk);
          if (this[BUFFERLENGTH] !== 0)
            this.emit("readable");
          if (cb)
            fn(cb);
          return this[FLOWING];
        }
        if (!chunk.length) {
          if (this[BUFFERLENGTH] !== 0)
            this.emit("readable");
          if (cb)
            fn(cb);
          return this[FLOWING];
        }
        if (typeof chunk === "string" && // unless it is a string already ready for us to use
        !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)) {
          chunk = Buffer.from(chunk, encoding);
        }
        if (Buffer.isBuffer(chunk) && this[ENCODING]) {
          chunk = this[DECODER].write(chunk);
        }
        if (this[FLOWING] && this[BUFFERLENGTH] !== 0)
          this[FLUSH](true);
        if (this[FLOWING])
          this.emit("data", chunk);
        else
          this[BUFFERPUSH](chunk);
        if (this[BUFFERLENGTH] !== 0)
          this.emit("readable");
        if (cb)
          fn(cb);
        return this[FLOWING];
      }
      /**
       * Low-level explicit read method.
       *
       * In objectMode, the argument is ignored, and one item is returned if
       * available.
       *
       * `n` is the number of bytes (or in the case of encoding streams,
       * characters) to consume. If `n` is not provided, then the entire buffer
       * is returned, or `null` is returned if no data is available.
       *
       * If `n` is greater that the amount of data in the internal buffer,
       * then `null` is returned.
       */
      read(n) {
        if (this[DESTROYED])
          return null;
        this[DISCARDED] = false;
        if (this[BUFFERLENGTH] === 0 || n === 0 || n && n > this[BUFFERLENGTH]) {
          this[MAYBE_EMIT_END]();
          return null;
        }
        if (this[OBJECTMODE])
          n = null;
        if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {
          this[BUFFER] = [
            this[ENCODING] ? this[BUFFER].join("") : Buffer.concat(this[BUFFER], this[BUFFERLENGTH])
          ];
        }
        const ret = this[READ](n || null, this[BUFFER][0]);
        this[MAYBE_EMIT_END]();
        return ret;
      }
      [READ](n, chunk) {
        if (this[OBJECTMODE])
          this[BUFFERSHIFT]();
        else {
          const c = chunk;
          if (n === c.length || n === null)
            this[BUFFERSHIFT]();
          else if (typeof c === "string") {
            this[BUFFER][0] = c.slice(n);
            chunk = c.slice(0, n);
            this[BUFFERLENGTH] -= n;
          } else {
            this[BUFFER][0] = c.subarray(n);
            chunk = c.subarray(0, n);
            this[BUFFERLENGTH] -= n;
          }
        }
        this.emit("data", chunk);
        if (!this[BUFFER].length && !this[EOF])
          this.emit("drain");
        return chunk;
      }
      end(chunk, encoding, cb) {
        if (typeof chunk === "function") {
          cb = chunk;
          chunk = void 0;
        }
        if (typeof encoding === "function") {
          cb = encoding;
          encoding = "utf8";
        }
        if (chunk !== void 0)
          this.write(chunk, encoding);
        if (cb)
          this.once("end", cb);
        this[EOF] = true;
        this.writable = false;
        if (this[FLOWING] || !this[PAUSED])
          this[MAYBE_EMIT_END]();
        return this;
      }
      // don't let the internal resume be overwritten
      [RESUME]() {
        if (this[DESTROYED])
          return;
        if (!this[DATALISTENERS] && !this[PIPES].length) {
          this[DISCARDED] = true;
        }
        this[PAUSED] = false;
        this[FLOWING] = true;
        this.emit("resume");
        if (this[BUFFER].length)
          this[FLUSH]();
        else if (this[EOF])
          this[MAYBE_EMIT_END]();
        else
          this.emit("drain");
      }
      /**
       * Resume the stream if it is currently in a paused state
       *
       * If called when there are no pipe destinations or `data` event listeners,
       * this will place the stream in a "discarded" state, where all data will
       * be thrown away. The discarded state is removed if a pipe destination or
       * data handler is added, if pause() is called, or if any synchronous or
       * asynchronous iteration is started.
       */
      resume() {
        return this[RESUME]();
      }
      /**
       * Pause the stream
       */
      pause() {
        this[FLOWING] = false;
        this[PAUSED] = true;
        this[DISCARDED] = false;
      }
      /**
       * true if the stream has been forcibly destroyed
       */
      get destroyed() {
        return this[DESTROYED];
      }
      /**
       * true if the stream is currently in a flowing state, meaning that
       * any writes will be immediately emitted.
       */
      get flowing() {
        return this[FLOWING];
      }
      /**
       * true if the stream is currently in a paused state
       */
      get paused() {
        return this[PAUSED];
      }
      [BUFFERPUSH](chunk) {
        if (this[OBJECTMODE])
          this[BUFFERLENGTH] += 1;
        else
          this[BUFFERLENGTH] += chunk.length;
        this[BUFFER].push(chunk);
      }
      [BUFFERSHIFT]() {
        if (this[OBJECTMODE])
          this[BUFFERLENGTH] -= 1;
        else
          this[BUFFERLENGTH] -= this[BUFFER][0].length;
        return this[BUFFER].shift();
      }
      [FLUSH](noDrain = false) {
        do {
        } while (this[FLUSHCHUNK](this[BUFFERSHIFT]()) && this[BUFFER].length);
        if (!noDrain && !this[BUFFER].length && !this[EOF])
          this.emit("drain");
      }
      [FLUSHCHUNK](chunk) {
        this.emit("data", chunk);
        return this[FLOWING];
      }
      /**
       * Pipe all data emitted by this stream into the destination provided.
       *
       * Triggers the flow of data.
       */
      pipe(dest, opts) {
        if (this[DESTROYED])
          return dest;
        this[DISCARDED] = false;
        const ended = this[EMITTED_END];
        opts = opts || {};
        if (dest === proc.stdout || dest === proc.stderr)
          opts.end = false;
        else
          opts.end = opts.end !== false;
        opts.proxyErrors = !!opts.proxyErrors;
        if (ended) {
          if (opts.end)
            dest.end();
        } else {
          this[PIPES].push(!opts.proxyErrors ? new Pipe(this, dest, opts) : new PipeProxyErrors(this, dest, opts));
          if (this[ASYNC])
            defer(() => this[RESUME]());
          else
            this[RESUME]();
        }
        return dest;
      }
      /**
       * Fully unhook a piped destination stream.
       *
       * If the destination stream was the only consumer of this stream (ie,
       * there are no other piped destinations or `'data'` event listeners)
       * then the flow of data will stop until there is another consumer or
       * {@link Minipass#resume} is explicitly called.
       */
      unpipe(dest) {
        const p = this[PIPES].find((p2) => p2.dest === dest);
        if (p) {
          if (this[PIPES].length === 1) {
            if (this[FLOWING] && this[DATALISTENERS] === 0) {
              this[FLOWING] = false;
            }
            this[PIPES] = [];
          } else
            this[PIPES].splice(this[PIPES].indexOf(p), 1);
          p.unpipe();
        }
      }
      /**
       * Alias for {@link Minipass#on}
       */
      addListener(ev, handler) {
        return this.on(ev, handler);
      }
      /**
       * Mostly identical to `EventEmitter.on`, with the following
       * behavior differences to prevent data loss and unnecessary hangs:
       *
       * - Adding a 'data' event handler will trigger the flow of data
       *
       * - Adding a 'readable' event handler when there is data waiting to be read
       *   will cause 'readable' to be emitted immediately.
       *
       * - Adding an 'endish' event handler ('end', 'finish', etc.) which has
       *   already passed will cause the event to be emitted immediately and all
       *   handlers removed.
       *
       * - Adding an 'error' event handler after an error has been emitted will
       *   cause the event to be re-emitted immediately with the error previously
       *   raised.
       */
      on(ev, handler) {
        const ret = super.on(ev, handler);
        if (ev === "data") {
          this[DISCARDED] = false;
          this[DATALISTENERS]++;
          if (!this[PIPES].length && !this[FLOWING]) {
            this[RESUME]();
          }
        } else if (ev === "readable" && this[BUFFERLENGTH] !== 0) {
          super.emit("readable");
        } else if (isEndish(ev) && this[EMITTED_END]) {
          super.emit(ev);
          this.removeAllListeners(ev);
        } else if (ev === "error" && this[EMITTED_ERROR]) {
          const h = handler;
          if (this[ASYNC])
            defer(() => h.call(this, this[EMITTED_ERROR]));
          else
            h.call(this, this[EMITTED_ERROR]);
        }
        return ret;
      }
      /**
       * Alias for {@link Minipass#off}
       */
      removeListener(ev, handler) {
        return this.off(ev, handler);
      }
      /**
       * Mostly identical to `EventEmitter.off`
       *
       * If a 'data' event handler is removed, and it was the last consumer
       * (ie, there are no pipe destinations or other 'data' event listeners),
       * then the flow of data will stop until there is another consumer or
       * {@link Minipass#resume} is explicitly called.
       */
      off(ev, handler) {
        const ret = super.off(ev, handler);
        if (ev === "data") {
          this[DATALISTENERS] = this.listeners("data").length;
          if (this[DATALISTENERS] === 0 && !this[DISCARDED] && !this[PIPES].length) {
            this[FLOWING] = false;
          }
        }
        return ret;
      }
      /**
       * Mostly identical to `EventEmitter.removeAllListeners`
       *
       * If all 'data' event handlers are removed, and they were the last consumer
       * (ie, there are no pipe destinations), then the flow of data will stop
       * until there is another consumer or {@link Minipass#resume} is explicitly
       * called.
       */
      removeAllListeners(ev) {
        const ret = super.removeAllListeners(ev);
        if (ev === "data" || ev === void 0) {
          this[DATALISTENERS] = 0;
          if (!this[DISCARDED] && !this[PIPES].length) {
            this[FLOWING] = false;
          }
        }
        return ret;
      }
      /**
       * true if the 'end' event has been emitted
       */
      get emittedEnd() {
        return this[EMITTED_END];
      }
      [MAYBE_EMIT_END]() {
        if (!this[EMITTING_END] && !this[EMITTED_END] && !this[DESTROYED] && this[BUFFER].length === 0 && this[EOF]) {
          this[EMITTING_END] = true;
          this.emit("end");
          this.emit("prefinish");
          this.emit("finish");
          if (this[CLOSED])
            this.emit("close");
          this[EMITTING_END] = false;
        }
      }
      /**
       * Mostly identical to `EventEmitter.emit`, with the following
       * behavior differences to prevent data loss and unnecessary hangs:
       *
       * If the stream has been destroyed, and the event is something other
       * than 'close' or 'error', then `false` is returned and no handlers
       * are called.
       *
       * If the event is 'end', and has already been emitted, then the event
       * is ignored. If the stream is in a paused or non-flowing state, then
       * the event will be deferred until data flow resumes. If the stream is
       * async, then handlers will be called on the next tick rather than
       * immediately.
       *
       * If the event is 'close', and 'end' has not yet been emitted, then
       * the event will be deferred until after 'end' is emitted.
       *
       * If the event is 'error', and an AbortSignal was provided for the stream,
       * and there are no listeners, then the event is ignored, matching the
       * behavior of node core streams in the presense of an AbortSignal.
       *
       * If the event is 'finish' or 'prefinish', then all listeners will be
       * removed after emitting the event, to prevent double-firing.
       */
      emit(ev, ...args) {
        const data = args[0];
        if (ev !== "error" && ev !== "close" && ev !== DESTROYED && this[DESTROYED]) {
          return false;
        } else if (ev === "data") {
          return !this[OBJECTMODE] && !data ? false : this[ASYNC] ? (defer(() => this[EMITDATA](data)), true) : this[EMITDATA](data);
        } else if (ev === "end") {
          return this[EMITEND]();
        } else if (ev === "close") {
          this[CLOSED] = true;
          if (!this[EMITTED_END] && !this[DESTROYED])
            return false;
          const ret2 = super.emit("close");
          this.removeAllListeners("close");
          return ret2;
        } else if (ev === "error") {
          this[EMITTED_ERROR] = data;
          super.emit(ERROR, data);
          const ret2 = !this[SIGNAL] || this.listeners("error").length ? super.emit("error", data) : false;
          this[MAYBE_EMIT_END]();
          return ret2;
        } else if (ev === "resume") {
          const ret2 = super.emit("resume");
          this[MAYBE_EMIT_END]();
          return ret2;
        } else if (ev === "finish" || ev === "prefinish") {
          const ret2 = super.emit(ev);
          this.removeAllListeners(ev);
          return ret2;
        }
        const ret = super.emit(ev, ...args);
        this[MAYBE_EMIT_END]();
        return ret;
      }
      [EMITDATA](data) {
        for (const p of this[PIPES]) {
          if (p.dest.write(data) === false)
            this.pause();
        }
        const ret = this[DISCARDED] ? false : super.emit("data", data);
        this[MAYBE_EMIT_END]();
        return ret;
      }
      [EMITEND]() {
        if (this[EMITTED_END])
          return false;
        this[EMITTED_END] = true;
        this.readable = false;
        return this[ASYNC] ? (defer(() => this[EMITEND2]()), true) : this[EMITEND2]();
      }
      [EMITEND2]() {
        if (this[DECODER]) {
          const data = this[DECODER].end();
          if (data) {
            for (const p of this[PIPES]) {
              p.dest.write(data);
            }
            if (!this[DISCARDED])
              super.emit("data", data);
          }
        }
        for (const p of this[PIPES]) {
          p.end();
        }
        const ret = super.emit("end");
        this.removeAllListeners("end");
        return ret;
      }
      /**
       * Return a Promise that resolves to an array of all emitted data once
       * the stream ends.
       */
      async collect() {
        const buf = Object.assign([], {
          dataLength: 0
        });
        if (!this[OBJECTMODE])
          buf.dataLength = 0;
        const p = this.promise();
        this.on("data", (c) => {
          buf.push(c);
          if (!this[OBJECTMODE])
            buf.dataLength += c.length;
        });
        await p;
        return buf;
      }
      /**
       * Return a Promise that resolves to the concatenation of all emitted data
       * once the stream ends.
       *
       * Not allowed on objectMode streams.
       */
      async concat() {
        if (this[OBJECTMODE]) {
          throw new Error("cannot concat in objectMode");
        }
        const buf = await this.collect();
        return this[ENCODING] ? buf.join("") : Buffer.concat(buf, buf.dataLength);
      }
      /**
       * Return a void Promise that resolves once the stream ends.
       */
      async promise() {
        return new Promise((resolve, reject) => {
          this.on(DESTROYED, () => reject(new Error("stream destroyed")));
          this.on("error", (er) => reject(er));
          this.on("end", () => resolve());
        });
      }
      /**
       * Asynchronous `for await of` iteration.
       *
       * This will continue emitting all chunks until the stream terminates.
       */
      [Symbol.asyncIterator]() {
        this[DISCARDED] = false;
        let stopped = false;
        const stop = async () => {
          this.pause();
          stopped = true;
          return { value: void 0, done: true };
        };
        const next = () => {
          if (stopped)
            return stop();
          const res = this.read();
          if (res !== null)
            return Promise.resolve({ done: false, value: res });
          if (this[EOF])
            return stop();
          let resolve;
          let reject;
          const onerr = (er) => {
            this.off("data", ondata);
            this.off("end", onend);
            this.off(DESTROYED, ondestroy);
            stop();
            reject(er);
          };
          const ondata = (value) => {
            this.off("error", onerr);
            this.off("end", onend);
            this.off(DESTROYED, ondestroy);
            this.pause();
            resolve({ value, done: !!this[EOF] });
          };
          const onend = () => {
            this.off("error", onerr);
            this.off("data", ondata);
            this.off(DESTROYED, ondestroy);
            stop();
            resolve({ done: true, value: void 0 });
          };
          const ondestroy = () => onerr(new Error("stream destroyed"));
          return new Promise((res2, rej) => {
            reject = rej;
            resolve = res2;
            this.once(DESTROYED, ondestroy);
            this.once("error", onerr);
            this.once("end", onend);
            this.once("data", ondata);
          });
        };
        return {
          next,
          throw: stop,
          return: stop,
          [Symbol.asyncIterator]() {
            return this;
          }
        };
      }
      /**
       * Synchronous `for of` iteration.
       *
       * The iteration will terminate when the internal buffer runs out, even
       * if the stream has not yet terminated.
       */
      [Symbol.iterator]() {
        this[DISCARDED] = false;
        let stopped = false;
        const stop = () => {
          this.pause();
          this.off(ERROR, stop);
          this.off(DESTROYED, stop);
          this.off("end", stop);
          stopped = true;
          return { done: true, value: void 0 };
        };
        const next = () => {
          if (stopped)
            return stop();
          const value = this.read();
          return value === null ? stop() : { done: false, value };
        };
        this.once("end", stop);
        this.once(ERROR, stop);
        this.once(DESTROYED, stop);
        return {
          next,
          throw: stop,
          return: stop,
          [Symbol.iterator]() {
            return this;
          }
        };
      }
      /**
       * Destroy a stream, preventing it from being used for any further purpose.
       *
       * If the stream has a `close()` method, then it will be called on
       * destruction.
       *
       * After destruction, any attempt to write data, read data, or emit most
       * events will be ignored.
       *
       * If an error argument is provided, then it will be emitted in an
       * 'error' event.
       */
      destroy(er) {
        if (this[DESTROYED]) {
          if (er)
            this.emit("error", er);
          else
            this.emit(DESTROYED);
          return this;
        }
        this[DESTROYED] = true;
        this[DISCARDED] = true;
        this[BUFFER].length = 0;
        this[BUFFERLENGTH] = 0;
        const wc = this;
        if (typeof wc.close === "function" && !this[CLOSED])
          wc.close();
        if (er)
          this.emit("error", er);
        else
          this.emit(DESTROYED);
        return this;
      }
      /**
       * Alias for {@link isStream}
       *
       * Former export location, maintained for backwards compatibility.
       *
       * @deprecated
       */
      static get isStream() {
        return exports2.isStream;
      }
    };
    exports2.Minipass = Minipass;
  }
});

// node_modules/path-scurry/dist/commonjs/index.js
var require_commonjs4 = __commonJS({
  "node_modules/path-scurry/dist/commonjs/index.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PathScurry = exports2.Path = exports2.PathScurryDarwin = exports2.PathScurryPosix = exports2.PathScurryWin32 = exports2.PathScurryBase = exports2.PathPosix = exports2.PathWin32 = exports2.PathBase = exports2.ChildrenCache = exports2.ResolveCache = void 0;
    var lru_cache_1 = require_commonjs2();
    var node_path_1 = require("node:path");
    var node_url_1 = require("node:url");
    var fs_1 = require("fs");
    var actualFS = __importStar(require("node:fs"));
    var realpathSync = fs_1.realpathSync.native;
    var promises_1 = require("node:fs/promises");
    var minipass_1 = require_commonjs3();
    var defaultFS = {
      lstatSync: fs_1.lstatSync,
      readdir: fs_1.readdir,
      readdirSync: fs_1.readdirSync,
      readlinkSync: fs_1.readlinkSync,
      realpathSync,
      promises: {
        lstat: promises_1.lstat,
        readdir: promises_1.readdir,
        readlink: promises_1.readlink,
        realpath: promises_1.realpath
      }
    };
    var fsFromOption = (fsOption) => !fsOption || fsOption === defaultFS || fsOption === actualFS ? defaultFS : {
      ...defaultFS,
      ...fsOption,
      promises: {
        ...defaultFS.promises,
        ...fsOption.promises || {}
      }
    };
    var uncDriveRegexp = /^\\\\\?\\([a-z]:)\\?$/i;
    var uncToDrive = (rootPath) => rootPath.replace(/\//g, "\\").replace(uncDriveRegexp, "$1\\");
    var eitherSep = /[\\\/]/;
    var UNKNOWN = 0;
    var IFIFO = 1;
    var IFCHR = 2;
    var IFDIR = 4;
    var IFBLK = 6;
    var IFREG = 8;
    var IFLNK = 10;
    var IFSOCK = 12;
    var IFMT = 15;
    var IFMT_UNKNOWN = ~IFMT;
    var READDIR_CALLED = 16;
    var LSTAT_CALLED = 32;
    var ENOTDIR = 64;
    var ENOENT = 128;
    var ENOREADLINK = 256;
    var ENOREALPATH = 512;
    var ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH;
    var TYPEMASK = 1023;
    var entToType = (s) => s.isFile() ? IFREG : s.isDirectory() ? IFDIR : s.isSymbolicLink() ? IFLNK : s.isCharacterDevice() ? IFCHR : s.isBlockDevice() ? IFBLK : s.isSocket() ? IFSOCK : s.isFIFO() ? IFIFO : UNKNOWN;
    var normalizeCache = /* @__PURE__ */ new Map();
    var normalize = (s) => {
      const c = normalizeCache.get(s);
      if (c)
        return c;
      const n = s.normalize("NFKD");
      normalizeCache.set(s, n);
      return n;
    };
    var normalizeNocaseCache = /* @__PURE__ */ new Map();
    var normalizeNocase = (s) => {
      const c = normalizeNocaseCache.get(s);
      if (c)
        return c;
      const n = normalize(s.toLowerCase());
      normalizeNocaseCache.set(s, n);
      return n;
    };
    var ResolveCache = class extends lru_cache_1.LRUCache {
      constructor() {
        super({ max: 256 });
      }
    };
    exports2.ResolveCache = ResolveCache;
    var ChildrenCache = class extends lru_cache_1.LRUCache {
      constructor(maxSize = 16 * 1024) {
        super({
          maxSize,
          // parent + children
          sizeCalculation: (a) => a.length + 1
        });
      }
    };
    exports2.ChildrenCache = ChildrenCache;
    var setAsCwd = Symbol("PathScurry setAsCwd");
    var PathBase = class {
      /**
       * the basename of this path
       *
       * **Important**: *always* test the path name against any test string
       * usingthe {@link isNamed} method, and not by directly comparing this
       * string. Otherwise, unicode path strings that the system sees as identical
       * will not be properly treated as the same path, leading to incorrect
       * behavior and possible security issues.
       */
      name;
      /**
       * the Path entry corresponding to the path root.
       *
       * @internal
       */
      root;
      /**
       * All roots found within the current PathScurry family
       *
       * @internal
       */
      roots;
      /**
       * a reference to the parent path, or undefined in the case of root entries
       *
       * @internal
       */
      parent;
      /**
       * boolean indicating whether paths are compared case-insensitively
       * @internal
       */
      nocase;
      /**
       * boolean indicating that this path is the current working directory
       * of the PathScurry collection that contains it.
       */
      isCWD = false;
      // potential default fs override
      #fs;
      // Stats fields
      #dev;
      get dev() {
        return this.#dev;
      }
      #mode;
      get mode() {
        return this.#mode;
      }
      #nlink;
      get nlink() {
        return this.#nlink;
      }
      #uid;
      get uid() {
        return this.#uid;
      }
      #gid;
      get gid() {
        return this.#gid;
      }
      #rdev;
      get rdev() {
        return this.#rdev;
      }
      #blksize;
      get blksize() {
        return this.#blksize;
      }
      #ino;
      get ino() {
        return this.#ino;
      }
      #size;
      get size() {
        return this.#size;
      }
      #blocks;
      get blocks() {
        return this.#blocks;
      }
      #atimeMs;
      get atimeMs() {
        return this.#atimeMs;
      }
      #mtimeMs;
      get mtimeMs() {
        return this.#mtimeMs;
      }
      #ctimeMs;
      get ctimeMs() {
        return this.#ctimeMs;
      }
      #birthtimeMs;
      get birthtimeMs() {
        return this.#birthtimeMs;
      }
      #atime;
      get atime() {
        return this.#atime;
      }
      #mtime;
      get mtime() {
        return this.#mtime;
      }
      #ctime;
      get ctime() {
        return this.#ctime;
      }
      #birthtime;
      get birthtime() {
        return this.#birthtime;
      }
      #matchName;
      #depth;
      #fullpath;
      #fullpathPosix;
      #relative;
      #relativePosix;
      #type;
      #children;
      #linkTarget;
      #realpath;
      /**
       * This property is for compatibility with the Dirent class as of
       * Node v20, where Dirent['parentPath'] refers to the path of the
       * directory that was passed to readdir. For root entries, it's the path
       * to the entry itself.
       */
      get parentPath() {
        return (this.parent || this).fullpath();
      }
      /**
       * Deprecated alias for Dirent['parentPath'] Somewhat counterintuitively,
       * this property refers to the *parent* path, not the path object itself.
       *
       * @deprecated
       */
      get path() {
        return this.parentPath;
      }
      /**
       * Do not create new Path objects directly.  They should always be accessed
       * via the PathScurry class or other methods on the Path class.
       *
       * @internal
       */
      constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {
        this.name = name;
        this.#matchName = nocase ? normalizeNocase(name) : normalize(name);
        this.#type = type & TYPEMASK;
        this.nocase = nocase;
        this.roots = roots;
        this.root = root || this;
        this.#children = children;
        this.#fullpath = opts.fullpath;
        this.#relative = opts.relative;
        this.#relativePosix = opts.relativePosix;
        this.parent = opts.parent;
        if (this.parent) {
          this.#fs = this.parent.#fs;
        } else {
          this.#fs = fsFromOption(opts.fs);
        }
      }
      /**
       * Returns the depth of the Path object from its root.
       *
       * For example, a path at `/foo/bar` would have a depth of 2.
       */
      depth() {
        if (this.#depth !== void 0)
          return this.#depth;
        if (!this.parent)
          return this.#depth = 0;
        return this.#depth = this.parent.depth() + 1;
      }
      /**
       * @internal
       */
      childrenCache() {
        return this.#children;
      }
      /**
       * Get the Path object referenced by the string path, resolved from this Path
       */
      resolve(path) {
        if (!path) {
          return this;
        }
        const rootPath = this.getRootString(path);
        const dir = path.substring(rootPath.length);
        const dirParts = dir.split(this.splitSep);
        const result = rootPath ? this.getRoot(rootPath).#resolveParts(dirParts) : this.#resolveParts(dirParts);
        return result;
      }
      #resolveParts(dirParts) {
        let p = this;
        for (const part of dirParts) {
          p = p.child(part);
        }
        return p;
      }
      /**
       * Returns the cached children Path objects, if still available.  If they
       * have fallen out of the cache, then returns an empty array, and resets the
       * READDIR_CALLED bit, so that future calls to readdir() will require an fs
       * lookup.
       *
       * @internal
       */
      children() {
        const cached = this.#children.get(this);
        if (cached) {
          return cached;
        }
        const children = Object.assign([], { provisional: 0 });
        this.#children.set(this, children);
        this.#type &= ~READDIR_CALLED;
        return children;
      }
      /**
       * Resolves a path portion and returns or creates the child Path.
       *
       * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is
       * `'..'`.
       *
       * This should not be called directly.  If `pathPart` contains any path
       * separators, it will lead to unsafe undefined behavior.
       *
       * Use `Path.resolve()` instead.
       *
       * @internal
       */
      child(pathPart, opts) {
        if (pathPart === "" || pathPart === ".") {
          return this;
        }
        if (pathPart === "..") {
          return this.parent || this;
        }
        const children = this.children();
        const name = this.nocase ? normalizeNocase(pathPart) : normalize(pathPart);
        for (const p of children) {
          if (p.#matchName === name) {
            return p;
          }
        }
        const s = this.parent ? this.sep : "";
        const fullpath = this.#fullpath ? this.#fullpath + s + pathPart : void 0;
        const pchild = this.newChild(pathPart, UNKNOWN, {
          ...opts,
          parent: this,
          fullpath
        });
        if (!this.canReaddir()) {
          pchild.#type |= ENOENT;
        }
        children.push(pchild);
        return pchild;
      }
      /**
       * The relative path from the cwd. If it does not share an ancestor with
       * the cwd, then this ends up being equivalent to the fullpath()
       */
      relative() {
        if (this.isCWD)
          return "";
        if (this.#relative !== void 0) {
          return this.#relative;
        }
        const name = this.name;
        const p = this.parent;
        if (!p) {
          return this.#relative = this.name;
        }
        const pv = p.relative();
        return pv + (!pv || !p.parent ? "" : this.sep) + name;
      }
      /**
       * The relative path from the cwd, using / as the path separator.
       * If it does not share an ancestor with
       * the cwd, then this ends up being equivalent to the fullpathPosix()
       * On posix systems, this is identical to relative().
       */
      relativePosix() {
        if (this.sep === "/")
          return this.relative();
        if (this.isCWD)
          return "";
        if (this.#relativePosix !== void 0)
          return this.#relativePosix;
        const name = this.name;
        const p = this.parent;
        if (!p) {
          return this.#relativePosix = this.fullpathPosix();
        }
        const pv = p.relativePosix();
        return pv + (!pv || !p.parent ? "" : "/") + name;
      }
      /**
       * The fully resolved path string for this Path entry
       */
      fullpath() {
        if (this.#fullpath !== void 0) {
          return this.#fullpath;
        }
        const name = this.name;
        const p = this.parent;
        if (!p) {
          return this.#fullpath = this.name;
        }
        const pv = p.fullpath();
        const fp = pv + (!p.parent ? "" : this.sep) + name;
        return this.#fullpath = fp;
      }
      /**
       * On platforms other than windows, this is identical to fullpath.
       *
       * On windows, this is overridden to return the forward-slash form of the
       * full UNC path.
       */
      fullpathPosix() {
        if (this.#fullpathPosix !== void 0)
          return this.#fullpathPosix;
        if (this.sep === "/")
          return this.#fullpathPosix = this.fullpath();
        if (!this.parent) {
          const p2 = this.fullpath().replace(/\\/g, "/");
          if (/^[a-z]:\//i.test(p2)) {
            return this.#fullpathPosix = `//?/${p2}`;
          } else {
            return this.#fullpathPosix = p2;
          }
        }
        const p = this.parent;
        const pfpp = p.fullpathPosix();
        const fpp = pfpp + (!pfpp || !p.parent ? "" : "/") + this.name;
        return this.#fullpathPosix = fpp;
      }
      /**
       * Is the Path of an unknown type?
       *
       * Note that we might know *something* about it if there has been a previous
       * filesystem operation, for example that it does not exist, or is not a
       * link, or whether it has child entries.
       */
      isUnknown() {
        return (this.#type & IFMT) === UNKNOWN;
      }
      isType(type) {
        return this[`is${type}`]();
      }
      getType() {
        return this.isUnknown() ? "Unknown" : this.isDirectory() ? "Directory" : this.isFile() ? "File" : this.isSymbolicLink() ? "SymbolicLink" : this.isFIFO() ? "FIFO" : this.isCharacterDevice() ? "CharacterDevice" : this.isBlockDevice() ? "BlockDevice" : (
          /* c8 ignore start */
          this.isSocket() ? "Socket" : "Unknown"
        );
      }
      /**
       * Is the Path a regular file?
       */
      isFile() {
        return (this.#type & IFMT) === IFREG;
      }
      /**
       * Is the Path a directory?
       */
      isDirectory() {
        return (this.#type & IFMT) === IFDIR;
      }
      /**
       * Is the path a character device?
       */
      isCharacterDevice() {
        return (this.#type & IFMT) === IFCHR;
      }
      /**
       * Is the path a block device?
       */
      isBlockDevice() {
        return (this.#type & IFMT) === IFBLK;
      }
      /**
       * Is the path a FIFO pipe?
       */
      isFIFO() {
        return (this.#type & IFMT) === IFIFO;
      }
      /**
       * Is the path a socket?
       */
      isSocket() {
        return (this.#type & IFMT) === IFSOCK;
      }
      /**
       * Is the path a symbolic link?
       */
      isSymbolicLink() {
        return (this.#type & IFLNK) === IFLNK;
      }
      /**
       * Return the entry if it has been subject of a successful lstat, or
       * undefined otherwise.
       *
       * Does not read the filesystem, so an undefined result *could* simply
       * mean that we haven't called lstat on it.
       */
      lstatCached() {
        return this.#type & LSTAT_CALLED ? this : void 0;
      }
      /**
       * Return the cached link target if the entry has been the subject of a
       * successful readlink, or undefined otherwise.
       *
       * Does not read the filesystem, so an undefined result *could* just mean we
       * don't have any cached data. Only use it if you are very sure that a
       * readlink() has been called at some point.
       */
      readlinkCached() {
        return this.#linkTarget;
      }
      /**
       * Returns the cached realpath target if the entry has been the subject
       * of a successful realpath, or undefined otherwise.
       *
       * Does not read the filesystem, so an undefined result *could* just mean we
       * don't have any cached data. Only use it if you are very sure that a
       * realpath() has been called at some point.
       */
      realpathCached() {
        return this.#realpath;
      }
      /**
       * Returns the cached child Path entries array if the entry has been the
       * subject of a successful readdir(), or [] otherwise.
       *
       * Does not read the filesystem, so an empty array *could* just mean we
       * don't have any cached data. Only use it if you are very sure that a
       * readdir() has been called recently enough to still be valid.
       */
      readdirCached() {
        const children = this.children();
        return children.slice(0, children.provisional);
      }
      /**
       * Return true if it's worth trying to readlink.  Ie, we don't (yet) have
       * any indication that readlink will definitely fail.
       *
       * Returns false if the path is known to not be a symlink, if a previous
       * readlink failed, or if the entry does not exist.
       */
      canReadlink() {
        if (this.#linkTarget)
          return true;
        if (!this.parent)
          return false;
        const ifmt = this.#type & IFMT;
        return !(ifmt !== UNKNOWN && ifmt !== IFLNK || this.#type & ENOREADLINK || this.#type & ENOENT);
      }
      /**
       * Return true if readdir has previously been successfully called on this
       * path, indicating that cachedReaddir() is likely valid.
       */
      calledReaddir() {
        return !!(this.#type & READDIR_CALLED);
      }
      /**
       * Returns true if the path is known to not exist. That is, a previous lstat
       * or readdir failed to verify its existence when that would have been
       * expected, or a parent entry was marked either enoent or enotdir.
       */
      isENOENT() {
        return !!(this.#type & ENOENT);
      }
      /**
       * Return true if the path is a match for the given path name.  This handles
       * case sensitivity and unicode normalization.
       *
       * Note: even on case-sensitive systems, it is **not** safe to test the
       * equality of the `.name` property to determine whether a given pathname
       * matches, due to unicode normalization mismatches.
       *
       * Always use this method instead of testing the `path.name` property
       * directly.
       */
      isNamed(n) {
        return !this.nocase ? this.#matchName === normalize(n) : this.#matchName === normalizeNocase(n);
      }
      /**
       * Return the Path object corresponding to the target of a symbolic link.
       *
       * If the Path is not a symbolic link, or if the readlink call fails for any
       * reason, `undefined` is returned.
       *
       * Result is cached, and thus may be outdated if the filesystem is mutated.
       */
      async readlink() {
        const target = this.#linkTarget;
        if (target) {
          return target;
        }
        if (!this.canReadlink()) {
          return void 0;
        }
        if (!this.parent) {
          return void 0;
        }
        try {
          const read = await this.#fs.promises.readlink(this.fullpath());
          const linkTarget = (await this.parent.realpath())?.resolve(read);
          if (linkTarget) {
            return this.#linkTarget = linkTarget;
          }
        } catch (er) {
          this.#readlinkFail(er.code);
          return void 0;
        }
      }
      /**
       * Synchronous {@link PathBase.readlink}
       */
      readlinkSync() {
        const target = this.#linkTarget;
        if (target) {
          return target;
        }
        if (!this.canReadlink()) {
          return void 0;
        }
        if (!this.parent) {
          return void 0;
        }
        try {
          const read = this.#fs.readlinkSync(this.fullpath());
          const linkTarget = this.parent.realpathSync()?.resolve(read);
          if (linkTarget) {
            return this.#linkTarget = linkTarget;
          }
        } catch (er) {
          this.#readlinkFail(er.code);
          return void 0;
        }
      }
      #readdirSuccess(children) {
        this.#type |= READDIR_CALLED;
        for (let p = children.provisional; p < children.length; p++) {
          const c = children[p];
          if (c)
            c.#markENOENT();
        }
      }
      #markENOENT() {
        if (this.#type & ENOENT)
          return;
        this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN;
        this.#markChildrenENOENT();
      }
      #markChildrenENOENT() {
        const children = this.children();
        children.provisional = 0;
        for (const p of children) {
          p.#markENOENT();
        }
      }
      #markENOREALPATH() {
        this.#type |= ENOREALPATH;
        this.#markENOTDIR();
      }
      // save the information when we know the entry is not a dir
      #markENOTDIR() {
        if (this.#type & ENOTDIR)
          return;
        let t = this.#type;
        if ((t & IFMT) === IFDIR)
          t &= IFMT_UNKNOWN;
        this.#type = t | ENOTDIR;
        this.#markChildrenENOENT();
      }
      #readdirFail(code = "") {
        if (code === "ENOTDIR" || code === "EPERM") {
          this.#markENOTDIR();
        } else if (code === "ENOENT") {
          this.#markENOENT();
        } else {
          this.children().provisional = 0;
        }
      }
      #lstatFail(code = "") {
        if (code === "ENOTDIR") {
          const p = this.parent;
          p.#markENOTDIR();
        } else if (code === "ENOENT") {
          this.#markENOENT();
        }
      }
      #readlinkFail(code = "") {
        let ter = this.#type;
        ter |= ENOREADLINK;
        if (code === "ENOENT")
          ter |= ENOENT;
        if (code === "EINVAL" || code === "UNKNOWN") {
          ter &= IFMT_UNKNOWN;
        }
        this.#type = ter;
        if (code === "ENOTDIR" && this.parent) {
          this.parent.#markENOTDIR();
        }
      }
      #readdirAddChild(e, c) {
        return this.#readdirMaybePromoteChild(e, c) || this.#readdirAddNewChild(e, c);
      }
      #readdirAddNewChild(e, c) {
        const type = entToType(e);
        const child = this.newChild(e.name, type, { parent: this });
        const ifmt = child.#type & IFMT;
        if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {
          child.#type |= ENOTDIR;
        }
        c.unshift(child);
        c.provisional++;
        return child;
      }
      #readdirMaybePromoteChild(e, c) {
        for (let p = c.provisional; p < c.length; p++) {
          const pchild = c[p];
          const name = this.nocase ? normalizeNocase(e.name) : normalize(e.name);
          if (name !== pchild.#matchName) {
            continue;
          }
          return this.#readdirPromoteChild(e, pchild, p, c);
        }
      }
      #readdirPromoteChild(e, p, index, c) {
        const v = p.name;
        p.#type = p.#type & IFMT_UNKNOWN | entToType(e);
        if (v !== e.name)
          p.name = e.name;
        if (index !== c.provisional) {
          if (index === c.length - 1)
            c.pop();
          else
            c.splice(index, 1);
          c.unshift(p);
        }
        c.provisional++;
        return p;
      }
      /**
       * Call lstat() on this Path, and update all known information that can be
       * determined.
       *
       * Note that unlike `fs.lstat()`, the returned value does not contain some
       * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that
       * information is required, you will need to call `fs.lstat` yourself.
       *
       * If the Path refers to a nonexistent file, or if the lstat call fails for
       * any reason, `undefined` is returned.  Otherwise the updated Path object is
       * returned.
       *
       * Results are cached, and thus may be out of date if the filesystem is
       * mutated.
       */
      async lstat() {
        if ((this.#type & ENOENT) === 0) {
          try {
            this.#applyStat(await this.#fs.promises.lstat(this.fullpath()));
            return this;
          } catch (er) {
            this.#lstatFail(er.code);
          }
        }
      }
      /**
       * synchronous {@link PathBase.lstat}
       */
      lstatSync() {
        if ((this.#type & ENOENT) === 0) {
          try {
            this.#applyStat(this.#fs.lstatSync(this.fullpath()));
            return this;
          } catch (er) {
            this.#lstatFail(er.code);
          }
        }
      }
      #applyStat(st) {
        const { atime, atimeMs, birthtime, birthtimeMs, blksize, blocks, ctime, ctimeMs, dev, gid, ino, mode, mtime, mtimeMs, nlink, rdev, size, uid } = st;
        this.#atime = atime;
        this.#atimeMs = atimeMs;
        this.#birthtime = birthtime;
        this.#birthtimeMs = birthtimeMs;
        this.#blksize = blksize;
        this.#blocks = blocks;
        this.#ctime = ctime;
        this.#ctimeMs = ctimeMs;
        this.#dev = dev;
        this.#gid = gid;
        this.#ino = ino;
        this.#mode = mode;
        this.#mtime = mtime;
        this.#mtimeMs = mtimeMs;
        this.#nlink = nlink;
        this.#rdev = rdev;
        this.#size = size;
        this.#uid = uid;
        const ifmt = entToType(st);
        this.#type = this.#type & IFMT_UNKNOWN | ifmt | LSTAT_CALLED;
        if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {
          this.#type |= ENOTDIR;
        }
      }
      #onReaddirCB = [];
      #readdirCBInFlight = false;
      #callOnReaddirCB(children) {
        this.#readdirCBInFlight = false;
        const cbs = this.#onReaddirCB.slice();
        this.#onReaddirCB.length = 0;
        cbs.forEach((cb) => cb(null, children));
      }
      /**
       * Standard node-style callback interface to get list of directory entries.
       *
       * If the Path cannot or does not contain any children, then an empty array
       * is returned.
       *
       * Results are cached, and thus may be out of date if the filesystem is
       * mutated.
       *
       * @param cb The callback called with (er, entries).  Note that the `er`
       * param is somewhat extraneous, as all readdir() errors are handled and
       * simply result in an empty set of entries being returned.
       * @param allowZalgo Boolean indicating that immediately known results should
       * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release
       * zalgo at your peril, the dark pony lord is devious and unforgiving.
       */
      readdirCB(cb, allowZalgo = false) {
        if (!this.canReaddir()) {
          if (allowZalgo)
            cb(null, []);
          else
            queueMicrotask(() => cb(null, []));
          return;
        }
        const children = this.children();
        if (this.calledReaddir()) {
          const c = children.slice(0, children.provisional);
          if (allowZalgo)
            cb(null, c);
          else
            queueMicrotask(() => cb(null, c));
          return;
        }
        this.#onReaddirCB.push(cb);
        if (this.#readdirCBInFlight) {
          return;
        }
        this.#readdirCBInFlight = true;
        const fullpath = this.fullpath();
        this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {
          if (er) {
            this.#readdirFail(er.code);
            children.provisional = 0;
          } else {
            for (const e of entries) {
              this.#readdirAddChild(e, children);
            }
            this.#readdirSuccess(children);
          }
          this.#callOnReaddirCB(children.slice(0, children.provisional));
          return;
        });
      }
      #asyncReaddirInFlight;
      /**
       * Return an array of known child entries.
       *
       * If the Path cannot or does not contain any children, then an empty array
       * is returned.
       *
       * Results are cached, and thus may be out of date if the filesystem is
       * mutated.
       */
      async readdir() {
        if (!this.canReaddir()) {
          return [];
        }
        const children = this.children();
        if (this.calledReaddir()) {
          return children.slice(0, children.provisional);
        }
        const fullpath = this.fullpath();
        if (this.#asyncReaddirInFlight) {
          await this.#asyncReaddirInFlight;
        } else {
          let resolve = () => {
          };
          this.#asyncReaddirInFlight = new Promise((res) => resolve = res);
          try {
            for (const e of await this.#fs.promises.readdir(fullpath, {
              withFileTypes: true
            })) {
              this.#readdirAddChild(e, children);
            }
            this.#readdirSuccess(children);
          } catch (er) {
            this.#readdirFail(er.code);
            children.provisional = 0;
          }
          this.#asyncReaddirInFlight = void 0;
          resolve();
        }
        return children.slice(0, children.provisional);
      }
      /**
       * synchronous {@link PathBase.readdir}
       */
      readdirSync() {
        if (!this.canReaddir()) {
          return [];
        }
        const children = this.children();
        if (this.calledReaddir()) {
          return children.slice(0, children.provisional);
        }
        const fullpath = this.fullpath();
        try {
          for (const e of this.#fs.readdirSync(fullpath, {
            withFileTypes: true
          })) {
            this.#readdirAddChild(e, children);
          }
          this.#readdirSuccess(children);
        } catch (er) {
          this.#readdirFail(er.code);
          children.provisional = 0;
        }
        return children.slice(0, children.provisional);
      }
      canReaddir() {
        if (this.#type & ENOCHILD)
          return false;
        const ifmt = IFMT & this.#type;
        if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {
          return false;
        }
        return true;
      }
      shouldWalk(dirs, walkFilter) {
        return (this.#type & IFDIR) === IFDIR && !(this.#type & ENOCHILD) && !dirs.has(this) && (!walkFilter || walkFilter(this));
      }
      /**
       * Return the Path object corresponding to path as resolved
       * by realpath(3).
       *
       * If the realpath call fails for any reason, `undefined` is returned.
       *
       * Result is cached, and thus may be outdated if the filesystem is mutated.
       * On success, returns a Path object.
       */
      async realpath() {
        if (this.#realpath)
          return this.#realpath;
        if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type)
          return void 0;
        try {
          const rp = await this.#fs.promises.realpath(this.fullpath());
          return this.#realpath = this.resolve(rp);
        } catch (_) {
          this.#markENOREALPATH();
        }
      }
      /**
       * Synchronous {@link realpath}
       */
      realpathSync() {
        if (this.#realpath)
          return this.#realpath;
        if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type)
          return void 0;
        try {
          const rp = this.#fs.realpathSync(this.fullpath());
          return this.#realpath = this.resolve(rp);
        } catch (_) {
          this.#markENOREALPATH();
        }
      }
      /**
       * Internal method to mark this Path object as the scurry cwd,
       * called by {@link PathScurry#chdir}
       *
       * @internal
       */
      [setAsCwd](oldCwd) {
        if (oldCwd === this)
          return;
        oldCwd.isCWD = false;
        this.isCWD = true;
        const changed = /* @__PURE__ */ new Set([]);
        let rp = [];
        let p = this;
        while (p && p.parent) {
          changed.add(p);
          p.#relative = rp.join(this.sep);
          p.#relativePosix = rp.join("/");
          p = p.parent;
          rp.push("..");
        }
        p = oldCwd;
        while (p && p.parent && !changed.has(p)) {
          p.#relative = void 0;
          p.#relativePosix = void 0;
          p = p.parent;
        }
      }
    };
    exports2.PathBase = PathBase;
    var PathWin32 = class _PathWin32 extends PathBase {
      /**
       * Separator for generating path strings.
       */
      sep = "\\";
      /**
       * Separator for parsing path strings.
       */
      splitSep = eitherSep;
      /**
       * Do not create new Path objects directly.  They should always be accessed
       * via the PathScurry class or other methods on the Path class.
       *
       * @internal
       */
      constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {
        super(name, type, root, roots, nocase, children, opts);
      }
      /**
       * @internal
       */
      newChild(name, type = UNKNOWN, opts = {}) {
        return new _PathWin32(name, type, this.root, this.roots, this.nocase, this.childrenCache(), opts);
      }
      /**
       * @internal
       */
      getRootString(path) {
        return node_path_1.win32.parse(path).root;
      }
      /**
       * @internal
       */
      getRoot(rootPath) {
        rootPath = uncToDrive(rootPath.toUpperCase());
        if (rootPath === this.root.name) {
          return this.root;
        }
        for (const [compare, root] of Object.entries(this.roots)) {
          if (this.sameRoot(rootPath, compare)) {
            return this.roots[rootPath] = root;
          }
        }
        return this.roots[rootPath] = new PathScurryWin32(rootPath, this).root;
      }
      /**
       * @internal
       */
      sameRoot(rootPath, compare = this.root.name) {
        rootPath = rootPath.toUpperCase().replace(/\//g, "\\").replace(uncDriveRegexp, "$1\\");
        return rootPath === compare;
      }
    };
    exports2.PathWin32 = PathWin32;
    var PathPosix = class _PathPosix extends PathBase {
      /**
       * separator for parsing path strings
       */
      splitSep = "/";
      /**
       * separator for generating path strings
       */
      sep = "/";
      /**
       * Do not create new Path objects directly.  They should always be accessed
       * via the PathScurry class or other methods on the Path class.
       *
       * @internal
       */
      constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {
        super(name, type, root, roots, nocase, children, opts);
      }
      /**
       * @internal
       */
      getRootString(path) {
        return path.startsWith("/") ? "/" : "";
      }
      /**
       * @internal
       */
      getRoot(_rootPath) {
        return this.root;
      }
      /**
       * @internal
       */
      newChild(name, type = UNKNOWN, opts = {}) {
        return new _PathPosix(name, type, this.root, this.roots, this.nocase, this.childrenCache(), opts);
      }
    };
    exports2.PathPosix = PathPosix;
    var PathScurryBase = class {
      /**
       * The root Path entry for the current working directory of this Scurry
       */
      root;
      /**
       * The string path for the root of this Scurry's current working directory
       */
      rootPath;
      /**
       * A collection of all roots encountered, referenced by rootPath
       */
      roots;
      /**
       * The Path entry corresponding to this PathScurry's current working directory.
       */
      cwd;
      #resolveCache;
      #resolvePosixCache;
      #children;
      /**
       * Perform path comparisons case-insensitively.
       *
       * Defaults true on Darwin and Windows systems, false elsewhere.
       */
      nocase;
      #fs;
      /**
       * This class should not be instantiated directly.
       *
       * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry
       *
       * @internal
       */
      constructor(cwd = process.cwd(), pathImpl, sep, { nocase, childrenCacheSize = 16 * 1024, fs = defaultFS } = {}) {
        this.#fs = fsFromOption(fs);
        if (cwd instanceof URL || cwd.startsWith("file://")) {
          cwd = (0, node_url_1.fileURLToPath)(cwd);
        }
        const cwdPath = pathImpl.resolve(cwd);
        this.roots = /* @__PURE__ */ Object.create(null);
        this.rootPath = this.parseRootPath(cwdPath);
        this.#resolveCache = new ResolveCache();
        this.#resolvePosixCache = new ResolveCache();
        this.#children = new ChildrenCache(childrenCacheSize);
        const split = cwdPath.substring(this.rootPath.length).split(sep);
        if (split.length === 1 && !split[0]) {
          split.pop();
        }
        if (nocase === void 0) {
          throw new TypeError("must provide nocase setting to PathScurryBase ctor");
        }
        this.nocase = nocase;
        this.root = this.newRoot(this.#fs);
        this.roots[this.rootPath] = this.root;
        let prev = this.root;
        let len = split.length - 1;
        const joinSep = pathImpl.sep;
        let abs = this.rootPath;
        let sawFirst = false;
        for (const part of split) {
          const l = len--;
          prev = prev.child(part, {
            relative: new Array(l).fill("..").join(joinSep),
            relativePosix: new Array(l).fill("..").join("/"),
            fullpath: abs += (sawFirst ? "" : joinSep) + part
          });
          sawFirst = true;
        }
        this.cwd = prev;
      }
      /**
       * Get the depth of a provided path, string, or the cwd
       */
      depth(path = this.cwd) {
        if (typeof path === "string") {
          path = this.cwd.resolve(path);
        }
        return path.depth();
      }
      /**
       * Return the cache of child entries.  Exposed so subclasses can create
       * child Path objects in a platform-specific way.
       *
       * @internal
       */
      childrenCache() {
        return this.#children;
      }
      /**
       * Resolve one or more path strings to a resolved string
       *
       * Same interface as require('path').resolve.
       *
       * Much faster than path.resolve() when called multiple times for the same
       * path, because the resolved Path objects are cached.  Much slower
       * otherwise.
       */
      resolve(...paths) {
        let r = "";
        for (let i = paths.length - 1; i >= 0; i--) {
          const p = paths[i];
          if (!p || p === ".")
            continue;
          r = r ? `${p}/${r}` : p;
          if (this.isAbsolute(p)) {
            break;
          }
        }
        const cached = this.#resolveCache.get(r);
        if (cached !== void 0) {
          return cached;
        }
        const result = this.cwd.resolve(r).fullpath();
        this.#resolveCache.set(r, result);
        return result;
      }
      /**
       * Resolve one or more path strings to a resolved string, returning
       * the posix path.  Identical to .resolve() on posix systems, but on
       * windows will return a forward-slash separated UNC path.
       *
       * Same interface as require('path').resolve.
       *
       * Much faster than path.resolve() when called multiple times for the same
       * path, because the resolved Path objects are cached.  Much slower
       * otherwise.
       */
      resolvePosix(...paths) {
        let r = "";
        for (let i = paths.length - 1; i >= 0; i--) {
          const p = paths[i];
          if (!p || p === ".")
            continue;
          r = r ? `${p}/${r}` : p;
          if (this.isAbsolute(p)) {
            break;
          }
        }
        const cached = this.#resolvePosixCache.get(r);
        if (cached !== void 0) {
          return cached;
        }
        const result = this.cwd.resolve(r).fullpathPosix();
        this.#resolvePosixCache.set(r, result);
        return result;
      }
      /**
       * find the relative path from the cwd to the supplied path string or entry
       */
      relative(entry = this.cwd) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        }
        return entry.relative();
      }
      /**
       * find the relative path from the cwd to the supplied path string or
       * entry, using / as the path delimiter, even on Windows.
       */
      relativePosix(entry = this.cwd) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        }
        return entry.relativePosix();
      }
      /**
       * Return the basename for the provided string or Path object
       */
      basename(entry = this.cwd) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        }
        return entry.name;
      }
      /**
       * Return the dirname for the provided string or Path object
       */
      dirname(entry = this.cwd) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        }
        return (entry.parent || entry).fullpath();
      }
      async readdir(entry = this.cwd, opts = {
        withFileTypes: true
      }) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          opts = entry;
          entry = this.cwd;
        }
        const { withFileTypes } = opts;
        if (!entry.canReaddir()) {
          return [];
        } else {
          const p = await entry.readdir();
          return withFileTypes ? p : p.map((e) => e.name);
        }
      }
      readdirSync(entry = this.cwd, opts = {
        withFileTypes: true
      }) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          opts = entry;
          entry = this.cwd;
        }
        const { withFileTypes = true } = opts;
        if (!entry.canReaddir()) {
          return [];
        } else if (withFileTypes) {
          return entry.readdirSync();
        } else {
          return entry.readdirSync().map((e) => e.name);
        }
      }
      /**
       * Call lstat() on the string or Path object, and update all known
       * information that can be determined.
       *
       * Note that unlike `fs.lstat()`, the returned value does not contain some
       * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that
       * information is required, you will need to call `fs.lstat` yourself.
       *
       * If the Path refers to a nonexistent file, or if the lstat call fails for
       * any reason, `undefined` is returned.  Otherwise the updated Path object is
       * returned.
       *
       * Results are cached, and thus may be out of date if the filesystem is
       * mutated.
       */
      async lstat(entry = this.cwd) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        }
        return entry.lstat();
      }
      /**
       * synchronous {@link PathScurryBase.lstat}
       */
      lstatSync(entry = this.cwd) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        }
        return entry.lstatSync();
      }
      async readlink(entry = this.cwd, { withFileTypes } = {
        withFileTypes: false
      }) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          withFileTypes = entry.withFileTypes;
          entry = this.cwd;
        }
        const e = await entry.readlink();
        return withFileTypes ? e : e?.fullpath();
      }
      readlinkSync(entry = this.cwd, { withFileTypes } = {
        withFileTypes: false
      }) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          withFileTypes = entry.withFileTypes;
          entry = this.cwd;
        }
        const e = entry.readlinkSync();
        return withFileTypes ? e : e?.fullpath();
      }
      async realpath(entry = this.cwd, { withFileTypes } = {
        withFileTypes: false
      }) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          withFileTypes = entry.withFileTypes;
          entry = this.cwd;
        }
        const e = await entry.realpath();
        return withFileTypes ? e : e?.fullpath();
      }
      realpathSync(entry = this.cwd, { withFileTypes } = {
        withFileTypes: false
      }) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          withFileTypes = entry.withFileTypes;
          entry = this.cwd;
        }
        const e = entry.realpathSync();
        return withFileTypes ? e : e?.fullpath();
      }
      async walk(entry = this.cwd, opts = {}) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          opts = entry;
          entry = this.cwd;
        }
        const { withFileTypes = true, follow = false, filter, walkFilter } = opts;
        const results = [];
        if (!filter || filter(entry)) {
          results.push(withFileTypes ? entry : entry.fullpath());
        }
        const dirs = /* @__PURE__ */ new Set();
        const walk = (dir, cb) => {
          dirs.add(dir);
          dir.readdirCB((er, entries) => {
            if (er) {
              return cb(er);
            }
            let len = entries.length;
            if (!len)
              return cb();
            const next = () => {
              if (--len === 0) {
                cb();
              }
            };
            for (const e of entries) {
              if (!filter || filter(e)) {
                results.push(withFileTypes ? e : e.fullpath());
              }
              if (follow && e.isSymbolicLink()) {
                e.realpath().then((r) => r?.isUnknown() ? r.lstat() : r).then((r) => r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next());
              } else {
                if (e.shouldWalk(dirs, walkFilter)) {
                  walk(e, next);
                } else {
                  next();
                }
              }
            }
          }, true);
        };
        const start = entry;
        return new Promise((res, rej) => {
          walk(start, (er) => {
            if (er)
              return rej(er);
            res(results);
          });
        });
      }
      walkSync(entry = this.cwd, opts = {}) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          opts = entry;
          entry = this.cwd;
        }
        const { withFileTypes = true, follow = false, filter, walkFilter } = opts;
        const results = [];
        if (!filter || filter(entry)) {
          results.push(withFileTypes ? entry : entry.fullpath());
        }
        const dirs = /* @__PURE__ */ new Set([entry]);
        for (const dir of dirs) {
          const entries = dir.readdirSync();
          for (const e of entries) {
            if (!filter || filter(e)) {
              results.push(withFileTypes ? e : e.fullpath());
            }
            let r = e;
            if (e.isSymbolicLink()) {
              if (!(follow && (r = e.realpathSync())))
                continue;
              if (r.isUnknown())
                r.lstatSync();
            }
            if (r.shouldWalk(dirs, walkFilter)) {
              dirs.add(r);
            }
          }
        }
        return results;
      }
      /**
       * Support for `for await`
       *
       * Alias for {@link PathScurryBase.iterate}
       *
       * Note: As of Node 19, this is very slow, compared to other methods of
       * walking.  Consider using {@link PathScurryBase.stream} if memory overhead
       * and backpressure are concerns, or {@link PathScurryBase.walk} if not.
       */
      [Symbol.asyncIterator]() {
        return this.iterate();
      }
      iterate(entry = this.cwd, options = {}) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          options = entry;
          entry = this.cwd;
        }
        return this.stream(entry, options)[Symbol.asyncIterator]();
      }
      /**
       * Iterating over a PathScurry performs a synchronous walk.
       *
       * Alias for {@link PathScurryBase.iterateSync}
       */
      [Symbol.iterator]() {
        return this.iterateSync();
      }
      *iterateSync(entry = this.cwd, opts = {}) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          opts = entry;
          entry = this.cwd;
        }
        const { withFileTypes = true, follow = false, filter, walkFilter } = opts;
        if (!filter || filter(entry)) {
          yield withFileTypes ? entry : entry.fullpath();
        }
        const dirs = /* @__PURE__ */ new Set([entry]);
        for (const dir of dirs) {
          const entries = dir.readdirSync();
          for (const e of entries) {
            if (!filter || filter(e)) {
              yield withFileTypes ? e : e.fullpath();
            }
            let r = e;
            if (e.isSymbolicLink()) {
              if (!(follow && (r = e.realpathSync())))
                continue;
              if (r.isUnknown())
                r.lstatSync();
            }
            if (r.shouldWalk(dirs, walkFilter)) {
              dirs.add(r);
            }
          }
        }
      }
      stream(entry = this.cwd, opts = {}) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          opts = entry;
          entry = this.cwd;
        }
        const { withFileTypes = true, follow = false, filter, walkFilter } = opts;
        const results = new minipass_1.Minipass({ objectMode: true });
        if (!filter || filter(entry)) {
          results.write(withFileTypes ? entry : entry.fullpath());
        }
        const dirs = /* @__PURE__ */ new Set();
        const queue = [entry];
        let processing = 0;
        const process2 = () => {
          let paused = false;
          while (!paused) {
            const dir = queue.shift();
            if (!dir) {
              if (processing === 0)
                results.end();
              return;
            }
            processing++;
            dirs.add(dir);
            const onReaddir = (er, entries, didRealpaths = false) => {
              if (er)
                return results.emit("error", er);
              if (follow && !didRealpaths) {
                const promises = [];
                for (const e of entries) {
                  if (e.isSymbolicLink()) {
                    promises.push(e.realpath().then((r) => r?.isUnknown() ? r.lstat() : r));
                  }
                }
                if (promises.length) {
                  Promise.all(promises).then(() => onReaddir(null, entries, true));
                  return;
                }
              }
              for (const e of entries) {
                if (e && (!filter || filter(e))) {
                  if (!results.write(withFileTypes ? e : e.fullpath())) {
                    paused = true;
                  }
                }
              }
              processing--;
              for (const e of entries) {
                const r = e.realpathCached() || e;
                if (r.shouldWalk(dirs, walkFilter)) {
                  queue.push(r);
                }
              }
              if (paused && !results.flowing) {
                results.once("drain", process2);
              } else if (!sync) {
                process2();
              }
            };
            let sync = true;
            dir.readdirCB(onReaddir, true);
            sync = false;
          }
        };
        process2();
        return results;
      }
      streamSync(entry = this.cwd, opts = {}) {
        if (typeof entry === "string") {
          entry = this.cwd.resolve(entry);
        } else if (!(entry instanceof PathBase)) {
          opts = entry;
          entry = this.cwd;
        }
        const { withFileTypes = true, follow = false, filter, walkFilter } = opts;
        const results = new minipass_1.Minipass({ objectMode: true });
        const dirs = /* @__PURE__ */ new Set();
        if (!filter || filter(entry)) {
          results.write(withFileTypes ? entry : entry.fullpath());
        }
        const queue = [entry];
        let processing = 0;
        const process2 = () => {
          let paused = false;
          while (!paused) {
            const dir = queue.shift();
            if (!dir) {
              if (processing === 0)
                results.end();
              return;
            }
            processing++;
            dirs.add(dir);
            const entries = dir.readdirSync();
            for (const e of entries) {
              if (!filter || filter(e)) {
                if (!results.write(withFileTypes ? e : e.fullpath())) {
                  paused = true;
                }
              }
            }
            processing--;
            for (const e of entries) {
              let r = e;
              if (e.isSymbolicLink()) {
                if (!(follow && (r = e.realpathSync())))
                  continue;
                if (r.isUnknown())
                  r.lstatSync();
              }
              if (r.shouldWalk(dirs, walkFilter)) {
                queue.push(r);
              }
            }
          }
          if (paused && !results.flowing)
            results.once("drain", process2);
        };
        process2();
        return results;
      }
      chdir(path = this.cwd) {
        const oldCwd = this.cwd;
        this.cwd = typeof path === "string" ? this.cwd.resolve(path) : path;
        this.cwd[setAsCwd](oldCwd);
      }
    };
    exports2.PathScurryBase = PathScurryBase;
    var PathScurryWin32 = class extends PathScurryBase {
      /**
       * separator for generating path strings
       */
      sep = "\\";
      constructor(cwd = process.cwd(), opts = {}) {
        const { nocase = true } = opts;
        super(cwd, node_path_1.win32, "\\", { ...opts, nocase });
        this.nocase = nocase;
        for (let p = this.cwd; p; p = p.parent) {
          p.nocase = this.nocase;
        }
      }
      /**
       * @internal
       */
      parseRootPath(dir) {
        return node_path_1.win32.parse(dir).root.toUpperCase();
      }
      /**
       * @internal
       */
      newRoot(fs) {
        return new PathWin32(this.rootPath, IFDIR, void 0, this.roots, this.nocase, this.childrenCache(), { fs });
      }
      /**
       * Return true if the provided path string is an absolute path
       */
      isAbsolute(p) {
        return p.startsWith("/") || p.startsWith("\\") || /^[a-z]:(\/|\\)/i.test(p);
      }
    };
    exports2.PathScurryWin32 = PathScurryWin32;
    var PathScurryPosix = class extends PathScurryBase {
      /**
       * separator for generating path strings
       */
      sep = "/";
      constructor(cwd = process.cwd(), opts = {}) {
        const { nocase = false } = opts;
        super(cwd, node_path_1.posix, "/", { ...opts, nocase });
        this.nocase = nocase;
      }
      /**
       * @internal
       */
      parseRootPath(_dir) {
        return "/";
      }
      /**
       * @internal
       */
      newRoot(fs) {
        return new PathPosix(this.rootPath, IFDIR, void 0, this.roots, this.nocase, this.childrenCache(), { fs });
      }
      /**
       * Return true if the provided path string is an absolute path
       */
      isAbsolute(p) {
        return p.startsWith("/");
      }
    };
    exports2.PathScurryPosix = PathScurryPosix;
    var PathScurryDarwin = class extends PathScurryPosix {
      constructor(cwd = process.cwd(), opts = {}) {
        const { nocase = true } = opts;
        super(cwd, { ...opts, nocase });
      }
    };
    exports2.PathScurryDarwin = PathScurryDarwin;
    exports2.Path = process.platform === "win32" ? PathWin32 : PathPosix;
    exports2.PathScurry = process.platform === "win32" ? PathScurryWin32 : process.platform === "darwin" ? PathScurryDarwin : PathScurryPosix;
  }
});

// node_modules/glob/dist/commonjs/pattern.js
var require_pattern = __commonJS({
  "node_modules/glob/dist/commonjs/pattern.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.Pattern = void 0;
    var minimatch_1 = require_commonjs();
    var isPatternList = (pl) => pl.length >= 1;
    var isGlobList = (gl) => gl.length >= 1;
    var Pattern = class _Pattern {
      #patternList;
      #globList;
      #index;
      length;
      #platform;
      #rest;
      #globString;
      #isDrive;
      #isUNC;
      #isAbsolute;
      #followGlobstar = true;
      constructor(patternList, globList, index, platform) {
        if (!isPatternList(patternList)) {
          throw new TypeError("empty pattern list");
        }
        if (!isGlobList(globList)) {
          throw new TypeError("empty glob list");
        }
        if (globList.length !== patternList.length) {
          throw new TypeError("mismatched pattern list and glob list lengths");
        }
        this.length = patternList.length;
        if (index < 0 || index >= this.length) {
          throw new TypeError("index out of range");
        }
        this.#patternList = patternList;
        this.#globList = globList;
        this.#index = index;
        this.#platform = platform;
        if (this.#index === 0) {
          if (this.isUNC()) {
            const [p0, p1, p2, p3, ...prest] = this.#patternList;
            const [g0, g1, g2, g3, ...grest] = this.#globList;
            if (prest[0] === "") {
              prest.shift();
              grest.shift();
            }
            const p = [p0, p1, p2, p3, ""].join("/");
            const g = [g0, g1, g2, g3, ""].join("/");
            this.#patternList = [p, ...prest];
            this.#globList = [g, ...grest];
            this.length = this.#patternList.length;
          } else if (this.isDrive() || this.isAbsolute()) {
            const [p1, ...prest] = this.#patternList;
            const [g1, ...grest] = this.#globList;
            if (prest[0] === "") {
              prest.shift();
              grest.shift();
            }
            const p = p1 + "/";
            const g = g1 + "/";
            this.#patternList = [p, ...prest];
            this.#globList = [g, ...grest];
            this.length = this.#patternList.length;
          }
        }
      }
      /**
       * The first entry in the parsed list of patterns
       */
      pattern() {
        return this.#patternList[this.#index];
      }
      /**
       * true of if pattern() returns a string
       */
      isString() {
        return typeof this.#patternList[this.#index] === "string";
      }
      /**
       * true of if pattern() returns GLOBSTAR
       */
      isGlobstar() {
        return this.#patternList[this.#index] === minimatch_1.GLOBSTAR;
      }
      /**
       * true if pattern() returns a regexp
       */
      isRegExp() {
        return this.#patternList[this.#index] instanceof RegExp;
      }
      /**
       * The /-joined set of glob parts that make up this pattern
       */
      globString() {
        return this.#globString = this.#globString || (this.#index === 0 ? this.isAbsolute() ? this.#globList[0] + this.#globList.slice(1).join("/") : this.#globList.join("/") : this.#globList.slice(this.#index).join("/"));
      }
      /**
       * true if there are more pattern parts after this one
       */
      hasMore() {
        return this.length > this.#index + 1;
      }
      /**
       * The rest of the pattern after this part, or null if this is the end
       */
      rest() {
        if (this.#rest !== void 0)
          return this.#rest;
        if (!this.hasMore())
          return this.#rest = null;
        this.#rest = new _Pattern(this.#patternList, this.#globList, this.#index + 1, this.#platform);
        this.#rest.#isAbsolute = this.#isAbsolute;
        this.#rest.#isUNC = this.#isUNC;
        this.#rest.#isDrive = this.#isDrive;
        return this.#rest;
      }
      /**
       * true if the pattern represents a //unc/path/ on windows
       */
      isUNC() {
        const pl = this.#patternList;
        return this.#isUNC !== void 0 ? this.#isUNC : this.#isUNC = this.#platform === "win32" && this.#index === 0 && pl[0] === "" && pl[1] === "" && typeof pl[2] === "string" && !!pl[2] && typeof pl[3] === "string" && !!pl[3];
      }
      // pattern like C:/...
      // split = ['C:', ...]
      // XXX: would be nice to handle patterns like `c:*` to test the cwd
      // in c: for *, but I don't know of a way to even figure out what that
      // cwd is without actually chdir'ing into it?
      /**
       * True if the pattern starts with a drive letter on Windows
       */
      isDrive() {
        const pl = this.#patternList;
        return this.#isDrive !== void 0 ? this.#isDrive : this.#isDrive = this.#platform === "win32" && this.#index === 0 && this.length > 1 && typeof pl[0] === "string" && /^[a-z]:$/i.test(pl[0]);
      }
      // pattern = '/' or '/...' or '/x/...'
      // split = ['', ''] or ['', ...] or ['', 'x', ...]
      // Drive and UNC both considered absolute on windows
      /**
       * True if the pattern is rooted on an absolute path
       */
      isAbsolute() {
        const pl = this.#patternList;
        return this.#isAbsolute !== void 0 ? this.#isAbsolute : this.#isAbsolute = pl[0] === "" && pl.length > 1 || this.isDrive() || this.isUNC();
      }
      /**
       * consume the root of the pattern, and return it
       */
      root() {
        const p = this.#patternList[0];
        return typeof p === "string" && this.isAbsolute() && this.#index === 0 ? p : "";
      }
      /**
       * Check to see if the current globstar pattern is allowed to follow
       * a symbolic link.
       */
      checkFollowGlobstar() {
        return !(this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar);
      }
      /**
       * Mark that the current globstar pattern is following a symbolic link
       */
      markFollowGlobstar() {
        if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)
          return false;
        this.#followGlobstar = false;
        return true;
      }
    };
    exports2.Pattern = Pattern;
  }
});

// node_modules/glob/dist/commonjs/ignore.js
var require_ignore = __commonJS({
  "node_modules/glob/dist/commonjs/ignore.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.Ignore = void 0;
    var minimatch_1 = require_commonjs();
    var pattern_js_1 = require_pattern();
    var defaultPlatform = typeof process === "object" && process && typeof process.platform === "string" ? process.platform : "linux";
    var Ignore = class {
      relative;
      relativeChildren;
      absolute;
      absoluteChildren;
      platform;
      mmopts;
      constructor(ignored, { nobrace, nocase, noext, noglobstar, platform = defaultPlatform }) {
        this.relative = [];
        this.absolute = [];
        this.relativeChildren = [];
        this.absoluteChildren = [];
        this.platform = platform;
        this.mmopts = {
          dot: true,
          nobrace,
          nocase,
          noext,
          noglobstar,
          optimizationLevel: 2,
          platform,
          nocomment: true,
          nonegate: true
        };
        for (const ign of ignored)
          this.add(ign);
      }
      add(ign) {
        const mm = new minimatch_1.Minimatch(ign, this.mmopts);
        for (let i = 0; i < mm.set.length; i++) {
          const parsed = mm.set[i];
          const globParts = mm.globParts[i];
          if (!parsed || !globParts) {
            throw new Error("invalid pattern object");
          }
          while (parsed[0] === "." && globParts[0] === ".") {
            parsed.shift();
            globParts.shift();
          }
          const p = new pattern_js_1.Pattern(parsed, globParts, 0, this.platform);
          const m = new minimatch_1.Minimatch(p.globString(), this.mmopts);
          const children = globParts[globParts.length - 1] === "**";
          const absolute = p.isAbsolute();
          if (absolute)
            this.absolute.push(m);
          else
            this.relative.push(m);
          if (children) {
            if (absolute)
              this.absoluteChildren.push(m);
            else
              this.relativeChildren.push(m);
          }
        }
      }
      ignored(p) {
        const fullpath = p.fullpath();
        const fullpaths = `${fullpath}/`;
        const relative = p.relative() || ".";
        const relatives = `${relative}/`;
        for (const m of this.relative) {
          if (m.match(relative) || m.match(relatives))
            return true;
        }
        for (const m of this.absolute) {
          if (m.match(fullpath) || m.match(fullpaths))
            return true;
        }
        return false;
      }
      childrenIgnored(p) {
        const fullpath = p.fullpath() + "/";
        const relative = (p.relative() || ".") + "/";
        for (const m of this.relativeChildren) {
          if (m.match(relative))
            return true;
        }
        for (const m of this.absoluteChildren) {
          if (m.match(fullpath))
            return true;
        }
        return false;
      }
    };
    exports2.Ignore = Ignore;
  }
});

// node_modules/glob/dist/commonjs/processor.js
var require_processor = __commonJS({
  "node_modules/glob/dist/commonjs/processor.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.Processor = exports2.SubWalks = exports2.MatchRecord = exports2.HasWalkedCache = void 0;
    var minimatch_1 = require_commonjs();
    var HasWalkedCache = class _HasWalkedCache {
      store;
      constructor(store = /* @__PURE__ */ new Map()) {
        this.store = store;
      }
      copy() {
        return new _HasWalkedCache(new Map(this.store));
      }
      hasWalked(target, pattern) {
        return this.store.get(target.fullpath())?.has(pattern.globString());
      }
      storeWalked(target, pattern) {
        const fullpath = target.fullpath();
        const cached = this.store.get(fullpath);
        if (cached)
          cached.add(pattern.globString());
        else
          this.store.set(fullpath, /* @__PURE__ */ new Set([pattern.globString()]));
      }
    };
    exports2.HasWalkedCache = HasWalkedCache;
    var MatchRecord = class {
      store = /* @__PURE__ */ new Map();
      add(target, absolute, ifDir) {
        const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0);
        const current = this.store.get(target);
        this.store.set(target, current === void 0 ? n : n & current);
      }
      // match, absolute, ifdir
      entries() {
        return [...this.store.entries()].map(([path, n]) => [
          path,
          !!(n & 2),
          !!(n & 1)
        ]);
      }
    };
    exports2.MatchRecord = MatchRecord;
    var SubWalks = class {
      store = /* @__PURE__ */ new Map();
      add(target, pattern) {
        if (!target.canReaddir()) {
          return;
        }
        const subs = this.store.get(target);
        if (subs) {
          if (!subs.find((p) => p.globString() === pattern.globString())) {
            subs.push(pattern);
          }
        } else
          this.store.set(target, [pattern]);
      }
      get(target) {
        const subs = this.store.get(target);
        if (!subs) {
          throw new Error("attempting to walk unknown path");
        }
        return subs;
      }
      entries() {
        return this.keys().map((k) => [k, this.store.get(k)]);
      }
      keys() {
        return [...this.store.keys()].filter((t) => t.canReaddir());
      }
    };
    exports2.SubWalks = SubWalks;
    var Processor = class _Processor {
      hasWalkedCache;
      matches = new MatchRecord();
      subwalks = new SubWalks();
      patterns;
      follow;
      dot;
      opts;
      constructor(opts, hasWalkedCache) {
        this.opts = opts;
        this.follow = !!opts.follow;
        this.dot = !!opts.dot;
        this.hasWalkedCache = hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache();
      }
      processPatterns(target, patterns) {
        this.patterns = patterns;
        const processingSet = patterns.map((p) => [target, p]);
        for (let [t, pattern] of processingSet) {
          this.hasWalkedCache.storeWalked(t, pattern);
          const root = pattern.root();
          const absolute = pattern.isAbsolute() && this.opts.absolute !== false;
          if (root) {
            t = t.resolve(root === "/" && this.opts.root !== void 0 ? this.opts.root : root);
            const rest2 = pattern.rest();
            if (!rest2) {
              this.matches.add(t, true, false);
              continue;
            } else {
              pattern = rest2;
            }
          }
          if (t.isENOENT())
            continue;
          let p;
          let rest;
          let changed = false;
          while (typeof (p = pattern.pattern()) === "string" && (rest = pattern.rest())) {
            const c = t.resolve(p);
            t = c;
            pattern = rest;
            changed = true;
          }
          p = pattern.pattern();
          rest = pattern.rest();
          if (changed) {
            if (this.hasWalkedCache.hasWalked(t, pattern))
              continue;
            this.hasWalkedCache.storeWalked(t, pattern);
          }
          if (typeof p === "string") {
            const ifDir = p === ".." || p === "" || p === ".";
            this.matches.add(t.resolve(p), absolute, ifDir);
            continue;
          } else if (p === minimatch_1.GLOBSTAR) {
            if (!t.isSymbolicLink() || this.follow || pattern.checkFollowGlobstar()) {
              this.subwalks.add(t, pattern);
            }
            const rp = rest?.pattern();
            const rrest = rest?.rest();
            if (!rest || (rp === "" || rp === ".") && !rrest) {
              this.matches.add(t, absolute, rp === "" || rp === ".");
            } else {
              if (rp === "..") {
                const tp = t.parent || t;
                if (!rrest)
                  this.matches.add(tp, absolute, true);
                else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {
                  this.subwalks.add(tp, rrest);
                }
              }
            }
          } else if (p instanceof RegExp) {
            this.subwalks.add(t, pattern);
          }
        }
        return this;
      }
      subwalkTargets() {
        return this.subwalks.keys();
      }
      child() {
        return new _Processor(this.opts, this.hasWalkedCache);
      }
      // return a new Processor containing the subwalks for each
      // child entry, and a set of matches, and
      // a hasWalkedCache that's a copy of this one
      // then we're going to call
      filterEntries(parent, entries) {
        const patterns = this.subwalks.get(parent);
        const results = this.child();
        for (const e of entries) {
          for (const pattern of patterns) {
            const absolute = pattern.isAbsolute();
            const p = pattern.pattern();
            const rest = pattern.rest();
            if (p === minimatch_1.GLOBSTAR) {
              results.testGlobstar(e, pattern, rest, absolute);
            } else if (p instanceof RegExp) {
              results.testRegExp(e, p, rest, absolute);
            } else {
              results.testString(e, p, rest, absolute);
            }
          }
        }
        return results;
      }
      testGlobstar(e, pattern, rest, absolute) {
        if (this.dot || !e.name.startsWith(".")) {
          if (!pattern.hasMore()) {
            this.matches.add(e, absolute, false);
          }
          if (e.canReaddir()) {
            if (this.follow || !e.isSymbolicLink()) {
              this.subwalks.add(e, pattern);
            } else if (e.isSymbolicLink()) {
              if (rest && pattern.checkFollowGlobstar()) {
                this.subwalks.add(e, rest);
              } else if (pattern.markFollowGlobstar()) {
                this.subwalks.add(e, pattern);
              }
            }
          }
        }
        if (rest) {
          const rp = rest.pattern();
          if (typeof rp === "string" && // dots and empty were handled already
          rp !== ".." && rp !== "" && rp !== ".") {
            this.testString(e, rp, rest.rest(), absolute);
          } else if (rp === "..") {
            const ep = e.parent || e;
            this.subwalks.add(ep, rest);
          } else if (rp instanceof RegExp) {
            this.testRegExp(e, rp, rest.rest(), absolute);
          }
        }
      }
      testRegExp(e, p, rest, absolute) {
        if (!p.test(e.name))
          return;
        if (!rest) {
          this.matches.add(e, absolute, false);
        } else {
          this.subwalks.add(e, rest);
        }
      }
      testString(e, p, rest, absolute) {
        if (!e.isNamed(p))
          return;
        if (!rest) {
          this.matches.add(e, absolute, false);
        } else {
          this.subwalks.add(e, rest);
        }
      }
    };
    exports2.Processor = Processor;
  }
});

// node_modules/glob/dist/commonjs/walker.js
var require_walker = __commonJS({
  "node_modules/glob/dist/commonjs/walker.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.GlobStream = exports2.GlobWalker = exports2.GlobUtil = void 0;
    var minipass_1 = require_commonjs3();
    var ignore_js_1 = require_ignore();
    var processor_js_1 = require_processor();
    var makeIgnore = (ignore, opts) => typeof ignore === "string" ? new ignore_js_1.Ignore([ignore], opts) : Array.isArray(ignore) ? new ignore_js_1.Ignore(ignore, opts) : ignore;
    var GlobUtil = class {
      path;
      patterns;
      opts;
      seen = /* @__PURE__ */ new Set();
      paused = false;
      aborted = false;
      #onResume = [];
      #ignore;
      #sep;
      signal;
      maxDepth;
      includeChildMatches;
      constructor(patterns, path, opts) {
        this.patterns = patterns;
        this.path = path;
        this.opts = opts;
        this.#sep = !opts.posix && opts.platform === "win32" ? "\\" : "/";
        this.includeChildMatches = opts.includeChildMatches !== false;
        if (opts.ignore || !this.includeChildMatches) {
          this.#ignore = makeIgnore(opts.ignore ?? [], opts);
          if (!this.includeChildMatches && typeof this.#ignore.add !== "function") {
            const m = "cannot ignore child matches, ignore lacks add() method.";
            throw new Error(m);
          }
        }
        this.maxDepth = opts.maxDepth || Infinity;
        if (opts.signal) {
          this.signal = opts.signal;
          this.signal.addEventListener("abort", () => {
            this.#onResume.length = 0;
          });
        }
      }
      #ignored(path) {
        return this.seen.has(path) || !!this.#ignore?.ignored?.(path);
      }
      #childrenIgnored(path) {
        return !!this.#ignore?.childrenIgnored?.(path);
      }
      // backpressure mechanism
      pause() {
        this.paused = true;
      }
      resume() {
        if (this.signal?.aborted)
          return;
        this.paused = false;
        let fn = void 0;
        while (!this.paused && (fn = this.#onResume.shift())) {
          fn();
        }
      }
      onResume(fn) {
        if (this.signal?.aborted)
          return;
        if (!this.paused) {
          fn();
        } else {
          this.#onResume.push(fn);
        }
      }
      // do the requisite realpath/stat checking, and return the path
      // to add or undefined to filter it out.
      async matchCheck(e, ifDir) {
        if (ifDir && this.opts.nodir)
          return void 0;
        let rpc;
        if (this.opts.realpath) {
          rpc = e.realpathCached() || await e.realpath();
          if (!rpc)
            return void 0;
          e = rpc;
        }
        const needStat = e.isUnknown() || this.opts.stat;
        const s = needStat ? await e.lstat() : e;
        if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {
          const target = await s.realpath();
          if (target && (target.isUnknown() || this.opts.stat)) {
            await target.lstat();
          }
        }
        return this.matchCheckTest(s, ifDir);
      }
      matchCheckTest(e, ifDir) {
        return e && (this.maxDepth === Infinity || e.depth() <= this.maxDepth) && (!ifDir || e.canReaddir()) && (!this.opts.nodir || !e.isDirectory()) && (!this.opts.nodir || !this.opts.follow || !e.isSymbolicLink() || !e.realpathCached()?.isDirectory()) && !this.#ignored(e) ? e : void 0;
      }
      matchCheckSync(e, ifDir) {
        if (ifDir && this.opts.nodir)
          return void 0;
        let rpc;
        if (this.opts.realpath) {
          rpc = e.realpathCached() || e.realpathSync();
          if (!rpc)
            return void 0;
          e = rpc;
        }
        const needStat = e.isUnknown() || this.opts.stat;
        const s = needStat ? e.lstatSync() : e;
        if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {
          const target = s.realpathSync();
          if (target && (target?.isUnknown() || this.opts.stat)) {
            target.lstatSync();
          }
        }
        return this.matchCheckTest(s, ifDir);
      }
      matchFinish(e, absolute) {
        if (this.#ignored(e))
          return;
        if (!this.includeChildMatches && this.#ignore?.add) {
          const ign = `${e.relativePosix()}/**`;
          this.#ignore.add(ign);
        }
        const abs = this.opts.absolute === void 0 ? absolute : this.opts.absolute;
        this.seen.add(e);
        const mark = this.opts.mark && e.isDirectory() ? this.#sep : "";
        if (this.opts.withFileTypes) {
          this.matchEmit(e);
        } else if (abs) {
          const abs2 = this.opts.posix ? e.fullpathPosix() : e.fullpath();
          this.matchEmit(abs2 + mark);
        } else {
          const rel = this.opts.posix ? e.relativePosix() : e.relative();
          const pre = this.opts.dotRelative && !rel.startsWith(".." + this.#sep) ? "." + this.#sep : "";
          this.matchEmit(!rel ? "." + mark : pre + rel + mark);
        }
      }
      async match(e, absolute, ifDir) {
        const p = await this.matchCheck(e, ifDir);
        if (p)
          this.matchFinish(p, absolute);
      }
      matchSync(e, absolute, ifDir) {
        const p = this.matchCheckSync(e, ifDir);
        if (p)
          this.matchFinish(p, absolute);
      }
      walkCB(target, patterns, cb) {
        if (this.signal?.aborted)
          cb();
        this.walkCB2(target, patterns, new processor_js_1.Processor(this.opts), cb);
      }
      walkCB2(target, patterns, processor, cb) {
        if (this.#childrenIgnored(target))
          return cb();
        if (this.signal?.aborted)
          cb();
        if (this.paused) {
          this.onResume(() => this.walkCB2(target, patterns, processor, cb));
          return;
        }
        processor.processPatterns(target, patterns);
        let tasks = 1;
        const next = () => {
          if (--tasks === 0)
            cb();
        };
        for (const [m, absolute, ifDir] of processor.matches.entries()) {
          if (this.#ignored(m))
            continue;
          tasks++;
          this.match(m, absolute, ifDir).then(() => next());
        }
        for (const t of processor.subwalkTargets()) {
          if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {
            continue;
          }
          tasks++;
          const childrenCached = t.readdirCached();
          if (t.calledReaddir())
            this.walkCB3(t, childrenCached, processor, next);
          else {
            t.readdirCB((_, entries) => this.walkCB3(t, entries, processor, next), true);
          }
        }
        next();
      }
      walkCB3(target, entries, processor, cb) {
        processor = processor.filterEntries(target, entries);
        let tasks = 1;
        const next = () => {
          if (--tasks === 0)
            cb();
        };
        for (const [m, absolute, ifDir] of processor.matches.entries()) {
          if (this.#ignored(m))
            continue;
          tasks++;
          this.match(m, absolute, ifDir).then(() => next());
        }
        for (const [target2, patterns] of processor.subwalks.entries()) {
          tasks++;
          this.walkCB2(target2, patterns, processor.child(), next);
        }
        next();
      }
      walkCBSync(target, patterns, cb) {
        if (this.signal?.aborted)
          cb();
        this.walkCB2Sync(target, patterns, new processor_js_1.Processor(this.opts), cb);
      }
      walkCB2Sync(target, patterns, processor, cb) {
        if (this.#childrenIgnored(target))
          return cb();
        if (this.signal?.aborted)
          cb();
        if (this.paused) {
          this.onResume(() => this.walkCB2Sync(target, patterns, processor, cb));
          return;
        }
        processor.processPatterns(target, patterns);
        let tasks = 1;
        const next = () => {
          if (--tasks === 0)
            cb();
        };
        for (const [m, absolute, ifDir] of processor.matches.entries()) {
          if (this.#ignored(m))
            continue;
          this.matchSync(m, absolute, ifDir);
        }
        for (const t of processor.subwalkTargets()) {
          if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {
            continue;
          }
          tasks++;
          const children = t.readdirSync();
          this.walkCB3Sync(t, children, processor, next);
        }
        next();
      }
      walkCB3Sync(target, entries, processor, cb) {
        processor = processor.filterEntries(target, entries);
        let tasks = 1;
        const next = () => {
          if (--tasks === 0)
            cb();
        };
        for (const [m, absolute, ifDir] of processor.matches.entries()) {
          if (this.#ignored(m))
            continue;
          this.matchSync(m, absolute, ifDir);
        }
        for (const [target2, patterns] of processor.subwalks.entries()) {
          tasks++;
          this.walkCB2Sync(target2, patterns, processor.child(), next);
        }
        next();
      }
    };
    exports2.GlobUtil = GlobUtil;
    var GlobWalker = class extends GlobUtil {
      matches = /* @__PURE__ */ new Set();
      constructor(patterns, path, opts) {
        super(patterns, path, opts);
      }
      matchEmit(e) {
        this.matches.add(e);
      }
      async walk() {
        if (this.signal?.aborted)
          throw this.signal.reason;
        if (this.path.isUnknown()) {
          await this.path.lstat();
        }
        await new Promise((res, rej) => {
          this.walkCB(this.path, this.patterns, () => {
            if (this.signal?.aborted) {
              rej(this.signal.reason);
            } else {
              res(this.matches);
            }
          });
        });
        return this.matches;
      }
      walkSync() {
        if (this.signal?.aborted)
          throw this.signal.reason;
        if (this.path.isUnknown()) {
          this.path.lstatSync();
        }
        this.walkCBSync(this.path, this.patterns, () => {
          if (this.signal?.aborted)
            throw this.signal.reason;
        });
        return this.matches;
      }
    };
    exports2.GlobWalker = GlobWalker;
    var GlobStream = class extends GlobUtil {
      results;
      constructor(patterns, path, opts) {
        super(patterns, path, opts);
        this.results = new minipass_1.Minipass({
          signal: this.signal,
          objectMode: true
        });
        this.results.on("drain", () => this.resume());
        this.results.on("resume", () => this.resume());
      }
      matchEmit(e) {
        this.results.write(e);
        if (!this.results.flowing)
          this.pause();
      }
      stream() {
        const target = this.path;
        if (target.isUnknown()) {
          target.lstat().then(() => {
            this.walkCB(target, this.patterns, () => this.results.end());
          });
        } else {
          this.walkCB(target, this.patterns, () => this.results.end());
        }
        return this.results;
      }
      streamSync() {
        if (this.path.isUnknown()) {
          this.path.lstatSync();
        }
        this.walkCBSync(this.path, this.patterns, () => this.results.end());
        return this.results;
      }
    };
    exports2.GlobStream = GlobStream;
  }
});

// node_modules/glob/dist/commonjs/glob.js
var require_glob = __commonJS({
  "node_modules/glob/dist/commonjs/glob.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.Glob = void 0;
    var minimatch_1 = require_commonjs();
    var node_url_1 = require("node:url");
    var path_scurry_1 = require_commonjs4();
    var pattern_js_1 = require_pattern();
    var walker_js_1 = require_walker();
    var defaultPlatform = typeof process === "object" && process && typeof process.platform === "string" ? process.platform : "linux";
    var Glob = class {
      absolute;
      cwd;
      root;
      dot;
      dotRelative;
      follow;
      ignore;
      magicalBraces;
      mark;
      matchBase;
      maxDepth;
      nobrace;
      nocase;
      nodir;
      noext;
      noglobstar;
      pattern;
      platform;
      realpath;
      scurry;
      stat;
      signal;
      windowsPathsNoEscape;
      withFileTypes;
      includeChildMatches;
      /**
       * The options provided to the constructor.
       */
      opts;
      /**
       * An array of parsed immutable {@link Pattern} objects.
       */
      patterns;
      /**
       * All options are stored as properties on the `Glob` object.
       *
       * See {@link GlobOptions} for full options descriptions.
       *
       * Note that a previous `Glob` object can be passed as the
       * `GlobOptions` to another `Glob` instantiation to re-use settings
       * and caches with a new pattern.
       *
       * Traversal functions can be called multiple times to run the walk
       * again.
       */
      constructor(pattern, opts) {
        if (!opts)
          throw new TypeError("glob options required");
        this.withFileTypes = !!opts.withFileTypes;
        this.signal = opts.signal;
        this.follow = !!opts.follow;
        this.dot = !!opts.dot;
        this.dotRelative = !!opts.dotRelative;
        this.nodir = !!opts.nodir;
        this.mark = !!opts.mark;
        if (!opts.cwd) {
          this.cwd = "";
        } else if (opts.cwd instanceof URL || opts.cwd.startsWith("file://")) {
          opts.cwd = (0, node_url_1.fileURLToPath)(opts.cwd);
        }
        this.cwd = opts.cwd || "";
        this.root = opts.root;
        this.magicalBraces = !!opts.magicalBraces;
        this.nobrace = !!opts.nobrace;
        this.noext = !!opts.noext;
        this.realpath = !!opts.realpath;
        this.absolute = opts.absolute;
        this.includeChildMatches = opts.includeChildMatches !== false;
        this.noglobstar = !!opts.noglobstar;
        this.matchBase = !!opts.matchBase;
        this.maxDepth = typeof opts.maxDepth === "number" ? opts.maxDepth : Infinity;
        this.stat = !!opts.stat;
        this.ignore = opts.ignore;
        if (this.withFileTypes && this.absolute !== void 0) {
          throw new Error("cannot set absolute and withFileTypes:true");
        }
        if (typeof pattern === "string") {
          pattern = [pattern];
        }
        this.windowsPathsNoEscape = !!opts.windowsPathsNoEscape || opts.allowWindowsEscape === false;
        if (this.windowsPathsNoEscape) {
          pattern = pattern.map((p) => p.replace(/\\/g, "/"));
        }
        if (this.matchBase) {
          if (opts.noglobstar) {
            throw new TypeError("base matching requires globstar");
          }
          pattern = pattern.map((p) => p.includes("/") ? p : `./**/${p}`);
        }
        this.pattern = pattern;
        this.platform = opts.platform || defaultPlatform;
        this.opts = { ...opts, platform: this.platform };
        if (opts.scurry) {
          this.scurry = opts.scurry;
          if (opts.nocase !== void 0 && opts.nocase !== opts.scurry.nocase) {
            throw new Error("nocase option contradicts provided scurry option");
          }
        } else {
          const Scurry = opts.platform === "win32" ? path_scurry_1.PathScurryWin32 : opts.platform === "darwin" ? path_scurry_1.PathScurryDarwin : opts.platform ? path_scurry_1.PathScurryPosix : path_scurry_1.PathScurry;
          this.scurry = new Scurry(this.cwd, {
            nocase: opts.nocase,
            fs: opts.fs
          });
        }
        this.nocase = this.scurry.nocase;
        const nocaseMagicOnly = this.platform === "darwin" || this.platform === "win32";
        const mmo = {
          // default nocase based on platform
          ...opts,
          dot: this.dot,
          matchBase: this.matchBase,
          nobrace: this.nobrace,
          nocase: this.nocase,
          nocaseMagicOnly,
          nocomment: true,
          noext: this.noext,
          nonegate: true,
          optimizationLevel: 2,
          platform: this.platform,
          windowsPathsNoEscape: this.windowsPathsNoEscape,
          debug: !!this.opts.debug
        };
        const mms = this.pattern.map((p) => new minimatch_1.Minimatch(p, mmo));
        const [matchSet, globParts] = mms.reduce((set, m) => {
          set[0].push(...m.set);
          set[1].push(...m.globParts);
          return set;
        }, [[], []]);
        this.patterns = matchSet.map((set, i) => {
          const g = globParts[i];
          if (!g)
            throw new Error("invalid pattern object");
          return new pattern_js_1.Pattern(set, g, 0, this.platform);
        });
      }
      async walk() {
        return [
          ...await new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {
            ...this.opts,
            maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,
            platform: this.platform,
            nocase: this.nocase,
            includeChildMatches: this.includeChildMatches
          }).walk()
        ];
      }
      walkSync() {
        return [
          ...new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {
            ...this.opts,
            maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,
            platform: this.platform,
            nocase: this.nocase,
            includeChildMatches: this.includeChildMatches
          }).walkSync()
        ];
      }
      stream() {
        return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {
          ...this.opts,
          maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,
          platform: this.platform,
          nocase: this.nocase,
          includeChildMatches: this.includeChildMatches
        }).stream();
      }
      streamSync() {
        return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {
          ...this.opts,
          maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,
          platform: this.platform,
          nocase: this.nocase,
          includeChildMatches: this.includeChildMatches
        }).streamSync();
      }
      /**
       * Default sync iteration function. Returns a Generator that
       * iterates over the results.
       */
      iterateSync() {
        return this.streamSync()[Symbol.iterator]();
      }
      [Symbol.iterator]() {
        return this.iterateSync();
      }
      /**
       * Default async iteration function. Returns an AsyncGenerator that
       * iterates over the results.
       */
      iterate() {
        return this.stream()[Symbol.asyncIterator]();
      }
      [Symbol.asyncIterator]() {
        return this.iterate();
      }
    };
    exports2.Glob = Glob;
  }
});

// node_modules/glob/dist/commonjs/has-magic.js
var require_has_magic = __commonJS({
  "node_modules/glob/dist/commonjs/has-magic.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.hasMagic = void 0;
    var minimatch_1 = require_commonjs();
    var hasMagic = (pattern, options = {}) => {
      if (!Array.isArray(pattern)) {
        pattern = [pattern];
      }
      for (const p of pattern) {
        if (new minimatch_1.Minimatch(p, options).hasMagic())
          return true;
      }
      return false;
    };
    exports2.hasMagic = hasMagic;
  }
});

// node_modules/glob/dist/commonjs/index.js
var require_commonjs5 = __commonJS({
  "node_modules/glob/dist/commonjs/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.glob = exports2.sync = exports2.iterate = exports2.iterateSync = exports2.stream = exports2.streamSync = exports2.Ignore = exports2.hasMagic = exports2.Glob = exports2.unescape = exports2.escape = void 0;
    exports2.globStreamSync = globStreamSync;
    exports2.globStream = globStream;
    exports2.globSync = globSync;
    exports2.globIterateSync = globIterateSync;
    exports2.globIterate = globIterate;
    var minimatch_1 = require_commonjs();
    var glob_js_1 = require_glob();
    var has_magic_js_1 = require_has_magic();
    var minimatch_2 = require_commonjs();
    Object.defineProperty(exports2, "escape", { enumerable: true, get: function() {
      return minimatch_2.escape;
    } });
    Object.defineProperty(exports2, "unescape", { enumerable: true, get: function() {
      return minimatch_2.unescape;
    } });
    var glob_js_2 = require_glob();
    Object.defineProperty(exports2, "Glob", { enumerable: true, get: function() {
      return glob_js_2.Glob;
    } });
    var has_magic_js_2 = require_has_magic();
    Object.defineProperty(exports2, "hasMagic", { enumerable: true, get: function() {
      return has_magic_js_2.hasMagic;
    } });
    var ignore_js_1 = require_ignore();
    Object.defineProperty(exports2, "Ignore", { enumerable: true, get: function() {
      return ignore_js_1.Ignore;
    } });
    function globStreamSync(pattern, options = {}) {
      return new glob_js_1.Glob(pattern, options).streamSync();
    }
    function globStream(pattern, options = {}) {
      return new glob_js_1.Glob(pattern, options).stream();
    }
    function globSync(pattern, options = {}) {
      return new glob_js_1.Glob(pattern, options).walkSync();
    }
    async function glob_(pattern, options = {}) {
      return new glob_js_1.Glob(pattern, options).walk();
    }
    function globIterateSync(pattern, options = {}) {
      return new glob_js_1.Glob(pattern, options).iterateSync();
    }
    function globIterate(pattern, options = {}) {
      return new glob_js_1.Glob(pattern, options).iterate();
    }
    exports2.streamSync = globStreamSync;
    exports2.stream = Object.assign(globStream, { sync: globStreamSync });
    exports2.iterateSync = globIterateSync;
    exports2.iterate = Object.assign(globIterate, {
      sync: globIterateSync
    });
    exports2.sync = Object.assign(globSync, {
      stream: globStreamSync,
      iterate: globIterateSync
    });
    exports2.glob = Object.assign(glob_, {
      glob: glob_,
      globSync,
      sync: exports2.sync,
      globStream,
      stream: exports2.stream,
      globStreamSync,
      streamSync: exports2.streamSync,
      globIterate,
      iterate: exports2.iterate,
      globIterateSync,
      iterateSync: exports2.iterateSync,
      Glob: glob_js_1.Glob,
      hasMagic: has_magic_js_1.hasMagic,
      escape: minimatch_1.escape,
      unescape: minimatch_1.unescape
    });
    exports2.glob.glob = exports2.glob;
  }
});

// out/frameworks/element-plus.js
var require_element_plus = __commonJS({
  "out/frameworks/element-plus.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.default = {
      "template": {
        "el-button": {
          "_html": {
            "": '<el-button type="primary">$1</el-button>',
            ":plain": '<el-button type="primary" plain>$1</el-button>',
            ":round": '<el-button type="primary" round>$1</el-button>',
            ":circle": '<el-button type="primary" circle>$1</el-button>',
            ":disabled": '<el-button type="primary" disabled>$1</el-button>',
            ":link": '<el-button type="primary" link>$1</el-button>',
            ":text": '<el-button type="primary" text>$1</el-button>',
            ":icon": '<el-button type="primary" :icon="$1">$2</el-button>',
            ":loading": '<el-button type="primary" :loading="$1">$2</el-button>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/button.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| size| \u5C3A\u5BF8| enum| \u2014 |\n| type| \u7C7B\u578B| enum| \u2014 |\n| plain| \u662F\u5426\u4E3A\u6734\u7D20\u6309\u94AE| boolean| false |\n| text 2.2.0| \u662F\u5426\u4E3A\u6587\u5B57\u6309\u94AE| boolean| false |\n| bg 2.2.0| \u662F\u5426\u663E\u793A\u6587\u5B57\u6309\u94AE\u80CC\u666F\u989C\u8272| boolean| false |\n| link 2.2.1| \u662F\u5426\u4E3A\u94FE\u63A5\u6309\u94AE| boolean| false |\n| round| \u662F\u5426\u4E3A\u5706\u89D2\u6309\u94AE| boolean| false |\n| circle| \u662F\u5426\u4E3A\u5706\u5F62\u6309\u94AE| boolean| false |\n| loading| \u662F\u5426\u4E3A\u52A0\u8F7D\u4E2D\u72B6\u6001| boolean| false |\n| loading-icon| \u81EA\u5B9A\u4E49\u52A0\u8F7D\u4E2D\u72B6\u6001\u56FE\u6807\u7EC4\u4EF6| string / Component| Loading |\n| disabled| \u6309\u94AE\u662F\u5426\u4E3A\u7981\u7528\u72B6\u6001| boolean| false |\n| icon| \u56FE\u6807\u7EC4\u4EF6| string / Component| \u2014 |\n| autofocus| \u539F\u751F autofocus \u5C5E\u6027| boolean| false |\n| native-type| \u539F\u751F type \u5C5E\u6027| enum| button |\n| auto-insert-space| \u81EA\u52A8\u5728\u4E24\u4E2A\u4E2D\u6587\u5B57\u7B26\u4E4B\u95F4\u63D2\u5165\u7A7A\u683C| boolean| \u2014 |\n| color| \u81EA\u5B9A\u4E49\u6309\u94AE\u989C\u8272, \u5E76\u81EA\u52A8\u8BA1\u7B97 hover \u548C active \u89E6\u53D1\u540E\u7684\u989C\u8272| string| \u2014 |\n| dark| dark \u6A21\u5F0F, \u610F\u5473\u7740\u81EA\u52A8\u8BBE\u7F6E color \u4E3A dark \u6A21\u5F0F\u7684\u989C\u8272| boolean| false |\n| tag 2.3.4| \u81EA\u5B9A\u4E49\u5143\u7D20\u6807\u7B7E| string / Component| button |\n\n#### Button \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n| loading| \u81EA\u5B9A\u4E49\u52A0\u8F7D\u4E2D\u7EC4\u4EF6 |\n| icon| \u81EA\u5B9A\u4E49\u56FE\u6807\u7EC4\u4EF6 |\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| ref| \u6309\u94AE html \u5143\u7D20| object |\n| size| \u6309\u94AE\u5C3A\u5BF8| object |\n| type| \u6309\u94AE\u7C7B\u578B| object |\n| disabled| \u6309\u94AE\u5DF2\u7981\u7528| object |\n| shouldAddSpace| \u662F\u5426\u5728\u4E24\u4E2A\u5B57\u7B26\u4E4B\u95F4\u63D2\u5165\u7A7A\u683C| object |\n",
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "\u5C3A\u5BF8"
          },
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info"],
            "description": "\u7C7B\u578B"
          },
          "plain": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u6734\u7D20\u6309\u94AE"
          },
          "text": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u6587\u5B57\u6309\u94AE"
          },
          "bg": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u6587\u5B57\u6309\u94AE\u80CC\u666F\u989C\u8272"
          },
          "link": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u94FE\u63A5\u6309\u94AE"
          },
          "round": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u5706\u89D2\u6309\u94AE"
          },
          "circle": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u5706\u5F62\u6309\u94AE"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u52A0\u8F7D\u4E2D\u72B6\u6001"
          },
          "loading-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u52A0\u8F7D\u4E2D\u72B6\u6001\u56FE\u6807\u7EC4\u4EF6"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6309\u94AE\u662F\u5426\u4E3A\u7981\u7528\u72B6\u6001"
          },
          "icon": {
            "type": "attr",
            "values": [],
            "description": "\u56FE\u6807\u7EC4\u4EF6"
          },
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u539F\u751F autofocus \u5C5E\u6027"
          },
          "native-type": {
            "type": "attr",
            "values": ["button", "submit", "reset"],
            "description": "\u539F\u751F type \u5C5E\u6027"
          },
          "auto-insert-space": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u81EA\u52A8\u5728\u4E24\u4E2A\u4E2D\u6587\u5B57\u7B26\u4E4B\u95F4\u63D2\u5165\u7A7A\u683C"
          },
          "color": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u6309\u94AE\u989C\u8272, \u5E76\u81EA\u52A8\u8BA1\u7B97 hover \u548C active \u89E6\u53D1\u540E\u7684\u989C\u8272"
          },
          "dark": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "dark \u6A21\u5F0F, \u610F\u5473\u7740\u81EA\u52A8\u8BBE\u7F6E color \u4E3A dark \u6A21\u5F0F\u7684\u989C\u8272"
          },
          "tag": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u5143\u7D20\u6807\u7B7E"
          }
        },
        "el-button-group": {
          "_html": {
            "": '<el-button-group>\n<el-button type="primary">$1</el-button>\n<el-button type="primary">$2</el-button>\n</el-button-group>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/button.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| size| \u7528\u4E8E\u63A7\u5236\u8BE5\u6309\u94AE\u7EC4\u5185\u6309\u94AE\u7684\u5927\u5C0F| enum| \u2014 |\n| type| \u7528\u4E8E\u63A7\u5236\u8BE5\u6309\u94AE\u7EC4\u5185\u6309\u94AE\u7684\u7C7B\u578B| enum| \u2014 |\n\n#### ButtonGroup \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u6309\u94AE\u7EC4\u5185\u5BB9| Button |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "\u7528\u4E8E\u63A7\u5236\u8BE5\u6309\u94AE\u7EC4\u5185\u6309\u94AE\u7684\u5927\u5C0F"
          },
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info"],
            "description": "\u7528\u4E8E\u63A7\u5236\u8BE5\u6309\u94AE\u7EC4\u5185\u6309\u94AE\u7684\u7C7B\u578B"
          }
        },
        "el-container": {
          "_html": {
            "": "<el-container>$1</el-container>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/container.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| direction| \u5B50\u5143\u7D20\u7684\u6392\u5217\u65B9\u5411| enum| \u5B50\u5143\u7D20\u4E2D\u6709 el-header \u6216 el-footer \u65F6\u4E3A vertical\uFF0C\u5426\u5219\u4E3A horizontal |\n\n#### Container \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Container / Header / Aside / Main / Footer |\n",
          "direction": {
            "type": "attr",
            "values": ["horizontal", "vertical"],
            "description": "\u5B50\u5143\u7D20\u7684\u6392\u5217\u65B9\u5411"
          }
        },
        "el-header": {
          "_html": {
            "": "<el-header>$1</el-header>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/container.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| height| \u9876\u680F\u9AD8\u5EA6| string| 60px |\n\n#### Header Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n",
          "height": {
            "type": "attr",
            "values": [],
            "description": "\u9876\u680F\u9AD8\u5EA6"
          }
        },
        "el-main": {
          "_html": {
            "": "<el-main>$1</el-main>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/container.html)\n\n#### Main Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n"
        },
        "el-footer": {
          "_html": {
            "": "<el-footer>$1</el-footer>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/container.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| height| \u5E95\u680F\u9AD8\u5EA6| string| 60px |\n\n#### Footer Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "height": {
            "type": "attr",
            "values": [],
            "description": "\u5E95\u680F\u9AD8\u5EA6"
          }
        },
        "el-aside": {
          "_html": {
            "": '<el-aside width="200px">$1</el-aside>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/container.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| width| \u4FA7\u8FB9\u680F\u5BBD\u5EA6| string| 300px |\n\n#### Aside Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n",
          "width": {
            "type": "attr",
            "values": [],
            "description": "\u4FA7\u8FB9\u680F\u5BBD\u5EA6"
          }
        },
        "el-row": {
          "_html": {
            "": '<el-row>\n<el-col :span="${1:24}">$2</el-col>\n</el-row>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/layout.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| gutter| \u6805\u683C\u95F4\u9694| number| 0 |\n| justify| flex \u5E03\u5C40\u4E0B\u7684\u6C34\u5E73\u6392\u5217\u65B9\u5F0F| enum| start |\n| align| flex \u5E03\u5C40\u4E0B\u7684\u5782\u76F4\u6392\u5217\u65B9\u5F0F| enum| \u2014 |\n| tag| \u81EA\u5B9A\u4E49\u5143\u7D20\u6807\u7B7E| string| div |\n\n#### Row Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Col |\n",
          "gutter": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6805\u683C\u95F4\u9694"
          },
          "justify": {
            "type": "attr",
            "values": ["start", "end", "center", "space-around", "space-between", "space-evenly"],
            "description": "flex \u5E03\u5C40\u4E0B\u7684\u6C34\u5E73\u6392\u5217\u65B9\u5F0F"
          },
          "align": {
            "type": "attr",
            "values": ["top", "middle", "bottom"],
            "description": "flex \u5E03\u5C40\u4E0B\u7684\u5782\u76F4\u6392\u5217\u65B9\u5F0F"
          },
          "tag": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u5143\u7D20\u6807\u7B7E"
          }
        },
        "el-col": {
          "_html": {
            "": '<el-col :span="${1:8}">$2</el-col>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/layout.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| span| \u6805\u683C\u5360\u636E\u7684\u5217\u6570| number| 24 |\n| offset| \u6805\u683C\u5DE6\u4FA7\u7684\u95F4\u9694\u683C\u6570| number| 0 |\n| push| \u6805\u683C\u5411\u53F3\u79FB\u52A8\u683C\u6570| number| 0 |\n| pull| \u6805\u683C\u5411\u5DE6\u79FB\u52A8\u683C\u6570| number| 0 |\n| xs| <768px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61| number / object| \u2014 |\n| sm| \u2265768px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61| number / object| \u2014 |\n| md| \u2265992px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61| number / object| \u2014 |\n| lg| \u22651200px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61| number / object| \u2014 |\n| xl| \u22651920px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61| number / object| \u2014 |\n| tag| \u81EA\u5B9A\u4E49\u5143\u7D20\u6807\u7B7E| string| div |\n\n#### Col Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n",
          "span": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6805\u683C\u5360\u636E\u7684\u5217\u6570"
          },
          "offset": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6805\u683C\u5DE6\u4FA7\u7684\u95F4\u9694\u683C\u6570"
          },
          "push": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6805\u683C\u5411\u53F3\u79FB\u52A8\u683C\u6570"
          },
          "pull": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6805\u683C\u5411\u5DE6\u79FB\u52A8\u683C\u6570"
          },
          "xs": {
            "type": "attr",
            "values": ["number"],
            "description": "<768px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61"
          },
          "sm": {
            "type": "attr",
            "values": ["number"],
            "description": "\u2265768px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61"
          },
          "md": {
            "type": "attr",
            "values": ["number"],
            "description": "\u2265992px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61"
          },
          "lg": {
            "type": "attr",
            "values": ["number"],
            "description": "\u22651200px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61"
          },
          "xl": {
            "type": "attr",
            "values": ["number"],
            "description": "\u22651920px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61"
          },
          "tag": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u5143\u7D20\u6807\u7B7E"
          }
        },
        "el-link": {
          "_html": {
            "": '<el-link type="primary">$1</el-link>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/link.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| type| \u7C7B\u578B| enum| default |\n| underline| \u662F\u5426\u4E0B\u5212\u7EBF| boolean| true |\n| disabled| \u662F\u5426\u7981\u7528\u72B6\u6001| boolean| false |\n| href| \u539F\u751F href \u5C5E\u6027| string| \u2014 |\n| target| \u540C\u539F\u751F target \u5C5E\u6027| enum| _self |\n| icon| \u56FE\u6807\u7EC4\u4EF6| string / Component| \u2014 |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n| icon| \u81EA\u5B9A\u4E49\u56FE\u6807\u7EC4\u4EF6 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info", "default"],
            "description": "\u7C7B\u578B"
          },
          "underline": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E0B\u5212\u7EBF"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u72B6\u6001"
          },
          "href": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F href \u5C5E\u6027"
          },
          "target": {
            "type": "attr",
            "values": ["_blank", "_parent", "_self", "_top"],
            "description": "\u540C\u539F\u751F target \u5C5E\u6027"
          },
          "icon": {
            "type": "attr",
            "values": [],
            "description": "\u56FE\u6807\u7EC4\u4EF6"
          }
        },
        "el-text": {
          "_html": {
            "": "<el-text>$1</el-text>",
            ":truncated": "<el-text truncated>$1</el-text>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/text.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u63CF\u8FF0| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| type| \u7C7B\u578B| enum| \u2014 |\n| size| \u5927\u5C0F| enum| default |\n| truncated| \u663E\u793A\u7701\u7565\u53F7| boolean| false |\n| line-clamp 2.4.0| \u6700\u5927\u884C\u6570| string / number| - |\n| tag| \u81EA\u5B9A\u4E49\u5143\u7D20\u6807\u7B7E| string| span |\n\n#### Slots\n\n| \u540D\u79F0| \u8BE6\u60C5 |\n| :--- | :--- |\n| default| \u9ED8\u8BA4\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info"],
            "description": "\u7C7B\u578B"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u5927\u5C0F"
          },
          "truncated": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u663E\u793A\u7701\u7565\u53F7"
          },
          "line-clamp": {
            "type": "attr",
            "values": [],
            "description": "\u6700\u5927\u884C\u6570"
          },
          "tag": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u5143\u7D20\u6807\u7B7E"
          }
        },
        "el-scrollbar": {
          "_html": {
            "": '<el-scrollbar height="${1:400px}" @scroll="${2:scroll}">\n$3\n</el-scrollbar>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/scrollbar.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| height| \u6EDA\u52A8\u6761\u9AD8\u5EA6| string / number| \u2014 |\n| max-height| \u6EDA\u52A8\u6761\u6700\u5927\u9AD8\u5EA6| string / number| \u2014 |\n| native| \u662F\u5426\u4F7F\u7528\u539F\u751F\u6EDA\u52A8\u6761\u6837\u5F0F| boolean| false |\n| wrap-style| \u5305\u88F9\u5BB9\u5668\u7684\u81EA\u5B9A\u4E49\u6837\u5F0F| string / object| \u2014 |\n| wrap-class| \u5305\u88F9\u5BB9\u5668\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| \u2014 |\n| view-style| \u89C6\u56FE\u7684\u81EA\u5B9A\u4E49\u6837\u5F0F| string / object| \u2014 |\n| view-class| \u89C6\u56FE\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| \u2014 |\n| noresize| \u4E0D\u54CD\u5E94\u5BB9\u5668\u5C3A\u5BF8\u53D8\u5316\uFF0C\u5982\u679C\u5BB9\u5668\u5C3A\u5BF8\u4E0D\u4F1A\u53D1\u751F\u53D8\u5316\uFF0C\u6700\u597D\u8BBE\u7F6E\u5B83\u53EF\u4EE5\u4F18\u5316\u6027\u80FD| boolean| false |\n| tag| \u89C6\u56FE\u7684\u5143\u7D20\u6807\u7B7E| string| div |\n| always| \u6EDA\u52A8\u6761\u603B\u662F\u663E\u793A| boolean| false |\n| min-size| \u6EDA\u52A8\u6761\u6700\u5C0F\u5C3A\u5BF8| number| 20 |\n| id 2.4.0| \u89C6\u56FEID| string| \u2014 |\n| role 2.4.0 a11y| \u89C6\u56FE\u7684\u89D2\u8272| string| \u2014 |\n| aria-label 2.4.0 a11y| \u89C6\u56FE\u7684 aria-label| string| \u2014 |\n| aria-orientation 2.4.0 a11y| \u89C6\u56FE\u7684 aria-orientation| enum| \u2014 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| scroll| \u5F53\u89E6\u53D1\u6EDA\u52A8\u4E8B\u4EF6\u65F6\uFF0C\u8FD4\u56DE\u6EDA\u52A8\u7684\u8DDD\u79BB| Function |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n\n#### Exposes\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| handleScroll| \u89E6\u53D1\u6EDA\u52A8\u4E8B\u4EF6| Function |\n| scrollTo| \u6EDA\u52A8\u5230\u4E00\u7EC4\u7279\u5B9A\u5750\u6807| Function |\n| setScrollTop| \u8BBE\u7F6E\u6EDA\u52A8\u6761\u5230\u9876\u90E8\u7684\u8DDD\u79BB| Function |\n| setScrollLeft| \u8BBE\u7F6E\u6EDA\u52A8\u6761\u5230\u5DE6\u8FB9\u7684\u8DDD\u79BB| Function |\n| update| \u624B\u52A8\u66F4\u65B0\u6EDA\u52A8\u6761\u72B6\u6001| Function |\n| wrapRef| \u6EDA\u52A8\u6761\u5305\u88F9\u7684 ref \u5BF9\u8C61| object |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "height": {
            "type": "attr",
            "values": [],
            "description": "\u6EDA\u52A8\u6761\u9AD8\u5EA6"
          },
          "max-height": {
            "type": "attr",
            "values": [],
            "description": "\u6EDA\u52A8\u6761\u6700\u5927\u9AD8\u5EA6"
          },
          "native": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4F7F\u7528\u539F\u751F\u6EDA\u52A8\u6761\u6837\u5F0F"
          },
          "wrap-style": {
            "type": "attr",
            "values": [],
            "description": "\u5305\u88F9\u5BB9\u5668\u7684\u81EA\u5B9A\u4E49\u6837\u5F0F"
          },
          "wrap-class": {
            "type": "attr",
            "values": [],
            "description": "\u5305\u88F9\u5BB9\u5668\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "view-style": {
            "type": "attr",
            "values": [],
            "description": "\u89C6\u56FE\u7684\u81EA\u5B9A\u4E49\u6837\u5F0F"
          },
          "view-class": {
            "type": "attr",
            "values": [],
            "description": "\u89C6\u56FE\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "noresize": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E0D\u54CD\u5E94\u5BB9\u5668\u5C3A\u5BF8\u53D8\u5316\uFF0C\u5982\u679C\u5BB9\u5668\u5C3A\u5BF8\u4E0D\u4F1A\u53D1\u751F\u53D8\u5316\uFF0C\u6700\u597D\u8BBE\u7F6E\u5B83\u53EF\u4EE5\u4F18\u5316\u6027\u80FD"
          },
          "tag": {
            "type": "attr",
            "values": [],
            "description": "\u89C6\u56FE\u7684\u5143\u7D20\u6807\u7B7E"
          },
          "always": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6EDA\u52A8\u6761\u603B\u662F\u663E\u793A"
          },
          "min-size": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6EDA\u52A8\u6761\u6700\u5C0F\u5C3A\u5BF8"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "\u89C6\u56FEID"
          },
          "roleay": {
            "type": "attr",
            "values": [],
            "description": "\u89C6\u56FE\u7684\u89D2\u8272"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u89C6\u56FE\u7684 aria-label"
          },
          "aria-orientationay": {
            "type": "attr",
            "values": ["enum"],
            "description": "\u89C6\u56FE\u7684 aria-orientation"
          },
          "scroll": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u89E6\u53D1\u6EDA\u52A8\u4E8B\u4EF6\u65F6\uFF0C\u8FD4\u56DE\u6EDA\u52A8\u7684\u8DDD\u79BB"
          }
        },
        "el-space": {
          "_html": {
            "": "<el-space wrap>\n$1\n</el-space>",
            ":vertical": '<el-space direction="vertical">\n$1\n</el-space>',
            ":size": '<el-space :size="${1:size}">\n$2\n</el-space>',
            ":spacer": '<el-space spacer="${1:|}">\n$2\n</el-space>',
            ":fill": '<el-space :fill="${1:fill}" wrap>\n$2\n</el-space>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/space.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| alignment| \u5BF9\u9F50\u7684\u65B9\u5F0F| enum align-items| center |\n| class| \u7C7B\u540D| string / object / array| \u2014 |\n| direction| \u6392\u5217\u7684\u65B9\u5411| enum| horizontal |\n| prefix-cls| \u7ED9 space-items \u7684\u7C7B\u540D\u524D\u7F00| string| \u2014 |\n| style| \u989D\u5916\u6837\u5F0F| string / object| \u2014 |\n| spacer| \u95F4\u9694\u7B26| string / number / VNode| \u2014 |\n| size| \u95F4\u9694\u5927\u5C0F| enum / number / array| small |\n| wrap| \u8BBE\u7F6E\u662F\u5426\u81EA\u52A8\u6298\u884C| boolean| false |\n| fill| \u5B50\u5143\u7D20\u662F\u5426\u586B\u5145\u7236\u5BB9\u5668| boolean| false |\n| fill-ratio| \u586B\u5145\u7236\u5BB9\u5668\u7684\u6BD4\u4F8B| number| 100 |\n\n#### Slots\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u9700\u8981\u6DFB\u52A0\u95F4\u9694\u7684\u5143\u7D20 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "alignment": {
            "type": "attr",
            "values": ["stretch", "center", "normal", "start", "end"],
            "description": "\u5BF9\u9F50\u7684\u65B9\u5F0F"
          },
          "class": {
            "type": "attr",
            "values": [],
            "description": "\u7C7B\u540D"
          },
          "direction": {
            "type": "attr",
            "values": ["vertical", "horizontal"],
            "description": "\u6392\u5217\u7684\u65B9\u5411"
          },
          "prefix-cls": {
            "type": "attr",
            "values": [],
            "description": "\u7ED9 space-items \u7684\u7C7B\u540D\u524D\u7F00"
          },
          "style": {
            "type": "attr",
            "values": [],
            "description": "\u989D\u5916\u6837\u5F0F"
          },
          "spacer": {
            "type": "attr",
            "values": [],
            "description": "\u95F4\u9694\u7B26"
          },
          "size": {
            "type": "attr",
            "values": ["default", "small", "large"],
            "description": "\u95F4\u9694\u5927\u5C0F"
          },
          "wrap": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u662F\u5426\u81EA\u52A8\u6298\u884C"
          },
          "fill": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5B50\u5143\u7D20\u662F\u5426\u586B\u5145\u7236\u5BB9\u5668"
          },
          "fill-ratio": {
            "type": "attr",
            "values": ["number"],
            "description": "\u586B\u5145\u7236\u5BB9\u5668\u7684\u6BD4\u4F8B"
          }
        },
        "el-config-provider": {
          "_html": {
            "": '<el-config-provider :locale="${1:locale}">\n$2\n</el-config-provider>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/config-provider.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| locale| \u7FFB\u8BD1\u6587\u672C\u5BF9\u8C61| object languages| en |\n| size| \u5168\u5C40\u7EC4\u4EF6\u5927\u5C0F| enum| default |\n| zIndex| \u5168\u5C40\u521D\u59CB\u5316 zIndex \u7684\u503C| number| \u2014 |\n| namespace| \u5168\u5C40\u7EC4\u4EF6\u7C7B\u540D\u79F0\u524D\u7F00 (\u9700\u8981\u914D\u5408 namespace \u4F7F\u7528)| string| el |\n| button| \u6309\u94AE\u76F8\u5173\u914D\u7F6E\uFF0C\u8BE6\u89C1\u4E0B\u8868| object| \u8BE6\u89C1\u4E0B\u8868 |\n| message| \u6D88\u606F\u76F8\u5173\u914D\u7F6E\uFF0C \u8BE6\u89C1\u4E0B\u8868| object| \u8BE6\u89C1\u4E0B\u8868 |\n| experimental-features| \u5C06\u8981\u6DFB\u52A0\u7684\u5B9E\u9A8C\u9636\u6BB5\u7684\u529F\u80FD\uFF0C\u6240\u6709\u529F\u80FD\u90FD\u662F\u9ED8\u8BA4\u8BBE\u7F6E\u4E3A false| object| \u2014 |\n\n#### Button Attribute\n\n| \u53C2\u6570| \u63CF\u8FF0| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| autoInsertSpace| \u81EA\u52A8\u5728\u4E24\u4E2A\u4E2D\u6587\u5B57\u7B26\u4E4B\u95F4\u63D2\u5165\u7A7A\u683C| boolean| false |\n\n#### Message Attribute\n\n| \u53C2\u6570| \u63CF\u8FF0| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| max| \u53EF\u540C\u65F6\u663E\u793A\u7684\u6D88\u606F\u6700\u5927\u6570\u91CF| number| \u2014 |\n\n#### Config Provider Slots\n\n| \u540D\u79F0| \u63CF\u8FF0| Scope |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| config: \u63D0\u4F9B\u5168\u5C40\u914D\u7F6E\uFF08\u4ECE\u9876\u90E8\u7EE7\u627F\uFF09 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "locale": {
            "type": "attr",
            "values": ["object"],
            "description": "\u7FFB\u8BD1\u6587\u672C\u5BF9\u8C61"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u5168\u5C40\u7EC4\u4EF6\u5927\u5C0F"
          },
          "zIndex": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5168\u5C40\u521D\u59CB\u5316 zIndex \u7684\u503C"
          },
          "namespace": {
            "type": "attr",
            "values": [],
            "description": "\u5168\u5C40\u7EC4\u4EF6\u7C7B\u540D\u79F0\u524D\u7F00 (\u9700\u8981\u914D\u5408 $namespace \u4F7F\u7528)"
          },
          "button": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6309\u94AE\u76F8\u5173\u914D\u7F6E\uFF0C\u8BE6\u89C1\u4E0B\u8868"
          },
          "message": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6D88\u606F\u76F8\u5173\u914D\u7F6E\uFF0C \u8BE6\u89C1\u4E0B\u8868"
          },
          "experimental-features": {
            "type": "attr",
            "values": ["object"],
            "description": "\u5C06\u8981\u6DFB\u52A0\u7684\u5B9E\u9A8C\u9636\u6BB5\u7684\u529F\u80FD\uFF0C\u6240\u6709\u529F\u80FD\u90FD\u662F\u9ED8\u8BA4\u8BBE\u7F6E\u4E3A false"
          },
          "empty-values": {
            "type": "attr",
            "values": ["array"],
            "description": "\u8F93\u5165\u7C7B\u7EC4\u4EF6\u7A7A\u503C"
          },
          "value-on-clear": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u7C7B\u7EC4\u4EF6\u6E05\u7A7A\u503C"
          }
        },
        "el-autocomplete": {
          "_html": {
            "": '<el-autocomplete v-model="${1:value}" :fetch-suggestions="querySearch" clearable placeholder="Please Input" @select="handleSelect" />',
            ":template": '<el-autocomplete\nv-model="${1:value}"\n:fetch-suggestions="querySearch"\nplaceholder="Please Input"\n@select="handleSelect"\n>\n<template #default="{ item }">\n</template>\n</el-autocomplete>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/autocomplete.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| string| \u2014 |\n| placeholder| \u5360\u4F4D\u6587\u672C| string| \u2014 |\n| clearable| \u662F\u5426\u53EF\u6E05\u7A7A| boolean| false |\n| disabled| \u81EA\u52A8\u8865\u5168\u7EC4\u4EF6\u662F\u5426\u88AB\u7981\u7528| boolean| false |\n| value-key| \u8F93\u5165\u5EFA\u8BAE\u5BF9\u8C61\u4E2D\u7528\u4E8E\u663E\u793A\u7684\u952E\u540D| string| value |\n| debounce| \u83B7\u53D6\u8F93\u5165\u5EFA\u8BAE\u7684\u9632\u6296\u5EF6\u65F6\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2| number| 300 |\n| placement| \u83DC\u5355\u5F39\u51FA\u4F4D\u7F6E| enum| bottom-start |\n| fetch-suggestions| \u83B7\u53D6\u8F93\u5165\u5EFA\u8BAE\u7684\u65B9\u6CD5\uFF0C \u4EC5\u5F53\u4F60\u7684\u8F93\u5165\u5EFA\u8BAE\u6570\u636E resolve \u65F6\uFF0C\u901A\u8FC7\u8C03\u7528 callback(data:[])  \u6765\u8FD4\u56DE\u5B83| Function| \u2014 |\n| trigger-on-focus| whether show suggestions when input focus| boolean| true |\n| select-when-unmatched| \u5728\u8F93\u5165\u6CA1\u6709\u4EFB\u4F55\u5339\u914D\u5EFA\u8BAE\u7684\u60C5\u51B5\u4E0B\uFF0C\u6309\u4E0B\u56DE\u8F66\u662F\u5426\u89E6\u53D1 select \u4E8B\u4EF6| boolean| false |\n| name| \u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027| string| \u2014 |\n| label| \u8F93\u5165\u6846\u5173\u8054\u7684 label \u6587\u5B57| string| \u2014 |\n| hide-loading| \u662F\u5426\u9690\u85CF\u8FDC\u7A0B\u52A0\u8F7D\u65F6\u7684\u52A0\u8F7D\u56FE\u6807| boolean| false |\n| popper-class| \u4E0B\u62C9\u5217\u8868\u7684\u7C7B\u540D| string| \u2014 |\n| popper-append-to-body deprecated| \u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20\u3002 \u5728\u4E0B\u62C9\u5217\u8868\u7684\u5B9A\u4F4D\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u53EF\u5C06\u8BE5\u5C5E\u6027\u8BBE\u7F6E\u4E3A false| boolean| false |\n| teleported| \u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u5143\u7D20\u63D2\u5165 append-to \u6307\u5411\u7684\u5143\u7D20\u4E0B| boolean| true |\n| highlight-first-item| \u662F\u5426\u9ED8\u8BA4\u9AD8\u4EAE\u8FDC\u7A0B\u641C\u7D22\u7ED3\u679C\u7684\u7B2C\u4E00\u9879| boolean| false |\n| fit-input-width| \u4E0B\u62C9\u6846\u7684\u5BBD\u5EA6\u662F\u5426\u4E0E\u8F93\u5165\u6846\u76F8\u540C| boolean| false |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BE6\u60C5| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| select| \u70B9\u51FB\u9009\u4E2D\u5EFA\u8BAE\u9879\u65F6\u89E6\u53D1| Function |\n| change| \u5728 Input \u503C\u6539\u53D8\u65F6\u89E6\u53D1| Function |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u63CF\u8FF0\u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u8F93\u5165\u5EFA\u8BAE\u7684\u5185\u5BB9\u3002| object |\n| prefix| \u8F93\u5165\u6846\u5934\u90E8\u5185\u5BB9| - |\n| suffix| \u8F93\u5165\u6846\u5C3E\u90E8\u5185\u5BB9| - |\n| prepend| \u8F93\u5165\u6846\u524D\u7F6E\u5185\u5BB9\uFF0C\u5728 prefix \u4E4B\u524D| - |\n| append| \u8F93\u5165\u6846\u540E\u7F6E\u5185\u5BB9\uFF0C\u5728 suffix \u4E4B\u540E| - |\n| loading 2.5.0| \u4FEE\u6539\u52A0\u8F7D\u533A\u57DF\u5185\u5BB9| - |\n\n#### Exposes\n\n| \u540D\u79F0| \u8BE6\u60C5| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| activated| \u81EA\u52A8\u8865\u5168\u8F93\u5165\u6846\u662F\u5426\u88AB\u6FC0\u6D3B| object |\n| blur| \u4F7F input \u5931\u53BB\u7126\u70B9| Function |\n| close| \u6298\u53E0\u5EFA\u8BAE\u5217\u8868| Function |\n| focus| \u4F7F input \u83B7\u53D6\u7126\u70B9| Function |\n| handleSelect| \u624B\u52A8\u89E6\u53D1\u9009\u4E2D\u5EFA\u8BAE\u4E8B\u4EF6| Function |\n| handleKeyEnter| \u624B\u52A8\u89E6\u53D1\u952E\u76D8\u56DE\u8F66\u4E8B\u4EF6| Function |\n| highlightedIndex| \u5F53\u524D\u9AD8\u4EAE\u663E\u793A\u9009\u9879\u7684\u7D22\u5F15| object |\n| highlight| \u5728\u5EFA\u8BAE\u4E2D\u9AD8\u4EAE\u663E\u793A\u4E00\u4E2A\u9879\u76EE| Function |\n| inputRef| el-input \u7EC4\u4EF6\u5B9E\u4F8B| object |\n| loading| \u8FDC\u7A0B\u83B7\u53D6\u63D0\u793A\u5185\u5BB9\u7684\u52A0\u8F7D\u72B6\u6001\u6307\u793A\u5668| object |\n| popperRef| el-tooltip \u7EC4\u4EF6\u5B9E\u4F8B| object |\n| suggestions| \u83B7\u53D6\u81EA\u52A8\u8865\u5168\u7ED3\u679C| object |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u5360\u4F4D\u6587\u672C"
          },
          "clearable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u6E05\u7A7A"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u81EA\u52A8\u8865\u5168\u7EC4\u4EF6\u662F\u5426\u88AB\u7981\u7528"
          },
          "value-key": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u5EFA\u8BAE\u5BF9\u8C61\u4E2D\u7528\u4E8E\u663E\u793A\u7684\u952E\u540D"
          },
          "debounce": {
            "type": "attr",
            "values": ["number"],
            "description": "\u83B7\u53D6\u8F93\u5165\u5EFA\u8BAE\u7684\u9632\u6296\u5EF6\u65F6\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2"
          },
          "placement": {
            "type": "attr",
            "values": ["top", "top- start", "top-end", "bottom", "bottom-start", "bottom-end"],
            "description": "\u83DC\u5355\u5F39\u51FA\u4F4D\u7F6E"
          },
          "fetch-suggestions": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u83B7\u53D6\u8F93\u5165\u5EFA\u8BAE\u7684\u65B9\u6CD5\uFF0C \u4EC5\u5F53\u4F60\u7684\u8F93\u5165\u5EFA\u8BAE\u6570\u636E resolve \u65F6\uFF0C\u901A\u8FC7\u8C03\u7528 callback(data:[])  \u6765\u8FD4\u56DE\u5B83"
          },
          "trigger-on-focus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "whether show suggestions when input focus"
          },
          "select-when-unmatched": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u8F93\u5165\u6CA1\u6709\u4EFB\u4F55\u5339\u914D\u5EFA\u8BAE\u7684\u60C5\u51B5\u4E0B\uFF0C\u6309\u4E0B\u56DE\u8F66\u662F\u5426\u89E6\u53D1 select \u4E8B\u4EF6"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F aria-label\u5C5E\u6027"
          },
          "hide-loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9690\u85CF\u8FDC\u7A0B\u52A0\u8F7D\u65F6\u7684\u52A0\u8F7D\u56FE\u6807"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "\u4E0B\u62C9\u5217\u8868\u7684\u7C7B\u540D"
          },
          "popper-append-to-bodydeprecated": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20\u3002 \u5728\u4E0B\u62C9\u5217\u8868\u7684\u5B9A\u4F4D\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u53EF\u5C06\u8BE5\u5C5E\u6027\u8BBE\u7F6E\u4E3A false"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u5143\u7D20\u63D2\u5165 append-to \u6307\u5411\u7684\u5143\u7D20\u4E0B"
          },
          "highlight-first-item": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9ED8\u8BA4\u9AD8\u4EAE\u8FDC\u7A0B\u641C\u7D22\u7ED3\u679C\u7684\u7B2C\u4E00\u9879"
          },
          "fit-input-width": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E0B\u62C9\u6846\u7684\u5BBD\u5EA6\u662F\u5426\u4E0E\u8F93\u5165\u6846\u76F8\u540C"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u9009\u4E2D\u5EFA\u8BAE\u9879\u65F6\u89E6\u53D1"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5728 Input \u503C\u6539\u53D8\u65F6\u89E6\u53D1"
          }
        },
        "el-cascader": {
          "_html": {
            "": '<el-cascader v-model="${1:value}" :options="options" @change="handleChange" clearable filterable />',
            ":last-level": '<el-cascader v-model="${1:value}" :options="options" @change="handleChange" clearable filterable :show-all-levels="false" />',
            ":multiple": '<el-cascader v-model="${1:value}" :options="options" @change="handleChange" clearable filterable :props="{ multiple: true }" />',
            ":strictly": '<el-cascader v-model="${1:value}" :options="options" @change="handleChange" clearable filterable :props="{ checkStrictly: true }" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/cascader.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| string/number/object| \u2014 |\n| options| \u9009\u9879\u7684\u6570\u636E\u6E90\uFF0C value \u548C label \u53EF\u4EE5\u901A\u8FC7 CascaderProps \u81EA\u5B9A\u4E49.| object| \u2014 |\n| props| \u914D\u7F6E\u9009\u9879, \u8BF7\u53C2\u9605\u4E0B\u9762 CascaderProps \u8868\u3002| object| \u2014 |\n| size| \u5C3A\u5BF8| enum| \u2014 |\n| placeholder| \u8F93\u5165\u6846\u5360\u4F4D\u6587\u672C| string| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528| boolean| \u2014 |\n| clearable| \u662F\u5426\u652F\u6301\u6E05\u7A7A\u9009\u9879| boolean| \u2014 |\n| show-all-levels| \u8F93\u5165\u6846\u4E2D\u662F\u5426\u663E\u793A\u9009\u4E2D\u503C\u7684\u5B8C\u6574\u8DEF\u5F84| boolean| true |\n| collapse-tags| \u591A\u9009\u6A21\u5F0F\u4E0B\u662F\u5426\u6298\u53E0Tag| boolean| \u2014 |\n| collapse-tags-tooltip| \u5F53\u9F20\u6807\u60AC\u505C\u4E8E\u6298\u53E0\u6807\u7B7E\u7684\u6587\u672C\u65F6\uFF0C\u662F\u5426\u663E\u793A\u6240\u6709\u9009\u4E2D\u7684\u6807\u7B7E\u3002 \u8981\u4F7F\u7528\u6B64\u5C5E\u6027\uFF0Ccollapse-tags\u5C5E\u6027\u5FC5\u987B\u8BBE\u5B9A\u4E3A true| boolean| false |\n| separator| \u7528\u4E8E\u5206\u9694\u9009\u9879\u7684\u5B57\u7B26| string| ' / ' |\n| filterable| \u8BE5\u9009\u9879\u662F\u5426\u53EF\u4EE5\u88AB\u641C\u7D22| boolean| \u2014 |\n| filter-method| \u81EA\u5B9A\u4E49\u641C\u7D22\u903B\u8F91\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662Fnode\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662Fkeyword\uFF0C\u8FD4\u56DE\u7684\u5E03\u5C14\u503C\u8868\u793A\u662F\u5426\u4FDD\u7559\u8BE5\u9009\u9879| Function| \u2014 |\n| debounce| \u641C\u7D22\u5173\u952E\u8BCD\u6B63\u5728\u8F93\u5165\u65F6\u7684\u53BB\u6296\u5EF6\u8FDF\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2| number| 300 |\n| before-filter| \u8FC7\u6EE4\u51FD\u6570\u8C03\u7528\u524D\uFF0C\u6240\u8981\u8C03\u7528\u7684\u94A9\u5B50\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u63A5\u6536\u8981\u8FC7\u6EE4\u7684\u503C\u4F5C\u4E3A\u53C2\u6570\u3002 \u5982\u679C\u8BE5\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F false \u6216\u8005\u662F\u4E00\u4E2A\u88AB\u62D2\u7EDD\u7684 Promise\uFF0C\u90A3\u4E48\u63A5\u4E0B\u6765\u7684\u8FC7\u6EE4\u903B\u8F91\u4FBF\u4E0D\u4F1A\u6267\u884C\u3002| Function| \u2014 |\n| popper-class| \u5F39\u51FA\u5185\u5BB9\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| '' |\n| teleported| \u5F39\u5C42\u662F\u5426\u4F7F\u7528 teleport| boolean| true |\n| popper-append-to-body deprecated| \u662F\u5426\u5C06\u5F39\u51FA\u7684\u5185\u5BB9\u76F4\u63A5\u63D2\u5165\u5230 body \u5143\u7D20\u3002 \u5728\u5F39\u51FA\u5185\u5BB9\u7684\u8FB9\u6846\u5B9A\u4F4D\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u53EF\u5C06\u8BE5\u5C5E\u6027\u8BBE\u7F6E\u4E3A false| boolean| true |\n| tag-type| \u6807\u7B7E\u7C7B\u578B| enum| info |\n| validate-event| \u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C| boolean| true |\n| max-collapse-tags 2.3.10| \u9700\u8981\u663E\u793A\u7684 Tag \u7684\u6700\u5927\u6570\u91CF \u53EA\u6709\u5F53 collapse-tags \u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548\u3002| number| 1 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n| expand-change| \u5F53\u5C55\u5F00\u8282\u70B9\u53D1\u751F\u53D8\u5316\u65F6\u89E6\u53D1| Function |\n| blur| \u5F53\u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| focus| \u5F53\u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| visible-change| \u4E0B\u62C9\u6846\u51FA\u73B0/\u9690\u85CF\u65F6\u89E6\u53D1| Function |\n| remove-tag| \u5728\u591A\u9009\u6A21\u5F0F\u4E0B\uFF0C\u79FB\u9664Tag\u65F6\u89E6\u53D1| Function |\n\n#### Cascader Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u4F5C\u7528\u57DF |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u5907\u9009\u9879\u7684\u8282\u70B9\u5185\u5BB9\uFF0C\u5206\u522B\u4E3A\u5F53\u524D\u8282\u70B9\u7684 Node \u5BF9\u8C61\u548C\u6570\u636E| object |\n| empty| \u65E0\u5339\u914D\u9009\u9879\u65F6\u7684\u5185\u5BB9| \u2014 |\n\n#### Cascader Exposes\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| getCheckedNodes| \u83B7\u53D6\u4E00\u4E2A\u5F53\u524D\u9009\u4E2D\u8282\u70B9\u7684\u6570\u7EC4\u3002(\u4EC5\u4EC5\u662F\u4F20\u5355) \u662F\u5426\u53EA\u8FD4\u56DE\u53F6\u9009\u4E2D\u7684\u8282\u70B9\uFF0C\u9ED8\u8BA4\u662F false| Function |\n| cascaderPanelRef| cascader \u9762\u677F\u7684 ref| object |\n| togglePopperVisible 2.2.31| \u5207\u6362 popper \u53EF\u89C1\u72B6\u6001| Function |\n| contentRef| cascader \u5185\u5BB9\u7684 ref| object |\n",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "options": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9009\u9879\u7684\u6570\u636E\u6E90\uFF0C value \u548C label \u53EF\u4EE5\u901A\u8FC7 CascaderProps \u81EA\u5B9A\u4E49."
          },
          "props": {
            "type": "attr",
            "values": ["object"],
            "description": "\u914D\u7F6E\u9009\u9879, \u8BF7\u53C2\u9605\u4E0B\u9762 CascaderProps \u8868\u3002"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u5C3A\u5BF8"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u5360\u4F4D\u6587\u672C"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "clearable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u652F\u6301\u6E05\u7A7A\u9009\u9879"
          },
          "show-all-levels": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8F93\u5165\u6846\u4E2D\u662F\u5426\u663E\u793A\u9009\u4E2D\u503C\u7684\u5B8C\u6574\u8DEF\u5F84"
          },
          "collapse-tags": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u591A\u9009\u6A21\u5F0F\u4E0B\u662F\u5426\u6298\u53E0Tag"
          },
          "collapse-tags-tooltip": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u9F20\u6807\u60AC\u505C\u4E8E\u6298\u53E0\u6807\u7B7E\u7684\u6587\u672C\u65F6\uFF0C\u662F\u5426\u663E\u793A\u6240\u6709\u9009\u4E2D\u7684\u6807\u7B7E\u3002 \u8981\u4F7F\u7528\u6B64\u5C5E\u6027\uFF0Ccollapse-tags\u5C5E\u6027\u5FC5\u987B\u8BBE\u5B9A\u4E3A true"
          },
          "separator": {
            "type": "attr",
            "values": [],
            "description": "\u7528\u4E8E\u5206\u9694\u9009\u9879\u7684\u5B57\u7B26"
          },
          "filterable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BE5\u9009\u9879\u662F\u5426\u53EF\u4EE5\u88AB\u641C\u7D22"
          },
          "filter-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u81EA\u5B9A\u4E49\u641C\u7D22\u903B\u8F91\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662Fnode\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662Fkeyword\uFF0C\u8FD4\u56DE\u7684\u5E03\u5C14\u503C\u8868\u793A\u662F\u5426\u4FDD\u7559\u8BE5\u9009\u9879"
          },
          "debounce": {
            "type": "attr",
            "values": ["number"],
            "description": "\u641C\u7D22\u5173\u952E\u8BCD\u6B63\u5728\u8F93\u5165\u65F6\u7684\u53BB\u6296\u5EF6\u8FDF\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2"
          },
          "before-filter": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8FC7\u6EE4\u51FD\u6570\u8C03\u7528\u524D\uFF0C\u6240\u8981\u8C03\u7528\u7684\u94A9\u5B50\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u63A5\u6536\u8981\u8FC7\u6EE4\u7684\u503C\u4F5C\u4E3A\u53C2\u6570\u3002 \u5982\u679C\u8BE5\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F false \u6216\u8005\u662F\u4E00\u4E2A\u88AB\u62D2\u7EDD\u7684 Promise\uFF0C\u90A3\u4E48\u63A5\u4E0B\u6765\u7684\u8FC7\u6EE4\u903B\u8F91\u4FBF\u4E0D\u4F1A\u6267\u884C\u3002"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "\u5F39\u51FA\u5185\u5BB9\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F39\u5C42\u662F\u5426\u4F7F\u7528 teleport"
          },
          "popper-append-to-bodydeprecated": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06\u5F39\u51FA\u7684\u5185\u5BB9\u76F4\u63A5\u63D2\u5165\u5230 body \u5143\u7D20\u3002 \u5728\u5F39\u51FA\u5185\u5BB9\u7684\u8FB9\u6846\u5B9A\u4F4D\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u53EF\u5C06\u8BE5\u5C5E\u6027\u8BBE\u7F6E\u4E3A false"
          },
          "tag-type": {
            "type": "attr",
            "values": ["success", "info", "warning", "danger"],
            "description": "\u6807\u7B7E\u7C7B\u578B"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C"
          },
          "max-collapse-tags": {
            "type": "attr",
            "values": ["number"],
            "description": "\u9700\u8981\u663E\u793A\u7684 Tag \u7684\u6700\u5927\u6570\u91CF \u53EA\u6709\u5F53 collapse-tags \u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548\u3002"
          },
          "empty-values": {
            "type": "attr",
            "values": ["array"],
            "description": "\u7EC4\u4EF6\u7684\u7A7A\u503C\u914D\u7F6E \u53C2\u8003config-provider"
          },
          "value-on-clear": {
            "type": "attr",
            "values": [],
            "description": "\u6E05\u7A7A\u9009\u9879\u7684\u503C \u53C2\u8003 config-provider"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "expand-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u5C55\u5F00\u8282\u70B9\u53D1\u751F\u53D8\u5316\u65F6\u89E6\u53D1"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "visible-change": {
            "type": "event",
            "values": [],
            "description": "\u4E0B\u62C9\u6846\u51FA\u73B0/\u9690\u85CF\u65F6\u89E6\u53D1"
          },
          "remove-tag": {
            "type": "event",
            "values": [],
            "description": "\u5728\u591A\u9009\u6A21\u5F0F\u4E0B\uFF0C\u79FB\u9664Tag\u65F6\u89E6\u53D1"
          }
        },
        "el-checkbox": {
          "_html": {
            "": '<el-checkbox v-model="${1:checked}">$2</el-checkbox>',
            ":disabled": '<el-checkbox v-model="${1:checked}" disabled>$2</el-checkbox>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/checkbox.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| string / number / boolean| \u2014 |\n| value 2.6.0| \u9009\u4E2D\u72B6\u6001\u7684\u503C\uFF08\u53EA\u6709\u5728checkbox-group\u6216\u8005\u7ED1\u5B9A\u5BF9\u8C61\u7C7B\u578B\u4E3Aarray\u65F6\u6709\u6548\uFF09| string / number / boolean / object| \u2014 |\n| label| \u9009\u4E2D\u72B6\u6001\u7684\u503C\uFF0C\u53EA\u6709\u5728\u7ED1\u5B9A\u5BF9\u8C61\u7C7B\u578B\u4E3A array \u65F6\u6709\u6548\u3002 \u5982\u679C\u6CA1\u6709 value\uFF0C label\u5219\u4F5C\u4E3Avalue\u4F7F\u7528| string / number / boolean / object| \u2014 |\n| true-value 2.6.0| \u9009\u4E2D\u65F6\u7684\u503C| string / number| \u2014 |\n| false-value 2.6.0| \u6CA1\u6709\u9009\u4E2D\u65F6\u7684\u503C| string / number| \u2014 |\n| true-label deprecated| \u9009\u4E2D\u65F6\u7684\u503C| string / number| \u2014 |\n| false-label deprecated| \u6CA1\u6709\u9009\u4E2D\u65F6\u7684\u503C| string / number| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false |\n| border| \u662F\u5426\u663E\u793A\u8FB9\u6846| boolean| false |\n| size| Checkbox \u7684\u5C3A\u5BF8| enum| \u2014 |\n| name| \u539F\u751F name \u5C5E\u6027| string| \u2014 |\n| checked| \u5F53\u524D\u662F\u5426\u52FE\u9009| boolean| false |\n| indeterminate| \u8BBE\u7F6E\u4E0D\u786E\u5B9A\u72B6\u6001\uFF0C\u4EC5\u8D1F\u8D23\u6837\u5F0F\u63A7\u5236| boolean| false |\n| validate-event| \u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C| boolean| true |\n| tabindex| \u8F93\u5165\u6846\u7684 tabindex| string / number| \u2014 |\n| id| input id| string| \u2014 |\n| controls a11y| \u4E0E aria-control\u4E00\u81F4, \u5F53 indeterminate\u4E3A true\u65F6\u751F\u6548| boolean| \u2014 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n\n#### Checkbox Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u72B6\u6001\u7684\u503C\uFF08\u53EA\u6709\u5728checkbox-group\u6216\u8005\u7ED1\u5B9A\u5BF9\u8C61\u7C7B\u578B\u4E3Aarray\u65F6\u6709\u6548\uFF09"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u72B6\u6001\u7684\u503C\uFF0C\u53EA\u6709\u5728\u7ED1\u5B9A\u5BF9\u8C61\u7C7B\u578B\u4E3A array \u65F6\u6709\u6548\u3002 \u5982\u679C\u6CA1\u6709 value\uFF0C label\u5219\u4F5C\u4E3Avalue\u4F7F\u7528"
          },
          "true-value": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u65F6\u7684\u503C"
          },
          "false-value": {
            "type": "attr",
            "values": [],
            "description": "\u6CA1\u6709\u9009\u4E2D\u65F6\u7684\u503C"
          },
          "true-labeldeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u65F6\u7684\u503C"
          },
          "false-labeldeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u6CA1\u6709\u9009\u4E2D\u65F6\u7684\u503C"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "border": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u8FB9\u6846"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "Checkbox \u7684\u5C3A\u5BF8"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F name \u5C5E\u6027"
          },
          "checked": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u524D\u662F\u5426\u52FE\u9009"
          },
          "indeterminate": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u4E0D\u786E\u5B9A\u72B6\u6001\uFF0C\u4EC5\u8D1F\u8D23\u6837\u5F0F\u63A7\u5236"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C"
          },
          "tabindex": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u7684 tabindex"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "input id"
          },
          "controlsaydeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u4E0E aria-control\u4E00\u81F4, \u5F53 indeterminate\u4E3A true\u65F6\u751F\u6548"
          },
          "aria-controlsay": {
            "type": "attr",
            "values": [],
            "description": "\u548C aria-control\u4E00\u81F4\u3002\u5F53 indeterminate \u4E3A true \u65F6\u751F\u6548"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-checkbox-group": {
          "_html": {
            "": '<el-checkbox-group v-model="${1:checkList}">\n<el-checkbox label="${2:label}" value="${3:value}"></el-checkbox>\n</el-checkbox-group>',
            ":for": '<el-checkbox-group v-model="${1:checkList}">\n<el-checkbox v-for="item in ${2:options}" :label="item.label" :value="item.value"></el-checkbox>\n</el-checkbox-group>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/checkbox.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u7ED1\u5B9A\u503C| object| [] |\n| size| \u591A\u9009\u6846\u7EC4\u5C3A\u5BF8| enum| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false |\n| min| \u53EF\u88AB\u52FE\u9009\u7684 checkbox \u7684\u6700\u5C0F\u6570\u91CF| number| \u2014 |\n| max| \u53EF\u88AB\u52FE\u9009\u7684 checkbox \u7684\u6700\u5927\u6570\u91CF| number| \u2014 |\n| label| \u4E3A\u5C4F\u5E55\u9605\u8BFB\u5668\u51C6\u5907\u7684\u6807\u7B7E| string| \u2014 |\n| text-color| \u5F53\u6309\u94AE\u4E3A\u6D3B\u8DC3\u72B6\u6001\u65F6\u7684\u5B57\u4F53\u989C\u8272| string| #ffffff |\n| fill| \u5F53\u6309\u94AE\u4E3A\u6D3B\u8DC3\u72B6\u6001\u65F6\u7684\u8FB9\u6846\u548C\u80CC\u666F\u989C\u8272| string| #409EFF |\n| tag| \u590D\u9009\u6846\u7EC4\u5143\u7D20\u6807\u7B7E| string| div |\n| validate-event| \u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1| boolean| true |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n\n#### CheckboxGroup Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Checkbox / Checkbox-button |\n",
          "v-model": {
            "type": "attr",
            "values": ["object"],
            "description": "\u7ED1\u5B9A\u503C"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u591A\u9009\u6846\u7EC4\u5C3A\u5BF8"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "min": {
            "type": "attr",
            "values": ["number"],
            "description": "\u53EF\u88AB\u52FE\u9009\u7684 checkbox \u7684\u6700\u5C0F\u6570\u91CF"
          },
          "max": {
            "type": "attr",
            "values": ["number"],
            "description": "\u53EF\u88AB\u52FE\u9009\u7684 checkbox \u7684\u6700\u5927\u6570\u91CF"
          },
          "labelaydeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F aria-label\u5C5E\u6027"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F aria-label\u5C5E\u6027"
          },
          "text-color": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u6309\u94AE\u4E3A\u6D3B\u8DC3\u72B6\u6001\u65F6\u7684\u5B57\u4F53\u989C\u8272"
          },
          "fill": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u6309\u94AE\u4E3A\u6D3B\u8DC3\u72B6\u6001\u65F6\u7684\u8FB9\u6846\u548C\u80CC\u666F\u989C\u8272"
          },
          "tag": {
            "type": "attr",
            "values": [],
            "description": "\u590D\u9009\u6846\u7EC4\u5143\u7D20\u6807\u7B7E"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-color-picker": {
          "_html": {
            "": '<el-color-picker v-model="${1:color}" />',
            ":alpha": '<el-color-picker v-model="${1:color}" show-alpha />',
            ":predefine": '<el-color-picker v-model="${1:color}" show-alpha :predefine="${2:predefineColors}" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/color-picker.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| string| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false |\n| size| \u5C3A\u5BF8| enum| \u2014 |\n| show-alpha| \u662F\u5426\u652F\u6301\u900F\u660E\u5EA6\u9009\u62E9| boolean| false |\n| color-format| \u5199\u5165 v-model \u7684\u989C\u8272\u7684\u683C\u5F0F| enum| \u2014 |\n| popper-class| ColorPicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D| string| \u2014 |\n| predefine| \u9884\u5B9A\u4E49\u989C\u8272| object| \u2014 |\n| validate-event| \u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C| boolean| true |\n| tabindex| ColorPicker \u7684 tabindex| string / number| 0 |\n| label a11y| ColorPicker \u7684 aria-label| string| \u2014 |\n| id| ColorPicker \u7684 id| string| \u2014 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1| Function |\n| active-change| \u9762\u677F\u4E2D\u5F53\u524D\u663E\u793A\u7684\u989C\u8272\u53D1\u751F\u6539\u53D8\u65F6\u89E6\u53D1| Function |\n| focus 2.4.0| \u5F53\u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| blur 2.4.0| \u5F53\u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n\n#### Exposes\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| color| \u5F53\u524D\u8272\u5F69\u5BF9\u8C61| object |\n| show 2.3.3| \u624B\u52A8\u663E\u793A\u989C\u8272\u9009\u62E9\u5668| Function |\n| hide 2.3.3| \u624B\u52A8\u9690\u85CF\u989C\u8272\u9009\u62E9\u5668| Function |\n| focus 2.3.13| \u4F7F picker \u83B7\u5F97\u7126\u70B9| Function |\n| blur 2.3.13| \u4F7F picker \u5931\u53BB\u7126\u70B9| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u5C3A\u5BF8"
          },
          "show-alpha": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u652F\u6301\u900F\u660E\u5EA6\u9009\u62E9"
          },
          "color-format": {
            "type": "attr",
            "values": ["enum"],
            "description": "\u5199\u5165 v-model \u7684\u989C\u8272\u7684\u683C\u5F0F"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "ColorPicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D"
          },
          "predefine": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9884\u5B9A\u4E49\u989C\u8272"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C"
          },
          "tabindex": {
            "type": "attr",
            "values": [],
            "description": "ColorPicker \u7684 tabindex"
          },
          "labelaydeprecated": {
            "type": "attr",
            "values": [],
            "description": "ColorPicker \u7684 aria-label"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "ColorPicker \u7684 aria-label"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "ColorPicker \u7684 id"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06 popover \u7684\u4E0B\u62C9\u5217\u8868\u6E32\u67D3\u81F3 body \u4E0B"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1"
          },
          "active-change": {
            "type": "event",
            "values": [],
            "description": "\u9762\u677F\u4E2D\u5F53\u524D\u663E\u793A\u7684\u989C\u8272\u53D1\u751F\u6539\u53D8\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1"
          }
        },
        "el-date-picker": {
          "_html": {
            "": '<el-date-picker v-model="${1:value}" type="${2:date}" placeholder="Pick a day" />',
            ":shortcuts": '<el-date-picker v-model="${1:value}" type="${2:date}" placeholder="Pick a day" :shortcuts="${3:shortcuts}" />',
            ":range": '<el-date-picker v-model="${1:value}" type="${2:daterange}" range-separator="${3:To}" start-placeholder="Start date" end-placeholder="End date" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/date-picker.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u7ED1\u5B9A\u503C\uFF0C\u5982\u679C\u5B83\u662F\u6570\u7EC4\uFF0C\u957F\u5EA6\u5E94\u8BE5\u662F 2| number / string / object| '' |\n| readonly| \u53EA\u8BFB| boolean| false |\n| disabled| \u7981\u7528| boolean| false |\n| size| \u8F93\u5165\u6846\u5C3A\u5BF8| enum| \u2014 |\n| editable| \u6587\u672C\u6846\u53EF\u8F93\u5165| boolean| true |\n| clearable| \u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE| boolean| true |\n| placeholder| \u975E\u8303\u56F4\u9009\u62E9\u65F6\u7684\u5360\u4F4D\u5185\u5BB9| string| '' |\n| start-placeholder| \u8303\u56F4\u9009\u62E9\u65F6\u5F00\u59CB\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9| string| \u2014 |\n| end-placeholder| \u8303\u56F4\u9009\u62E9\u65F6\u7ED3\u675F\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9| string| \u2014 |\n| type| \u663E\u793A\u7C7B\u578B| enum| date |\n| format| \u663E\u793A\u5728\u8F93\u5165\u6846\u4E2D\u7684\u683C\u5F0F| \u53C2\u89C1 date formats| YYYY-MM-DD |\n| popper-class| DatePicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D| string| \u2014 |\n| popper-options| \u81EA\u5B9A\u4E49 popper \u9009\u9879\uFF0C\u66F4\u591A\u8BF7\u53C2\u8003 popper.js| object| {} |\n| range-separator| \u9009\u62E9\u8303\u56F4\u65F6\u7684\u5206\u9694\u7B26| string| '-' |\n| default-value| \u53EF\u9009\uFF0C\u9009\u62E9\u5668\u6253\u5F00\u65F6\u9ED8\u8BA4\u663E\u793A\u7684\u65F6\u95F4| object| \u2014 |\n| default-time| \u8303\u56F4\u9009\u62E9\u65F6\u9009\u4E2D\u65E5\u671F\u6240\u4F7F\u7528\u7684\u5F53\u65E5\u5185\u5177\u4F53\u65F6\u523B| object| \u2014 |\n| value-format| \u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\u3002 \u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A Date \u5BF9\u8C61| \u53C2\u89C1 date formats| \u2014 |\n| id| \u7B49\u4EF7\u4E8E\u539F\u751F input id \u5C5E\u6027| string / object| \u2014 |\n| name| \u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027| string / object| '' |\n| unlink-panels| \u5728\u8303\u56F4\u9009\u62E9\u5668\u91CC\u53D6\u6D88\u4E24\u4E2A\u65E5\u671F\u9762\u677F\u4E4B\u95F4\u7684\u8054\u52A8| boolean| false |\n| prefix-icon| \u81EA\u5B9A\u4E49\u524D\u7F00\u56FE\u6807 \u5982\u679C type\u7684\u503C\u662FTimeLikeType\uFF0C\u90A3\u4E48\u5C31\u662F Clock\uFF0C\u4E0D\u7136\u5C31\u662F Calendar| string / object| '' |\n| clear-icon| \u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807| string / object| CircleClose |\n| validate-event| \u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1| boolean| true |\n| disabled-date| \u4E00\u4E2A\u7528\u6765\u5224\u65AD\u8BE5\u65E5\u671F\u662F\u5426\u88AB\u7981\u7528\u7684\u51FD\u6570\uFF0C\u63A5\u53D7\u4E00\u4E2A Date \u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570\u3002 \u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A Boolean \u503C\u3002| Function| \u2014 |\n| shortcuts| \u8BBE\u7F6E\u5FEB\u6377\u9009\u9879\uFF0C\u9700\u8981\u4F20\u5165\u6570\u7EC4\u5BF9\u8C61| object| [] |\n| cell-class-name| \u8BBE\u7F6E\u81EA\u5B9A\u4E49\u7C7B\u540D| Function| \u2014 |\n| teleported| \u662F\u5426\u5C06 date-picker \u7684\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20| boolean| true |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u7528\u6237\u786E\u8BA4\u9009\u5B9A\u7684\u503C\u65F6\u89E6\u53D1| Function |\n| blur| \u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| focus| \u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| calendar-change| \u5728\u65E5\u5386\u6240\u9009\u65E5\u671F\u66F4\u6539\u65F6\u89E6\u53D1| Function |\n| panel-change| \u5F53\u65E5\u671F\u9762\u677F\u6539\u53D8\u65F6\u89E6\u53D1\u3002| Function |\n| visible-change| \u5F53 DatePicker \u7684\u4E0B\u62C9\u5217\u8868\u51FA\u73B0/\u6D88\u5931\u65F6\u89E6\u53D1| Function |\n\n#### \u63D2\u69FD\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u5355\u5143\u683C\u5185\u5BB9 |\n| range-separator| \u81EA\u5B9A\u4E49\u8303\u56F4\u5206\u5272\u7B26\u5185\u5BB9 |\n\n#### \u66B4\u9732\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| focus| \u4F7F\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u83B7\u53D6\u7126\u70B9| Function |\n| handleOpen 2.2.16| \u6253\u5F00\u65E5\u671F\u9009\u62E9\u5668\u5F39\u7A97| Function |\n| handleClose 2.2.16| \u5173\u95ED\u65E5\u671F\u9009\u62E9\u5668\u5F39\u7A97| Function |\n\n#### \u7C7B\u578B\u58F0\u660E\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": ["number"],
            "description": "\u7ED1\u5B9A\u503C\uFF0C\u5982\u679C\u5B83\u662F\u6570\u7EC4\uFF0C\u957F\u5EA6\u5E94\u8BE5\u662F 2"
          },
          "readonly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u53EA\u8BFB"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u7528"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u8F93\u5165\u6846\u5C3A\u5BF8"
          },
          "editable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6587\u672C\u6846\u53EF\u8F93\u5165"
          },
          "clearable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u975E\u8303\u56F4\u9009\u62E9\u65F6\u7684\u5360\u4F4D\u5185\u5BB9"
          },
          "start-placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u8303\u56F4\u9009\u62E9\u65F6\u5F00\u59CB\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9"
          },
          "end-placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u8303\u56F4\u9009\u62E9\u65F6\u7ED3\u675F\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9"
          },
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info"],
            "description": "\u663E\u793A\u7C7B\u578B"
          },
          "format": {
            "type": "attr",
            "values": ["\u53C2\u89C1"],
            "description": "\u663E\u793A\u5728\u8F93\u5165\u6846\u4E2D\u7684\u683C\u5F0F"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "DatePicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D"
          },
          "popper-options": {
            "type": "attr",
            "values": ["object"],
            "description": "\u81EA\u5B9A\u4E49 popper \u9009\u9879\uFF0C\u66F4\u591A\u8BF7\u53C2\u8003 popper.js"
          },
          "range-separator": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u62E9\u8303\u56F4\u65F6\u7684\u5206\u9694\u7B26"
          },
          "default-value": {
            "type": "attr",
            "values": ["object"],
            "description": "\u53EF\u9009\uFF0C\u9009\u62E9\u5668\u6253\u5F00\u65F6\u9ED8\u8BA4\u663E\u793A\u7684\u65F6\u95F4"
          },
          "default-time": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8303\u56F4\u9009\u62E9\u65F6\u9009\u4E2D\u65E5\u671F\u6240\u4F7F\u7528\u7684\u5F53\u65E5\u5185\u5177\u4F53\u65F6\u523B"
          },
          "value-format": {
            "type": "attr",
            "values": ["\u53C2\u89C1"],
            "description": "\u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\u3002 \u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A Date \u5BF9\u8C61"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input id \u5C5E\u6027"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027"
          },
          "unlink-panels": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u8303\u56F4\u9009\u62E9\u5668\u91CC\u53D6\u6D88\u4E24\u4E2A\u65E5\u671F\u9762\u677F\u4E4B\u95F4\u7684\u8054\u52A8"
          },
          "prefix-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u524D\u7F00\u56FE\u6807 \u5982\u679C type\u7684\u503C\u662FTimeLikeType\uFF0C\u90A3\u4E48\u5C31\u662F Clock\uFF0C\u4E0D\u7136\u5C31\u662F Calendar"
          },
          "clear-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1"
          },
          "disabled-date": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u4E00\u4E2A\u7528\u6765\u5224\u65AD\u8BE5\u65E5\u671F\u662F\u5426\u88AB\u7981\u7528\u7684\u51FD\u6570\uFF0C\u63A5\u53D7\u4E00\u4E2A Date \u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570\u3002 \u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A Boolean \u503C\u3002"
          },
          "shortcuts": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8BBE\u7F6E\u5FEB\u6377\u9009\u9879\uFF0C\u9700\u8981\u4F20\u5165\u6570\u7EC4\u5BF9\u8C61"
          },
          "cell-class-name": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8BBE\u7F6E\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06 date-picker \u7684\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20"
          },
          "empty-values": {
            "type": "attr",
            "values": ["array"],
            "description": "\u7EC4\u4EF6\u7684\u7A7A\u503C\u914D\u7F6E \u53C2\u8003config-provider"
          },
          "value-on-clear": {
            "type": "attr",
            "values": [],
            "description": "\u6E05\u7A7A\u9009\u9879\u7684\u503C \u53C2\u8003 config-provider"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u7528\u6237\u786E\u8BA4\u9009\u5B9A\u7684\u503C\u65F6\u89E6\u53D1"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "calendar-change": {
            "type": "event",
            "values": [],
            "description": "\u5728\u65E5\u5386\u6240\u9009\u65E5\u671F\u66F4\u6539\u65F6\u89E6\u53D1"
          },
          "panel-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u65E5\u671F\u9762\u677F\u6539\u53D8\u65F6\u89E6\u53D1\u3002"
          },
          "visible-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53 DatePicker \u7684\u4E0B\u62C9\u5217\u8868\u51FA\u73B0/\u6D88\u5931\u65F6\u89E6\u53D1"
          }
        },
        "el-datetime-picker": {
          "_html": {
            "": '<el-date-picker v-model="${1:value}" type="${2:datetime}" placeholder="Pick a day" />',
            ":shortcuts": '<el-date-picker v-model="${1:value}" type="${2:datetime}" placeholder="Pick a day" :shortcuts="${3:shortcuts}" />',
            ":range": '<el-date-picker v-model="${1:value}" type="${2:datetimerange}" range-separator="${3:To}" start-placeholder="Start date" end-placeholder="End date" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/datetime-picker.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| model-value / v-model| \u7ED1\u5B9A\u503C\uFF0C\u5982\u679C\u5B83\u662F\u6570\u7EC4\uFF0C\u957F\u5EA6\u5E94\u8BE5\u662F 2| Date / number / string / Array| \u2014| \u2014 |\n| readonly| \u53EA\u8BFB| boolean| \u2014| false |\n| disabled| \u7981\u7528| boolean| \u2014| false |\n| editable| \u6587\u672C\u6846\u53EF\u8F93\u5165| boolean| \u2014| true |\n| clearable| \u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE| boolean| \u2014| true |\n| size| \u8F93\u5165\u6846\u5C3A\u5BF8| string| large/default/small| default |\n| placeholder| \u975E\u8303\u56F4\u9009\u62E9\u65F6\u7684\u5360\u4F4D\u5185\u5BB9| string| \u2014| \u2014 |\n| start-placeholder| \u8303\u56F4\u9009\u62E9\u65F6\u5F00\u59CB\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9| string| \u2014| \u2014 |\n| end-placeholder| \u8303\u56F4\u9009\u62E9\u65F6\u7ED3\u675F\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9| string| \u2014| \u2014 |\n| arrow-control| \u662F\u5426\u4F7F\u7528\u7BAD\u5934\u8FDB\u884C\u65F6\u95F4\u9009\u62E9| boolean| \u2014| false |\n| type| \u663E\u793A\u7C7B\u578B| string| year/month/date/datetime/ week/datetimerange/daterange| date |\n| format| \u663E\u793A\u5728\u8F93\u5165\u6846\u4E2D\u7684\u683C\u5F0F| string| \u53C2\u89C1 date formats| YYYY-MM-DD HH:mm:ss |\n| popper-class| DateTimePicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D| string| \u2014| \u2014 |\n| range-separator| \u9009\u62E9\u8303\u56F4\u65F6\u7684\u5206\u9694\u7B26| string| \u2014| '-' |\n| default-value| \u53EF\u9009\uFF0C\u9009\u62E9\u5668\u6253\u5F00\u65F6\u9ED8\u8BA4\u663E\u793A\u7684\u65F6\u95F4| Date / [Date, Date]| | \u2014 |\n| default-time| \u9009\u62E9\u65E5\u671F\u540E\u7684\u9ED8\u8BA4\u65F6\u95F4\u503C\u3002 \u5982\u672A\u6307\u5B9A\u5219\u9ED8\u8BA4\u65F6\u95F4\u503C\u4E3A 00:00:00| Date / [Date, Date]| \u2014| \u2014 |\n| value-format| \u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\u3002 \u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A Date \u5BF9\u8C61| string| \u67E5\u770B \u65E5\u671F\u683C\u5F0F| \u2014 |\n| date-format 2.4.0| \u53EF\u9009\uFF0C\u65F6\u95F4\u9009\u62E9\u5668\u4E0B\u62C9\u5217\u8868\u4E2D\u663E\u793A\u7684\u65E5\u671F\u683C\u5F0F| string| \u53C2\u89C1 date formats| \u2014 |\n| time-format 2.4.0| \u53EF\u9009\uFF0C\u65F6\u95F4\u9009\u62E9\u5668\u4E0B\u62C9\u5217\u8868\u4E2D\u663E\u793A\u7684\u65F6\u95F4\u683C\u5F0F| string| \u53C2\u89C1 date formats| \u2014 |\n| id| \u7B49\u4EF7\u4E8E\u539F\u751F input id \u5C5E\u6027| string / [string, string]| \u2014| \u2014 |\n| name| \u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027| string| \u2014| \u2014 |\n| unlink-panels| \u5728\u8303\u56F4\u9009\u62E9\u5668\u91CC\u53D6\u6D88\u4E24\u4E2A\u65E5\u671F\u9762\u677F\u4E4B\u95F4\u7684\u8054\u52A8| boolean| \u2014| false |\n| prefix-icon| \u81EA\u5B9A\u4E49\u524D\u7F00\u56FE\u6807\u7EC4\u4EF6| string | Component| \u2014| Date |\n| clear-icon| \u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807| string | Component| \u2014| CircleClose |\n| shortcuts| \u8BBE\u7F6E\u5FEB\u6377\u9009\u9879\uFF0C\u9700\u8981\u4F20\u5165\u6570\u7EC4\u5BF9\u8C61| object[{ text: string, value: date / function }]| \u2014| \u2014 |\n| disabled-date| \u4E00\u4E2A\u7528\u6765\u5224\u65AD\u8BE5\u65E5\u671F\u662F\u5426\u88AB\u7981\u7528\u7684\u51FD\u6570\uFF0C\u63A5\u53D7\u4E00\u4E2A Date \u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570\u3002 \u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A Boolean \u503C\u3002| function(Date)| \u2014| \u2014 |\n| cell-class-name| \u8BBE\u7F6E\u81EA\u5B9A\u4E49\u7C7B\u540D| Function(Date)| \u2014| \u2014 |\n| teleported| \u662F\u5426\u5C06 datetime-picker \u7684\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20| boolean| true / false| true |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change| \u7528\u6237\u786E\u8BA4\u9009\u5B9A\u7684\u503C\u65F6\u89E6\u53D1| value |\n| blur| \u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1| (e: FocusEvent) |\n| focus| \u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1| (e: FocusEvent) |\n| calendar-change| \u5982\u679C\u7528\u6237\u6CA1\u6709\u9009\u62E9\u65E5\u671F\uFF0C\u90A3\u9ED8\u8BA4\u5C55\u793A\u5F53\u524D\u65E5\u7684\u6708\u4EFD\u3002 \u9009\u4E2D\u65E5\u5386\u65E5\u671F\u540E\u4F1A\u6267\u884C\u7684\u56DE\u8C03\uFF0C\u53EA\u6709\u5F53 datetimerange \u624D\u751F\u6548| [Date, Date] |\n| visible-change| \u5F53 DateTimePicker \u7684\u4E0B\u62C9\u5217\u8868\u51FA\u73B0/\u6D88\u5931\u65F6\u89E6\u53D1| \u51FA\u73B0\u65F6\u4E3Atrue\uFF0C\u9690\u85CF\u65F6\u4E3Afalse |\n\n| \u65B9\u6CD5\u540D| \u8BF4\u660E| \u53C2\u6570 |\n| :--- | :--- | :--- |\n| focus| \u4F7F input \u83B7\u53D6\u7126\u70B9| \u2014 |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u5355\u5143\u683C\u5185\u5BB9 |\n| range-separator| \u81EA\u5B9A\u4E49\u8303\u56F4\u5206\u5272\u7B26\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n",
          "v-model": {
            "type": "attr",
            "values": ["Date"],
            "description": "\u7ED1\u5B9A\u503C\uFF0C\u5982\u679C\u5B83\u662F\u6570\u7EC4\uFF0C\u957F\u5EA6\u5E94\u8BE5\u662F 2"
          },
          "readonly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u53EA\u8BFB"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u7528"
          },
          "editable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6587\u672C\u6846\u53EF\u8F93\u5165"
          },
          "clearable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u5C3A\u5BF8"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u975E\u8303\u56F4\u9009\u62E9\u65F6\u7684\u5360\u4F4D\u5185\u5BB9"
          },
          "start-placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u8303\u56F4\u9009\u62E9\u65F6\u5F00\u59CB\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9"
          },
          "end-placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u8303\u56F4\u9009\u62E9\u65F6\u7ED3\u675F\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9"
          },
          "arrow-control": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4F7F\u7528\u7BAD\u5934\u8FDB\u884C\u65F6\u95F4\u9009\u62E9"
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": "\u663E\u793A\u7C7B\u578B"
          },
          "format": {
            "type": "attr",
            "values": [],
            "description": "\u663E\u793A\u5728\u8F93\u5165\u6846\u4E2D\u7684\u683C\u5F0F"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "DateTimePicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D"
          },
          "range-separator": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u62E9\u8303\u56F4\u65F6\u7684\u5206\u9694\u7B26"
          },
          "default-value": {
            "type": "attr",
            "values": ["Date"],
            "description": "\u53EF\u9009\uFF0C\u9009\u62E9\u5668\u6253\u5F00\u65F6\u9ED8\u8BA4\u663E\u793A\u7684\u65F6\u95F4"
          },
          "default-time": {
            "type": "attr",
            "values": ["Date"],
            "description": "\u9009\u62E9\u65E5\u671F\u540E\u7684\u9ED8\u8BA4\u65F6\u95F4\u503C\u3002 \u5982\u672A\u6307\u5B9A\u5219\u9ED8\u8BA4\u65F6\u95F4\u503C\u4E3A 00:00:00"
          },
          "value-format": {
            "type": "attr",
            "values": [],
            "description": "\u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\u3002 \u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A Date \u5BF9\u8C61"
          },
          "date-format": {
            "type": "attr",
            "values": [],
            "description": "\u53EF\u9009\uFF0C\u65F6\u95F4\u9009\u62E9\u5668\u4E0B\u62C9\u5217\u8868\u4E2D\u663E\u793A\u7684\u65E5\u671F\u683C\u5F0F"
          },
          "time-format": {
            "type": "attr",
            "values": [],
            "description": "\u53EF\u9009\uFF0C\u65F6\u95F4\u9009\u62E9\u5668\u4E0B\u62C9\u5217\u8868\u4E2D\u663E\u793A\u7684\u65F6\u95F4\u683C\u5F0F"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input id \u5C5E\u6027"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027"
          },
          "unlink-panels": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u8303\u56F4\u9009\u62E9\u5668\u91CC\u53D6\u6D88\u4E24\u4E2A\u65E5\u671F\u9762\u677F\u4E4B\u95F4\u7684\u8054\u52A8"
          },
          "prefix-icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u81EA\u5B9A\u4E49\u524D\u7F00\u56FE\u6807\u7EC4\u4EF6"
          },
          "clear-icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807"
          },
          "shortcuts": {
            "type": "attr",
            "values": ["object[{"],
            "description": "\u8BBE\u7F6E\u5FEB\u6377\u9009\u9879\uFF0C\u9700\u8981\u4F20\u5165\u6570\u7EC4\u5BF9\u8C61"
          },
          "disabled-date": {
            "type": "attr",
            "values": ["function(Date)"],
            "description": "\u4E00\u4E2A\u7528\u6765\u5224\u65AD\u8BE5\u65E5\u671F\u662F\u5426\u88AB\u7981\u7528\u7684\u51FD\u6570\uFF0C\u63A5\u53D7\u4E00\u4E2A Date \u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570\u3002 \u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A Boolean \u503C\u3002"
          },
          "cell-class-name": {
            "type": "attr",
            "values": ["Function(Date)"],
            "description": "\u8BBE\u7F6E\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06 datetime-picker \u7684\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20"
          },
          "empty-values": {
            "type": "attr",
            "values": ["array"],
            "description": "\u7EC4\u4EF6\u7684\u7A7A\u503C\u914D\u7F6E \u53C2\u8003config-provider"
          },
          "value-on-clear": {
            "type": "attr",
            "values": [],
            "description": "\u6E05\u7A7A\u9009\u9879\u7684\u503C \u53C2\u8003 config-provider"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u7528\u6237\u786E\u8BA4\u9009\u5B9A\u7684\u503C\u65F6\u89E6\u53D1"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "calendar-change": {
            "type": "event",
            "values": [],
            "description": "\u5982\u679C\u7528\u6237\u6CA1\u6709\u9009\u62E9\u65E5\u671F\uFF0C\u90A3\u9ED8\u8BA4\u5C55\u793A\u5F53\u524D\u65E5\u7684\u6708\u4EFD\u3002 \u9009\u4E2D\u65E5\u5386\u65E5\u671F\u540E\u4F1A\u6267\u884C\u7684\u56DE\u8C03\uFF0C\u53EA\u6709\u5F53 datetimerange \u624D\u751F\u6548"
          },
          "visible-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53 DateTimePicker \u7684\u4E0B\u62C9\u5217\u8868\u51FA\u73B0/\u6D88\u5931\u65F6\u89E6\u53D1"
          }
        },
        "el-form": {
          "_html": {
            "": '<el-form :model="${1:form}" :rules="${2:rules}" label-width="auto">\n$3\n</el-form>',
            ":inline": '<el-form :inline="true" :model="${1:form}" :rules="${2:rules}" label-width="auto">\n$3\n</el-form>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/form.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model| \u8868\u5355\u6570\u636E\u5BF9\u8C61| object| \u2014 |\n| rules| \u8868\u5355\u9A8C\u8BC1\u89C4\u5219| object| \u2014 |\n| inline| \u884C\u5185\u8868\u5355\u6A21\u5F0F| boolean| false |\n| label-position| \u8868\u5355\u57DF\u6807\u7B7E\u7684\u4F4D\u7F6E\uFF0C \u5F53\u8BBE\u7F6E\u4E3A left \u6216 right \u65F6\uFF0C\u5219\u4E5F\u9700\u8981\u8BBE\u7F6E label-width \u5C5E\u6027| enum| right |\n| label-width| \u6807\u7B7E\u7684\u957F\u5EA6\uFF0C\u4F8B\u5982 '50px'\u3002 \u4F5C\u4E3A Form \u76F4\u63A5\u5B50\u5143\u7D20\u7684 form-item \u4F1A\u7EE7\u627F\u8BE5\u503C\u3002 \u53EF\u4EE5\u4F7F\u7528 auto\u3002| string / number| '' |\n| label-suffix| \u8868\u5355\u57DF\u6807\u7B7E\u7684\u540E\u7F00| string| '' |\n| hide-required-asterisk| \u662F\u5426\u9690\u85CF\u5FC5\u586B\u5B57\u6BB5\u6807\u7B7E\u65C1\u8FB9\u7684\u7EA2\u8272\u661F\u53F7\u3002| boolean| false |\n| require-asterisk-position| \u661F\u53F7\u7684\u4F4D\u7F6E\u3002| enum| left |\n| show-message| \u662F\u5426\u663E\u793A\u6821\u9A8C\u9519\u8BEF\u4FE1\u606F| boolean| true |\n| inline-message| \u662F\u5426\u4EE5\u884C\u5185\u5F62\u5F0F\u5C55\u793A\u6821\u9A8C\u4FE1\u606F| boolean| false |\n| status-icon| \u662F\u5426\u5728\u8F93\u5165\u6846\u4E2D\u663E\u793A\u6821\u9A8C\u7ED3\u679C\u53CD\u9988\u56FE\u6807| boolean| false |\n| validate-on-rule-change| \u662F\u5426\u5728 rules \u5C5E\u6027\u6539\u53D8\u540E\u7ACB\u5373\u89E6\u53D1\u4E00\u6B21\u9A8C\u8BC1| boolean| true |\n| size| \u7528\u4E8E\u63A7\u5236\u8BE5\u8868\u5355\u5185\u7EC4\u4EF6\u7684\u5C3A\u5BF8| enum| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528\u8BE5\u8868\u5355\u5185\u7684\u6240\u6709\u7EC4\u4EF6\u3002 \u5982\u679C\u8BBE\u7F6E\u4E3A true, \u5B83\u5C06\u8986\u76D6\u5185\u90E8\u7EC4\u4EF6\u7684 disabled \u5C5E\u6027| boolean| false |\n| scroll-to-error| \u5F53\u6821\u9A8C\u5931\u8D25\u65F6\uFF0C\u6EDA\u52A8\u5230\u7B2C\u4E00\u4E2A\u9519\u8BEF\u8868\u5355\u9879| boolean| false |\n| scroll-into-view-options 2.3.2| \u5F53\u6821\u9A8C\u6709\u5931\u8D25\u7ED3\u679C\u65F6\uFF0C\u6EDA\u52A8\u5230\u7B2C\u4E00\u4E2A\u5931\u8D25\u7684\u8868\u5355\u9879\u76EE \u53EF\u901A\u8FC7 scrollIntoView \u914D\u7F6E| object / boolean| \u2014 |\n#### \u4E8B\u4EF6\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| validate| \u4EFB\u4E00\u8868\u5355\u9879\u88AB\u6821\u9A8C\u540E\u89E6\u53D1| Function |\n\n#### Form Slots\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| FormItem |\n\n#### Form Exposes\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| validate| \u5BF9\u6574\u4E2A\u8868\u5355\u7684\u5185\u5BB9\u8FDB\u884C\u9A8C\u8BC1\u3002 \u63A5\u6536\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u6216\u8FD4\u56DE Promise\u3002| Function |\n| validateField| \u9A8C\u8BC1\u5177\u4F53\u7684\u67D0\u4E2A\u5B57\u6BB5\u3002| Function |\n| resetFields| \u91CD\u7F6E\u8BE5\u8868\u5355\u9879\uFF0C\u5C06\u5176\u503C\u91CD\u7F6E\u4E3A\u521D\u59CB\u503C\uFF0C\u5E76\u79FB\u9664\u6821\u9A8C\u7ED3\u679C| Function |\n| scrollToField| \u6EDA\u52A8\u5230\u6307\u5B9A\u7684\u5B57\u6BB5| Function |\n| clearValidate| \u6E05\u7406\u67D0\u4E2A\u5B57\u6BB5\u7684\u8868\u5355\u9A8C\u8BC1\u4FE1\u606F\u3002| Function |\n",
          "model": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8868\u5355\u6570\u636E\u5BF9\u8C61"
          },
          "rules": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8868\u5355\u9A8C\u8BC1\u89C4\u5219"
          },
          "inline": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u884C\u5185\u8868\u5355\u6A21\u5F0F"
          },
          "label-position": {
            "type": "attr",
            "values": ["enum"],
            "description": "\u8868\u5355\u57DF\u6807\u7B7E\u7684\u4F4D\u7F6E\uFF0C \u5F53\u8BBE\u7F6E\u4E3A left \u6216 right \u65F6\uFF0C\u5219\u4E5F\u9700\u8981\u8BBE\u7F6E label-width \u5C5E\u6027"
          },
          "label-width": {
            "type": "attr",
            "values": [],
            "description": "\u6807\u7B7E\u7684\u957F\u5EA6\uFF0C\u4F8B\u5982 '50px'\u3002 \u4F5C\u4E3A Form \u76F4\u63A5\u5B50\u5143\u7D20\u7684 form-item \u4F1A\u7EE7\u627F\u8BE5\u503C\u3002 \u53EF\u4EE5\u4F7F\u7528 auto\u3002"
          },
          "label-suffix": {
            "type": "attr",
            "values": [],
            "description": "\u8868\u5355\u57DF\u6807\u7B7E\u7684\u540E\u7F00"
          },
          "hide-required-asterisk": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9690\u85CF\u5FC5\u586B\u5B57\u6BB5\u6807\u7B7E\u65C1\u8FB9\u7684\u7EA2\u8272\u661F\u53F7\u3002"
          },
          "require-asterisk-position": {
            "type": "attr",
            "values": ["left", "right"],
            "description": "\u661F\u53F7\u7684\u4F4D\u7F6E\u3002"
          },
          "show-message": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u6821\u9A8C\u9519\u8BEF\u4FE1\u606F"
          },
          "inline-message": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4EE5\u884C\u5185\u5F62\u5F0F\u5C55\u793A\u6821\u9A8C\u4FE1\u606F"
          },
          "status-icon": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728\u8F93\u5165\u6846\u4E2D\u663E\u793A\u6821\u9A8C\u7ED3\u679C\u53CD\u9988\u56FE\u6807"
          },
          "validate-on-rule-change": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728 rules \u5C5E\u6027\u6539\u53D8\u540E\u7ACB\u5373\u89E6\u53D1\u4E00\u6B21\u9A8C\u8BC1"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u7528\u4E8E\u63A7\u5236\u8BE5\u8868\u5355\u5185\u7EC4\u4EF6\u7684\u5C3A\u5BF8"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u8BE5\u8868\u5355\u5185\u7684\u6240\u6709\u7EC4\u4EF6\u3002 \u5982\u679C\u8BBE\u7F6E\u4E3A true, \u5B83\u5C06\u8986\u76D6\u5185\u90E8\u7EC4\u4EF6\u7684 disabled \u5C5E\u6027"
          },
          "scroll-to-error": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u6821\u9A8C\u5931\u8D25\u65F6\uFF0C\u6EDA\u52A8\u5230\u7B2C\u4E00\u4E2A\u9519\u8BEF\u8868\u5355\u9879"
          },
          "scroll-into-view-options": {
            "type": "attr",
            "values": ["object"],
            "description": "\u5F53\u6821\u9A8C\u6709\u5931\u8D25\u7ED3\u679C\u65F6\uFF0C\u6EDA\u52A8\u5230\u7B2C\u4E00\u4E2A\u5931\u8D25\u7684\u8868\u5355\u9879\u76EE \u53EF\u901A\u8FC7 scrollIntoView \u914D\u7F6E"
          },
          "validate": {
            "type": "event",
            "values": [],
            "description": "\u4EFB\u4E00\u8868\u5355\u9879\u88AB\u6821\u9A8C\u540E\u89E6\u53D1"
          }
        },
        "el-form-item": {
          "_html": {
            "": '<el-form-item label="${1:name}">\n$2\n</el-form-item>',
            ":required": '<el-form-item label="${1:name}" required>\n$2\n</el-form-item>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/form.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| Default |\n| :--- | :--- | :--- | :--- |\n| prop| model \u7684\u952E\u540D\u3002 \u5B83\u53EF\u4EE5\u662F\u4E00\u4E2A\u5C5E\u6027\u7684\u503C(\u5982 a.b.0 \u6216 [a', 'b', '0'])\u3002 \u5728\u4F7F\u7528\u4E86 validate\u3001resetFields \u7684\u65B9\u6CD5\u65F6\uFF0C\u8BE5\u5C5E\u6027\u662F\u5FC5\u586B\u7684\u3002| string / string[]| \u2014 |\n| label| \u6807\u7B7E\u6587\u672C| string| \u2014 |\n| label-width| \u6807\u7B7E\u5BBD\u5EA6\uFF0C\u4F8B\u5982 '50px'\u3002 \u53EF\u4EE5\u4F7F\u7528 auto\u3002| string / number| '' |\n| required| \u662F\u5426\u4E3A\u5FC5\u586B\u9879\uFF0C\u5982\u4E0D\u8BBE\u7F6E\uFF0C\u5219\u4F1A\u6839\u636E\u6821\u9A8C\u89C4\u5219\u786E\u8BA4| boolean| \u2014 |\n| rules| \u8868\u5355\u9A8C\u8BC1\u89C4\u5219, \u5177\u4F53\u914D\u7F6E\u89C1\u4E0B\u8868, \u66F4\u591A\u5185\u5BB9\u53EF\u4EE5\u53C2\u8003async-validator| object| \u2014 |\n| error| \u8868\u5355\u57DF\u9A8C\u8BC1\u9519\u8BEF\u65F6\u7684\u63D0\u793A\u4FE1\u606F\u3002\u8BBE\u7F6E\u8BE5\u503C\u4F1A\u5BFC\u81F4\u8868\u5355\u9A8C\u8BC1\u72B6\u6001\u53D8\u4E3A error\uFF0C\u5E76\u663E\u793A\u8BE5\u9519\u8BEF\u4FE1\u606F\u3002| string| \u2014 |\n| show-message| \u662F\u5426\u663E\u793A\u6821\u9A8C\u9519\u8BEF\u4FE1\u606F| boolean| true |\n| inline-message| \u662F\u5426\u5728\u884C\u5185\u663E\u793A\u6821\u9A8C\u4FE1\u606F| string / boolean| '' |\n| size| \u7528\u4E8E\u63A7\u5236\u8BE5\u8868\u5355\u57DF\u4E0B\u7EC4\u4EF6\u7684\u9ED8\u8BA4\u5C3A\u5BF8| enum| \u2014 |\n| for| \u548C\u539F\u751F\u6807\u7B7E\u76F8\u540C\u80FD\u529B| string| \u2014 |\n| validate-status| formitem \u6821\u9A8C\u7684\u72B6\u6001| enum| \u2014 |\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| trigger| \u9A8C\u8BC1\u903B\u8F91\u7684\u89E6\u53D1\u65B9\u5F0F| enum| \u2014 |\n\n#### FormItem Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| default| \u8868\u5355\u7684\u5185\u5BB9\u3002| \u2014 |\n| label| \u6807\u7B7E\u4F4D\u7F6E\u663E\u793A\u7684\u5185\u5BB9| object |\n| error| \u9A8C\u8BC1\u9519\u8BEF\u4FE1\u606F\u7684\u663E\u793A\u5185\u5BB9| object |\n\n#### FormItem Exposes\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| size| \u8868\u5355\u9879\u5927\u5C0F| object |\n| validateMessage| \u6821\u9A8C\u6D88\u606F| object |\n| validateState| \u6821\u9A8C\u72B6\u6001| object |\n| validate| \u9A8C\u8BC1\u8868\u5355\u9879| Function |\n| resetField| \u5BF9\u8BE5\u8868\u5355\u9879\u8FDB\u884C\u91CD\u7F6E\uFF0C\u5C06\u5176\u503C\u91CD\u7F6E\u4E3A\u521D\u59CB\u503C\u5E76\u79FB\u9664\u6821\u9A8C\u7ED3\u679C| Function |\n| clearValidate| \u79FB\u9664\u8BE5\u8868\u5355\u9879\u7684\u6821\u9A8C\u7ED3\u679C| Function |\n\n#### \u7C7B\u578B\u58F0\u660E\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "prop": {
            "type": "attr",
            "values": [],
            "description": "model \u7684\u952E\u540D\u3002 \u5B83\u53EF\u4EE5\u662F\u4E00\u4E2A\u5C5E\u6027\u7684\u503C(\u5982 a.b.0 \u6216 ['a', 'b', '0'])\u3002 \u5728\u4F7F\u7528\u4E86 validate\u3001resetFields \u7684\u65B9\u6CD5\u65F6\uFF0C\u8BE5\u5C5E\u6027\u662F\u5FC5\u586B\u7684\u3002"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": "\u6807\u7B7E\u6587\u672C"
          },
          "label-width": {
            "type": "attr",
            "values": [],
            "description": "\u6807\u7B7E\u5BBD\u5EA6\uFF0C\u4F8B\u5982 '50px'\u3002 \u53EF\u4EE5\u4F7F\u7528 auto\u3002"
          },
          "required": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u5FC5\u586B\u9879\uFF0C\u5982\u4E0D\u8BBE\u7F6E\uFF0C\u5219\u4F1A\u6839\u636E\u6821\u9A8C\u89C4\u5219\u786E\u8BA4"
          },
          "rules": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8868\u5355\u9A8C\u8BC1\u89C4\u5219, \u5177\u4F53\u914D\u7F6E\u89C1\u4E0B\u8868, \u66F4\u591A\u5185\u5BB9\u53EF\u4EE5\u53C2\u8003async-validator"
          },
          "error": {
            "type": "attr",
            "values": [],
            "description": "\u8868\u5355\u57DF\u9A8C\u8BC1\u9519\u8BEF\u65F6\u7684\u63D0\u793A\u4FE1\u606F\u3002\u8BBE\u7F6E\u8BE5\u503C\u4F1A\u5BFC\u81F4\u8868\u5355\u9A8C\u8BC1\u72B6\u6001\u53D8\u4E3A error\uFF0C\u5E76\u663E\u793A\u8BE5\u9519\u8BEF\u4FE1\u606F\u3002"
          },
          "show-message": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u6821\u9A8C\u9519\u8BEF\u4FE1\u606F"
          },
          "inline-message": {
            "type": "attr",
            "values": [],
            "description": "\u662F\u5426\u5728\u884C\u5185\u663E\u793A\u6821\u9A8C\u4FE1\u606F"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u7528\u4E8E\u63A7\u5236\u8BE5\u8868\u5355\u57DF\u4E0B\u7EC4\u4EF6\u7684\u9ED8\u8BA4\u5C3A\u5BF8"
          },
          "for": {
            "type": "attr",
            "values": [],
            "description": "\u548C\u539F\u751F\u6807\u7B7E\u76F8\u540C\u80FD\u529B"
          },
          "validate-status": {
            "type": "attr",
            "values": ["error", "validating", "success"],
            "description": "formitem \u6821\u9A8C\u7684\u72B6\u6001"
          }
        },
        "el-input": {
          "_html": {
            "": '<el-input v-model="${1:value}" placeholder="Please Input" clearable>$2</el-input>',
            ":textarea": '<el-input v-model="${1:textarea}" type="textarea" :rows="2" placeholder="Please Input" clearable />',
            ":textarea.limit": '<el-input v-model="${1:textarea}" type="textarea" :rows="2" placeholder="Please Input" clearable maxlength="$2" show-word-limit />',
            ":prepend[slot]": "<template #prepend>$1</template>",
            ":append[slot]": "<template #append>$1</template>"
          },
          "_doc": `#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/input.html)
#### \u5C5E\u6027

| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |
| :--- | :--- | :--- | :--- |
| type| \u7C7B\u578B| string \u7B49\u539F\u751F input \u7C7B\u578B| text |
| model-value / v-model| \u7ED1\u5B9A\u503C| string / number| \u2014 |
| maxlength| \u540C\u539F\u751F maxlength \u5C5E\u6027| string / number| \u2014 |
| minlength| \u539F\u751F\u5C5E\u6027\uFF0C\u6700\u5C0F\u8F93\u5165\u957F\u5EA6| string / number| \u2014 |
| show-word-limit| \u662F\u5426\u663E\u793A\u7EDF\u8BA1\u5B57\u6570, \u53EA\u5728 type \u4E3A 'text' \u6216 'textarea' \u7684\u65F6\u5019\u751F\u6548| boolean| boolean |
| placeholder| \u8F93\u5165\u6846\u5360\u4F4D\u6587\u672C| string| \u2014 |
| clearable| \u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE\uFF0C\u53EA\u6709\u5F53 type \u4E0D\u662F textarea\u65F6\u751F\u6548| boolean| false |
| formatter| \u6307\u5B9A\u8F93\u5165\u503C\u7684\u683C\u5F0F\u3002(\u53EA\u6709\u5F53 type \u662F"text"\u65F6\u624D\u80FD\u5DE5\u4F5C)| Function| \u2014 |
| parser| \u6307\u5B9A\u4ECE\u683C\u5F0F\u5316\u5668\u8F93\u5165\u4E2D\u63D0\u53D6\u7684\u503C\u3002(\u4EC5\u5F53 type \u662F"text"\u65F6\u624D\u8D77\u4F5C\u7528)| Function| \u2014 |
| show-password| \u662F\u5426\u663E\u793A\u5207\u6362\u5BC6\u7801\u56FE\u6807| boolean| false |
| disabled| \u662F\u5426\u7981\u7528| boolean| false |
| size| \u8F93\u5165\u6846\u5C3A\u5BF8\uFF0C\u53EA\u5728 type \u4E0D\u4E3A 'textarea' \u65F6\u6709\u6548| enum| \u2014 |
| prefix-icon| \u81EA\u5B9A\u4E49\u524D\u7F00\u56FE\u6807| string / Component| \u2014 |
| suffix-icon| \u81EA\u5B9A\u4E49\u540E\u7F00\u56FE\u6807| string / Component| \u2014 |
| rows| \u8F93\u5165\u6846\u884C\u6570\uFF0C\u4EC5 type \u4E3A 'textarea' \u65F6\u6709\u6548| number| number |
| autosize| textarea \u9AD8\u5EA6\u662F\u5426\u81EA\u9002\u5E94\uFF0C\u4EC5 type \u4E3A 'textarea' \u65F6\u751F\u6548\u3002 \u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6BD4\u5982: { minRows: 2, maxRows: 6 }| boolean / object| false |
| autocomplete| \u539F\u751F autocomplete \u5C5E\u6027| string| off |
| name| \u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027| string| \u2014 |
| readonly| \u539F\u751F readonly \u5C5E\u6027\uFF0C\u662F\u5426\u53EA\u8BFB| boolean| false |
| max| \u539F\u751F max \u5C5E\u6027\uFF0C\u8BBE\u7F6E\u6700\u5927\u503C| \u2014| \u2014 |
| min| \u539F\u751F\u5C5E\u6027\uFF0C\u8BBE\u7F6E\u6700\u5C0F\u503C| \u2014| \u2014 |
| step| \u539F\u751F\u5C5E\u6027\uFF0C\u8BBE\u7F6E\u8F93\u5165\u5B57\u6BB5\u7684\u5408\u6CD5\u6570\u5B57\u95F4\u9694| \u2014| \u2014 |
| resize| \u63A7\u5236\u662F\u5426\u80FD\u88AB\u7528\u6237\u7F29\u653E| enum| \u2014 |
| autofocus| \u539F\u751F\u5C5E\u6027\uFF0C\u81EA\u52A8\u83B7\u53D6\u7126\u70B9| boolean| false |
| form| \u539F\u751F\u5C5E\u6027| string| \u2014 |
| label a11y| \u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027| string| \u2014 |
| tabindex| \u8F93\u5165\u6846\u7684 tabindex| string / number| \u2014 |
| validate-event| \u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C| boolean| true |
| input-style| input \u5143\u7D20\u6216 textarea \u5143\u7D20\u7684 style| string / object| {} |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |
| :--- | :--- | :--- |
| blur| \u5F53\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1| Function |
| focus| \u5F53\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1| Function |
| change| \u4EC5\u5F53 modelValue \u6539\u53D8\u65F6\uFF0C\u5F53\u8F93\u5165\u6846\u5931\u53BB\u7126\u70B9\u6216\u7528\u6237\u6309Enter\u65F6\u89E6\u53D1| Function |
| input| \u5728 Input \u503C\u6539\u53D8\u65F6\u89E6\u53D1| Function |
| clear| \u5728\u70B9\u51FB\u7531 clearable \u5C5E\u6027\u751F\u6210\u7684\u6E05\u7A7A\u6309\u94AE\u65F6\u89E6\u53D1| Function |

#### Slots

| \u63D2\u69FD\u540D| \u8BF4\u660E |
| :--- | :--- |
| prefix| \u8F93\u5165\u6846\u5934\u90E8\u5185\u5BB9\uFF0C\u53EA\u5BF9\u975E type="textarea" \u6709\u6548 |
| suffix| \u8F93\u5165\u6846\u5C3E\u90E8\u5185\u5BB9\uFF0C\u53EA\u5BF9\u975E type="textarea" \u6709\u6548 |
| prepend| \u8F93\u5165\u6846\u524D\u7F6E\u5185\u5BB9\uFF0C\u53EA\u5BF9\u975E type="textarea" \u6709\u6548 |
| append| \u8F93\u5165\u6846\u540E\u7F6E\u5185\u5BB9\uFF0C\u53EA\u5BF9\u975E type="textarea" \u6709\u6548 |

#### Exposes

| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |
| :--- | :--- | :--- |
| blur| \u4F7F input \u5931\u53BB\u7126\u70B9| Function |
| clear| \u6E05\u9664 input \u503C| Function |
| focus| \u4F7F input \u83B7\u53D6\u7126\u70B9| Function |
| input| Input HTML \u5143\u7D20| object |
| ref| HTML\u5143\u7D20 input \u6216 textarea| object |
| resizeTextarea| \u6539\u53D8 textarea \u5927\u5C0F| Function |
| select| \u9009\u4E2D input \u4E2D\u7684\u6587\u5B57| Function |
| textarea| HTML textarea \u5143\u7D20| object |
| textareaStyle| textarea \u7684\u6837\u5F0F| object |

#### \u5E38\u89C1\u95EE\u9898

#### \u6E90\u4EE3\u7801

#### \u8D21\u732E\u8005
`,
          "type": {
            "type": "attr",
            "values": [],
            "description": "\u7C7B\u578B"
          },
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u7ED1\u5B9A\u503C"
          },
          "maxlength": {
            "type": "attr",
            "values": [],
            "description": "\u540C\u539F\u751F maxlength \u5C5E\u6027"
          },
          "minlength": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F\u5C5E\u6027\uFF0C\u6700\u5C0F\u8F93\u5165\u957F\u5EA6"
          },
          "show-word-limit": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u7EDF\u8BA1\u5B57\u6570, \u53EA\u5728 type \u4E3A 'text' \u6216 'textarea' \u7684\u65F6\u5019\u751F\u6548"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u5360\u4F4D\u6587\u672C"
          },
          "clearable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE\uFF0C\u53EA\u6709\u5F53 type \u4E0D\u662F textarea\u65F6\u751F\u6548"
          },
          "formatter": {
            "type": "attr",
            "values": ["Function"],
            "description": '\u6307\u5B9A\u8F93\u5165\u503C\u7684\u683C\u5F0F\u3002(\u53EA\u6709\u5F53 type \u662F"text"\u65F6\u624D\u80FD\u5DE5\u4F5C)'
          },
          "parser": {
            "type": "attr",
            "values": ["Function"],
            "description": '\u6307\u5B9A\u4ECE\u683C\u5F0F\u5316\u5668\u8F93\u5165\u4E2D\u63D0\u53D6\u7684\u503C\u3002(\u4EC5\u5F53 type \u662F"text"\u65F6\u624D\u8D77\u4F5C\u7528)'
          },
          "show-password": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u5207\u6362\u5BC6\u7801\u56FE\u6807"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u8F93\u5165\u6846\u5C3A\u5BF8\uFF0C\u53EA\u5728 type \u4E0D\u4E3A 'textarea' \u65F6\u6709\u6548"
          },
          "prefix-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u524D\u7F00\u56FE\u6807"
          },
          "suffix-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u540E\u7F00\u56FE\u6807"
          },
          "rows": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8F93\u5165\u6846\u884C\u6570\uFF0C\u4EC5 type \u4E3A 'textarea' \u65F6\u6709\u6548"
          },
          "autosize": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "textarea \u9AD8\u5EA6\u662F\u5426\u81EA\u9002\u5E94\uFF0C\u4EC5 type \u4E3A 'textarea' \u65F6\u751F\u6548\u3002 \u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6BD4\u5982: { minRows: 2, maxRows: 6 }"
          },
          "autocomplete": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F autocomplete \u5C5E\u6027"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027"
          },
          "readonly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u539F\u751F readonly \u5C5E\u6027\uFF0C\u662F\u5426\u53EA\u8BFB"
          },
          "max": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F max \u5C5E\u6027\uFF0C\u8BBE\u7F6E\u6700\u5927\u503C"
          },
          "min": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F\u5C5E\u6027\uFF0C\u8BBE\u7F6E\u6700\u5C0F\u503C"
          },
          "step": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F\u5C5E\u6027\uFF0C\u8BBE\u7F6E\u8F93\u5165\u5B57\u6BB5\u7684\u5408\u6CD5\u6570\u5B57\u95F4\u9694"
          },
          "resize": {
            "type": "attr",
            "values": ["none", "both", "horizontal", "vertical"],
            "description": "\u63A7\u5236\u662F\u5426\u80FD\u88AB\u7528\u6237\u7F29\u653E"
          },
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u539F\u751F\u5C5E\u6027\uFF0C\u81EA\u52A8\u83B7\u53D6\u7126\u70B9"
          },
          "form": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F\u5C5E\u6027"
          },
          "labelaydeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027"
          },
          "tabindex": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u7684 tabindex"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C"
          },
          "input-style": {
            "type": "attr",
            "values": [],
            "description": "input \u5143\u7D20\u6216 textarea \u5143\u7D20\u7684 style"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u4EC5\u5F53 modelValue \u6539\u53D8\u65F6\uFF0C\u5F53\u8F93\u5165\u6846\u5931\u53BB\u7126\u70B9\u6216\u7528\u6237\u6309Enter\u65F6\u89E6\u53D1"
          },
          "input": {
            "type": "event",
            "values": [],
            "description": "\u5728 Input \u503C\u6539\u53D8\u65F6\u89E6\u53D1"
          },
          "clear": {
            "type": "event",
            "values": [],
            "description": "\u5728\u70B9\u51FB\u7531 clearable \u5C5E\u6027\u751F\u6210\u7684\u6E05\u7A7A\u6309\u94AE\u65F6\u89E6\u53D1"
          }
        },
        "el-input-number": {
          "_html": {
            "": '<el-input-number v-model="${1:num}" :min="${2:1}" :max="${3:10}" />',
            ":step": '<el-input-number v-model="${1:num}" :min="${2:1}" :max="${3:10}" :step="${4:2}" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/input-number.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| number| \u2014 |\n| min| \u8BBE\u7F6E\u8BA1\u6570\u5668\u5141\u8BB8\u7684\u6700\u5C0F\u503C| number| -Infinity |\n| max| \u8BBE\u7F6E\u8BA1\u6570\u5668\u5141\u8BB8\u7684\u6700\u5927\u503C| number| Infinity |\n| step| \u8BA1\u6570\u5668\u6B65\u957F| number| 1 |\n| step-strictly| \u662F\u5426\u53EA\u80FD\u8F93\u5165 step \u7684\u500D\u6570| boolean| false |\n| precision| \u6570\u503C\u7CBE\u5EA6| number| \u2014 |\n| size| \u8BA1\u6570\u5668\u5C3A\u5BF8| enum| default |\n| readonly 2.2.16| \u539F\u751F readonly \u5C5E\u6027\uFF0C\u662F\u5426\u53EA\u8BFB| boolean| false |\n| disabled| \u662F\u5426\u7981\u7528\u72B6\u6001| boolean| false |\n| controls| \u662F\u5426\u4F7F\u7528\u63A7\u5236\u6309\u94AE| boolean| true |\n| controls-position| \u63A7\u5236\u6309\u94AE\u4F4D\u7F6E| enum| \u2014 |\n| name| \u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027| string| \u2014 |\n| label| \u7B49\u4EF7\u4E8E\u539F\u751F input label \u5C5E\u6027| string| \u2014 |\n| placeholder| \u7B49\u4EF7\u4E8E\u539F\u751F input placeholder \u5C5E\u6027| string| \u2014 |\n| id| \u7B49\u4EF7\u4E8E\u539F\u751F input id \u5C5E\u6027| string| \u2014 |\n| value-on-clear 2.2.0| \u5F53\u8F93\u5165\u6846\u88AB\u6E05\u7A7A\u65F6\u663E\u793A\u7684\u503C| number / null / enum| \u2014 |\n| validate-event| \u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1| boolean| true |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u7ED1\u5B9A\u503C\u88AB\u6539\u53D8\u65F6\u89E6\u53D1| Function |\n| blur| \u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| focus| \u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n\n#### Exposes\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| focus| \u4F7F input \u7EC4\u4EF6\u83B7\u5F97\u7126\u70B9| Function |\n| blur| \u4F7F input \u7EC4\u4EF6\u5931\u53BB\u7126\u70B9| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": ["number"],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "min": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E\u8BA1\u6570\u5668\u5141\u8BB8\u7684\u6700\u5C0F\u503C"
          },
          "max": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E\u8BA1\u6570\u5668\u5141\u8BB8\u7684\u6700\u5927\u503C"
          },
          "step": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BA1\u6570\u5668\u6B65\u957F"
          },
          "step-strictly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EA\u80FD\u8F93\u5165 step \u7684\u500D\u6570"
          },
          "precision": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6570\u503C\u7CBE\u5EA6"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u8BA1\u6570\u5668\u5C3A\u5BF8"
          },
          "readonly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u539F\u751F readonly \u5C5E\u6027\uFF0C\u662F\u5426\u53EA\u8BFB"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u72B6\u6001"
          },
          "controls": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4F7F\u7528\u63A7\u5236\u6309\u94AE"
          },
          "controls-position": {
            "type": "attr",
            "values": ["right"],
            "description": "\u63A7\u5236\u6309\u94AE\u4F4D\u7F6E"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027"
          },
          "labelaydeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input placeholder \u5C5E\u6027"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input id \u5C5E\u6027"
          },
          "value-on-clear": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5F53\u8F93\u5165\u6846\u88AB\u6E05\u7A7A\u65F6\u663E\u793A\u7684\u503C"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u7ED1\u5B9A\u503C\u88AB\u6539\u53D8\u65F6\u89E6\u53D1"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1"
          }
        },
        "el-radio-group": {
          "_html": {
            "": '<el-radio-group v-model="${1:radio}">\n<el-radio value="$2">$3</el-radio>\n</el-radio-group>',
            ":for": '<el-radio-group v-model="${1:radio}">\n<el-radio v-for="item in ${2:radios}" :value="item.value">{{ item.label }}</el-radio>\n</el-radio-group>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/radio.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u7ED1\u5B9A\u503C| string / number / boolean| \u2014 |\n| size| \u5355\u9009\u6846\u6309\u94AE\u6216\u8FB9\u6846\u6309\u94AE\u7684\u5927\u5C0F| string| default |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false |\n| text-color| \u6309\u94AE\u5F62\u5F0F\u7684 Radio \u6FC0\u6D3B\u65F6\u7684\u6587\u672C\u989C\u8272| string| #ffffff |\n| fill| \u6309\u94AE\u5F62\u5F0F\u7684 Radio \u6FC0\u6D3B\u65F6\u7684\u586B\u5145\u8272\u548C\u8FB9\u6846\u8272| string| #409EFF |\n| validate-event| \u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C| boolean| true |\n| label a11y| \u4E0E RadioGroup \u4E2D\u7684 aria-label \u5C5E\u6027\u76F8\u540C| string| \u2014 |\n| name| \u539F\u751F name \u5C5E\u6027| string| \u2014 |\n| id| \u539F\u751F id \u5C5E\u6027| string| \u2014 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n\n#### RadioGroup Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Radio / RadioButton |\n",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u7ED1\u5B9A\u503C"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u5355\u9009\u6846\u6309\u94AE\u6216\u8FB9\u6846\u6309\u94AE\u7684\u5927\u5C0F"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "text-color": {
            "type": "attr",
            "values": [],
            "description": "\u6309\u94AE\u5F62\u5F0F\u7684 Radio \u6FC0\u6D3B\u65F6\u7684\u6587\u672C\u989C\u8272"
          },
          "fill": {
            "type": "attr",
            "values": [],
            "description": "\u6309\u94AE\u5F62\u5F0F\u7684 Radio \u6FC0\u6D3B\u65F6\u7684\u586B\u5145\u8272\u548C\u8FB9\u6846\u8272"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C"
          },
          "labelaydeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u4E0E RadioGroup \u4E2D\u7684 aria-label \u5C5E\u6027\u76F8\u540C"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u4E0E RadioGroup \u4E2D\u7684 aria-label \u5C5E\u6027\u76F8\u540C"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F name \u5C5E\u6027"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F id \u5C5E\u6027"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-radio": {
          "_html": {
            "": '<el-radio :value="$1">$2</el-radio>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/radio.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| string / number / boolean| \u2014 |\n| value 2.6.0| \u5355\u9009\u6846\u7684\u503C| string / number / boolean| \u2014 |\n| label| \u5355\u9009\u6846\u7684 label \u5982\u679C\u6CA1\u6709 value\uFF0C label\u5219\u4F5C\u4E3Avalue\u4F7F\u7528| string / number / boolean| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528\u5355\u9009\u6846| boolean| false |\n| border| \u662F\u5426\u663E\u793A\u8FB9\u6846| boolean| false |\n| size| \u5355\u9009\u6846\u7684\u5C3A\u5BF8| enum| \u2014 |\n| name| \u539F\u59CB name \u5C5E\u6027| string| \u2014 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n\n#### Radio Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": "\u5355\u9009\u6846\u7684\u503C"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": "\u5355\u9009\u6846\u7684 label \u5982\u679Cvalue\u6CA1\u6709\u503C\uFF0C label\u5219\u4F5C\u4E3Avalue\u4F7F\u7528"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u5355\u9009\u6846"
          },
          "border": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u8FB9\u6846"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "\u5355\u9009\u6846\u7684\u5C3A\u5BF8"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u59CB name \u5C5E\u6027"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-radio-button": {
          "_html": {
            "": '<el-radio-button label="$1" value="$2"></el-radio-button>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/radio.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| value 2.6.0| \u5355\u9009\u6846\u7684\u503C| string / number / boolean| \u2014 |\n| label| \u5355\u9009\u6846\u7684 label \u5982\u679C\u6CA1\u6709 value\uFF0C label\u5219\u4F5C\u4E3Avalue\u4F7F\u7528| string / number / boolean| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528\u5355\u9009\u6846| boolean| false |\n| name| \u539F\u751F name \u5C5E\u6027| string| \u2014 |\n\n#### RadioButton Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u9ED8\u8BA4\u63D2\u69FD\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "value": {
            "type": "attr",
            "values": [],
            "description": "\u5355\u9009\u6846\u7684\u503C"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": "\u5355\u9009\u6846\u7684 label \u5982\u679C\u6CA1\u6709 value\uFF0C label\u5219\u4F5C\u4E3Avalue\u4F7F\u7528"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u5355\u9009\u6846"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F name \u5C5E\u6027"
          }
        },
        "el-rate": {
          "_html": {
            "": '<el-rate v-model="${1:value}" />',
            ":show-text": `<el-rate v-model="\${1:value}" texts="['oops', 'disappointed', 'normal', 'good', 'great']" show-text />`,
            ":allow-half": '<el-rate v-model="${1:value}" allow-half />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/rate.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| number| 0 |\n| max| \u6700\u5927\u5206\u503C| number| 5 |\n| size| \u5C3A\u5BF8| enum| \u2014 |\n| disabled| \u662F\u5426\u4E3A\u53EA\u8BFB| boolean| false |\n| allow-half| \u662F\u5426\u5141\u8BB8\u534A\u9009| boolean| false |\n| low-threshold| \u4F4E\u5206\u548C\u4E2D\u7B49\u5206\u6570\u7684\u754C\u9650\u503C\uFF0C \u503C\u672C\u8EAB\u88AB\u5212\u5206\u5728\u4F4E\u5206\u4E2D| number| 2 |\n| high-threshold| \u9AD8\u5206\u548C\u4E2D\u7B49\u5206\u6570\u7684\u754C\u9650\u503C\uFF0C \u503C\u672C\u8EAB\u88AB\u5212\u5206\u5728\u9AD8\u5206\u4E2D| number| 4 |\n| colors| icon \u7684\u989C\u8272\u3002 \u82E5\u4F20\u5165\u6570\u7EC4\uFF0C\u5171\u6709 3 \u4E2A\u5143\u7D20\uFF0C\u4E3A 3 \u4E2A\u5206\u6BB5\u6240\u5BF9\u5E94\u7684\u989C\u8272\uFF1B\u82E5\u4F20\u5165\u5BF9\u8C61\uFF0C\u53EF\u81EA\u5B9A\u4E49\u5206\u6BB5\uFF0C\u952E\u540D\u4E3A\u5206\u6BB5\u7684\u754C\u9650\u503C\uFF0C\u952E\u503C\u4E3A\u5BF9\u5E94\u7684\u989C\u8272| object| ['#F7BA2A', '#F7BA2A', '#F7BA2A'] |\n| void-color| \u672A\u9009\u4E2D icon \u7684\u989C\u8272| string| #C6D1DE |\n| disabled-void-color| \u53EA\u8BFB\u65F6\u672A\u9009\u4E2D icon \u7684\u989C\u8272| string| #EFF2F7 |\n| icons| \u56FE\u6807\u7EC4\u4EF6 \u82E5\u4F20\u5165\u6570\u7EC4\uFF0C\u5219\u9700\u8981\u4F20\u5165 3 \u4E2A\u5143\u7D20\uFF0C\u5206\u522B\u4E3A 3 \u4E2A\u90E8\u5206\u6240\u5BF9\u5E94\u7684\u7C7B\u540D\uFF1B\u82E5\u4F20\u5165\u5BF9\u8C61\uFF0C\u5219\u53EF\u81EA\u5B9A\u4E49\u5206\u6BB5\uFF0C\u952E\u540D\u4E3A\u5206\u6BB5\u7684\u754C\u9650\u503C\uFF0C\u952E\u503C\u4E3A\u5BF9\u5E94\u7684\u7C7B\u540D| object| [StarFilled, StarFilled, StarFilled] |\n| void-icon| \u672A\u88AB\u9009\u4E2D\u7684\u56FE\u6807\u7EC4\u4EF6| string / Component| Star |\n| disabled-void-icon| \u7981\u7528\u72B6\u6001\u7684\u672A\u9009\u62E9\u56FE\u6807| string / Component| StarFilled |\n| show-text| \u662F\u5426\u663E\u793A\u8F85\u52A9\u6587\u5B57\uFF0C\u82E5\u4E3A\u771F\uFF0C\u5219\u4F1A\u4ECE texts \u6570\u7EC4\u4E2D\u9009\u53D6\u5F53\u524D\u5206\u6570\u5BF9\u5E94\u7684\u6587\u5B57\u5185\u5BB9| boolean| false |\n| show-score| \u662F\u5426\u663E\u793A\u5F53\u524D\u5206\u6570\uFF0C show-score \u548C show-text \u4E0D\u80FD\u540C\u65F6\u4E3A\u771F| boolean| false |\n| text-color| \u8F85\u52A9\u6587\u5B57\u7684\u989C\u8272| string| '' |\n| texts| \u8F85\u52A9\u6587\u5B57\u6570\u7EC4| array| ['Extremely bad', 'Disappointed', 'Fair', 'Satisfied', 'Surprise'] |\n| score-template| \u5206\u6570\u663E\u793A\u6A21\u677F| string|  |\n| clearable 2.2.18| \u662F\u5426\u53EF\u4EE5\u91CD\u7F6E\u503C\u4E3A 0| boolean| false |\n| id| \u539F\u751F id \u5C5E\u6027| string| \u2014 |\n| label a11y| \u548C Rate \u7684 aria-label \u5C5E\u6027\u4FDD\u6301\u4E00\u81F4| string| \u2014 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u63CF\u8FF0\u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u5206\u503C\u6539\u53D8\u65F6\u89E6\u53D1| Function |\n\n#### Exposes\n\n| \u540D\u79F0| \u63CF\u8FF0| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| setCurrentValue| \u8BBE\u7F6E\u5F53\u524D\u503C| Function |\n| resetCurrentValue| \u91CD\u7F6E\u5F53\u524D\u503C| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": ["number"],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "max": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u5927\u5206\u503C"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "\u5C3A\u5BF8"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u53EA\u8BFB"
          },
          "allow-half": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5141\u8BB8\u534A\u9009"
          },
          "low-threshold": {
            "type": "attr",
            "values": ["number"],
            "description": "\u4F4E\u5206\u548C\u4E2D\u7B49\u5206\u6570\u7684\u754C\u9650\u503C\uFF0C \u503C\u672C\u8EAB\u88AB\u5212\u5206\u5728\u4F4E\u5206\u4E2D"
          },
          "high-threshold": {
            "type": "attr",
            "values": ["number"],
            "description": "\u9AD8\u5206\u548C\u4E2D\u7B49\u5206\u6570\u7684\u754C\u9650\u503C\uFF0C \u503C\u672C\u8EAB\u88AB\u5212\u5206\u5728\u9AD8\u5206\u4E2D"
          },
          "colors": {
            "type": "attr",
            "values": ["object"],
            "description": "icon \u7684\u989C\u8272\u3002 \u82E5\u4F20\u5165\u6570\u7EC4\uFF0C\u5171\u6709 3 \u4E2A\u5143\u7D20\uFF0C\u4E3A 3 \u4E2A\u5206\u6BB5\u6240\u5BF9\u5E94\u7684\u989C\u8272\uFF1B\u82E5\u4F20\u5165\u5BF9\u8C61\uFF0C\u53EF\u81EA\u5B9A\u4E49\u5206\u6BB5\uFF0C\u952E\u540D\u4E3A\u5206\u6BB5\u7684\u754C\u9650\u503C\uFF0C\u952E\u503C\u4E3A\u5BF9\u5E94\u7684\u989C\u8272"
          },
          "void-color": {
            "type": "attr",
            "values": [],
            "description": "\u672A\u9009\u4E2D icon \u7684\u989C\u8272"
          },
          "disabled-void-color": {
            "type": "attr",
            "values": [],
            "description": "\u53EA\u8BFB\u65F6\u672A\u9009\u4E2D icon \u7684\u989C\u8272"
          },
          "icons": {
            "type": "attr",
            "values": ["object"],
            "description": "\u56FE\u6807\u7EC4\u4EF6 \u82E5\u4F20\u5165\u6570\u7EC4\uFF0C\u5219\u9700\u8981\u4F20\u5165 3 \u4E2A\u5143\u7D20\uFF0C\u5206\u522B\u4E3A 3 \u4E2A\u90E8\u5206\u6240\u5BF9\u5E94\u7684\u7C7B\u540D\uFF1B\u82E5\u4F20\u5165\u5BF9\u8C61\uFF0C\u5219\u53EF\u81EA\u5B9A\u4E49\u5206\u6BB5\uFF0C\u952E\u540D\u4E3A\u5206\u6BB5\u7684\u754C\u9650\u503C\uFF0C\u952E\u503C\u4E3A\u5BF9\u5E94\u7684\u7C7B\u540D"
          },
          "void-icon": {
            "type": "attr",
            "values": [],
            "description": "\u672A\u88AB\u9009\u4E2D\u7684\u56FE\u6807\u7EC4\u4EF6"
          },
          "disabled-void-icon": {
            "type": "attr",
            "values": [],
            "description": "\u7981\u7528\u72B6\u6001\u7684\u672A\u9009\u62E9\u56FE\u6807"
          },
          "show-text": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u8F85\u52A9\u6587\u5B57\uFF0C\u82E5\u4E3A\u771F\uFF0C\u5219\u4F1A\u4ECE texts \u6570\u7EC4\u4E2D\u9009\u53D6\u5F53\u524D\u5206\u6570\u5BF9\u5E94\u7684\u6587\u5B57\u5185\u5BB9"
          },
          "show-score": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u5F53\u524D\u5206\u6570\uFF0C show-score \u548C show-text \u4E0D\u80FD\u540C\u65F6\u4E3A\u771F"
          },
          "text-color": {
            "type": "attr",
            "values": [],
            "description": "\u8F85\u52A9\u6587\u5B57\u7684\u989C\u8272"
          },
          "texts": {
            "type": "attr",
            "values": ["array"],
            "description": "\u8F85\u52A9\u6587\u5B57\u6570\u7EC4"
          },
          "score-template": {
            "type": "attr",
            "values": [],
            "description": "\u5206\u6570\u663E\u793A\u6A21\u677F"
          },
          "clearable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u91CD\u7F6E\u503C\u4E3A 0"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F id \u5C5E\u6027"
          },
          "labelaydeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u548C Rate \u7684 aria-label \u5C5E\u6027\u4FDD\u6301\u4E00\u81F4"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u548C Rate \u7684 aria-label \u5C5E\u6027\u4FDD\u6301\u4E00\u81F4"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5206\u503C\u6539\u53D8\u65F6\u89E6\u53D1"
          }
        },
        "el-select": {
          "_html": {
            "": '<el-select v-model="${1:value}" placeholder="Please select" filterable clearable>\n<el-option label="$2" value="$3" />$4\n</el-select>',
            ":for": '<el-select v-model="${1:value}" placeholder="Please select" filterable clearable>\n<el-option v-for="item in ${2:options}" :key="item.value" :label="item.label" :value="item.value" />\n</el-select>',
            ":header[slot]": "<template #header>\n$1\n</template>",
            ":footer[slot]": "<template #footer>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/select.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| Default |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| string / number / boolean / object / array| \u2014 |\n| multiple| \u662F\u5426\u591A\u9009| boolean| false |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false |\n| value-key| \u4F5C\u4E3A value \u552F\u4E00\u6807\u8BC6\u7684\u952E\u540D\uFF0C\u7ED1\u5B9A\u503C\u4E3A\u5BF9\u8C61\u7C7B\u578B\u65F6\u5FC5\u586B| string| value |\n| size| \u8F93\u5165\u6846\u5C3A\u5BF8| enum| \u2014 |\n| clearable| \u662F\u5426\u53EF\u4EE5\u6E05\u7A7A\u9009\u9879| boolean| false |\n| collapse-tags| \u591A\u9009\u65F6\u662F\u5426\u5C06\u9009\u4E2D\u503C\u6309\u6587\u5B57\u7684\u5F62\u5F0F\u5C55\u793A| boolean| false |\n| collapse-tags-tooltip 2.3.0| \u5F53\u9F20\u6807\u60AC\u505C\u4E8E\u6298\u53E0\u6807\u7B7E\u7684\u6587\u672C\u65F6\uFF0C\u662F\u5426\u663E\u793A\u6240\u6709\u9009\u4E2D\u7684\u6807\u7B7E\u3002 \u8981\u4F7F\u7528\u6B64\u5C5E\u6027\uFF0Ccollapse-tags\u5C5E\u6027\u5FC5\u987B\u8BBE\u5B9A\u4E3A true| boolean| false |\n| multiple-limit| multiple \u5C5E\u6027\u8BBE\u7F6E\u4E3A true \u65F6\uFF0C\u4EE3\u8868\u591A\u9009\u573A\u666F\u4E0B\u7528\u6237\u6700\u591A\u53EF\u4EE5\u9009\u62E9\u7684\u9879\u76EE\u6570\uFF0C \u4E3A 0 \u5219\u4E0D\u9650\u5236| number| 0 |\n| name| Select \u8F93\u5165\u6846\u7684\u539F\u751F name \u5C5E\u6027| string| \u2014 |\n| effect| tooltip \u4E3B\u9898\uFF0C\u5185\u7F6E\u4E86 dark / light \u4E24\u79CD| enum / string| light |\n| autocomplete| Select \u8F93\u5165\u6846\u7684\u539F\u751F autocomplete \u5C5E\u6027| string| off |\n| placeholder| \u5360\u4F4D\u7B26\uFF0C\u9ED8\u8BA4\u4E3A\u201CSelect\u201D| string| \u2014 |\n| filterable| Select \u7EC4\u4EF6\u662F\u5426\u53EF\u7B5B\u9009| boolean| false |\n| allow-create| \u662F\u5426\u5141\u8BB8\u7528\u6237\u521B\u5EFA\u65B0\u6761\u76EE\uFF0C \u53EA\u6709\u5F53 filterable \u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548\u3002| boolean| false |\n| filter-method| \u81EA\u5B9A\u4E49\u7B5B\u9009\u65B9\u6CD5| Function| \u2014 |\n| remote| \u5176\u4E2D\u7684\u9009\u9879\u662F\u5426\u4ECE\u670D\u52A1\u5668\u8FDC\u7A0B\u52A0\u8F7D| boolean| false |\n| remote-method| \u81EA\u5B9A\u4E49\u8FDC\u7A0B\u641C\u7D22\u65B9\u6CD5| Function| \u2014 |\n| remote-show-suffix| \u8FDC\u7A0B\u641C\u7D22\u65B9\u6CD5\u663E\u793A\u540E\u7F00\u56FE\u6807| boolean| false |\n| loading| \u662F\u5426\u6B63\u5728\u4ECE\u8FDC\u7A0B\u83B7\u53D6\u6570\u636E| boolean| false |\n| loading-text| \u4ECE\u670D\u52A1\u5668\u52A0\u8F7D\u6570\u636E\u65F6\u663E\u793A\u7684\u6587\u672C\uFF0C\u9ED8\u8BA4\u4E3A\u201CLoading\u201D| string| \u2014 |\n| no-match-text| \u641C\u7D22\u6761\u4EF6\u65E0\u5339\u914D\u65F6\u663E\u793A\u7684\u6587\u5B57\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 empty \u63D2\u69FD\u8BBE\u7F6E\uFF0C\u9ED8\u8BA4\u662F \u201CNo matching data'\u201D| string| \u2014 |\n| no-data-text| \u65E0\u9009\u9879\u65F6\u663E\u793A\u7684\u6587\u5B57\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 empty \u63D2\u69FD\u8BBE\u7F6E\u81EA\u5B9A\u4E49\u5185\u5BB9\uFF0C\u9ED8\u8BA4\u662F \u201CNo data\u201D| string| \u2014 |\n| popper-class| \u9009\u62E9\u5668\u4E0B\u62C9\u83DC\u5355\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| '' |\n| reserve-keyword| \u5F53 multiple \u548C filterable\u88AB\u8BBE\u7F6E\u4E3A true \u65F6\uFF0C\u662F\u5426\u5728\u9009\u4E2D\u4E00\u4E2A\u9009\u9879\u540E\u4FDD\u7559\u5F53\u524D\u7684\u641C\u7D22\u5173\u952E\u8BCD| boolean| true |\n| default-first-option| \u662F\u5426\u5728\u8F93\u5165\u6846\u6309\u4E0B\u56DE\u8F66\u65F6\uFF0C\u9009\u62E9\u7B2C\u4E00\u4E2A\u5339\u914D\u9879\u3002 \u9700\u914D\u5408 filterable \u6216 remote \u4F7F\u7528| boolean| false |\n| teleported| \u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20| boolean| true |\n| persistent| \u5F53\u4E0B\u62C9\u9009\u62E9\u5668\u672A\u88AB\u6FC0\u6D3B\u5E76\u4E14persistent\u8BBE\u7F6E\u4E3Afalse\uFF0C\u9009\u62E9\u5668\u4F1A\u88AB\u5220\u9664\u3002| boolean| true |\n| automatic-dropdown| \u5BF9\u4E8E\u4E0D\u53EF\u641C\u7D22\u7684 Select\uFF0C\u662F\u5426\u5728\u8F93\u5165\u6846\u83B7\u5F97\u7126\u70B9\u540E\u81EA\u52A8\u5F39\u51FA\u9009\u9879\u83DC\u5355| boolean| false |\n| clear-icon| \u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807| string / object| CircleClose |\n| fit-input-width| \u4E0B\u62C9\u6846\u7684\u5BBD\u5EA6\u662F\u5426\u4E0E\u8F93\u5165\u6846\u76F8\u540C| boolean| false |\n| suffix-icon| \u81EA\u5B9A\u4E49\u540E\u7F00\u56FE\u6807\u7EC4\u4EF6| string / object| ArrowDown |\n| suffix-transition deprecated| \u4E0B\u62C9\u83DC\u5355\u663E\u793A/\u6D88\u5931\u65F6\u540E\u7F00\u56FE\u6807\u7684\u52A8\u753B| boolean| true |\n| tag-type| \u6807\u7B7E\u7C7B\u578B| enum| info |\n| validate-event| \u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1| boolean| true |\n| placement 2.2.17| \u4E0B\u62C9\u6846\u51FA\u73B0\u7684\u4F4D\u7F6E| enum| bottom-start |\n| fallback-placements 2.5.6| dropdown \u53EF\u7528\u7684 positions \u8BF7\u67E5\u770Bpopper.js \u6587\u6863| arrary| ['bottom-start', 'top-start', 'right', 'left'] |\n| max-collapse-tags 2.3.0| \u9700\u8981\u663E\u793A\u7684 Tag \u7684\u6700\u5927\u6570\u91CF \u53EA\u6709\u5F53 collapse-tags \u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548\u3002| number| 1 |\n| popper-options| popper.js \u53C2\u6570| objectrefer to popper.js doc| {} |\n| aria-label a11y| \u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027| string| \u2014 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| Type |\n| :--- | :--- | :--- |\n| change| \u9009\u4E2D\u503C\u53D1\u751F\u53D8\u5316\u65F6\u89E6\u53D1| Function |\n| visible-change| \u4E0B\u62C9\u6846\u51FA\u73B0/\u9690\u85CF\u65F6\u89E6\u53D1| Function |\n| remove-tag| \u591A\u9009\u6A21\u5F0F\u4E0B\u79FB\u9664tag\u65F6\u89E6\u53D1| Function |\n| clear| \u53EF\u6E05\u7A7A\u7684\u5355\u9009\u6A21\u5F0F\u4E0B\u7528\u6237\u70B9\u51FB\u6E05\u7A7A\u6309\u94AE\u65F6\u89E6\u53D1| Function |\n| blur| \u5F53 input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| focus| \u5F53 input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n\n#### Select Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| option \u7EC4\u4EF6\u5217\u8868| Option Group / Option |\n| header 2.4.3| \u4E0B\u62C9\u5217\u8868\u9876\u90E8\u7684\u5185\u5BB9| \u2014 |\n| footer 2.4.3| \u4E0B\u62C9\u5217\u8868\u5E95\u90E8\u7684\u5185\u5BB9| \u2014 |\n| prefix| Select \u7EC4\u4EF6\u5934\u90E8\u5185\u5BB9| \u2014 |\n| empty| \u65E0\u9009\u9879\u65F6\u7684\u5217\u8868| \u2014 |\n| tag 2.5.0| select \u7EC4\u4EF6\u81EA\u5B9A\u4E49\u6807\u7B7E\u5185\u5BB9| \u2014 |\n| loading 2.5.2| select \u7EC4\u4EF6\u81EA\u5B9A\u4E49 loading\u5185\u5BB9| \u2014 |\n\n#### Select Exposes\n\n| Method| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| focus| \u4F7F\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u83B7\u53D6\u7126\u70B9| Function |\n| blur| \u4F7F\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u5931\u53BB\u7126\u70B9\uFF0C\u5E76\u9690\u85CF\u4E0B\u62C9\u6846| Function |\n",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "multiple": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u591A\u9009"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "value-key": {
            "type": "attr",
            "values": [],
            "description": "\u4F5C\u4E3A value \u552F\u4E00\u6807\u8BC6\u7684\u952E\u540D\uFF0C\u7ED1\u5B9A\u503C\u4E3A\u5BF9\u8C61\u7C7B\u578B\u65F6\u5FC5\u586B"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "\u8F93\u5165\u6846\u5C3A\u5BF8"
          },
          "clearable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u6E05\u7A7A\u9009\u9879"
          },
          "collapse-tags": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u591A\u9009\u65F6\u662F\u5426\u5C06\u9009\u4E2D\u503C\u6309\u6587\u5B57\u7684\u5F62\u5F0F\u5C55\u793A"
          },
          "collapse-tags-tooltip": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u9F20\u6807\u60AC\u505C\u4E8E\u6298\u53E0\u6807\u7B7E\u7684\u6587\u672C\u65F6\uFF0C\u662F\u5426\u663E\u793A\u6240\u6709\u9009\u4E2D\u7684\u6807\u7B7E\u3002 \u8981\u4F7F\u7528\u6B64\u5C5E\u6027\uFF0Ccollapse-tags\u5C5E\u6027\u5FC5\u987B\u8BBE\u5B9A\u4E3A true"
          },
          "multiple-limit": {
            "type": "attr",
            "values": ["number"],
            "description": "multiple \u5C5E\u6027\u8BBE\u7F6E\u4E3A true \u65F6\uFF0C\u4EE3\u8868\u591A\u9009\u573A\u666F\u4E0B\u7528\u6237\u6700\u591A\u53EF\u4EE5\u9009\u62E9\u7684\u9879\u76EE\u6570\uFF0C \u4E3A 0 \u5219\u4E0D\u9650\u5236"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "Select \u8F93\u5165\u6846\u7684\u539F\u751F name \u5C5E\u6027"
          },
          "effect": {
            "type": "attr",
            "values": ["dark", "light"],
            "description": "tooltip \u4E3B\u9898\uFF0C\u5185\u7F6E\u4E86 dark / light \u4E24\u79CD"
          },
          "autocomplete": {
            "type": "attr",
            "values": [],
            "description": "Select \u8F93\u5165\u6846\u7684\u539F\u751F autocomplete \u5C5E\u6027"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u5360\u4F4D\u7B26\uFF0C\u9ED8\u8BA4\u4E3A\u201CSelect\u201D"
          },
          "filterable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "Select \u7EC4\u4EF6\u662F\u5426\u53EF\u7B5B\u9009"
          },
          "allow-create": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5141\u8BB8\u7528\u6237\u521B\u5EFA\u65B0\u6761\u76EE\uFF0C \u53EA\u6709\u5F53 filterable \u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548\u3002"
          },
          "filter-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u81EA\u5B9A\u4E49\u7B5B\u9009\u65B9\u6CD5"
          },
          "remote": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5176\u4E2D\u7684\u9009\u9879\u662F\u5426\u4ECE\u670D\u52A1\u5668\u8FDC\u7A0B\u52A0\u8F7D"
          },
          "remote-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u81EA\u5B9A\u4E49\u8FDC\u7A0B\u641C\u7D22\u65B9\u6CD5"
          },
          "remote-show-suffix": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8FDC\u7A0B\u641C\u7D22\u65B9\u6CD5\u663E\u793A\u540E\u7F00\u56FE\u6807"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6B63\u5728\u4ECE\u8FDC\u7A0B\u83B7\u53D6\u6570\u636E"
          },
          "loading-text": {
            "type": "attr",
            "values": [],
            "description": "\u4ECE\u670D\u52A1\u5668\u52A0\u8F7D\u6570\u636E\u65F6\u663E\u793A\u7684\u6587\u672C\uFF0C\u9ED8\u8BA4\u4E3A\u201CLoading\u201D"
          },
          "no-match-text": {
            "type": "attr",
            "values": [],
            "description": "\u641C\u7D22\u6761\u4EF6\u65E0\u5339\u914D\u65F6\u663E\u793A\u7684\u6587\u5B57\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 empty \u63D2\u69FD\u8BBE\u7F6E\uFF0C\u9ED8\u8BA4\u662F \u201CNo matching data'\u201D"
          },
          "no-data-text": {
            "type": "attr",
            "values": [],
            "description": "\u65E0\u9009\u9879\u65F6\u663E\u793A\u7684\u6587\u5B57\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 empty \u63D2\u69FD\u8BBE\u7F6E\u81EA\u5B9A\u4E49\u5185\u5BB9\uFF0C\u9ED8\u8BA4\u662F \u201CNo data\u201D"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u62E9\u5668\u4E0B\u62C9\u83DC\u5355\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "reserve-keyword": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53 multiple \u548C filterable\u88AB\u8BBE\u7F6E\u4E3A true \u65F6\uFF0C\u662F\u5426\u5728\u9009\u4E2D\u4E00\u4E2A\u9009\u9879\u540E\u4FDD\u7559\u5F53\u524D\u7684\u641C\u7D22\u5173\u952E\u8BCD"
          },
          "default-first-option": {
            "type": "attr",
            "values": ["false"],
            "description": "\u662F\u5426\u5728\u8F93\u5165\u6846\u6309\u4E0B\u56DE\u8F66\u65F6\uFF0C\u9009\u62E9\u7B2C\u4E00\u4E2A\u5339\u914D\u9879\u3002 \u9700\u914D\u5408 filterable \u6216 remote \u4F7F\u7528"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20"
          },
          "persistent": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u4E0B\u62C9\u9009\u62E9\u5668\u672A\u88AB\u6FC0\u6D3B\u5E76\u4E14persistent\u8BBE\u7F6E\u4E3Afalse\uFF0C\u9009\u62E9\u5668\u4F1A\u88AB\u5220\u9664\u3002"
          },
          "automatic-dropdown": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5BF9\u4E8E\u4E0D\u53EF\u641C\u7D22\u7684 Select\uFF0C\u662F\u5426\u5728\u8F93\u5165\u6846\u83B7\u5F97\u7126\u70B9\u540E\u81EA\u52A8\u5F39\u51FA\u9009\u9879\u83DC\u5355"
          },
          "clear-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807"
          },
          "fit-input-width": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E0B\u62C9\u6846\u7684\u5BBD\u5EA6\u662F\u5426\u4E0E\u8F93\u5165\u6846\u76F8\u540C"
          },
          "suffix-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u540E\u7F00\u56FE\u6807\u7EC4\u4EF6"
          },
          "suffix-transitiondeprecated": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E0B\u62C9\u83DC\u5355\u663E\u793A/\u6D88\u5931\u65F6\u540E\u7F00\u56FE\u6807\u7684\u52A8\u753B"
          },
          "tag-type": {
            "type": "attr",
            "values": ["success", "info", "warning", "danger"],
            "description": "\u6807\u7B7E\u7C7B\u578B"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1"
          },
          "placement": {
            "type": "attr",
            "values": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"],
            "description": "\u4E0B\u62C9\u6846\u51FA\u73B0\u7684\u4F4D\u7F6E"
          },
          "fallback-placements": {
            "type": "attr",
            "values": ["array"],
            "description": "dropdown \u53EF\u7528\u7684 positions \u8BF7\u67E5\u770Bpopper.js \u6587\u6863"
          },
          "max-collapse-tags": {
            "type": "attr",
            "values": ["number"],
            "description": "\u9700\u8981\u663E\u793A\u7684 Tag \u7684\u6700\u5927\u6570\u91CF \u53EA\u6709\u5F53 collapse-tags \u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548\u3002"
          },
          "popper-options": {
            "type": "attr",
            "values": ["objectrefer"],
            "description": "popper.js \u53C2\u6570"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027"
          },
          "empty-values": {
            "type": "attr",
            "values": ["array"],
            "description": "\u7EC4\u4EF6\u7684\u7A7A\u503C\u914D\u7F6E \u53C2\u8003config-provider"
          },
          "value-on-clear": {
            "type": "attr",
            "values": [],
            "description": "\u6E05\u7A7A\u9009\u9879\u7684\u503C \u53C2\u8003 config-provider"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u9009\u4E2D\u503C\u53D1\u751F\u53D8\u5316\u65F6\u89E6\u53D1"
          },
          "visible-change": {
            "type": "event",
            "values": [],
            "description": "\u4E0B\u62C9\u6846\u51FA\u73B0/\u9690\u85CF\u65F6\u89E6\u53D1"
          },
          "remove-tag": {
            "type": "event",
            "values": [],
            "description": "\u591A\u9009\u6A21\u5F0F\u4E0B\u79FB\u9664tag\u65F6\u89E6\u53D1"
          },
          "clear": {
            "type": "event",
            "values": [],
            "description": "\u53EF\u6E05\u7A7A\u7684\u5355\u9009\u6A21\u5F0F\u4E0B\u7528\u6237\u70B9\u51FB\u6E05\u7A7A\u6309\u94AE\u65F6\u89E6\u53D1"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u5F53 input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u5F53 input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1"
          }
        },
        "el-option": {
          "_html": {
            "": '<el-option label="$1" value="$2" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/select.html)\n#### \u5C5E\u6027\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| Type| Default |\n| :--- | :--- | :--- | :--- |\n| label| \u5206\u7EC4\u7684\u540D\u79F0| string| \u2014 |\n| disabled| \u662F\u5426\u5C06\u8BE5\u5206\u7EC4\u4E0B\u6240\u6709\u9009\u9879\u7F6E\u4E3A\u7981\u7528| boolean| false |\n\n#### Option Group Slots\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| Subtags |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Option |\n\n#### \u5C5E\u6027\n\n| \u540D\u79F0| \u8BE6\u60C5| Type| Default |\n| :--- | :--- | :--- | :--- |\n| value| \u9009\u9879\u7684\u503C| string / number / boolean / object| \u2014 |\n| label| \u9009\u9879\u7684\u6807\u7B7E\uFF0C\u82E5\u4E0D\u8BBE\u7F6E\u5219\u9ED8\u8BA4\u4E0Evalue\u76F8\u540C| string / number| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528\u8BE5\u9009\u9879| boolean| false |\n\n#### Option Slots\n\n| Name| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u9ED8\u8BA4\u63D2\u69FD\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "value": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u9879\u7684\u503C"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u9879\u7684\u6807\u7B7E\uFF0C\u82E5\u4E0D\u8BBE\u7F6E\u5219\u9ED8\u8BA4\u4E0Evalue\u76F8\u540C"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u8BE5\u9009\u9879"
          }
        },
        "el-option-group": {
          "_html": {
            "": '<el-option-group v-for="group in ${1:options}" :key="group.label" :label="group.label">\n<el-option v-for="item in group.options" :key="item.value" :label="item.label" :value="item.value" />\n</el-option-group>'
          }
        },
        "el-select-v2": {
          "_html": {
            "": '<el-select-v2 v-model="${1:value}" :options="${2:options}" placeholder="Please select" filterable clearable >$3</el-select-v2>',
            ":multiple": '<el-select-v2 v-model="${1:value}" :options="${2:options}" placeholder="Please select" filterable clearable multiple >$3</el-select-v2>',
            ":header[slot]": "<template #header>\n$1\n</template>",
            ":footer[slot]": "<template #footer>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/select-v2.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| string / number / boolean / object / array| \u2014 |\n| options| \u9009\u9879\u7684\u6570\u636E\u6E90\uFF0C value \u7684 key \u548C label \u53EF\u4EE5\u901A\u8FC7 props\u81EA\u5B9A\u4E49.| array| \u2014 |\n| props 2.4.2| \u914D\u7F6E\u9009\u9879\uFF0C\u5177\u4F53\u770B\u4E0B\u8868| object| \u2014 |\n| multiple| \u662F\u5426\u591A\u9009| boolean| false |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false |\n| value-key| \u4F5C\u4E3A value \u552F\u4E00\u6807\u8BC6\u7684\u952E\u540D\uFF0C\u7ED1\u5B9A\u503C\u4E3A\u5BF9\u8C61\u7C7B\u578B\u65F6\u5FC5\u586B| string| value |\n| size| \u7EC4\u4EF6\u5927\u5C0F| enum| '' |\n| clearable| \u662F\u5426\u53EF\u4EE5\u6E05\u7A7A\u9009\u9879| boolean| false |\n| clear-icon| \u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807| string / object| CircleClose |\n| collapse-tags| \u591A\u9009\u65F6\u662F\u5426\u5C06\u9009\u4E2D\u503C\u6309\u6587\u5B57\u7684\u5F62\u5F0F\u5C55\u793A| boolean| false |\n| multiple-limit| \u591A\u9009\u65F6\u53EF\u88AB\u9009\u62E9\u7684\u6700\u5927\u6570\u76EE\u3002 \u5F53\u88AB\u8BBE\u7F6E\u4E3A0\u65F6\uFF0C\u53EF\u88AB\u9009\u62E9\u7684\u6570\u76EE\u4E0D\u8BBE\u9650\u3002| number| 0 |\n| name| \u9009\u62E9\u5668\u7684\u539F\u751Fname\u5C5E\u6027| string| \u2014 |\n| effect| tooltip \u4E3B\u9898\uFF0C\u5185\u7F6E\u4E86 dark / light \u4E24\u79CD| enum / string| light |\n| autocomplete| \u81EA\u52A8\u5B8C\u6210\u9009\u62E9\u8F93\u5165| string| off |\n| placeholder| \u5360\u4F4D\u6587\u5B57| string| Please select |\n| filterable| \u662F\u5426\u53EF\u7B5B\u9009| boolean| false |\n| allow-create| \u662F\u5426\u5141\u8BB8\u521B\u5EFA\u65B0\u6761\u76EE\uFF0C \u5F53\u4F7F\u7528\u8BE5\u5C5E\u6027\u65F6\uFF0Cfilterable\u5FC5\u987B\u8BBE\u7F6E\u4E3Atrue| boolean| false |\n| filter-method| \u81EA\u5B9A\u4E49\u7B5B\u9009\u65B9\u6CD5| Function| \u2014 |\n| loading| \u662F\u5426\u4ECE\u8FDC\u7A0B\u52A0\u8F7D\u6570\u636E| boolean| false |\n| loading-text| \u4ECE\u670D\u52A1\u5668\u52A0\u8F7D\u6570\u636E\u65F6\u663E\u793A\u7684\u6587\u672C\uFF0C\u9ED8\u8BA4\u4E3A\u201CLoading\u201D| string| \u2014 |\n| reserve-keyword| \u7B5B\u9009\u65F6\uFF0C\u662F\u5426\u5728\u9009\u62E9\u9009\u9879\u540E\u4FDD\u7559\u5173\u952E\u5B57| boolean| true |\n| no-match-text| \u641C\u7D22\u6761\u4EF6\u65E0\u5339\u914D\u65F6\u663E\u793A\u7684\u6587\u5B57\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 empty \u63D2\u69FD\u8BBE\u7F6E\uFF0C\u9ED8\u8BA4\u662F \u201CNo matching data'\u201D| string| \u2014 |\n| no-data-text| \u5F53\u5728\u6CA1\u6709\u6570\u636E\u65F6\u663E\u793A\u7684\u6587\u5B57\uFF0C\u4F60\u540C\u65F6\u53EF\u4EE5\u4F7F\u7528empty\u63D2\u69FD\u8FDB\u884C\u8BBE\u7F6E\u3002| string| No Data |\n| popper-class| \u9009\u62E9\u5668\u4E0B\u62C9\u83DC\u5355\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| '' |\n| popper-append-to-body deprecated| \u662F\u5426\u5C06\u5F39\u51FA\u6846\u63D2\u5165\u81F3 body \u5143\u7D20 \u5F53\u5F39\u51FA\u6846\u7684\u4F4D\u7F6E\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u4F60\u53EF\u4EE5\u5C1D\u8BD5\u5C06\u8BE5\u5C5E\u6027\u8BBE\u7F6E\u4E3Afalse\u3002| boolean| false |\n| teleported| \u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u5143\u7D20\u63D2\u5165 append-to \u6307\u5411\u7684\u5143\u7D20\u4E0B| boolean| true |\n| persistent| \u5F53\u4E0B\u62C9\u9009\u62E9\u5668\u672A\u88AB\u6FC0\u6D3B\u5E76\u4E14persistent\u8BBE\u7F6E\u4E3Afalse\uFF0C\u9009\u62E9\u5668\u4F1A\u88AB\u5220\u9664\u3002| boolean| true |\n| popper-options| popper.js parameters| objectrefer to popper.js doc| {} |\n| automatic-dropdown| \u5BF9\u4E8E\u4E0D\u53EF\u641C\u7D22\u7684 Select\uFF0C\u662F\u5426\u5728\u8F93\u5165\u6846\u83B7\u5F97\u7126\u70B9\u540E\u81EA\u52A8\u5F39\u51FA\u9009\u9879\u83DC\u5355| boolean| false |\n| height| \u4E0B\u62C9\u83DC\u5355\u7684\u9AD8\u5EA6\uFF0C\u6BCF\u4E00\u4E2A\u9009\u9879\u4E3A34px| number| 274 |\n| item-height| \u4E0B\u62C9\u9879\u7684\u9AD8\u5EA6| number| 34 |\n| scrollbar-always-on| \u662F\u5426\u603B\u662F\u5C55\u793A\u6EDA\u52A8\u6761| boolean| false |\n| remote| \u662F\u5426\u4ECE\u670D\u52A1\u5668\u83B7\u53D6\u6570\u636E| boolean| false |\n| remote-method| \u5F53\u8F93\u5165\u503C\u53D1\u751F\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u51FD\u6570\u3002 \u5B83\u7684\u53C2\u6570\u5C31\u662F\u5F53\u524D\u7684\u8F93\u5165\u503C\u3002 \u5F53filterable\u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548| Function| \u2014 |\n| validate-event| \u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1| boolean| true |\n| placement| \u4E0B\u62C9\u6846\u51FA\u73B0\u7684\u4F4D\u7F6E| enum| bottom-start |\n| fallback-placements 2.5.6| dropdown \u53EF\u7528\u7684 positions \u8BF7\u67E5\u770Bpopper.js \u6587\u6863| arrary| ['bottom-start', 'top-start', 'right', 'left'] |\n| collapse-tags-tooltip 2.3.0| \u5F53\u9F20\u6807\u60AC\u505C\u4E8E\u6298\u53E0\u6807\u7B7E\u7684\u6587\u672C\u65F6\uFF0C\u662F\u5426\u663E\u793A\u6240\u6709\u9009\u4E2D\u7684\u6807\u7B7E\u3002 \u53EA\u6709\u5F53 collapse-tags \u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548\u3002| boolean| false |\n| max-collapse-tags 2.3.0| \u9700\u8981\u663E\u793A\u7684 Tag \u7684\u6700\u5927\u6570\u91CF \u53EA\u6709\u5F53 collapse-tags \u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548\u3002| number| 1 |\n| tag-type 2.5.0| \u6807\u7B7E\u7C7B\u578B| enum| info |\n| aria-label a11y 2.5.0| \u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027| string| \u2014 |\n\n#### props\n\n| Attribute| \u8BF4\u660E| Type| Default |\n| :--- | :--- | :--- | :--- |\n| value| \u6307\u5B9A\u9009\u9879\u7684\u503C\u4E3A\u9009\u9879\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u503C| string| value |\n| label| \u6307\u5B9A\u8282\u70B9\u6807\u7B7E\u4E3A\u8282\u70B9\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u503C| string| label |\n| options| \u6307\u5B9A\u9009\u9879\u7684\u5B50\u9009\u9879\u4E3A\u9009\u9879\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u503C| string| options |\n| disabled| \u6307\u5B9A\u9009\u9879\u7684\u7981\u7528\u4E3A\u9009\u9879\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u503C| string| disabled |\n#### \u4E8B\u4EF6\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u5F53\u6240\u9009\u503C\u66F4\u6539\u65F6\u89E6\u53D1\uFF0C\u53C2\u6570\u662F\u5F53\u524D\u9009\u4E2D\u7684\u503C| Function |\n| visible-change| \u5F53\u4E0B\u62C9\u83DC\u5355\u51FA\u73B0/\u6D88\u5931\u65F6\u89E6\u53D1\u5668, \u5F53\u5B83\u51FA\u73B0\u65F6, \u53C2\u6570\u5C06\u662F\u771F\u7684, \u5426\u5219\u5C06\u662F\u5047\u7684| Function |\n| remove-tag| \u5F53\u4E00\u4E2A\u6807\u7B7E\u5728\u591A\u4E2A\u6A21\u5F0F\u4E0B\u88AB\u79FB\u9664\u65F6\u89E6\u53D1\uFF0C\u53C2\u6570\u5C06\u88AB\u79FB\u9664\u6807\u7B7E\u503C| Function |\n| clear| \u53EF\u6E05\u7A7A\u7684\u5355\u9009\u6A21\u5F0F\u4E0B\u7528\u6237\u70B9\u51FB\u6E05\u7A7A\u6309\u94AE\u65F6\u89E6\u53D1| Function |\n| blur| \u5F53\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| focus| \u5F53\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n\n#### Slots\n\n| \u540D\u79F0| \u8BE6\u60C5 |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49 Option \u6A21\u677F |\n| header 2.5.2| \u4E0B\u62C9\u5217\u8868\u9876\u90E8\u7684\u5185\u5BB9 |\n| footer 2.5.2| \u4E0B\u62C9\u5217\u8868\u5E95\u90E8\u7684\u5185\u5BB9 |\n| empty| \u81EA\u5B9A\u4E49\u5F53\u9009\u9879\u4E3A\u7A7A\u65F6\u7684\u5185\u5BB9 |\n| prefix| \u8F93\u5165\u6846\u7684\u524D\u7F00 |\n| tag 2.5.0| select \u7EC4\u4EF6\u81EA\u5B9A\u4E49\u6807\u7B7E\u5185\u5BB9 |\n| loading 2.5.2| select \u7EC4\u4EF6\u81EA\u5B9A\u4E49 loading\u5185\u5BB9 |\n\n#### Exposes\n\n| \u65B9\u6CD5| \u63CF\u8FF0| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| focus| \u4F7F\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u83B7\u53D6\u7126\u70B9| Function |\n| blur| \u4F7F\u9009\u62E9\u5668\u7684\u8F93\u5165\u6846\u5931\u53BB\u7126\u70B9\uFF0C\u5E76\u9690\u85CF\u4E0B\u62C9\u6846| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "multiple": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u591A\u9009"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "value-key": {
            "type": "attr",
            "values": [],
            "description": "\u4F5C\u4E3A value \u552F\u4E00\u6807\u8BC6\u7684\u952E\u540D\uFF0C\u7ED1\u5B9A\u503C\u4E3A\u5BF9\u8C61\u7C7B\u578B\u65F6\u5FC5\u586B"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "\u8F93\u5165\u6846\u5C3A\u5BF8"
          },
          "clearable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u6E05\u7A7A\u9009\u9879"
          },
          "collapse-tags": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u591A\u9009\u65F6\u662F\u5426\u5C06\u9009\u4E2D\u503C\u6309\u6587\u5B57\u7684\u5F62\u5F0F\u5C55\u793A"
          },
          "collapse-tags-tooltip": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u9F20\u6807\u60AC\u505C\u4E8E\u6298\u53E0\u6807\u7B7E\u7684\u6587\u672C\u65F6\uFF0C\u662F\u5426\u663E\u793A\u6240\u6709\u9009\u4E2D\u7684\u6807\u7B7E\u3002 \u8981\u4F7F\u7528\u6B64\u5C5E\u6027\uFF0Ccollapse-tags\u5C5E\u6027\u5FC5\u987B\u8BBE\u5B9A\u4E3A true"
          },
          "multiple-limit": {
            "type": "attr",
            "values": ["number"],
            "description": "multiple \u5C5E\u6027\u8BBE\u7F6E\u4E3A true \u65F6\uFF0C\u4EE3\u8868\u591A\u9009\u573A\u666F\u4E0B\u7528\u6237\u6700\u591A\u53EF\u4EE5\u9009\u62E9\u7684\u9879\u76EE\u6570\uFF0C \u4E3A 0 \u5219\u4E0D\u9650\u5236"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "Select \u8F93\u5165\u6846\u7684\u539F\u751F name \u5C5E\u6027"
          },
          "effect": {
            "type": "attr",
            "values": ["dark", "light"],
            "description": "tooltip \u4E3B\u9898\uFF0C\u5185\u7F6E\u4E86 dark / light \u4E24\u79CD"
          },
          "autocomplete": {
            "type": "attr",
            "values": [],
            "description": "Select \u8F93\u5165\u6846\u7684\u539F\u751F autocomplete \u5C5E\u6027"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u5360\u4F4D\u7B26\uFF0C\u9ED8\u8BA4\u4E3A\u201CSelect\u201D"
          },
          "filterable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "Select \u7EC4\u4EF6\u662F\u5426\u53EF\u7B5B\u9009"
          },
          "allow-create": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5141\u8BB8\u7528\u6237\u521B\u5EFA\u65B0\u6761\u76EE\uFF0C \u53EA\u6709\u5F53 filterable \u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548\u3002"
          },
          "filter-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u81EA\u5B9A\u4E49\u7B5B\u9009\u65B9\u6CD5"
          },
          "remote": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5176\u4E2D\u7684\u9009\u9879\u662F\u5426\u4ECE\u670D\u52A1\u5668\u8FDC\u7A0B\u52A0\u8F7D"
          },
          "remote-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u81EA\u5B9A\u4E49\u8FDC\u7A0B\u641C\u7D22\u65B9\u6CD5"
          },
          "remote-show-suffix": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8FDC\u7A0B\u641C\u7D22\u65B9\u6CD5\u663E\u793A\u540E\u7F00\u56FE\u6807"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6B63\u5728\u4ECE\u8FDC\u7A0B\u83B7\u53D6\u6570\u636E"
          },
          "loading-text": {
            "type": "attr",
            "values": [],
            "description": "\u4ECE\u670D\u52A1\u5668\u52A0\u8F7D\u6570\u636E\u65F6\u663E\u793A\u7684\u6587\u672C\uFF0C\u9ED8\u8BA4\u4E3A\u201CLoading\u201D"
          },
          "no-match-text": {
            "type": "attr",
            "values": [],
            "description": "\u641C\u7D22\u6761\u4EF6\u65E0\u5339\u914D\u65F6\u663E\u793A\u7684\u6587\u5B57\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 empty \u63D2\u69FD\u8BBE\u7F6E\uFF0C\u9ED8\u8BA4\u662F \u201CNo matching data'\u201D"
          },
          "no-data-text": {
            "type": "attr",
            "values": [],
            "description": "\u65E0\u9009\u9879\u65F6\u663E\u793A\u7684\u6587\u5B57\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 empty \u63D2\u69FD\u8BBE\u7F6E\u81EA\u5B9A\u4E49\u5185\u5BB9\uFF0C\u9ED8\u8BA4\u662F \u201CNo data\u201D"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u62E9\u5668\u4E0B\u62C9\u83DC\u5355\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "reserve-keyword": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53 multiple \u548C filterable\u88AB\u8BBE\u7F6E\u4E3A true \u65F6\uFF0C\u662F\u5426\u5728\u9009\u4E2D\u4E00\u4E2A\u9009\u9879\u540E\u4FDD\u7559\u5F53\u524D\u7684\u641C\u7D22\u5173\u952E\u8BCD"
          },
          "default-first-option": {
            "type": "attr",
            "values": ["false"],
            "description": "\u662F\u5426\u5728\u8F93\u5165\u6846\u6309\u4E0B\u56DE\u8F66\u65F6\uFF0C\u9009\u62E9\u7B2C\u4E00\u4E2A\u5339\u914D\u9879\u3002 \u9700\u914D\u5408 filterable \u6216 remote \u4F7F\u7528"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20"
          },
          "persistent": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u4E0B\u62C9\u9009\u62E9\u5668\u672A\u88AB\u6FC0\u6D3B\u5E76\u4E14persistent\u8BBE\u7F6E\u4E3Afalse\uFF0C\u9009\u62E9\u5668\u4F1A\u88AB\u5220\u9664\u3002"
          },
          "automatic-dropdown": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5BF9\u4E8E\u4E0D\u53EF\u641C\u7D22\u7684 Select\uFF0C\u662F\u5426\u5728\u8F93\u5165\u6846\u83B7\u5F97\u7126\u70B9\u540E\u81EA\u52A8\u5F39\u51FA\u9009\u9879\u83DC\u5355"
          },
          "clear-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807"
          },
          "fit-input-width": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E0B\u62C9\u6846\u7684\u5BBD\u5EA6\u662F\u5426\u4E0E\u8F93\u5165\u6846\u76F8\u540C"
          },
          "suffix-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u540E\u7F00\u56FE\u6807\u7EC4\u4EF6"
          },
          "suffix-transitiondeprecated": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E0B\u62C9\u83DC\u5355\u663E\u793A/\u6D88\u5931\u65F6\u540E\u7F00\u56FE\u6807\u7684\u52A8\u753B"
          },
          "tag-type": {
            "type": "attr",
            "values": ["success", "info", "warning", "danger"],
            "description": "\u6807\u7B7E\u7C7B\u578B"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1"
          },
          "placement": {
            "type": "attr",
            "values": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"],
            "description": "\u4E0B\u62C9\u6846\u51FA\u73B0\u7684\u4F4D\u7F6E"
          },
          "fallback-placements": {
            "type": "attr",
            "values": ["array"],
            "description": "dropdown \u53EF\u7528\u7684 positions \u8BF7\u67E5\u770Bpopper.js \u6587\u6863"
          },
          "max-collapse-tags": {
            "type": "attr",
            "values": ["number"],
            "description": "\u9700\u8981\u663E\u793A\u7684 Tag \u7684\u6700\u5927\u6570\u91CF \u53EA\u6709\u5F53 collapse-tags \u8BBE\u7F6E\u4E3A true \u65F6\u624D\u4F1A\u751F\u6548\u3002"
          },
          "popper-options": {
            "type": "attr",
            "values": ["objectrefer"],
            "description": "popper.js \u53C2\u6570"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027"
          },
          "empty-values": {
            "type": "attr",
            "values": ["array"],
            "description": "\u7EC4\u4EF6\u7684\u7A7A\u503C\u914D\u7F6E \u53C2\u8003config-provider"
          },
          "value-on-clear": {
            "type": "attr",
            "values": [],
            "description": "\u6E05\u7A7A\u9009\u9879\u7684\u503C \u53C2\u8003 config-provider"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u9009\u4E2D\u503C\u53D1\u751F\u53D8\u5316\u65F6\u89E6\u53D1"
          },
          "visible-change": {
            "type": "event",
            "values": [],
            "description": "\u4E0B\u62C9\u6846\u51FA\u73B0/\u9690\u85CF\u65F6\u89E6\u53D1"
          },
          "remove-tag": {
            "type": "event",
            "values": [],
            "description": "\u591A\u9009\u6A21\u5F0F\u4E0B\u79FB\u9664tag\u65F6\u89E6\u53D1"
          },
          "clear": {
            "type": "event",
            "values": [],
            "description": "\u53EF\u6E05\u7A7A\u7684\u5355\u9009\u6A21\u5F0F\u4E0B\u7528\u6237\u70B9\u51FB\u6E05\u7A7A\u6309\u94AE\u65F6\u89E6\u53D1"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u5F53 input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u5F53 input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1"
          }
        },
        "el-slider": {
          "_html": {
            "": '<el-slider v-model="${1:value}" />',
            ":show-input": '<el-slider v-model="${1:value}" show-input />',
            ":step": '<el-slider v-model="${1:value}" :step="${2:10}" />',
            ":range": '<el-slider v-model="${1:value}" range show-stops :max="${2:10}" />',
            ":marks": '<el-slider v-model="${1:value}" range :marks="${2:marks}" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/slider.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u63CF\u8FF0| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| number / object| 0 |\n| min| \u6700\u5C0F\u503C| number| 0 |\n| max| \u6700\u5927\u503C| number| 100 |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false |\n| step| \u6B65\u957F| number| 1 |\n| show-input| \u662F\u5426\u663E\u793A\u8F93\u5165\u6846\uFF0C\u4EC5\u5728\u975E\u8303\u56F4\u9009\u62E9\u65F6\u6709\u6548| boolean| false |\n| show-input-controls| \u5728\u663E\u793A\u8F93\u5165\u6846\u7684\u60C5\u51B5\u4E0B\uFF0C\u662F\u5426\u663E\u793A\u8F93\u5165\u6846\u7684\u63A7\u5236\u6309\u94AE| boolean| true |\n| size| slider \u5305\u88C5\u5668\u7684\u5927\u5C0F\uFF0C\u5782\u76F4\u6A21\u5F0F\u4E0B\u8BE5\u5C5E\u6027\u4E0D\u53EF\u7528| enum| default |\n| input-size| \u8F93\u5165\u6846\u7684\u5927\u5C0F\uFF0C\u5982\u679C\u8BBE\u7F6E\u4E86 size \u5C5E\u6027\uFF0C\u9ED8\u8BA4\u503C\u81EA\u52A8\u53D6 size| enum| default |\n| show-stops| \u662F\u5426\u663E\u793A\u95F4\u65AD\u70B9| boolean| false |\n| show-tooltip| \u662F\u5426\u663E\u793A\u63D0\u793A\u4FE1\u606F| boolean| true |\n| format-tooltip| \u683C\u5F0F\u5316\u63D0\u793A\u4FE1\u606F| Function| \u2014 |\n| range| \u662F\u5426\u5F00\u542F\u9009\u62E9\u8303\u56F4| boolean| false |\n| vertical| \u5782\u76F4\u6A21\u5F0F| boolean| false |\n| height| \u6ED1\u5757\u9AD8\u5EA6\uFF0C\u5782\u76F4\u6A21\u5F0F\u5FC5\u586B| string| \u2014 |\n| label| \u5C4F\u5E55\u9605\u8BFB\u5668\u6807\u7B7E| string| \u2014 |\n| range-start-label| \u5F53 range \u4E3Atrue\u65F6\uFF0C\u5C4F\u5E55\u9605\u8BFB\u5668\u6807\u7B7E\u5F00\u59CB\u7684\u6807\u8BB0| string| \u2014 |\n| range-end-label| \u5F53 range \u4E3Atrue\u65F6\uFF0C\u5C4F\u5E55\u9605\u8BFB\u5668\u6807\u7B7E\u7ED3\u5C3E\u7684\u6807\u8BB0| string| \u2014 |\n| format-value-text| \u663E\u793A\u5C4F\u5E55\u9605\u8BFB\u5668\u7684 aria-valuenow \u5C5E\u6027\u7684\u683C\u5F0F| Function| \u2014 |\n| debounce| \u8F93\u5165\u65F6\u7684\u53BB\u6296\u5EF6\u8FDF\uFF0C\u6BEB\u79D2\uFF0C\u4EC5\u5728 show-input \u7B49\u4E8E true \u65F6\u6709\u6548| number| 300 |\n| tooltip-class| tooltip \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| \u2014 |\n| placement| Tooltip \u51FA\u73B0\u7684\u4F4D\u7F6E| enum| top |\n| marks| \u6807\u8BB0\uFF0C key \u7684\u7C7B\u578B\u5FC5\u987B\u4E3A number \u4E14\u53D6\u503C\u5728\u95ED\u533A\u95F4 [min, max] \u5185\uFF0C\u6BCF\u4E2A\u6807\u8BB0\u53EF\u4EE5\u5355\u72EC\u8BBE\u7F6E\u6837\u5F0F| object| \u2014 |\n| validate-event| \u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C| boolean| true |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u503C\u6539\u53D8\u65F6\u89E6\u53D1\uFF08\u4F7F\u7528\u9F20\u6807\u62D6\u66F3\u65F6\uFF0C\u53EA\u5728\u677E\u5F00\u9F20\u6807\u540E\u89E6\u53D1\uFF09| Function |\n| input| \u6570\u636E\u6539\u53D8\u65F6\u89E6\u53D1\uFF08\u4F7F\u7528\u9F20\u6807\u62D6\u66F3\u65F6\uFF0C\u6D3B\u52A8\u8FC7\u7A0B\u5B9E\u65F6\u89E6\u53D1\uFF09| Function |\n\n#### \u7C7B\u578B\u58F0\u660E\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": ["number"],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "min": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u5C0F\u503C"
          },
          "max": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u5927\u503C"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "step": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6B65\u957F"
          },
          "show-input": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u8F93\u5165\u6846\uFF0C\u4EC5\u5728\u975E\u8303\u56F4\u9009\u62E9\u65F6\u6709\u6548"
          },
          "show-input-controls": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u663E\u793A\u8F93\u5165\u6846\u7684\u60C5\u51B5\u4E0B\uFF0C\u662F\u5426\u663E\u793A\u8F93\u5165\u6846\u7684\u63A7\u5236\u6309\u94AE"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "slider \u5305\u88C5\u5668\u7684\u5927\u5C0F\uFF0C\u5782\u76F4\u6A21\u5F0F\u4E0B\u8BE5\u5C5E\u6027\u4E0D\u53EF\u7528"
          },
          "input-size": {
            "type": "attr",
            "values": ["enum"],
            "description": "\u8F93\u5165\u6846\u7684\u5927\u5C0F\uFF0C\u5982\u679C\u8BBE\u7F6E\u4E86 size \u5C5E\u6027\uFF0C\u9ED8\u8BA4\u503C\u81EA\u52A8\u53D6 size"
          },
          "show-stops": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u95F4\u65AD\u70B9"
          },
          "show-tooltip": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u63D0\u793A\u4FE1\u606F"
          },
          "format-tooltip": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u683C\u5F0F\u5316\u63D0\u793A\u4FE1\u606F"
          },
          "range": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5F00\u542F\u9009\u62E9\u8303\u56F4"
          },
          "vertical": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5782\u76F4\u6A21\u5F0F"
          },
          "height": {
            "type": "attr",
            "values": [],
            "description": "\u6ED1\u5757\u9AD8\u5EA6\uFF0C\u5782\u76F4\u6A21\u5F0F\u5FC5\u586B"
          },
          "labelaydeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F aria-label\u5C5E\u6027"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F aria-label\u5C5E\u6027"
          },
          "range-start-label": {
            "type": "attr",
            "values": [],
            "description": "\u5F53 range \u4E3Atrue\u65F6\uFF0C\u5C4F\u5E55\u9605\u8BFB\u5668\u6807\u7B7E\u5F00\u59CB\u7684\u6807\u8BB0"
          },
          "range-end-label": {
            "type": "attr",
            "values": [],
            "description": "\u5F53 range \u4E3Atrue\u65F6\uFF0C\u5C4F\u5E55\u9605\u8BFB\u5668\u6807\u7B7E\u7ED3\u5C3E\u7684\u6807\u8BB0"
          },
          "format-value-text": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u663E\u793A\u5C4F\u5E55\u9605\u8BFB\u5668\u7684 aria-valuenow \u5C5E\u6027\u7684\u683C\u5F0F"
          },
          "debounce": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8F93\u5165\u65F6\u7684\u53BB\u6296\u5EF6\u8FDF\uFF0C\u6BEB\u79D2\uFF0C\u4EC5\u5728 show-input \u7B49\u4E8E true \u65F6\u6709\u6548"
          },
          "tooltip-class": {
            "type": "attr",
            "values": [],
            "description": "tooltip \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "placement": {
            "type": "attr",
            "values": ["enum"],
            "description": "Tooltip \u51FA\u73B0\u7684\u4F4D\u7F6E"
          },
          "marks": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6807\u8BB0\uFF0C key \u7684\u7C7B\u578B\u5FC5\u987B\u4E3A number \u4E14\u53D6\u503C\u5728\u95ED\u533A\u95F4 [min, max] \u5185\uFF0C\u6BCF\u4E2A\u6807\u8BB0\u53EF\u4EE5\u5355\u72EC\u8BBE\u7F6E\u6837\u5F0F"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8F93\u5165\u65F6\u662F\u5426\u89E6\u53D1\u8868\u5355\u7684\u6821\u9A8C"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u503C\u6539\u53D8\u65F6\u89E6\u53D1\uFF08\u4F7F\u7528\u9F20\u6807\u62D6\u66F3\u65F6\uFF0C\u53EA\u5728\u677E\u5F00\u9F20\u6807\u540E\u89E6\u53D1\uFF09"
          },
          "input": {
            "type": "event",
            "values": [],
            "description": "\u6570\u636E\u6539\u53D8\u65F6\u89E6\u53D1\uFF08\u4F7F\u7528\u9F20\u6807\u62D6\u66F3\u65F6\uFF0C\u6D3B\u52A8\u8FC7\u7A0B\u5B9E\u65F6\u89E6\u53D1\uFF09"
          }
        },
        "el-switch": {
          "_html": {
            "": '<el-switch v-model="${1:value}" />',
            ":text": '<el-switch v-model="${1:value}" active-text="$2" inactive-text="$3" />',
            ":value": '<el-switch v-model="${1:value}" active-value="$2" inactive-value="$3" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/switch.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| Default |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u7ED1\u5B9A\u503C\uFF0C\u5FC5\u987B\u7B49\u4E8E active-value \u6216 inactive-value\uFF0C\u9ED8\u8BA4\u4E3A Boolean \u7C7B\u578B| boolean / string / number| false |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false |\n| loading| \u662F\u5426\u663E\u793A\u52A0\u8F7D\u4E2D| boolean| false |\n| size| switch \u7684\u5927\u5C0F| enum| '' |\n| width| switch \u7684\u5BBD\u5EA6| number / string| '' |\n| inline-prompt| \u65E0\u8BBA\u56FE\u6807\u6216\u6587\u672C\u662F\u5426\u663E\u793A\u5728\u70B9\u5185\uFF0C\u53EA\u4F1A\u5448\u73B0\u6587\u672C\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26| boolean| false |\n| active-icon| switch \u72B6\u6001\u4E3A on \u65F6\u6240\u663E\u793A\u56FE\u6807\uFF0C\u8BBE\u7F6E\u6B64\u9879\u4F1A\u5FFD\u7565 active-text| string / Component| \u2014 |\n| inactive-icon| switch \u72B6\u6001\u4E3A off \u65F6\u6240\u663E\u793A\u56FE\u6807\uFF0C\u8BBE\u7F6E\u6B64\u9879\u4F1A\u5FFD\u7565 inactive-text| string / Component| \u2014 |\n| active-action-icon 2.3.9| on\u72B6\u6001\u4E0B\u663E\u793A\u7684\u56FE\u6807\u7EC4\u4EF6| string / Component| \u2014 |\n| inactive-action-icon 2.3.9| off\u72B6\u6001\u4E0B\u663E\u793A\u7684\u56FE\u6807\u7EC4\u4EF6| string / Component| \u2014 |\n| active-text| switch \u6253\u5F00\u65F6\u7684\u6587\u5B57\u63CF\u8FF0| string| '' |\n| inactive-text| switch \u7684\u72B6\u6001\u4E3A off \u65F6\u7684\u6587\u5B57\u63CF\u8FF0| string| '' |\n| active-value| switch \u72B6\u6001\u4E3A on \u65F6\u7684\u503C| boolean / string / number| true |\n| inactive-value| switch\u7684\u72B6\u6001\u4E3A off \u65F6\u7684\u503C| boolean / string / number| false |\n| active-color deprecated| \u5F53\u5728 on \u72B6\u6001\u65F6\u7684\u80CC\u666F\u989C\u8272(\u5DF2\u5E9F\u5F03\uFF0C\u8BF7\u4F7F\u7528 CSS var --el-switch-on-color )| string| '' |\n| inactive-color deprecated| off \u72B6\u6001\u65F6\u7684\u80CC\u666F\u989C\u8272(\u5DF2\u5E9F\u5F03\uFF0C\u4F7F\u7528 CSS var --el-switch-off-color )| string| '' |\n| border-color deprecated| \u5F00\u5173\u7684\u8FB9\u6846\u989C\u8272 ( \u5DF2\u5E9F\u5F03\uFF0C\u4F7F\u7528 CSS var --el-switch-border-color )| string| '' |\n| name| switch \u5BF9\u5E94\u7684 name \u5C5E\u6027| string| '' |\n| validate-event| \u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1| boolean| true |\n| before-change| switch \u72B6\u6001\u6539\u53D8\u524D\u7684\u94A9\u5B50\uFF0C \u8FD4\u56DE false \u6216\u8005\u8FD4\u56DE Promise \u4E14\u88AB reject \u5219\u505C\u6B62\u5207\u6362| boolean / Function| \u2014 |\n| id| input \u7684 id| string| \u2014 |\n| tabindex| input \u7684 tabindex| string / number| \u2014 |\n| label 2.4.1 a11y| \u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027| string| \u2014 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| Type |\n| :--- | :--- | :--- |\n| change| switch \u72B6\u6001\u53D1\u751F\u53D8\u5316\u65F6\u7684\u56DE\u8C03\u51FD\u6570| Function |\n\n#### Switch Slots\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| active-action 2.4.4| \u81EA\u5B9A\u4E49 active \u884C\u4E3A |\n| inactive-action 2.4.4| \u81EA\u5B9A\u4E49 inactive \u884C\u4E3A |\n\n#### Exposes\n\n| \u65B9\u6CD5| \u8BE6\u60C5| Type |\n| :--- | :--- | :--- |\n| focus| \u624B\u52A8 focus \u5230 switch \u7EC4\u4EF6| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7ED1\u5B9A\u503C\uFF0C\u5FC5\u987B\u7B49\u4E8E active-value \u6216 inactive-value\uFF0C\u9ED8\u8BA4\u4E3A Boolean \u7C7B\u578B"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u52A0\u8F7D\u4E2D"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "switch \u7684\u5927\u5C0F"
          },
          "width": {
            "type": "attr",
            "values": ["number"],
            "description": "switch \u7684\u5BBD\u5EA6"
          },
          "inline-prompt": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u65E0\u8BBA\u56FE\u6807\u6216\u6587\u672C\u662F\u5426\u663E\u793A\u5728\u70B9\u5185\uFF0C\u53EA\u4F1A\u5448\u73B0\u6587\u672C\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26"
          },
          "active-icon": {
            "type": "attr",
            "values": [],
            "description": "switch \u72B6\u6001\u4E3A on \u65F6\u6240\u663E\u793A\u56FE\u6807\uFF0C\u8BBE\u7F6E\u6B64\u9879\u4F1A\u5FFD\u7565 active-text"
          },
          "inactive-icon": {
            "type": "attr",
            "values": [],
            "description": "switch \u72B6\u6001\u4E3A off \u65F6\u6240\u663E\u793A\u56FE\u6807\uFF0C\u8BBE\u7F6E\u6B64\u9879\u4F1A\u5FFD\u7565 inactive-text"
          },
          "active-action-icon": {
            "type": "attr",
            "values": [],
            "description": "on\u72B6\u6001\u4E0B\u663E\u793A\u7684\u56FE\u6807\u7EC4\u4EF6"
          },
          "inactive-action-icon": {
            "type": "attr",
            "values": [],
            "description": "off\u72B6\u6001\u4E0B\u663E\u793A\u7684\u56FE\u6807\u7EC4\u4EF6"
          },
          "active-text": {
            "type": "attr",
            "values": [],
            "description": "switch \u6253\u5F00\u65F6\u7684\u6587\u5B57\u63CF\u8FF0"
          },
          "inactive-text": {
            "type": "attr",
            "values": [],
            "description": "switch \u7684\u72B6\u6001\u4E3A off \u65F6\u7684\u6587\u5B57\u63CF\u8FF0"
          },
          "active-value": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "switch \u72B6\u6001\u4E3A on \u65F6\u7684\u503C"
          },
          "inactive-value": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "switch\u7684\u72B6\u6001\u4E3A off \u65F6\u7684\u503C"
          },
          "active-colordeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u5728 on \u72B6\u6001\u65F6\u7684\u80CC\u666F\u989C\u8272(\u5DF2\u5E9F\u5F03\uFF0C\u8BF7\u4F7F\u7528 CSS var --el-switch-on-color )"
          },
          "inactive-colordeprecated": {
            "type": "attr",
            "values": [],
            "description": "off \u72B6\u6001\u65F6\u7684\u80CC\u666F\u989C\u8272(\u5DF2\u5E9F\u5F03\uFF0C\u4F7F\u7528 CSS var --el-switch-off-color )"
          },
          "border-colordeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u5F00\u5173\u7684\u8FB9\u6846\u989C\u8272 ( \u5DF2\u5E9F\u5F03\uFF0C\u4F7F\u7528 CSS var --el-switch-border-color )"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "switch \u5BF9\u5E94\u7684 name \u5C5E\u6027"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1"
          },
          "before-change": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "switch \u72B6\u6001\u6539\u53D8\u524D\u7684\u94A9\u5B50\uFF0C \u8FD4\u56DE false \u6216\u8005\u8FD4\u56DE Promise \u4E14\u88AB reject \u5219\u505C\u6B62\u5207\u6362"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "input \u7684 id"
          },
          "tabindex": {
            "type": "attr",
            "values": [],
            "description": "input \u7684 tabindex"
          },
          "labelaydeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "switch \u72B6\u6001\u53D1\u751F\u53D8\u5316\u65F6\u7684\u56DE\u8C03\u51FD\u6570"
          }
        },
        "el-time-picker": {
          "_html": {
            "": '<el-time-picker v-model="${1:value}" placeholder="Arbitrary time" />',
            ":range": '<el-time-picker v-model="${1:value}" is-range range-separator="To" start-placeholder="Start time" end-placeholder="End time" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/time-picker.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u7ED1\u5B9A\u503C\uFF0C\u5982\u679C\u5B83\u662F\u6570\u7EC4\uFF0C\u957F\u5EA6\u5E94\u8BE5\u662F 2| number / string / object| '' |\n| readonly| \u5B8C\u5168\u53EA\u8BFB| boolean| false |\n| disabled| \u7981\u7528| boolean| false |\n| editable| \u6587\u672C\u6846\u53EF\u8F93\u5165| boolean| true |\n| clearable| \u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE| boolean| true |\n| size| \u8F93\u5165\u6846\u5C3A\u5BF8| enum| \u2014 |\n| placeholder| \u975E\u8303\u56F4\u9009\u62E9\u65F6\u7684\u5360\u4F4D\u5185\u5BB9| string| '' |\n| start-placeholder| \u8303\u56F4\u9009\u62E9\u65F6\u5F00\u59CB\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9| string| \u2014 |\n| end-placeholder| \u8303\u56F4\u9009\u62E9\u65F6\u7ED3\u675F\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9| string| \u2014 |\n| is-range| \u662F\u5426\u4E3A\u65F6\u95F4\u8303\u56F4\u9009\u62E9| boolean| false |\n| arrow-control| \u662F\u5426\u4F7F\u7528\u7BAD\u5934\u8FDB\u884C\u65F6\u95F4\u9009\u62E9| boolean| false |\n| popper-class| TimePicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D| string| '' |\n| range-separator| \u9009\u62E9\u8303\u56F4\u65F6\u7684\u5206\u9694\u7B26| string| '-' |\n| format| \u663E\u793A\u5728\u8F93\u5165\u6846\u4E2D\u7684\u683C\u5F0F| string see date formats| \u2014 |\n| default-value| \u53EF\u9009\uFF0C\u9009\u62E9\u5668\u6253\u5F00\u65F6\u9ED8\u8BA4\u663E\u793A\u7684\u65F6\u95F4| Date / object| \u2014 |\n| value-format| \u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\u3002 \u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A Date \u5BF9\u8C61| string \u53C2\u8003 \u65E5\u671F\u683C\u5F0F| \u2014 |\n| id| \u7B49\u4EF7\u4E8E\u539F\u751F input id \u5C5E\u6027| string / object| \u2014 |\n| name| \u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027| string| '' |\n| label a11y| \u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027| string| \u2014 |\n| prefix-icon| \u81EA\u5B9A\u4E49\u524D\u7F00\u56FE\u6807| string / Component| Clock |\n| clear-icon| \u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807| string / Component| CircleClose |\n| disabled-hours| \u7981\u6B62\u9009\u62E9\u90E8\u5206\u5C0F\u65F6\u9009\u9879| Function| \u2014 |\n| disabled-minutes| \u7981\u6B62\u9009\u62E9\u90E8\u5206\u5206\u949F\u9009\u9879| Function| \u2014 |\n| disabled-seconds| \u7981\u6B62\u9009\u62E9\u90E8\u5206\u79D2\u9009\u9879| Function| \u2014 |\n| teleported| \u662F\u5426\u5C06 popover \u7684\u4E0B\u62C9\u5217\u8868\u955C\u50CF\u81F3 body \u5143\u7D20| boolean| true |\n| tabindex| \u8F93\u5165\u6846\u7684 tabindex| string / number| 0 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u7528\u6237\u786E\u8BA4\u9009\u5B9A\u7684\u503C\u65F6\u89E6\u53D1| Function |\n| blur| \u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| focus| \u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| visible-change| \u5F53 TimePicker \u7684\u4E0B\u62C9\u5217\u8868\u51FA\u73B0/\u6D88\u5931\u65F6\u89E6\u53D1| Function |\n\n#### \u66B4\u9732\n\n| \u540D\u79F0| \u8BF4\u660E| Type |\n| :--- | :--- | :--- |\n| focus| \u4F7F input \u83B7\u53D6\u7126\u70B9| Function |\n| blur| \u4F7F input \u5931\u53BB\u7126\u70B9| Function |\n| handleOpen 2.2.16| \u6253\u5F00\u65F6\u95F4\u9009\u62E9\u5668\u5F39\u7A97| Function |\n| handleClose 2.2.16| \u5173\u95ED\u65F6\u95F4\u9009\u62E9\u5668\u5F39\u7A97| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": ["number"],
            "description": "\u7ED1\u5B9A\u503C\uFF0C\u5982\u679C\u5B83\u662F\u6570\u7EC4\uFF0C\u957F\u5EA6\u5E94\u8BE5\u662F 2"
          },
          "readonly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5B8C\u5168\u53EA\u8BFB"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u7528"
          },
          "editable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6587\u672C\u6846\u53EF\u8F93\u5165"
          },
          "clearable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "\u8F93\u5165\u6846\u5C3A\u5BF8"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u975E\u8303\u56F4\u9009\u62E9\u65F6\u7684\u5360\u4F4D\u5185\u5BB9"
          },
          "start-placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u8303\u56F4\u9009\u62E9\u65F6\u5F00\u59CB\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9"
          },
          "end-placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u8303\u56F4\u9009\u62E9\u65F6\u7ED3\u675F\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9"
          },
          "is-range": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u65F6\u95F4\u8303\u56F4\u9009\u62E9"
          },
          "arrow-control": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4F7F\u7528\u7BAD\u5934\u8FDB\u884C\u65F6\u95F4\u9009\u62E9"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "TimePicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D"
          },
          "range-separator": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u62E9\u8303\u56F4\u65F6\u7684\u5206\u9694\u7B26"
          },
          "format": {
            "type": "attr",
            "values": [],
            "description": "\u663E\u793A\u5728\u8F93\u5165\u6846\u4E2D\u7684\u683C\u5F0F"
          },
          "default-value": {
            "type": "attr",
            "values": ["Date"],
            "description": "\u53EF\u9009\uFF0C\u9009\u62E9\u5668\u6253\u5F00\u65F6\u9ED8\u8BA4\u663E\u793A\u7684\u65F6\u95F4"
          },
          "value-format": {
            "type": "attr",
            "values": [],
            "description": "\u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\u3002 \u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A Date \u5BF9\u8C61"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input id \u5C5E\u6027"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input name \u5C5E\u6027"
          },
          "labelaydeprecated": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u7B49\u4EF7\u4E8E\u539F\u751F input aria-label \u5C5E\u6027"
          },
          "prefix-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u524D\u7F00\u56FE\u6807"
          },
          "clear-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807"
          },
          "disabled-hours": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u7981\u6B62\u9009\u62E9\u90E8\u5206\u5C0F\u65F6\u9009\u9879"
          },
          "disabled-minutes": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u7981\u6B62\u9009\u62E9\u90E8\u5206\u5206\u949F\u9009\u9879"
          },
          "disabled-seconds": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u7981\u6B62\u9009\u62E9\u90E8\u5206\u79D2\u9009\u9879"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06 popover \u7684\u4E0B\u62C9\u5217\u8868\u955C\u50CF\u81F3 body \u5143\u7D20"
          },
          "tabindex": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u7684 tabindex"
          },
          "empty-values": {
            "type": "attr",
            "values": ["array"],
            "description": "\u7EC4\u4EF6\u7684\u7A7A\u503C\u914D\u7F6E \u53C2\u8003config-provider"
          },
          "value-on-clear": {
            "type": "attr",
            "values": [],
            "description": "\u6E05\u7A7A\u9009\u9879\u7684\u503C \u53C2\u8003 config-provider"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u7528\u6237\u786E\u8BA4\u9009\u5B9A\u7684\u503C\u65F6\u89E6\u53D1"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "visible-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53 TimePicker \u7684\u4E0B\u62C9\u5217\u8868\u51FA\u73B0/\u6D88\u5931\u65F6\u89E6\u53D1"
          }
        },
        "el-time-select": {
          "_html": {
            "": '<el-time-select v-model="${1:value}" start="08:30" step="00:15" end="18:30" placeholder="Select time" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/time-select.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| string| \u2014 |\n| disabled| \u7981\u7528\u72B6\u6001| boolean| false |\n| editable| \u6587\u672C\u6846\u53EF\u8F93\u5165| boolean| true |\n| clearable| \u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE| boolean| true |\n| size| \u8F93\u5165\u6846\u5C3A\u5BF8| enum| default |\n| placeholder| \u975E\u8303\u56F4\u9009\u62E9\u65F6\u7684\u5360\u4F4D\u5185\u5BB9| string| \u2014 |\n| name| \u539F\u751F\u5C5E\u6027| string| \u2014 |\n| effect| Tooltip \u4E3B\u9898\uFF0C\u5185\u7F6E\u4E86 dark / light \u4E24\u79CD\u4E3B\u9898| string / enum| light |\n| prefix-icon| \u81EA\u5B9A\u4E49\u524D\u7F00\u56FE\u6807| string / Component| Clock |\n| clear-icon| \u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807| string / Component| CircleClose |\n| start| \u5F00\u59CB\u65F6\u95F4| string| 09:00 |\n| end| \u7ED3\u675F\u65F6\u95F4| string| 18:00 |\n| step| \u95F4\u9694\u65F6\u95F4| string| 00:30 |\n| min-time| \u6700\u65E9\u65F6\u95F4\u70B9\uFF0C\u65E9\u4E8E\u8BE5\u65F6\u95F4\u7684\u65F6\u95F4\u6BB5\u5C06\u88AB\u7981\u7528| string| \u2014 |\n| max-time| \u6700\u665A\u65F6\u95F4\u70B9\uFF0C\u665A\u4E8E\u8BE5\u65F6\u95F4\u7684\u65F6\u95F4\u6BB5\u5C06\u88AB\u7981\u7528| string| \u2014 |\n| format| \u8BBE\u7F6E\u65F6\u95F4\u683C\u5F0F| string see formats| HH:mm |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u7528\u6237\u786E\u8BA4\u9009\u5B9A\u7684\u503C\u65F6\u89E6\u53D1| Function |\n| blur| \u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n| focus| \u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1| Function |\n\n#### Exposes\n\n| \u65B9\u6CD5\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| focus| \u4F7F input \u83B7\u53D6\u7126\u70B9| Function |\n| blur| \u4F7F input \u5931\u53BB\u7126\u70B9| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u7528\u72B6\u6001"
          },
          "editable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6587\u672C\u6846\u53EF\u8F93\u5165"
          },
          "clearable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "\u8F93\u5165\u6846\u5C3A\u5BF8"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u975E\u8303\u56F4\u9009\u62E9\u65F6\u7684\u5360\u4F4D\u5185\u5BB9"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F\u5C5E\u6027"
          },
          "effect": {
            "type": "attr",
            "values": [],
            "description": "Tooltip \u4E3B\u9898\uFF0C\u5185\u7F6E\u4E86 dark / light \u4E24\u79CD\u4E3B\u9898"
          },
          "prefix-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u524D\u7F00\u56FE\u6807"
          },
          "clear-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807"
          },
          "start": {
            "type": "attr",
            "values": [],
            "description": "\u5F00\u59CB\u65F6\u95F4"
          },
          "end": {
            "type": "attr",
            "values": [],
            "description": "\u7ED3\u675F\u65F6\u95F4"
          },
          "step": {
            "type": "attr",
            "values": [],
            "description": "\u95F4\u9694\u65F6\u95F4"
          },
          "min-time": {
            "type": "attr",
            "values": [],
            "description": "\u6700\u65E9\u65F6\u95F4\u70B9\uFF0C\u65E9\u4E8E\u8BE5\u65F6\u95F4\u7684\u65F6\u95F4\u6BB5\u5C06\u88AB\u7981\u7528"
          },
          "max-time": {
            "type": "attr",
            "values": [],
            "description": "\u6700\u665A\u65F6\u95F4\u70B9\uFF0C\u665A\u4E8E\u8BE5\u65F6\u95F4\u7684\u65F6\u95F4\u6BB5\u5C06\u88AB\u7981\u7528"
          },
          "format": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u65F6\u95F4\u683C\u5F0F"
          },
          "empty-values": {
            "type": "attr",
            "values": ["array"],
            "description": "\u7EC4\u4EF6\u7684\u7A7A\u503C\u914D\u7F6E \u53C2\u8003config-provider"
          },
          "value-on-clear": {
            "type": "attr",
            "values": [],
            "description": "\u6E05\u7A7A\u9009\u9879\u7684\u503C \u53C2\u8003 config-provider"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u7528\u6237\u786E\u8BA4\u9009\u5B9A\u7684\u503C\u65F6\u89E6\u53D1"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1"
          }
        },
        "el-transfer": {
          "_html": {
            "": '<el-transfer v-model="${1:value}" :data="${2:data}" />',
            ":filter": '<el-transfer v-model="${1:value}" filterable :filter-method="${2:filterMethod}" filter-placeholder="Please Input" :data="${3:data}" />" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/transfer.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| Default |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| object| [] |\n| data| Transfer \u7684\u6570\u636E\u6E90| object| [] |\n| filterable| \u662F\u5426\u53EF\u641C\u7D22| boolean| false |\n| filter-placeholder| \u641C\u7D22\u6846\u5360\u4F4D\u7B26| string| \u2014 |\n| filter-method| \u81EA\u5B9A\u4E49\u641C\u7D22\u65B9\u6CD5| Function| \u2014 |\n| target-order| \u53F3\u4FA7\u5217\u8868\u5143\u7D20\u7684\u6392\u5E8F\u7B56\u7565\uFF1A \u82E5\u4E3A original\uFF0C\u5219\u4FDD\u6301\u4E0E\u6570\u636E\u6E90\u76F8\u540C\u7684\u987A\u5E8F\uFF1B \u82E5\u4E3A push\uFF0C\u5219\u65B0\u52A0\u5165\u7684\u5143\u7D20\u6392\u5728\u6700\u540E\uFF1B \u82E5\u4E3A unshift\uFF0C\u5219\u65B0\u52A0\u5165\u7684\u5143\u7D20\u6392\u5728\u6700\u524D| enum| original |\n| titles| \u81EA\u5B9A\u4E49\u5217\u8868\u6807\u9898| object| [] |\n| button-texts| \u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u6848| object| [] |\n| render-content| \u81EA\u5B9A\u4E49\u6570\u636E\u9879\u6E32\u67D3\u51FD\u6570| object| \u2014 |\n| format| \u5217\u8868\u9876\u90E8\u52FE\u9009\u72B6\u6001\u6587\u6848| object| {} |\n| props| \u6570\u636E\u6E90\u7684\u5B57\u6BB5\u522B\u540D| object| \u2014 |\n| left-default-checked| \u521D\u59CB\u72B6\u6001\u4E0B\u5DE6\u4FA7\u5217\u8868\u7684\u5DF2\u52FE\u9009\u9879\u7684 key \u6570\u7EC4| object| [] |\n| right-default-checked| \u521D\u59CB\u72B6\u6001\u4E0B\u53F3\u4FA7\u5217\u8868\u7684\u5DF2\u52FE\u9009\u9879\u7684 key \u6570\u7EC4| object| [] |\n| validate-event| \u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1| boolean| true |\n#### \u4E8B\u4EF6\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| Type |\n| :--- | :--- | :--- |\n| change| \u53F3\u4FA7\u5217\u8868\u5143\u7D20\u53D8\u5316\u65F6\u89E6\u53D1| Function |\n| left-check-change| \u5DE6\u4FA7\u5217\u8868\u5143\u7D20\u88AB\u7528\u6237\u9009\u4E2D / \u53D6\u6D88\u9009\u4E2D\u65F6\u89E6\u53D1| Function |\n| right-check-change| \u53F3\u4FA7\u5217\u8868\u5143\u7D20\u88AB\u7528\u6237\u9009\u4E2D / \u53D6\u6D88\u9009\u4E2D\u65F6\u89E6\u53D1| Function |\n\n#### Slots\n\n| Name| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u6570\u636E\u9879\u7684\u5185\u5BB9\uFF0C The scope parameter is |\n| left-footer| \u5DE6\u4FA7\u5217\u8868\u5E95\u90E8\u7684\u5185\u5BB9 |\n| right-footer| \u53F3\u4FA7\u5217\u8868\u5E95\u90E8\u7684\u5185\u5BB9 |\n\n#### Exposes\n\n| Method| \u8BF4\u660E| Type |\n| :--- | :--- | :--- |\n| clearQuery| \u6E05\u7A7A\u67D0\u4E2A\u9762\u677F\u7684\u641C\u7D22\u5173\u952E\u8BCD| Function |\n\n#### Type Declarations\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "data": {
            "type": "attr",
            "values": ["object"],
            "description": "Transfer \u7684\u6570\u636E\u6E90"
          },
          "filterable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u641C\u7D22"
          },
          "filter-placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u641C\u7D22\u6846\u5360\u4F4D\u7B26"
          },
          "filter-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u81EA\u5B9A\u4E49\u641C\u7D22\u65B9\u6CD5"
          },
          "target-order": {
            "type": "attr",
            "values": ["original", "push", "unshift"],
            "description": "\u53F3\u4FA7\u5217\u8868\u5143\u7D20\u7684\u6392\u5E8F\u7B56\u7565\uFF1A \u82E5\u4E3A original\uFF0C\u5219\u4FDD\u6301\u4E0E\u6570\u636E\u6E90\u76F8\u540C\u7684\u987A\u5E8F\uFF1B \u82E5\u4E3A push\uFF0C\u5219\u65B0\u52A0\u5165\u7684\u5143\u7D20\u6392\u5728\u6700\u540E\uFF1B \u82E5\u4E3A unshift\uFF0C\u5219\u65B0\u52A0\u5165\u7684\u5143\u7D20\u6392\u5728\u6700\u524D"
          },
          "titles": {
            "type": "attr",
            "values": ["object"],
            "description": "\u81EA\u5B9A\u4E49\u5217\u8868\u6807\u9898"
          },
          "button-texts": {
            "type": "attr",
            "values": ["object"],
            "description": "\u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u6848"
          },
          "render-content": {
            "type": "attr",
            "values": ["object"],
            "description": "\u81EA\u5B9A\u4E49\u6570\u636E\u9879\u6E32\u67D3\u51FD\u6570"
          },
          "format": {
            "type": "attr",
            "values": ["object"],
            "description": "\u5217\u8868\u9876\u90E8\u52FE\u9009\u72B6\u6001\u6587\u6848"
          },
          "props": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6570\u636E\u6E90\u7684\u5B57\u6BB5\u522B\u540D"
          },
          "left-default-checked": {
            "type": "attr",
            "values": ["object"],
            "description": "\u521D\u59CB\u72B6\u6001\u4E0B\u5DE6\u4FA7\u5217\u8868\u7684\u5DF2\u52FE\u9009\u9879\u7684 key \u6570\u7EC4"
          },
          "right-default-checked": {
            "type": "attr",
            "values": ["object"],
            "description": "\u521D\u59CB\u72B6\u6001\u4E0B\u53F3\u4FA7\u5217\u8868\u7684\u5DF2\u52FE\u9009\u9879\u7684 key \u6570\u7EC4"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u53F3\u4FA7\u5217\u8868\u5143\u7D20\u53D8\u5316\u65F6\u89E6\u53D1"
          },
          "left-check-change": {
            "type": "event",
            "values": [],
            "description": "\u5DE6\u4FA7\u5217\u8868\u5143\u7D20\u88AB\u7528\u6237\u9009\u4E2D / \u53D6\u6D88\u9009\u4E2D\u65F6\u89E6\u53D1"
          },
          "right-check-change": {
            "type": "event",
            "values": [],
            "description": "\u53F3\u4FA7\u5217\u8868\u5143\u7D20\u88AB\u7528\u6237\u9009\u4E2D / \u53D6\u6D88\u9009\u4E2D\u65F6\u89E6\u53D1"
          }
        },
        "el-upload": {
          "_html": {
            "": '<el-upload v-model:file-list="fileList" action="" multiple :on-preview="handlePreview" :on-remove="handleRemove" :before-remove="beforeRemove" :limit="3" :on-exceed="handleExceed" >\n<el-button type="primary">$1</el-button>$2\n</el-upload>',
            ":tip[slot]": "<template #tip>\n$1\n</template>",
            ":trigger[slot]": "<template #trigger>\n$1\n</template>",
            ":avatar": '<el-upload action="" :show-file-list="false" :on-success="handleAvatarSuccess" :before-upload="beforeAvatarUpload" >\n<img v-if="imageUrl" :src="imageUrl" />\n<el-icon v-else><Plus /></el-icon>\n</el-upload>',
            ":list": '<el-upload v-model:file-list="fileList" action="" list-type="picture-card" :on-preview="handlePictureCardPreview" :on-remove="handleRemove" >\n<el-icon><Plus /></el-icon>\n</el-upload>',
            ":drag": '<el-upload drag action="" multiple >\n<el-icon class="el-icon--upload"><upload-filled /></el-icon>\n<div class="el-upload__text"> Drop file here or <em>click to upload</em> </div>\n</el-upload>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/upload.html)\n#### \u5C5E\u6027\n\n| \u540D\u79F0| \u63CF\u8FF0| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| action required| \u8BF7\u6C42 URL| string| # |\n| headers| \u8BBE\u7F6E\u4E0A\u4F20\u7684\u8BF7\u6C42\u5934\u90E8| object| \u2014 |\n| method| \u8BBE\u7F6E\u4E0A\u4F20\u8BF7\u6C42\u65B9\u6CD5| string| post |\n| multiple| \u662F\u5426\u652F\u6301\u591A\u9009\u6587\u4EF6| boolean| false |\n| data| \u4E0A\u4F20\u65F6\u9644\u5E26\u7684\u989D\u5916\u53C2\u6570 \u4ECE v2.3.13 \u652F\u6301 Awaitable \u6570\u636E\uFF0C\u548C Function| object / Function| {} |\n| name| \u4E0A\u4F20\u7684\u6587\u4EF6\u5B57\u6BB5\u540D| string| file |\n| with-credentials| \u652F\u6301\u53D1\u9001 cookie \u51ED\u8BC1\u4FE1\u606F| boolean| false |\n| show-file-list| \u662F\u5426\u663E\u793A\u5DF2\u4E0A\u4F20\u6587\u4EF6\u5217\u8868| boolean| true |\n| drag| \u662F\u5426\u542F\u7528\u62D6\u62FD\u4E0A\u4F20| boolean| false |\n| accept| \u63A5\u53D7\u4E0A\u4F20\u7684\u6587\u4EF6\u7C7B\u578B\uFF08thumbnail-mode \u6A21\u5F0F\u4E0B\u6B64\u53C2\u6570\u65E0\u6548\uFF09| string| '' |\n| crossorigin| \u539F\u751F\u5C5E\u6027 crossorigin| enum| \u2014 |\n| on-preview| \u70B9\u51FB\u6587\u4EF6\u5217\u8868\u4E2D\u5DF2\u4E0A\u4F20\u7684\u6587\u4EF6\u65F6\u7684\u94A9\u5B50| Function| \u2014 |\n| on-remove| \u6587\u4EF6\u5217\u8868\u79FB\u9664\u6587\u4EF6\u65F6\u7684\u94A9\u5B50| Function| \u2014 |\n| on-success| \u6587\u4EF6\u4E0A\u4F20\u6210\u529F\u65F6\u7684\u94A9\u5B50| Function| \u2014 |\n| on-error| \u6587\u4EF6\u4E0A\u4F20\u5931\u8D25\u65F6\u7684\u94A9\u5B50| Function| \u2014 |\n| on-progress| \u6587\u4EF6\u4E0A\u4F20\u65F6\u7684\u94A9\u5B50| Function| \u2014 |\n| on-change| \u6587\u4EF6\u72B6\u6001\u6539\u53D8\u65F6\u7684\u94A9\u5B50\uFF0C\u6DFB\u52A0\u6587\u4EF6\u3001\u4E0A\u4F20\u6210\u529F\u548C\u4E0A\u4F20\u5931\u8D25\u65F6\u90FD\u4F1A\u88AB\u8C03\u7528| Function| \u2014 |\n| on-exceed| \u5F53\u8D85\u51FA\u9650\u5236\u65F6\uFF0C\u6267\u884C\u7684\u94A9\u5B50\u51FD\u6570| Function| \u2014 |\n| before-upload| \u4E0A\u4F20\u6587\u4EF6\u4E4B\u524D\u7684\u94A9\u5B50\uFF0C\u53C2\u6570\u4E3A\u4E0A\u4F20\u7684\u6587\u4EF6\uFF0C \u82E5\u8FD4\u56DEfalse\u6216\u8005\u8FD4\u56DE Promise \u4E14\u88AB reject\uFF0C\u5219\u505C\u6B62\u4E0A\u4F20\u3002| Function| \u2014 |\n| before-remove| \u5220\u9664\u6587\u4EF6\u4E4B\u524D\u7684\u94A9\u5B50\uFF0C\u53C2\u6570\u4E3A\u4E0A\u4F20\u7684\u6587\u4EF6\u548C\u6587\u4EF6\u5217\u8868\uFF0C \u82E5\u8FD4\u56DE false \u6216\u8005\u8FD4\u56DE Promise \u4E14\u88AB reject\uFF0C\u5219\u505C\u6B62\u5220\u9664\u3002| Function| \u2014 |\n| file-list / v-model:file-list| \u9ED8\u8BA4\u4E0A\u4F20\u6587\u4EF6| object| [] |\n| list-type| \u6587\u4EF6\u5217\u8868\u7684\u7C7B\u578B| enum| text |\n| auto-upload| \u662F\u5426\u81EA\u52A8\u4E0A\u4F20\u6587\u4EF6| boolean| true |\n| http-request| \u8986\u76D6\u9ED8\u8BA4\u7684 Xhr \u884C\u4E3A\uFF0C\u5141\u8BB8\u81EA\u884C\u5B9E\u73B0\u4E0A\u4F20\u6587\u4EF6\u7684\u8BF7\u6C42| Function| \u8BF7\u53C2\u8003ajaxUpload |\n| disabled| \u662F\u5426\u7981\u7528\u4E0A\u4F20| boolean| false |\n| limit| \u5141\u8BB8\u4E0A\u4F20\u6587\u4EF6\u7684\u6700\u5927\u6570\u91CF| number| \u2014 |\n\n#### \u63D2\u69FD\n\n| \u540D\u79F0| \u63CF\u8FF0| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| - |\n| trigger| \u89E6\u53D1\u6587\u4EF6\u9009\u62E9\u6846\u7684\u5185\u5BB9| - |\n| tip| \u63D0\u793A\u8BF4\u660E\u6587\u5B57| - |\n| file| \u7F29\u7565\u56FE\u6A21\u677F\u7684\u5185\u5BB9| object |\n\n| \u540D\u79F0| \u63CF\u8FF0| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| abort| \u53D6\u6D88\u4E0A\u4F20\u8BF7\u6C42| Function |\n| submit| \u624B\u52A8\u4E0A\u4F20\u6587\u4EF6\u5217\u8868| Function |\n| clearFiles| \u6E05\u7A7A\u5DF2\u4E0A\u4F20\u7684\u6587\u4EF6\u5217\u8868\uFF08\u8BE5\u65B9\u6CD5\u4E0D\u652F\u6301\u5728 before-upload \u4E2D\u8C03\u7528\uFF09| Function |\n| handleStart| \u624B\u52A8\u9009\u62E9\u6587\u4EF6| Function |\n| handleRemove| \u624B\u52A8\u79FB\u9664\u6587\u4EF6\u3002 file \u548CrawFile \u5DF2\u88AB\u5408\u5E76\u3002 rawFile \u5C06\u5728 v2.2.0 \u4E2D\u79FB\u9664| Function |\n\n#### \u7C7B\u578B\u58F0\u660E\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "actionrequired": {
            "type": "attr",
            "values": [],
            "description": "\u8BF7\u6C42 URL"
          },
          "headers": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8BBE\u7F6E\u4E0A\u4F20\u7684\u8BF7\u6C42\u5934\u90E8"
          },
          "method": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u4E0A\u4F20\u8BF7\u6C42\u65B9\u6CD5"
          },
          "multiple": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u652F\u6301\u591A\u9009\u6587\u4EF6"
          },
          "data": {
            "type": "attr",
            "values": ["object"],
            "description": "\u4E0A\u4F20\u65F6\u9644\u5E26\u7684\u989D\u5916\u53C2\u6570 \u4ECE v2.3.13 \u652F\u6301 Awaitable \u6570\u636E\uFF0C\u548C Function"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u4E0A\u4F20\u7684\u6587\u4EF6\u5B57\u6BB5\u540D"
          },
          "with-credentials": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u652F\u6301\u53D1\u9001 cookie \u51ED\u8BC1\u4FE1\u606F"
          },
          "show-file-list": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u5DF2\u4E0A\u4F20\u6587\u4EF6\u5217\u8868"
          },
          "drag": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u542F\u7528\u62D6\u62FD\u4E0A\u4F20"
          },
          "accept": {
            "type": "attr",
            "values": [],
            "description": "\u63A5\u53D7\u4E0A\u4F20\u7684\u6587\u4EF6\u7C7B\u578B\uFF08thumbnail-mode \u6A21\u5F0F\u4E0B\u6B64\u53C2\u6570\u65E0\u6548\uFF09"
          },
          "crossorigin": {
            "type": "attr",
            "values": ["anonymous", "use-credentials"],
            "description": "\u539F\u751F\u5C5E\u6027 crossorigin"
          },
          "on-preview": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u70B9\u51FB\u6587\u4EF6\u5217\u8868\u4E2D\u5DF2\u4E0A\u4F20\u7684\u6587\u4EF6\u65F6\u7684\u94A9\u5B50"
          },
          "on-remove": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u6587\u4EF6\u5217\u8868\u79FB\u9664\u6587\u4EF6\u65F6\u7684\u94A9\u5B50"
          },
          "on-success": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u6587\u4EF6\u4E0A\u4F20\u6210\u529F\u65F6\u7684\u94A9\u5B50"
          },
          "on-error": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25\u65F6\u7684\u94A9\u5B50"
          },
          "on-progress": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u6587\u4EF6\u4E0A\u4F20\u65F6\u7684\u94A9\u5B50"
          },
          "on-change": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u6587\u4EF6\u72B6\u6001\u6539\u53D8\u65F6\u7684\u94A9\u5B50\uFF0C\u6DFB\u52A0\u6587\u4EF6\u3001\u4E0A\u4F20\u6210\u529F\u548C\u4E0A\u4F20\u5931\u8D25\u65F6\u90FD\u4F1A\u88AB\u8C03\u7528"
          },
          "on-exceed": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5F53\u8D85\u51FA\u9650\u5236\u65F6\uFF0C\u6267\u884C\u7684\u94A9\u5B50\u51FD\u6570"
          },
          "before-upload": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u4E0A\u4F20\u6587\u4EF6\u4E4B\u524D\u7684\u94A9\u5B50\uFF0C\u53C2\u6570\u4E3A\u4E0A\u4F20\u7684\u6587\u4EF6\uFF0C \u82E5\u8FD4\u56DEfalse\u6216\u8005\u8FD4\u56DE Promise \u4E14\u88AB reject\uFF0C\u5219\u505C\u6B62\u4E0A\u4F20\u3002"
          },
          "before-remove": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5220\u9664\u6587\u4EF6\u4E4B\u524D\u7684\u94A9\u5B50\uFF0C\u53C2\u6570\u4E3A\u4E0A\u4F20\u7684\u6587\u4EF6\u548C\u6587\u4EF6\u5217\u8868\uFF0C \u82E5\u8FD4\u56DE false \u6216\u8005\u8FD4\u56DE Promise \u4E14\u88AB reject\uFF0C\u5219\u505C\u6B62\u5220\u9664\u3002"
          },
          "v-model:file-list": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9ED8\u8BA4\u4E0A\u4F20\u6587\u4EF6"
          },
          "list-type": {
            "type": "attr",
            "values": ["text", "picture", "picture-card"],
            "description": "\u6587\u4EF6\u5217\u8868\u7684\u7C7B\u578B"
          },
          "auto-upload": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u81EA\u52A8\u4E0A\u4F20\u6587\u4EF6"
          },
          "http-request": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8986\u76D6\u9ED8\u8BA4\u7684 Xhr \u884C\u4E3A\uFF0C\u5141\u8BB8\u81EA\u884C\u5B9E\u73B0\u4E0A\u4F20\u6587\u4EF6\u7684\u8BF7\u6C42"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u4E0A\u4F20"
          },
          "limit": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5141\u8BB8\u4E0A\u4F20\u6587\u4EF6\u7684\u6700\u5927\u6570\u91CF"
          }
        },
        "el-avatar": {
          "_html": {
            "": '<el-avatar :src="${1:url}">$2</el-avatar>',
            ":square": '<el-avatar shape="square" :src="${1:url}">$2</el-avatar>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/avatar.html)\n#### \u5C5E\u6027\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| icon| \u8BBE\u7F6E Avatar \u7684\u56FE\u6807\u7C7B\u578B\uFF0C\u5177\u4F53\u53C2\u8003 Icon \u7EC4\u4EF6| string / Component| \u2014 |\n| size| Avatar \u5927\u5C0F| number / enum| default |\n| shape| Avatar \u5F62\u72B6| enum| circle |\n| src| Avatar \u56FE\u7247\u7684\u6E90\u5730\u5740| string| \u2014 |\n| src-set| \u56FE\u7247 Avatar \u7684\u539F\u751F srcset \u5C5E\u6027| string| \u2014 |\n| alt| \u56FE\u7247 Avatar \u7684\u539F\u751F alt \u5C5E\u6027| string| \u2014 |\n| fit| \u5F53\u5C55\u793A\u7C7B\u578B\u4E3A\u56FE\u7247\u7684\u65F6\u5019\uFF0C\u8BBE\u7F6E\u56FE\u7247\u5982\u4F55\u9002\u5E94\u5BB9\u5668| enum| cover |\n#### \u4E8B\u4EF6\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| error| \u56FE\u7247\u52A0\u8F7D\u5931\u8D25\u65F6\u89E6\u53D1| Function |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u5934\u50CF\u5C55\u793A\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "icon": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E Avatar \u7684\u56FE\u6807\u7C7B\u578B\uFF0C\u5177\u4F53\u53C2\u8003 Icon \u7EC4\u4EF6"
          },
          "size": {
            "type": "attr",
            "values": ["number"],
            "description": "Avatar \u5927\u5C0F"
          },
          "shape": {
            "type": "attr",
            "values": ["circle", "square"],
            "description": "Avatar \u5F62\u72B6"
          },
          "src": {
            "type": "attr",
            "values": [],
            "description": "Avatar \u56FE\u7247\u7684\u6E90\u5730\u5740"
          },
          "src-set": {
            "type": "attr",
            "values": [],
            "description": "\u56FE\u7247 Avatar \u7684\u539F\u751F srcset \u5C5E\u6027"
          },
          "alt": {
            "type": "attr",
            "values": [],
            "description": "\u56FE\u7247 Avatar \u7684\u539F\u751F alt \u5C5E\u6027"
          },
          "fit": {
            "type": "attr",
            "values": ["fill", "contain", "cover", "none", "scale-down"],
            "description": "\u5F53\u5C55\u793A\u7C7B\u578B\u4E3A\u56FE\u7247\u7684\u65F6\u5019\uFF0C\u8BBE\u7F6E\u56FE\u7247\u5982\u4F55\u9002\u5E94\u5BB9\u5668"
          },
          "error": {
            "type": "event",
            "values": [],
            "description": "\u56FE\u7247\u52A0\u8F7D\u5931\u8D25\u65F6\u89E6\u53D1"
          }
        },
        "el-badge": {
          "_html": {
            "": '<el-badge :value="$1">$2</el-badge>',
            ":is-dot": "<el-badge is-dot></el-badge>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/badge.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| value| \u663E\u793A\u503C| string / number| '' |\n| max| \u6700\u5927\u503C\uFF0C\u8D85\u8FC7\u6700\u5927\u503C\u4F1A\u663E\u793A {max}+\u3002 \u53EA\u6709\u5F53 value \u662F\u6570\u5B57\u7C7B\u578B\u65F6\u8D77\u4F5C\u7528\u3002| number| 99 |\n| is-dot| \u662F\u5426\u663E\u793A\u5C0F\u5706\u70B9\u3002| boolean| false |\n| hidden| \u662F\u5426\u9690\u85CF Badge\u3002| boolean| false |\n| type| badge type.| enum| danger |\n| show-zero 2.6.0| \u503C\u4E3A\u96F6\u65F6\u662F\u5426\u663E\u793A Badge| boolean| true |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "value": {
            "type": "attr",
            "values": [],
            "description": "\u663E\u793A\u503C"
          },
          "max": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u5927\u503C\uFF0C\u8D85\u8FC7\u6700\u5927\u503C\u4F1A\u663E\u793A {max}+\u3002 \u53EA\u6709\u5F53 value \u662F\u6570\u5B57\u7C7B\u578B\u65F6\u8D77\u4F5C\u7528\u3002"
          },
          "is-dot": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u5C0F\u5706\u70B9\u3002"
          },
          "hidden": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9690\u85CF Badge\u3002"
          },
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info"],
            "description": "badge type."
          },
          "show-zero": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u503C\u4E3A\u96F6\u65F6\u662F\u5426\u663E\u793A Badge"
          },
          "color": {
            "type": "attr",
            "values": [],
            "description": "\u80CC\u666F\u8272"
          },
          "offset": {
            "type": "attr",
            "values": ["["],
            "description": "badge \u7684\u504F\u79FB\u91CF"
          },
          "badge-style": {
            "type": "attr",
            "values": ["object"],
            "description": "\u81EA\u5B9A\u4E49 badge \u6837\u5F0F"
          },
          "badge-class": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49 badge \u7C7B\u540D"
          }
        },
        "el-calendar": {
          "_html": {
            "": '<el-calendar v-model="${1:value}">$2</el-calendar>',
            ":cell[slot]": '<template #date-cell="{ data }">\n$1\n</template>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/calendar.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C| Date| \u2014 |\n| range| \u65F6\u95F4\u8303\u56F4\uFF0C\u5305\u62EC\u5F00\u59CB\u65F6\u95F4\u4E0E\u7ED3\u675F\u65F6\u95F4\u3002 \u5F00\u59CB\u65F6\u95F4\u5FC5\u987B\u662F\u5468\u8D77\u59CB\u65E5\uFF0C\u7ED3\u675F\u65F6\u95F4\u5FC5\u987B\u662F\u5468\u7ED3\u675F\u65E5\uFF0C\u4E14\u65F6\u95F4\u8DE8\u5EA6\u4E0D\u80FD\u8D85\u8FC7\u4E24\u4E2A\u6708\u3002| array| \u2014 |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| date-cell| type \u8868\u793A\u8BE5\u65E5\u671F\u7684\u6240\u5C5E\u6708\u4EFD\uFF0C\u53EF\u9009\u503C\u6709 prev-month\u3001current-month \u548C next-month\uFF1BisSelected \u6807\u660E\u8BE5\u65E5\u671F\u662F\u5426\u88AB\u9009\u4E2D\uFF1Bday \u662F\u683C\u5F0F\u5316\u7684\u65E5\u671F\uFF0C\u683C\u5F0F\u4E3A yyyy-MM-dd\uFF1Bdate \u662F\u5355\u5143\u683C\u7684\u65E5\u671F| object |\n| header| \u5361\u7247\u6807\u9898\u5185\u5BB9| object |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": ["Date"],
            "description": "\u9009\u4E2D\u9879\u7ED1\u5B9A\u503C"
          },
          "range": {
            "type": "attr",
            "values": ["array"],
            "description": "\u65F6\u95F4\u8303\u56F4\uFF0C\u5305\u62EC\u5F00\u59CB\u65F6\u95F4\u4E0E\u7ED3\u675F\u65F6\u95F4\u3002 \u5F00\u59CB\u65F6\u95F4\u5FC5\u987B\u662F\u5468\u8D77\u59CB\u65E5\uFF0C\u7ED3\u675F\u65F6\u95F4\u5FC5\u987B\u662F\u5468\u7ED3\u675F\u65E5\uFF0C\u4E14\u65F6\u95F4\u8DE8\u5EA6\u4E0D\u80FD\u8D85\u8FC7\u4E24\u4E2A\u6708\u3002"
          }
        },
        "el-card": {
          "_html": {
            "": "<el-card>\n$1\n</el-card>",
            ":header[slot]": "<template #header>\n$1\n</template>",
            ":footer[slot]": "<template #footer>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/card.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| header| \u5361\u7247\u7684\u6807\u9898 \u4F60\u65E2\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E header \u6765\u4FEE\u6539\u6807\u9898\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 slot#header \u4F20\u5165 DOM \u8282\u70B9| string| \u2014 |\n| footer 2.4.3| \u5361\u7247\u9875\u811A\u3002 \u4F60\u65E2\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E header \u6765\u4FEE\u6539\u6807\u9898\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 slot#footer \u4F20\u5165 DOM \u8282\u70B9| string| \u2014 |\n| body-style| body \u7684 CSS \u6837\u5F0F| object| \u2014 |\n| body-class 2.3.10| body \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| \u2014 |\n| shadow| \u5361\u7247\u9634\u5F71\u663E\u793A\u65F6\u673A| enum| always |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n| header| \u5361\u7247\u6807\u9898\u5185\u5BB9 |\n| footer| \u5361\u7247\u9875\u811A\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "header": {
            "type": "attr",
            "values": [],
            "description": "\u5361\u7247\u7684\u6807\u9898 \u4F60\u65E2\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E header \u6765\u4FEE\u6539\u6807\u9898\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 slot#header \u4F20\u5165 DOM \u8282\u70B9"
          },
          "footer": {
            "type": "attr",
            "values": [],
            "description": "\u5361\u7247\u9875\u811A\u3002 \u4F60\u65E2\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E footer \u6765\u4FEE\u6539\u5361\u7247\u5E95\u90E8\u5185\u5BB9\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 slot#footer \u4F20\u5165 DOM \u8282\u70B9"
          },
          "body-style": {
            "type": "attr",
            "values": ["object"],
            "description": "body \u7684 CSS \u6837\u5F0F"
          },
          "body-class": {
            "type": "attr",
            "values": [],
            "description": "body \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "shadow": {
            "type": "attr",
            "values": ["always", "never", "hover"],
            "description": "\u5361\u7247\u9634\u5F71\u663E\u793A\u65F6\u673A"
          }
        },
        "el-carousel": {
          "_html": {
            "": '<el-carousel :interval="4000" height="${1:150px}">\n<el-carousel-item v-for="item in ${2:carouselList}" :key="item">\n$3\n</el-carousel-item>\n</el-carousel>',
            ":card": '<el-carousel :interval="4000" type="card" height="${1:150px}">\n<el-carousel-item v-for="item in ${2:carouselList}" :key="item">\n$3\n</el-carousel-item>\n</el-carousel>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/carousel.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| height| carousel \u7684\u9AD8\u5EA6| string| \u2014| \u2014 |\n| initial-index| \u521D\u59CB\u72B6\u6001\u6FC0\u6D3B\u7684\u5E7B\u706F\u7247\u7684\u7D22\u5F15\uFF0C\u4ECE 0 \u5F00\u59CB| number| \u2014| 0 |\n| trigger| \u6307\u793A\u5668\u7684\u89E6\u53D1\u65B9\u5F0F| string| hover/click| hover |\n| autoplay| \u662F\u5426\u81EA\u52A8\u5207\u6362| boolean| \u2014| true |\n| interval| \u81EA\u52A8\u5207\u6362\u7684\u65F6\u95F4\u95F4\u9694\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2| number| \u2014| 3000 |\n| indicator-position| \u6307\u793A\u5668\u7684\u4F4D\u7F6E| string| outside/none| \u2014 |\n| arrow| \u5207\u6362\u7BAD\u5934\u7684\u663E\u793A\u65F6\u673A| string| always/hover/never| hover |\n| type| carousel \u7684\u7C7B\u578B| string| card| \u2014 |\n| loop| \u662F\u5426\u5FAA\u73AF\u663E\u793A| boolean| -| true |\n| direction| \u5C55\u793A\u7684\u65B9\u5411| string| horizontal/vertical| horizontal |\n| pause-on-hover| \u9F20\u6807\u60AC\u6D6E\u65F6\u6682\u505C\u81EA\u52A8\u5207\u6362| boolean| -| true |\n| motion-blur 2.6.0| \u6DFB\u52A0\u52A8\u6001\u6A21\u7CCA\u4EE5\u7ED9\u8D70\u9A6C\u706F\u6CE8\u5165\u6D3B\u529B\u548C\u6D41\u7545\u6027\u3002| boolean| -| false |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change| \u5E7B\u706F\u7247\u5207\u6362\u65F6\u89E6\u53D1| \u76EE\u524D\u6FC0\u6D3B\u7684\u5E7B\u706F\u7247\u7684\u7D22\u5F15\uFF0C\u539F\u5E7B\u706F\u7247\u7684\u7D22\u5F15 |\n\n| \u65B9\u6CD5\u540D| \u8BF4\u660E| \u53C2\u6570 |\n| :--- | :--- | :--- |\n| setActiveItem| \u624B\u52A8\u5207\u6362\u5E7B\u706F\u7247| \u9700\u8981\u5207\u6362\u7684\u5E7B\u706F\u7247\u7684\u7D22\u5F15\uFF0C\u4ECE 0 \u5F00\u59CB\uFF1B\u6216\u76F8\u5E94 el-carousel-item \u7684 name \u5C5E\u6027\u503C |\n| prev| \u5207\u6362\u81F3\u4E0A\u4E00\u5F20\u5E7B\u706F\u7247| \u2014 |\n| next| \u5207\u6362\u81F3\u4E0B\u4E00\u5F20\u5E7B\u706F\u7247| \u2014 |\n\n#### Carousel Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| -| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Carousel-Item |\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| name| \u5E7B\u706F\u7247\u7684\u540D\u5B57\uFF0C\u53EF\u7528\u4F5C setActiveItem \u7684\u53C2\u6570| string| \u2014| \u2014 |\n| label| \u8BE5\u5E7B\u706F\u7247\u6240\u5BF9\u5E94\u6307\u793A\u5668\u7684\u6587\u672C| string| \u2014| \u2014 |\n\n#### Carousel-Item Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| \u2014| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "height": {
            "type": "attr",
            "values": [],
            "description": "carousel \u7684\u9AD8\u5EA6"
          },
          "initial-index": {
            "type": "attr",
            "values": ["number"],
            "description": "\u521D\u59CB\u72B6\u6001\u6FC0\u6D3B\u7684\u5E7B\u706F\u7247\u7684\u7D22\u5F15\uFF0C\u4ECE 0 \u5F00\u59CB"
          },
          "trigger": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u793A\u5668\u7684\u89E6\u53D1\u65B9\u5F0F"
          },
          "autoplay": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u81EA\u52A8\u5207\u6362"
          },
          "interval": {
            "type": "attr",
            "values": ["number"],
            "description": "\u81EA\u52A8\u5207\u6362\u7684\u65F6\u95F4\u95F4\u9694\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2"
          },
          "indicator-position": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u793A\u5668\u7684\u4F4D\u7F6E"
          },
          "arrow": {
            "type": "attr",
            "values": [],
            "description": "\u5207\u6362\u7BAD\u5934\u7684\u663E\u793A\u65F6\u673A"
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": "carousel \u7684\u7C7B\u578B"
          },
          "loop": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5FAA\u73AF\u663E\u793A"
          },
          "direction": {
            "type": "attr",
            "values": [],
            "description": "\u5C55\u793A\u7684\u65B9\u5411"
          },
          "pause-on-hover": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9F20\u6807\u60AC\u6D6E\u65F6\u6682\u505C\u81EA\u52A8\u5207\u6362"
          },
          "motion-blur": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u52A8\u6001\u6A21\u7CCA\u4EE5\u7ED9\u8D70\u9A6C\u706F\u6CE8\u5165\u6D3B\u529B\u548C\u6D41\u7545\u6027\u3002"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5E7B\u706F\u7247\u5207\u6362\u65F6\u89E6\u53D1"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u5E7B\u706F\u7247\u7684\u540D\u5B57\uFF0C\u53EF\u7528\u4F5C setActiveItem \u7684\u53C2\u6570"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": "\u8BE5\u5E7B\u706F\u7247\u6240\u5BF9\u5E94\u6307\u793A\u5668\u7684\u6587\u672C"
          }
        },
        "el-collapse": {
          "_html": {
            "": '<el-collapse v-model="${1:activeNames}" @change="handleChange">\n<el-collapse-item title="$2" name="$3">\n$4\n</el-collapse-item>$5\n</el-collapse>',
            ":accordion": '<el-collapse v-model="${1:activeNames}" accordion @change="handleChange">\n<el-collapse-item title="$2" name="$3">\n$4\n</el-collapse-item>$5\n</el-collapse>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/collapse.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BE6\u60C5| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u5F53\u524D\u6D3B\u52A8\u9762\u677F\uFF0C\u5728\u624B\u98CE\u7434\u6A21\u5F0F\u4E0B\u5176\u7C7B\u578B\u662Fstring\uFF0C\u5728\u5176\u4ED6\u6A21\u5F0F\u4E0B\u662Farray| string / array| [] |\n| accordion| \u662F\u5426\u624B\u98CE\u7434\u6A21\u5F0F| boolean| boolean |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u5207\u6362\u5F53\u524D\u6D3B\u52A8\u9762\u677F\uFF0C\u5728\u624B\u98CE\u7434\u6A21\u5F0F\u4E0B\u5176\u7C7B\u578B\u662Fstring\uFF0C\u5728\u5176\u4ED6\u6A21\u5F0F\u4E0B\u662Farray| Function |\n\n#### Collapse Slots\n\n| \u63D2\u69FD\u540D| Description| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Collapse Item |\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| name| \u552F\u4E00\u6807\u5FD7\u7B26| string / number| \u2014 |\n| title| \u9762\u677F\u6807\u9898| string| '' |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false |\n\n#### Collapse Item Slot\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| Collapse Item \u7684\u5185\u5BB9 |\n| title| Collapse Item \u7684\u6807\u9898 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u552F\u4E00\u6807\u5FD7\u7B26"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u9762\u677F\u6807\u9898"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          }
        },
        "el-collapse-item": {
          "_html": {
            "": '<el-collapse-item title="$1" name="$2">\n$3\n</el-collapse-item>'
          }
        },
        "el-descriptions": {
          "_html": {
            "": '<el-descriptions title="$1">\n<el-descriptions-item label="$2">$3</el-descriptions-item>$4\n</el-descriptions>',
            ":extra[slot]": "<template #extra>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/descriptions.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| border| \u662F\u5426\u5E26\u6709\u8FB9\u6846| boolean| false |\n| column| \u4E00\u884C Descriptions Item \u7684\u6570\u91CF| number| 3 |\n| direction| \u6392\u5217\u7684\u65B9\u5411| enum| horizontal |\n| size| \u5217\u8868\u7684\u5C3A\u5BF8| enum| \u2014 |\n| title| \u6807\u9898\u6587\u672C\uFF0C\u663E\u793A\u5728\u5DE6\u4E0A\u65B9| string| '' |\n| extra| \u64CD\u4F5C\u533A\u6587\u672C\uFF0C\u663E\u793A\u5728\u53F3\u4E0A\u65B9| string| '' |\n\n#### Descriptions Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Descriptions Item |\n| title| \u81EA\u5B9A\u4E49\u6807\u9898\uFF0C\u663E\u793A\u5728\u5DE6\u4E0A\u65B9| \u2014 |\n| extra| \u81EA\u5B9A\u4E49\u64CD\u4F5C\u533A\uFF0C\u663E\u793A\u5728\u53F3\u4E0A\u65B9| \u2014 |\n",
          "border": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5E26\u6709\u8FB9\u6846"
          },
          "column": {
            "type": "attr",
            "values": ["number"],
            "description": "\u4E00\u884C Descriptions Item \u7684\u6570\u91CF"
          },
          "direction": {
            "type": "attr",
            "values": ["horizontal", "vertical"],
            "description": "\u6392\u5217\u7684\u65B9\u5411"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "\u5217\u8868\u7684\u5C3A\u5BF8"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u6807\u9898\u6587\u672C\uFF0C\u663E\u793A\u5728\u5DE6\u4E0A\u65B9"
          },
          "extra": {
            "type": "attr",
            "values": [],
            "description": "\u64CD\u4F5C\u533A\u6587\u672C\uFF0C\u663E\u793A\u5728\u53F3\u4E0A\u65B9"
          }
        },
        "el-descriptions-item": {
          "_html": {
            "": '<el-descriptions-item label="$1">$2</el-descriptions-item>',
            ":label[slot]": "<template #label>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/descriptions.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| label| \u6807\u7B7E\u6587\u672C| string| '' |\n| span| \u5217\u7684\u6570\u91CF| number| 1 |\n| width| \u5217\u7684\u5BBD\u5EA6\uFF0C\u4E0D\u540C\u884C\u76F8\u540C\u5217\u7684\u5BBD\u5EA6\u6309\u6700\u5927\u503C\u8BBE\u5B9A\uFF08\u5982\u65E0 border \uFF0C\u5BBD\u5EA6\u5305\u542B\u6807\u7B7E\u4E0E\u5185\u5BB9\uFF09| string / number| '' |\n| min-width| \u5217\u7684\u6700\u5C0F\u5BBD\u5EA6\uFF0C\u4E0E width \u7684\u533A\u522B\u662F width \u662F\u56FA\u5B9A\u7684\uFF0Cmin-width \u4F1A\u628A\u5269\u4F59\u5BBD\u5EA6\u6309\u6BD4\u4F8B\u5206\u914D\u7ED9\u8BBE\u7F6E\u4E86 min-width \u7684\u5217\uFF08\u5982\u65E0 border\uFF0C\u5BBD\u5EA6\u5305\u542B\u6807\u7B7E\u4E0E\u5185\u5BB9\uFF09| string / number| '' |\n| align| \u5217\u7684\u5185\u5BB9\u5BF9\u9F50\u65B9\u5F0F\uFF08\u5982\u65E0 border\uFF0C\u5BF9\u6807\u7B7E\u548C\u5185\u5BB9\u5747\u751F\u6548\uFF09| enum| left |\n| label-align| \u5217\u7684\u6807\u7B7E\u5BF9\u9F50\u65B9\u5F0F\uFF0C\u82E5\u4E0D\u8BBE\u7F6E\u8BE5\u9879\uFF0C\u5219\u4F7F\u7528\u5185\u5BB9\u7684\u5BF9\u9F50\u65B9\u5F0F\uFF08\u5982\u65E0 border\uFF0C\u8BF7\u4F7F\u7528 align \u53C2\u6570\uFF09| enum| '' |\n| class-name| \u5217\u7684\u5185\u5BB9\u81EA\u5B9A\u4E49\u7C7B\u540D| string| '' |\n| label-class-name| column label custom class name| string| '' |\n\n#### DescriptionsItem Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n| label| \u81EA\u5B9A\u4E49\u6807\u7B7E |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "label": {
            "type": "attr",
            "values": [],
            "description": "\u6807\u7B7E\u6587\u672C"
          },
          "span": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5217\u7684\u6570\u91CF"
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": "\u5217\u7684\u5BBD\u5EA6\uFF0C\u4E0D\u540C\u884C\u76F8\u540C\u5217\u7684\u5BBD\u5EA6\u6309\u6700\u5927\u503C\u8BBE\u5B9A\uFF08\u5982\u65E0 border \uFF0C\u5BBD\u5EA6\u5305\u542B\u6807\u7B7E\u4E0E\u5185\u5BB9\uFF09"
          },
          "min-width": {
            "type": "attr",
            "values": [],
            "description": "\u5217\u7684\u6700\u5C0F\u5BBD\u5EA6\uFF0C\u4E0E width \u7684\u533A\u522B\u662F width \u662F\u56FA\u5B9A\u7684\uFF0Cmin-width \u4F1A\u628A\u5269\u4F59\u5BBD\u5EA6\u6309\u6BD4\u4F8B\u5206\u914D\u7ED9\u8BBE\u7F6E\u4E86 min-width \u7684\u5217\uFF08\u5982\u65E0 border\uFF0C\u5BBD\u5EA6\u5305\u542B\u6807\u7B7E\u4E0E\u5185\u5BB9\uFF09"
          },
          "align": {
            "type": "attr",
            "values": ["enum"],
            "description": "\u5217\u7684\u5185\u5BB9\u5BF9\u9F50\u65B9\u5F0F\uFF08\u5982\u65E0 border\uFF0C\u5BF9\u6807\u7B7E\u548C\u5185\u5BB9\u5747\u751F\u6548\uFF09"
          },
          "label-align": {
            "type": "attr",
            "values": ["enum"],
            "description": "\u5217\u7684\u6807\u7B7E\u5BF9\u9F50\u65B9\u5F0F\uFF0C\u82E5\u4E0D\u8BBE\u7F6E\u8BE5\u9879\uFF0C\u5219\u4F7F\u7528\u5185\u5BB9\u7684\u5BF9\u9F50\u65B9\u5F0F\uFF08\u5982\u65E0 border\uFF0C\u8BF7\u4F7F\u7528 align \u53C2\u6570\uFF09"
          },
          "class-name": {
            "type": "attr",
            "values": [],
            "description": "\u5217\u7684\u5185\u5BB9\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "label-class-name": {
            "type": "attr",
            "values": [],
            "description": "column label custom class name"
          }
        },
        "el-empty": {
          "_html": {
            "": '<el-empty description="$1">$2</el-empty>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/empty.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| image| empty \u7EC4\u4EF6\u7684\u56FE\u50CF\u5730\u5740| string| '' |\n| image-size| empty \u7EC4\u4EF6\u7684\u56FE\u50CF\u5C3A\u5BF8\uFF08\u5BBD\u5EA6\uFF09| number| \u2014 |\n| description| empty \u7EC4\u4EF6\u7684\u63CF\u8FF0\u4FE1\u606F| string| '' |\n\n#### \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u63CF\u8FF0\u8BF4\u660E |\n| :--- | :--- |\n| default| \u4F5C\u4E3A\u5E95\u90E8\u5185\u5BB9\u7684\u5185\u5BB9 |\n| image| \u4F5C\u4E3A\u56FE\u50CF\u7684\u5185\u5BB9 |\n| description| \u4F5C\u4E3A\u63CF\u8FF0\u7684\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "image": {
            "type": "attr",
            "values": [],
            "description": "empty \u7EC4\u4EF6\u7684\u56FE\u50CF\u5730\u5740"
          },
          "image-size": {
            "type": "attr",
            "values": ["number"],
            "description": "empty \u7EC4\u4EF6\u7684\u56FE\u50CF\u5C3A\u5BF8\uFF08\u5BBD\u5EA6\uFF09"
          },
          "description": {
            "type": "attr",
            "values": [],
            "description": "empty \u7EC4\u4EF6\u7684\u63CF\u8FF0\u4FE1\u606F"
          }
        },
        "el-image": {
          "_html": {
            "": '<el-image :src="$1" fit="fill" />',
            ":placeholder[slot]": "<template #placeholder>\n$1\n</template>",
            ":error[slot]": "<template #error>\n$1\n</template>",
            ":lazy": '<el-image v-for="url in ${1:urls}" :key="url" :src="url" lazy />',
            ":preview": 'el-image :src="url" :zoom-rate="1.2" :max-scale="7" :min-scale="0.2" :preview-src-list="srcList" :initial-index="4" fit="cover" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/image.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| src| \u56FE\u7247\u6E90\u5730\u5740\uFF0C\u540C\u539F\u751F\u5C5E\u6027\u4E00\u81F4| string| '' |\n| fit| \u786E\u5B9A\u56FE\u7247\u5982\u4F55\u9002\u5E94\u5BB9\u5668\u6846\uFF0C\u540C\u539F\u751F object-fit| enum| '' |\n| hide-on-click-modal| \u5F53\u5F00\u542F preview \u529F\u80FD\u65F6\uFF0C\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u70B9\u51FB\u906E\u7F69\u5C42\u5173\u95ED preview| boolean| false |\n| loading 2.2.3| \u6D4F\u89C8\u5668\u52A0\u8F7D\u56FE\u50CF\u7684\u7B56\u7565\uFF0C\u548C \u6D4F\u89C8\u5668\u539F\u751F\u80FD\u529B\u4E00\u81F4| enum| \u2014 |\n| lazy| \u662F\u5426\u4F7F\u7528\u61D2\u52A0\u8F7D| boolean| false |\n| scroll-container| \u5F00\u542F\u61D2\u52A0\u8F7D\u529F\u80FD\u540E\uFF0C\u76D1\u542C scroll \u4E8B\u4EF6\u7684\u5BB9\u5668 \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5F00\u542F\u61D2\u52A0\u8F7D\u529F\u80FD\u540E\uFF0C\u76D1\u542C scroll \u4E8B\u4EF6\u7684\u5BB9\u5668| string / object| \u2014 |\n| alt| \u539F\u751F\u5C5E\u6027 alt| string| \u2014 |\n| referrerpolicy| \u539F\u751F\u5C5E\u6027 referrerPolicy\u3002| string| \u2014 |\n| crossorigin| \u539F\u751F\u5C5E\u6027 crossorigin| enum| \u2014 |\n| preview-src-list| \u5F00\u542F\u56FE\u7247\u9884\u89C8\u529F\u80FD| object| [] |\n| z-index| \u8BBE\u7F6E\u56FE\u7247\u9884\u89C8\u7684 z-index| number| \u2014 |\n| initial-index| \u521D\u59CB\u9884\u89C8\u56FE\u50CF\u7D22\u5F15\uFF0C\u5C0F\u4E8E url-list \u7684\u957F\u5EA6| number| 0 |\n| close-on-press-escape| \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED Image Viewer| boolean| true |\n| preview-teleported| image-viewer \u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\u3002 \u5D4C\u5957\u7684\u7236\u5143\u7D20\u5C5E\u6027\u4F1A\u53D1\u751F\u4FEE\u6539\u65F6\u5E94\u8BE5\u5C06\u6B64\u5C5E\u6027\u8BBE\u7F6E\u4E3A true| boolean| false |\n| infinite| \u662F\u5426\u53EF\u4EE5\u65E0\u9650\u5FAA\u73AF\u9884\u89C8| boolean| true |\n| zoom-rate| \u56FE\u50CF\u67E5\u770B\u5668\u7F29\u653E\u4E8B\u4EF6\u7684\u7F29\u653E\u901F\u7387\u3002| number| 1.2 |\n| min-scale 2.4.0| \u56FE\u50CF\u67E5\u770B\u5668\u7F29\u653E\u4E8B\u4EF6\u7684\u6700\u5C0F\u7F29\u653E\u6BD4\u4F8B| number| 0.2 |\n| max-scale 2.4.0| \u56FE\u50CF\u67E5\u770B\u5668\u7F29\u653E\u4E8B\u4EF6\u7684\u6700\u5927\u7F29\u653E\u6BD4\u4F8B| number| 7 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| load| \u56FE\u7247\u52A0\u8F7D\u6210\u529F\u89E6\u53D1| Function |\n| error| \u56FE\u7247\u52A0\u8F7D\u5931\u8D25\u89E6\u53D1| Function |\n| switch| \u5207\u6362\u56FE\u50CF\u65F6\u89E6\u53D1\u3002| Function |\n| close| \u5F53\u70B9\u51FB X \u6309\u94AE\u6216\u8005\u5728hide-on-click-modal\u4E3A true \u65F6\u70B9\u51FB\u906E\u7F69\u5C42\u65F6\u89E6\u53D1| Function |\n| show| \u5F53 Viewer \u663E\u793A\u65F6\u89E6\u53D1| Function |\n\n#### Image Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| placeholder| \u5F53\u56FE\u50CF\u5C1A\u672A\u52A0\u8F7D\u65F6\uFF0C\u81EA\u5B9A\u4E49\u7684\u5360\u4F4D\u7B26\u5185\u5BB9 |\n| error| \u81EA\u5B9A\u4E49\u56FE\u50CF\u52A0\u8F7D\u5931\u8D25\u7684\u5185\u5BB9 |\n| viewer| \u5F53\u56FE\u50CF\u9884\u89C8\u65F6\u81EA\u5B9A\u4E49\u5185\u5BB9 |\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| url-list| \u7528\u4E8E\u9884\u89C8\u7684\u56FE\u7247\u94FE\u63A5\u5217\u8868| object| [] |\n| z-index| \u9884\u89C8\u65F6\u906E\u7F69\u5C42\u7684 z-index| number / string| \u2014 |\n| initial-index| \u521D\u59CB\u9884\u89C8\u56FE\u50CF\u7D22\u5F15\uFF0C\u5C0F\u4E8E url-list \u7684\u957F\u5EA6| number| 0 |\n| infinite| \u662F\u5426\u53EF\u4EE5\u65E0\u9650\u5FAA\u73AF\u9884\u89C8| boolean| true |\n| hide-on-click-modal| \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u70B9\u51FB\u906E\u7F69\u5C42\u5173\u95ED\u9884\u89C8| boolean| false |\n| teleported| image \u81EA\u8EAB\u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\u3002 \u5D4C\u5957\u7684\u7236\u5143\u7D20\u5C5E\u6027\u4F1A\u53D1\u751F\u4FEE\u6539\u65F6\u5E94\u8BE5\u5C06\u6B64\u5C5E\u6027\u8BBE\u7F6E\u4E3A true| boolean| false |\n| zoom-rate 2.2.27| \u56FE\u50CF\u67E5\u770B\u5668\u7F29\u653E\u4E8B\u4EF6\u7684\u7F29\u653E\u901F\u7387\u3002| number| 1.2 |\n| min-scale 2.4.0| \u56FE\u50CF\u67E5\u770B\u5668\u7F29\u653E\u4E8B\u4EF6\u7684\u6700\u5C0F\u7F29\u653E\u6BD4\u4F8B| number| 0.2 |\n| max-scale 2.4.0| \u56FE\u50CF\u67E5\u770B\u5668\u7F29\u653E\u4E8B\u4EF6\u7684\u6700\u5927\u7F29\u653E\u6BD4\u4F8B| number| 7 |\n| close-on-press-escape| \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED Image Viewer| boolean| true |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| close| \u5F53\u70B9\u51FB X \u6309\u94AE\u6216\u8005\u5728hide-on-click-modal\u4E3A true \u65F6\u70B9\u51FB\u906E\u7F69\u5C42\u65F6\u89E6\u53D1| Function |\n| switch| \u5207\u6362\u56FE\u50CF\u65F6\u89E6\u53D1\u3002| Function |\n| rotate 2.3.13| \u65CB\u8F6C\u56FE\u50CF\u65F6\u89E6\u53D1\u3002| Function |\n\n#### Image Viewer Exposes\n\n| Name| \u8BF4\u660E| Type |\n| :--- | :--- | :--- |\n| setActiveItem| \u624B\u52A8\u5207\u6362\u56FE\u7247| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "url-list": {
            "type": "attr",
            "values": ["object"],
            "description": "\u7528\u4E8E\u9884\u89C8\u7684\u56FE\u7247\u94FE\u63A5\u5217\u8868"
          },
          "z-index": {
            "type": "attr",
            "values": ["number"],
            "description": "\u9884\u89C8\u65F6\u906E\u7F69\u5C42\u7684 z-index"
          },
          "initial-index": {
            "type": "attr",
            "values": ["number"],
            "description": "\u521D\u59CB\u9884\u89C8\u56FE\u50CF\u7D22\u5F15\uFF0C\u5C0F\u4E8E url-list \u7684\u957F\u5EA6"
          },
          "infinite": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u65E0\u9650\u5FAA\u73AF\u9884\u89C8"
          },
          "hide-on-click-modal": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u70B9\u51FB\u906E\u7F69\u5C42\u5173\u95ED\u9884\u89C8"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "image \u81EA\u8EAB\u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\u3002 \u5D4C\u5957\u7684\u7236\u5143\u7D20\u5C5E\u6027\u4F1A\u53D1\u751F\u4FEE\u6539\u65F6\u5E94\u8BE5\u5C06\u6B64\u5C5E\u6027\u8BBE\u7F6E\u4E3A true"
          },
          "zoom-rate": {
            "type": "attr",
            "values": ["number"],
            "description": "\u56FE\u50CF\u67E5\u770B\u5668\u7F29\u653E\u4E8B\u4EF6\u7684\u7F29\u653E\u901F\u7387\u3002"
          },
          "min-scale": {
            "type": "attr",
            "values": ["number"],
            "description": "\u56FE\u50CF\u67E5\u770B\u5668\u7F29\u653E\u4E8B\u4EF6\u7684\u6700\u5C0F\u7F29\u653E\u6BD4\u4F8B"
          },
          "max-scale": {
            "type": "attr",
            "values": ["number"],
            "description": "\u56FE\u50CF\u67E5\u770B\u5668\u7F29\u653E\u4E8B\u4EF6\u7684\u6700\u5927\u7F29\u653E\u6BD4\u4F8B"
          },
          "close-on-press-escape": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED Image Viewer"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u70B9\u51FB X \u6309\u94AE\u6216\u8005\u5728hide-on-click-modal\u4E3A true \u65F6\u70B9\u51FB\u906E\u7F69\u5C42\u65F6\u89E6\u53D1"
          },
          "switch": {
            "type": "event",
            "values": [],
            "description": "\u5207\u6362\u56FE\u50CF\u65F6\u89E6\u53D1\u3002"
          },
          "rotate": {
            "type": "event",
            "values": [],
            "description": "\u65CB\u8F6C\u56FE\u50CF\u65F6\u89E6\u53D1\u3002"
          }
        },
        "el-pagination": {
          "_html": {
            "": '<el-pagination\nv-model:current-page="currentPage"\nv-model:page-size="pageSize"\n:page-sizes="[10, 20, 50, 100, 200]"\nlayout="total, sizes, prev, pager, next, jumper"\n:total="total"\n@size-change="handleSizeChange"\n@current-change="handleCurrentChange">\n</el-pagination>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/pagination.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| small| \u662F\u5426\u4F7F\u7528\u5C0F\u578B\u5206\u9875\u6837\u5F0F| boolean| false |\n| background| \u662F\u5426\u4E3A\u5206\u9875\u6309\u94AE\u6DFB\u52A0\u80CC\u666F\u8272| boolean| false |\n| page-size / v-model:page-size| \u6BCF\u9875\u663E\u793A\u6761\u76EE\u4E2A\u6570| number| \u2014 |\n| default-page-size| \u6BCF\u9875\u9ED8\u8BA4\u7684\u6761\u76EE\u4E2A\u6570\uFF0C\u4E0D\u8BBE\u7F6E\u65F6\u9ED8\u8BA4\u4E3A10| number| \u2014 |\n| total| \u603B\u6761\u76EE\u6570| number| \u2014 |\n| page-count| \u603B\u9875\u6570\uFF0C total \u548C page-count \u8BBE\u7F6E\u4EFB\u610F\u4E00\u4E2A\u5C31\u53EF\u4EE5\u8FBE\u5230\u663E\u793A\u9875\u7801\u7684\u529F\u80FD\uFF1B\u5982\u679C\u8981\u652F\u6301 page-sizes \u7684\u66F4\u6539\uFF0C\u5219\u9700\u8981\u4F7F\u7528 total \u5C5E\u6027| number| \u2014 |\n| pager-count| \u8BBE\u7F6E\u6700\u5927\u9875\u7801\u6309\u94AE\u6570\u3002 \u9875\u7801\u6309\u94AE\u7684\u6570\u91CF\uFF0C\u5F53\u603B\u9875\u6570\u8D85\u8FC7\u8BE5\u503C\u65F6\u4F1A\u6298\u53E0| number| 7 |\n| current-page / v-model:current-page| \u5F53\u524D\u9875\u6570| number| \u2014 |\n| default-current-page| \u5F53\u524D\u9875\u6570\u7684\u9ED8\u8BA4\u521D\u59CB\u503C\uFF0C\u4E0D\u8BBE\u7F6E\u65F6\u9ED8\u8BA4\u4E3A 1| number| \u2014 |\n| layout| \u7EC4\u4EF6\u5E03\u5C40\uFF0C\u5B50\u7EC4\u4EF6\u540D\u7528\u9017\u53F7\u5206\u9694| string| prev, pager, next, jumper, ->, total |\n| page-sizes| \u6BCF\u9875\u663E\u793A\u4E2A\u6570\u9009\u62E9\u5668\u7684\u9009\u9879\u8BBE\u7F6E| object| [10, 20, 30, 40, 50, 100] |\n| popper-class| \u6BCF\u9875\u663E\u793A\u4E2A\u6570\u9009\u62E9\u5668\u7684\u4E0B\u62C9\u6846\u7C7B\u540D| string| '' |\n| prev-text| \u66FF\u4EE3\u56FE\u6807\u663E\u793A\u7684\u4E0A\u4E00\u9875\u6587\u5B57| string| '' |\n| prev-icon| \u4E0A\u4E00\u9875\u7684\u56FE\u6807\uFF0C \u6BD4 prev-text \u4F18\u5148\u7EA7\u66F4\u9AD8| string / Component| ArrowLeft |\n| next-text| \u66FF\u4EE3\u56FE\u6807\u663E\u793A\u7684\u4E0B\u4E00\u9875\u6587\u5B57| string| '' |\n| next-icon| \u4E0B\u4E00\u9875\u7684\u56FE\u6807\uFF0C \u6BD4 next-text \u4F18\u5148\u7EA7\u66F4\u4F4E| string / Component| ArrowRight |\n| disabled| \u662F\u5426\u7981\u7528\u5206\u9875| boolean| false |\n| teleported 2.3.13| \u662F\u5426\u5C06\u4E0B\u62C9\u83DC\u5355teleport\u81F3 body| boolean| true |\n| hide-on-single-page| \u53EA\u6709\u4E00\u9875\u65F6\u662F\u5426\u9690\u85CF| boolean| false |\n#### \u4E8B\u4EF6\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| size-change| page-size \u6539\u53D8\u65F6\u89E6\u53D1| Function |\n| current-change| current-page \u6539\u53D8\u65F6\u89E6\u53D1| Function |\n| change 2.4.4| current-page \u6216 page-size \u66F4\u6539\u65F6\u89E6\u53D1| Function |\n| prev-click| \u7528\u6237\u70B9\u51FB\u4E0A\u4E00\u9875\u6309\u94AE\u6539\u53D8\u5F53\u524D\u9875\u65F6\u89E6\u53D1| Function |\n| next-click| \u7528\u6237\u70B9\u51FB\u4E0B\u4E00\u9875\u6309\u94AE\u6539\u53D8\u5F53\u524D\u9875\u65F6\u89E6\u53D1| Function |\n\n#### \u63D2\u69FD\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u5185\u5BB9 \u8BBE\u7F6E\u6587\u6848\uFF0C\u9700\u8981\u5728 layout \u4E2D\u5217\u51FA slot |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "small": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4F7F\u7528\u5C0F\u578B\u5206\u9875\u6837\u5F0F"
          },
          "background": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u5206\u9875\u6309\u94AE\u6DFB\u52A0\u80CC\u666F\u8272"
          },
          "v-model:page-size": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6BCF\u9875\u663E\u793A\u6761\u76EE\u4E2A\u6570"
          },
          "default-page-size": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6BCF\u9875\u9ED8\u8BA4\u7684\u6761\u76EE\u4E2A\u6570\uFF0C\u4E0D\u8BBE\u7F6E\u65F6\u9ED8\u8BA4\u4E3A10"
          },
          "total": {
            "type": "attr",
            "values": ["number"],
            "description": "\u603B\u6761\u76EE\u6570"
          },
          "page-count": {
            "type": "attr",
            "values": ["number"],
            "description": "\u603B\u9875\u6570\uFF0C total \u548C page-count \u8BBE\u7F6E\u4EFB\u610F\u4E00\u4E2A\u5C31\u53EF\u4EE5\u8FBE\u5230\u663E\u793A\u9875\u7801\u7684\u529F\u80FD\uFF1B\u5982\u679C\u8981\u652F\u6301 page-sizes \u7684\u66F4\u6539\uFF0C\u5219\u9700\u8981\u4F7F\u7528 total \u5C5E\u6027"
          },
          "pager-count": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E\u6700\u5927\u9875\u7801\u6309\u94AE\u6570\u3002 \u9875\u7801\u6309\u94AE\u7684\u6570\u91CF\uFF0C\u5F53\u603B\u9875\u6570\u8D85\u8FC7\u8BE5\u503C\u65F6\u4F1A\u6298\u53E0"
          },
          "v-model:current-page": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5F53\u524D\u9875\u6570"
          },
          "default-current-page": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5F53\u524D\u9875\u6570\u7684\u9ED8\u8BA4\u521D\u59CB\u503C\uFF0C\u4E0D\u8BBE\u7F6E\u65F6\u9ED8\u8BA4\u4E3A 1"
          },
          "layout": {
            "type": "attr",
            "values": [],
            "description": "\u7EC4\u4EF6\u5E03\u5C40\uFF0C\u5B50\u7EC4\u4EF6\u540D\u7528\u9017\u53F7\u5206\u9694"
          },
          "page-sizes": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6BCF\u9875\u663E\u793A\u4E2A\u6570\u9009\u62E9\u5668\u7684\u9009\u9879\u8BBE\u7F6E"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "\u6BCF\u9875\u663E\u793A\u4E2A\u6570\u9009\u62E9\u5668\u7684\u4E0B\u62C9\u6846\u7C7B\u540D"
          },
          "prev-text": {
            "type": "attr",
            "values": [],
            "description": "\u66FF\u4EE3\u56FE\u6807\u663E\u793A\u7684\u4E0A\u4E00\u9875\u6587\u5B57"
          },
          "prev-icon": {
            "type": "attr",
            "values": [],
            "description": "\u4E0A\u4E00\u9875\u7684\u56FE\u6807\uFF0C \u6BD4 prev-text \u4F18\u5148\u7EA7\u66F4\u9AD8"
          },
          "next-text": {
            "type": "attr",
            "values": [],
            "description": "\u66FF\u4EE3\u56FE\u6807\u663E\u793A\u7684\u4E0B\u4E00\u9875\u6587\u5B57"
          },
          "next-icon": {
            "type": "attr",
            "values": [],
            "description": "\u4E0B\u4E00\u9875\u7684\u56FE\u6807\uFF0C \u6BD4 next-text \u4F18\u5148\u7EA7\u66F4\u4F4E"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u5206\u9875"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06\u4E0B\u62C9\u83DC\u5355teleport\u81F3 body"
          },
          "hide-on-single-page": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u53EA\u6709\u4E00\u9875\u65F6\u662F\u5426\u9690\u85CF"
          },
          "size-change": {
            "type": "event",
            "values": [],
            "description": "page-size \u6539\u53D8\u65F6\u89E6\u53D1"
          },
          "current-change": {
            "type": "event",
            "values": [],
            "description": "current-page \u6539\u53D8\u65F6\u89E6\u53D1"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "current-page \u6216 page-size \u66F4\u6539\u65F6\u89E6\u53D1"
          },
          "prev-click": {
            "type": "event",
            "values": [],
            "description": "\u7528\u6237\u70B9\u51FB\u4E0A\u4E00\u9875\u6309\u94AE\u6539\u53D8\u5F53\u524D\u9875\u65F6\u89E6\u53D1"
          },
          "next-click": {
            "type": "event",
            "values": [],
            "description": "\u7528\u6237\u70B9\u51FB\u4E0B\u4E00\u9875\u6309\u94AE\u6539\u53D8\u5F53\u524D\u9875\u65F6\u89E6\u53D1"
          }
        },
        "el-progress": {
          "_html": {
            "": '<el-progress :percentage="$1"></el-progress>',
            ":inside": '<el-progress :text-inside="true" :stroke-width="$1" :percentage="$2"></el-progress>',
            ":circle": '<el-progress type="circle" :percentage="$1"></el-progress>',
            ":dashboard": '<el-progress type="dashboard" :percentage="${1:percentage}" :color="${2:colors}"></el-progress>',
            ":default[slot]": '<template #default="{ percentage }">\n$1\n</template>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/progress.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| percentage required| percentage| number| 0 |\n| type| \u8FDB\u5EA6\u6761\u7C7B\u578B| enum| line |\n| stroke-width| \u8FDB\u5EA6\u6761\u7684\u5BBD\u5EA6| number| 6 |\n| text-inside| \u8FDB\u5EA6\u6761\u663E\u793A\u6587\u5B57\u5185\u7F6E\u5728\u8FDB\u5EA6\u6761\u5185\uFF08\u4EC5 type \u4E3A 'line' \u65F6\u53EF\u7528\uFF09| boolean| false |\n| status| \u8FDB\u5EA6\u6761\u5F53\u524D\u72B6\u6001| enum| \u2014 |\n| indeterminate| \u662F\u5426\u4E3A\u52A8\u753B\u8FDB\u5EA6\u6761| boolean| false |\n| duration| \u63A7\u5236\u52A8\u753B\u8FDB\u5EA6\u6761\u901F\u5EA6\u548C\u6761\u7EB9\u8FDB\u5EA6\u6761\u6D41\u52A8\u901F\u5EA6| number| 3 |\n| color| \u8FDB\u5EA6\u6761\u80CC\u666F\u8272 \u8FDB\u5EA6\u6761\u80CC\u666F\u8272 \uFF08\u4F1A\u8986\u76D6 status \u72B6\u6001\u989C\u8272\uFF09| string / function / Array| '' |\n| width| \u73AF\u5F62\u8FDB\u5EA6\u6761\u753B\u5E03\u5BBD\u5EA6\uFF08\u53EA\u5728 type \u4E3A circle \u6216 dashboard \u65F6\u53EF\u7528\uFF09| number| 126 |\n| show-text| \u662F\u5426\u663E\u793A\u8FDB\u5EA6\u6761\u6587\u5B57\u5185\u5BB9| boolean| true |\n| stroke-linecap| circle/dashboard \u7C7B\u578B\u8DEF\u5F84\u4E24\u7AEF\u7684\u5F62\u72B6| enum| round |\n| format| \u6307\u5B9A\u8FDB\u5EA6\u6761\u6587\u5B57\u5185\u5BB9| Function| \u2014 |\n| striped 2.3.4| \u5728\u8FDB\u5EA6\u6761\u4E0A\u589E\u52A0\u6761\u7EB9| boolean| false |\n| striped-flow 2.3.4| \u8BA9\u8FDB\u5EA6\u6761\u4E0A\u7684\u6761\u7EB9\u6D41\u52A8\u8D77\u6765| boolean| false |\n\n#### Slots\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u5185\u5BB9| object |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "percentagerequired": {
            "type": "attr",
            "values": ["number"],
            "description": "percentage"
          },
          "type": {
            "type": "attr",
            "values": ["line", "circle", "dashboard"],
            "description": "\u8FDB\u5EA6\u6761\u7C7B\u578B"
          },
          "stroke-width": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8FDB\u5EA6\u6761\u7684\u5BBD\u5EA6"
          },
          "text-inside": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8FDB\u5EA6\u6761\u663E\u793A\u6587\u5B57\u5185\u7F6E\u5728\u8FDB\u5EA6\u6761\u5185\uFF08\u4EC5 type \u4E3A 'line' \u65F6\u53EF\u7528\uFF09"
          },
          "status": {
            "type": "attr",
            "values": ["success", "exception", "warning"],
            "description": "\u8FDB\u5EA6\u6761\u5F53\u524D\u72B6\u6001"
          },
          "indeterminate": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u52A8\u753B\u8FDB\u5EA6\u6761"
          },
          "duration": {
            "type": "attr",
            "values": ["number"],
            "description": "\u63A7\u5236\u52A8\u753B\u8FDB\u5EA6\u6761\u901F\u5EA6\u548C\u6761\u7EB9\u8FDB\u5EA6\u6761\u6D41\u52A8\u901F\u5EA6"
          },
          "color": {
            "type": "attr",
            "values": [],
            "description": "\u8FDB\u5EA6\u6761\u80CC\u666F\u8272 \uFF08\u4F1A\u8986\u76D6 status \u72B6\u6001\u989C\u8272\uFF09"
          },
          "width": {
            "type": "attr",
            "values": ["number"],
            "description": "\u73AF\u5F62\u8FDB\u5EA6\u6761\u753B\u5E03\u5BBD\u5EA6\uFF08\u53EA\u5728 type \u4E3A circle \u6216 dashboard \u65F6\u53EF\u7528\uFF09"
          },
          "show-text": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u8FDB\u5EA6\u6761\u6587\u5B57\u5185\u5BB9"
          },
          "stroke-linecap": {
            "type": "attr",
            "values": ["butt", "round", "square"],
            "description": "circle/dashboard \u7C7B\u578B\u8DEF\u5F84\u4E24\u7AEF\u7684\u5F62\u72B6"
          },
          "format": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u6307\u5B9A\u8FDB\u5EA6\u6761\u6587\u5B57\u5185\u5BB9"
          },
          "striped": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u8FDB\u5EA6\u6761\u4E0A\u589E\u52A0\u6761\u7EB9"
          },
          "striped-flow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BA9\u8FDB\u5EA6\u6761\u4E0A\u7684\u6761\u7EB9\u6D41\u52A8\u8D77\u6765"
          }
        },
        "el-result": {
          "_html": {
            "": '<el-result icon="${1:success}" title="${2:Success}" sub-title="${3:Please follow the instructions}">\n<template #extra>\n<el-button type="primary">Back</el-button>\n</template>\n</el-result>',
            ":extra[slot]": "<template #extra>\n$1\n</template>",
            ":icon[slot]": "<template #icon>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/result.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| title| result \u7EC4\u4EF6\u7684\u6807\u9898| string| '' |\n| sub-title| result \u7EC4\u4EF6\u7684\u526F\u6807\u9898| string| '' |\n| icon| result \u7EC4\u4EF6\u7684\u56FE\u6807\u7C7B\u578B| enum| info |\n\n#### \u63D2\u69FD\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| icon| icon \u5185\u5BB9 |\n| title| result title \u7684\u5185\u5BB9 |\n| sub-title| sub title \u7684\u5185\u5BB9 |\n| extra| \u5185\u5BB9\u989D\u5916\u533A\u57DF\u7684\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "title": {
            "type": "attr",
            "values": [],
            "description": "result \u7EC4\u4EF6\u7684\u6807\u9898"
          },
          "sub-title": {
            "type": "attr",
            "values": [],
            "description": "result \u7EC4\u4EF6\u7684\u526F\u6807\u9898"
          },
          "icon": {
            "type": "attr",
            "values": ["enum"],
            "description": "result \u7EC4\u4EF6\u7684\u56FE\u6807\u7C7B\u578B"
          }
        },
        "el-skeleton": {
          "_html": {
            "": '<el-skeleton :rows="${1:5}">$2</el-skeleton>',
            ":template[slot]": "<template #template>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/skeleton.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| animated| \u662F\u5426\u4F7F\u7528\u52A8\u753B| boolean| false |\n| count| \u6E32\u67D3\u591A\u5C11\u4E2A template, \u5EFA\u8BAE\u4F7F\u7528\u5C3D\u53EF\u80FD\u5C0F\u7684\u6570\u5B57| number| 1 |\n| loading| \u662F\u5426\u663E\u793A\u52A0\u8F7D\u7ED3\u675F\u540E\u7684 DOM \u7ED3\u6784| boolean| false |\n| rows| \u9AA8\u67B6\u5C4F\u6BB5\u843D\u6570\u91CF| number| 3 |\n| throttle| \u6E32\u67D3\u5EF6\u8FDF\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09| number| 0 |\n\n#### Skeleton \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u4F5C\u7528\u57DF |\n| :--- | :--- | :--- |\n| default| \u771F\u6B63\u6E32\u67D3\u7684DOM| object |\n| template| \u6E32\u67D3 skeleton \u6A21\u677F\u7684\u5185\u5BB9| object |\n",
          "animated": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4F7F\u7528\u52A8\u753B"
          },
          "count": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6E32\u67D3\u591A\u5C11\u4E2A template, \u5EFA\u8BAE\u4F7F\u7528\u5C3D\u53EF\u80FD\u5C0F\u7684\u6570\u5B57"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u52A0\u8F7D\u7ED3\u675F\u540E\u7684 DOM \u7ED3\u6784"
          },
          "rows": {
            "type": "attr",
            "values": ["number"],
            "description": "\u9AA8\u67B6\u5C4F\u6BB5\u843D\u6570\u91CF"
          },
          "throttle": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6E32\u67D3\u5EF6\u8FDF\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09"
          }
        },
        "el-skeleton-item": {
          "_html": {
            ":circle": '<el-skeleton-item variant="circle" />',
            ":p": '<el-skeleton-item variant="p" />',
            ":text": '<el-skeleton-item variant="text" />',
            ":image": '<el-skeleton-item variant="image" />'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/skeleton.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| variant| \u5F53\u524D\u6E32\u67D3 skeleton \u7C7B\u578B| enum| text |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "variant": {
            "type": "attr",
            "values": ["p", "text", "h1", "h3", "caption", "button", "image", "circle", "rect"],
            "description": "\u5F53\u524D\u6E32\u67D3 skeleton \u7C7B\u578B"
          }
        },
        "el-table": {
          "_html": {
            "": '<el-table :data="${1:tableData}" style="width: 100%">\n<el-table-column label="$2" prop="$3" width="$4">$5</el-table-column>$6\n</el-table>',
            ":stripe": '<el-table :data="${1:tableData}" stripe style="width: 100%">\n<el-table-column label="$2" prop="$3" width="$4">$5</el-table-column>$6\n</el-table>',
            ":tree": `<el-table :data="\${1:tableData}" style="width: 100%" row-key="\${2:id}" border lazy :load="load" :tree-props="{ children: 'children', hasChildren: 'hasChildren' }">
$3
</el-table>`
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/table.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| Default |\n| :--- | :--- | :--- | :--- |\n| data| \u8868\u6570\u636E| object| [] |\n| height| table \u7684\u9AD8\u5EA6\u3002 \u9ED8\u8BA4\u4E3A\u81EA\u52A8\u9AD8\u5EA6\u3002 \u5982\u679C height \u4E3A number \u7C7B\u578B\uFF0C\u5355\u4F4D px\uFF1B\u5982\u679C height \u4E3A string \u7C7B\u578B\uFF0C\u5219\u8FD9\u4E2A\u9AD8\u5EA6\u4F1A\u8BBE\u7F6E\u4E3A Table \u7684 style.height \u7684\u503C\uFF0CTable \u7684\u9AD8\u5EA6\u4F1A\u53D7\u63A7\u4E8E\u5916\u90E8\u6837\u5F0F\u3002| string / number| \u2014 |\n| max-height| table \u7684\u6700\u5927\u9AD8\u5EA6\u3002 \u5408\u6CD5\u7684\u503C\u4E3A\u6570\u5B57\u6216\u8005\u5355\u4F4D\u4E3A px \u7684\u9AD8\u5EA6\u3002| string / number| \u2014 |\n| stripe| \u662F\u5426\u4E3A\u6591\u9A6C\u7EB9 table| boolean| false |\n| border| \u662F\u5426\u5E26\u6709\u7EB5\u5411\u8FB9\u6846| boolean| false |\n| size| Table \u7684\u5C3A\u5BF8| enum| \u2014 |\n| fit| \u5217\u7684\u5BBD\u5EA6\u662F\u5426\u81EA\u6491\u5F00| boolean| true |\n| show-header| \u662F\u5426\u663E\u793A\u8868\u5934| boolean| true |\n| highlight-current-row| \u662F\u5426\u8981\u9AD8\u4EAE\u5F53\u524D\u884C| boolean| false |\n| current-row-key| \u5F53\u524D\u884C\u7684 key\uFF0C\u53EA\u5199\u5C5E\u6027| string / number| \u2014 |\n| row-class-name| \u884C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u884C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002| Function / string| \u2014 |\n| row-style| \u884C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u884C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002| Function / object| \u2014 |\n| cell-class-name| \u5355\u5143\u683C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002| Function / string| \u2014 |\n| cell-style| \u5355\u5143\u683C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002| Function / object| \u2014 |\n| header-row-class-name| \u8868\u5934\u884C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u8868\u5934\u884C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002| Function / string| \u2014 |\n| header-row-style| \u8868\u5934\u884C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u8868\u5934\u884C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002| Function / object| \u2014 |\n| header-cell-class-name| \u8868\u5934\u5355\u5143\u683C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u8868\u5934\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002| Function / string| \u2014 |\n| header-cell-style| \u8868\u5934\u5355\u5143\u683C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u8868\u5934\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002| Function / object| \u2014 |\n| row-key| \u884C\u6570\u636E\u7684 Key\uFF0C\u7528\u6765\u4F18\u5316 Table \u7684\u6E32\u67D3\uFF1B \u5728\u4F7F\u7528reserve-selection\u529F\u80FD\u4E0E\u663E\u793A\u6811\u5F62\u6570\u636E\u65F6\uFF0C\u8BE5\u5C5E\u6027\u662F\u5FC5\u586B\u7684\u3002 \u7C7B\u578B\u4E3A String \u65F6\uFF0C\u652F\u6301\u591A\u5C42\u8BBF\u95EE\uFF1Auser.info.id\uFF0C\u4F46\u4E0D\u652F\u6301 user.info[0].id\uFF0C\u6B64\u79CD\u60C5\u51B5\u8BF7\u4F7F\u7528 Function\u3002| function / string| \u2014 |\n| empty-text| \u7A7A\u6570\u636E\u65F6\u663E\u793A\u7684\u6587\u672C\u5185\u5BB9\uFF0C \u4E5F\u53EF\u4EE5\u901A\u8FC7 #empty \u8BBE\u7F6E \u4E5F\u53EF\u4EE5\u901A\u8FC7 #empty \u8BBE\u7F6E| string| No Data |\n| default-expand-all| \u662F\u5426\u9ED8\u8BA4\u5C55\u5F00\u6240\u6709\u884C\uFF0C\u5F53 Table \u5305\u542B\u5C55\u5F00\u884C\u5B58\u5728\u6216\u8005\u4E3A\u6811\u5F62\u8868\u683C\u65F6\u6709\u6548| boolean| false |\n| expand-row-keys| \u53EF\u4EE5\u901A\u8FC7\u8BE5\u5C5E\u6027\u8BBE\u7F6E Table \u76EE\u524D\u7684\u5C55\u5F00\u884C\uFF0C\u9700\u8981\u8BBE\u7F6E row-key \u5C5E\u6027\u624D\u80FD\u4F7F\u7528\uFF0C\u8BE5\u5C5E\u6027\u4E3A\u5C55\u5F00\u884C\u7684 keys \u6570\u7EC4\u3002| object| \u2014 |\n| default-sort| \u9ED8\u8BA4\u7684\u6392\u5E8F\u5217\u7684 prop \u548C\u987A\u5E8F\u3002 \u5B83\u7684 prop \u5C5E\u6027\u6307\u5B9A\u9ED8\u8BA4\u7684\u6392\u5E8F\u7684\u5217\uFF0Corder \u6307\u5B9A\u9ED8\u8BA4\u6392\u5E8F\u7684\u987A\u5E8F| object| if prop is set, and order is not set, then order is default to ascending |\n| tooltip-effect| \u6EA2\u51FA\u7684 tooltip \u7684 effect| enum| dark |\n| tooltip-options 2.2.28| \u6EA2\u51FA tooltip \u7684\u9009\u9879\uFF0C\u53C2\u89C1\u4E0B\u8FF0 tooltip \u7EC4\u4EF6| object| object |\n| show-summary| \u662F\u5426\u5728\u8868\u5C3E\u663E\u793A\u5408\u8BA1\u884C| boolean| false |\n| sum-text| \u663E\u793A\u6458\u8981\u884C\u7B2C\u4E00\u5217\u7684\u6587\u672C| string| Sum |\n| summary-method| \u81EA\u5B9A\u4E49\u7684\u5408\u8BA1\u8BA1\u7B97\u65B9\u6CD5| Function| \u2014 |\n| span-method| \u5408\u5E76\u884C\u6216\u5217\u7684\u8BA1\u7B97\u65B9\u6CD5| Function| \u2014 |\n| select-on-indeterminate| \u5728\u591A\u9009\u8868\u683C\u4E2D\uFF0C\u5F53\u4EC5\u6709\u90E8\u5206\u884C\u88AB\u9009\u4E2D\u65F6\uFF0C\u70B9\u51FB\u8868\u5934\u7684\u591A\u9009\u6846\u65F6\u7684\u884C\u4E3A\u3002 \u82E5\u4E3A true\uFF0C\u5219\u9009\u4E2D\u6240\u6709\u884C\uFF1B\u82E5\u4E3A false\uFF0C\u5219\u53D6\u6D88\u9009\u62E9\u6240\u6709\u884C| boolean| true |\n| indent| \u5C55\u793A\u6811\u5F62\u6570\u636E\u65F6\uFF0C\u6811\u8282\u70B9\u7684\u7F29\u8FDB| number| 16 |\n| lazy| \u662F\u5426\u61D2\u52A0\u8F7D\u5B50\u8282\u70B9\u6570\u636E| boolean| false |\n| load| \u52A0\u8F7D\u5B50\u8282\u70B9\u6570\u636E\u7684\u51FD\u6570\uFF0Clazy \u4E3A true \u65F6\u751F\u6548| Function| \u2014 |\n| tree-props| \u6E32\u67D3\u5D4C\u5957\u6570\u636E\u7684\u914D\u7F6E\u9009\u9879| object| object |\n| table-layout| \u8BBE\u7F6E\u8868\u683C\u5355\u5143\u3001\u884C\u548C\u5217\u7684\u5E03\u5C40\u65B9\u5F0F| enum| fixed |\n| scrollbar-always-on| \u603B\u662F\u663E\u793A\u6EDA\u52A8\u6761| boolean| false |\n| show-overflow-tooltip| \u662F\u5426\u9690\u85CF\u989D\u5916\u5185\u5BB9\u5E76\u5728\u5355\u5143\u683C\u60AC\u505C\u65F6\u4F7F\u7528 Tooltip \u663E\u793A\u5B83\u4EEC\u3002\u8FD9\u5C06\u5F71\u54CD\u5168\u90E8\u5217\u7684\u5C55\u793A\u3002, \u8BE6\u8BF7\u53C2\u8003tooltip-options| boolean / object 2.3.7| \u2014 |\n| flexible 2.2.1| \u786E\u4FDD\u4E3B\u8F74\u7684\u6700\u5C0F\u5C3A\u5BF8\uFF0C\u4EE5\u4FBF\u4E0D\u8D85\u8FC7\u5185\u5BB9| boolean| false |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| select| \u5F53\u7528\u6237\u624B\u52A8\u52FE\u9009\u6570\u636E\u884C\u7684 Checkbox \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n| select-all| \u5F53\u7528\u6237\u624B\u52A8\u52FE\u9009\u5168\u9009 Checkbox \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n| selection-change| \u5F53\u9009\u62E9\u9879\u53D1\u751F\u53D8\u5316\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| cell-mouse-enter| \u5F53\u5355\u5143\u683C hover \u8FDB\u5165\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| cell-mouse-leave| \u5F53\u5355\u5143\u683C hover \u9000\u51FA\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| cell-click| \u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| cell-dblclick| \u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u53CC\u51FB\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| cell-contextmenu| \u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| row-click| \u5F53\u67D0\u4E00\u884C\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| row-contextmenu| \u5F53\u67D0\u4E00\u884C\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| row-dblclick| \u5F53\u67D0\u4E00\u884C\u88AB\u53CC\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| header-click| \u5F53\u67D0\u4E00\u5217\u7684\u8868\u5934\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| header-contextmenu| \u5F53\u67D0\u4E00\u5217\u7684\u8868\u5934\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| sort-change| \u5F53\u8868\u683C\u7684\u6392\u5E8F\u6761\u4EF6\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| filter-change| column \u7684 key\uFF0C \u5982\u679C\u9700\u8981\u4F7F\u7528 filter-change \u4E8B\u4EF6\uFF0C\u5219\u9700\u8981\u6B64\u5C5E\u6027\u6807\u8BC6\u662F\u54EA\u4E2A column \u7684\u7B5B\u9009\u6761\u4EF6| Function |\n| current-change| \u5F53\u8868\u683C\u7684\u5F53\u524D\u884C\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6\uFF0C\u5982\u679C\u8981\u9AD8\u4EAE\u5F53\u524D\u884C\uFF0C\u8BF7\u6253\u5F00\u8868\u683C\u7684 highlight-current-row \u5C5E\u6027| Function |\n| header-dragend| \u5F53\u62D6\u52A8\u8868\u5934\u6539\u53D8\u4E86\u5217\u7684\u5BBD\u5EA6\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6| Function |\n| expand-change| \u5F53\u7528\u6237\u5BF9\u67D0\u4E00\u884C\u5C55\u5F00\u6216\u8005\u5173\u95ED\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6\uFF08\u5C55\u5F00\u884C\u65F6\uFF0C\u56DE\u8C03\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A expandedRows\uFF1B\u6811\u5F62\u8868\u683C\u65F6\u7B2C\u4E8C\u53C2\u6570\u4E3A expanded\uFF09| Function |\n\n#### Table \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Table-column |\n| append| \u63D2\u5165\u81F3\u8868\u683C\u6700\u540E\u4E00\u884C\u4E4B\u540E\u7684\u5185\u5BB9\uFF0C \u5982\u679C\u9700\u8981\u5BF9\u8868\u683C\u7684\u5185\u5BB9\u8FDB\u884C\u65E0\u9650\u6EDA\u52A8\u64CD\u4F5C\uFF0C\u53EF\u80FD\u9700\u8981\u7528\u5230\u8FD9\u4E2A slot\u3002 \u82E5\u8868\u683C\u6709\u5408\u8BA1\u884C\uFF0C\u8BE5 slot \u4F1A\u4F4D\u4E8E\u5408\u8BA1\u884C\u4E4B\u4E0A\u3002| \u2014 |\n| empty| \u5F53\u6570\u636E\u4E3A\u7A7A\u65F6\u81EA\u5B9A\u4E49\u7684\u5185\u5BB9| \u2014 |\n\n#### Table Exposes\n\n| \u65B9\u6CD5\u540D| \u8BF4\u660E| Type |\n| :--- | :--- | :--- |\n| clearSelection| \u7528\u4E8E\u591A\u9009\u8868\u683C\uFF0C\u6E05\u7A7A\u7528\u6237\u7684\u9009\u62E9| Function |\n| getSelectionRows| \u8FD4\u56DE\u5F53\u524D\u9009\u4E2D\u7684\u884C| Function |\n| toggleRowSelection| \u7528\u4E8E\u591A\u9009\u8868\u683C\uFF0C\u5207\u6362\u67D0\u4E00\u884C\u7684\u9009\u4E2D\u72B6\u6001\uFF0C \u5982\u679C\u4F7F\u7528\u4E86\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u5219\u53EF\u76F4\u63A5\u8BBE\u7F6E\u8FD9\u4E00\u884C\u9009\u4E2D\u4E0E\u5426| Function |\n| toggleAllSelection| \u7528\u4E8E\u591A\u9009\u8868\u683C\uFF0C\u5207\u6362\u5168\u9009\u548C\u5168\u4E0D\u9009| Function |\n| toggleRowExpansion| \u7528\u4E8E\u53EF\u6269\u5C55\u7684\u8868\u683C\u6216\u6811\u8868\u683C\uFF0C\u5982\u679C\u67D0\u884C\u88AB\u6269\u5C55\uFF0C\u5219\u5207\u6362\u3002 \u4F7F\u7528\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u60A8\u53EF\u4EE5\u76F4\u63A5\u8BBE\u7F6E\u8BE5\u884C\u5E94\u8BE5\u88AB\u6269\u5C55\u6216\u6298\u53E0\u3002| Function |\n| setCurrentRow| \u7528\u4E8E\u5355\u9009\u8868\u683C\uFF0C\u8BBE\u5B9A\u67D0\u4E00\u884C\u4E3A\u9009\u4E2D\u884C\uFF0C \u5982\u679C\u8C03\u7528\u65F6\u4E0D\u52A0\u53C2\u6570\uFF0C\u5219\u4F1A\u53D6\u6D88\u76EE\u524D\u9AD8\u4EAE\u884C\u7684\u9009\u4E2D\u72B6\u6001\u3002| Function |\n| clearSort| \u7528\u4E8E\u6E05\u7A7A\u6392\u5E8F\u6761\u4EF6\uFF0C\u6570\u636E\u4F1A\u6062\u590D\u6210\u672A\u6392\u5E8F\u7684\u72B6\u6001| Function |\n| clearFilter| \u4F20\u5165\u7531columnKey \u7EC4\u6210\u7684\u6570\u7EC4\u4EE5\u6E05\u9664\u6307\u5B9A\u5217\u7684\u8FC7\u6EE4\u6761\u4EF6\u3002 \u5982\u679C\u6CA1\u6709\u53C2\u6570\uFF0C\u6E05\u9664\u6240\u6709\u8FC7\u6EE4\u5668| Function |\n| doLayout| \u5BF9 Table \u8FDB\u884C\u91CD\u65B0\u5E03\u5C40\u3002 \u5F53\u8868\u683C\u53EF\u89C1\u6027\u53D8\u5316\u65F6\uFF0C\u60A8\u53EF\u80FD\u9700\u8981\u8C03\u7528\u6B64\u65B9\u6CD5\u4EE5\u83B7\u5F97\u6B63\u786E\u7684\u5E03\u5C40| Function |\n| sort| \u624B\u52A8\u6392\u5E8F\u8868\u683C\u3002 \u53C2\u6570 prop \u5C5E\u6027\u6307\u5B9A\u6392\u5E8F\u5217\uFF0Corder \u6307\u5B9A\u6392\u5E8F\u987A\u5E8F\u3002| Function |\n| scrollTo| \u6EDA\u52A8\u5230\u4E00\u7EC4\u7279\u5B9A\u5750\u6807| Function |\n| setScrollTop| \u8BBE\u7F6E\u5782\u76F4\u6EDA\u52A8\u4F4D\u7F6E| Function |\n| setScrollLeft| \u8BBE\u7F6E\u6C34\u5E73\u6EDA\u52A8\u4F4D\u7F6E| Function |\n",
          "data": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8868\u6570\u636E"
          },
          "height": {
            "type": "attr",
            "values": [],
            "description": "table \u7684\u9AD8\u5EA6\u3002 \u9ED8\u8BA4\u4E3A\u81EA\u52A8\u9AD8\u5EA6\u3002 \u5982\u679C height \u4E3A number \u7C7B\u578B\uFF0C\u5355\u4F4D px\uFF1B\u5982\u679C height \u4E3A string \u7C7B\u578B\uFF0C\u5219\u8FD9\u4E2A\u9AD8\u5EA6\u4F1A\u8BBE\u7F6E\u4E3A Table \u7684 style.height \u7684\u503C\uFF0CTable \u7684\u9AD8\u5EA6\u4F1A\u53D7\u63A7\u4E8E\u5916\u90E8\u6837\u5F0F\u3002"
          },
          "max-height": {
            "type": "attr",
            "values": [],
            "description": "table \u7684\u6700\u5927\u9AD8\u5EA6\u3002 \u5408\u6CD5\u7684\u503C\u4E3A\u6570\u5B57\u6216\u8005\u5355\u4F4D\u4E3A px \u7684\u9AD8\u5EA6\u3002"
          },
          "stripe": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u6591\u9A6C\u7EB9 table"
          },
          "border": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5E26\u6709\u7EB5\u5411\u8FB9\u6846"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "Table \u7684\u5C3A\u5BF8"
          },
          "fit": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5217\u7684\u5BBD\u5EA6\u662F\u5426\u81EA\u6491\u5F00"
          },
          "show-header": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u8868\u5934"
          },
          "highlight-current-row": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u8981\u9AD8\u4EAE\u5F53\u524D\u884C"
          },
          "current-row-key": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u524D\u884C\u7684 key\uFF0C\u53EA\u5199\u5C5E\u6027"
          },
          "row-class-name": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u884C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u884C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002"
          },
          "row-style": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u884C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u884C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002"
          },
          "cell-class-name": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5355\u5143\u683C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002"
          },
          "cell-style": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5355\u5143\u683C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002"
          },
          "header-row-class-name": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8868\u5934\u884C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u8868\u5934\u884C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002"
          },
          "header-row-style": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8868\u5934\u884C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u8868\u5934\u884C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002"
          },
          "header-cell-class-name": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8868\u5934\u5355\u5143\u683C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u8868\u5934\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002"
          },
          "header-cell-style": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8868\u5934\u5355\u5143\u683C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u8868\u5934\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002"
          },
          "row-key": {
            "type": "attr",
            "values": ["function"],
            "description": "\u884C\u6570\u636E\u7684 Key\uFF0C\u7528\u6765\u4F18\u5316 Table \u7684\u6E32\u67D3\uFF1B \u5728\u4F7F\u7528reserve-selection\u529F\u80FD\u4E0E\u663E\u793A\u6811\u5F62\u6570\u636E\u65F6\uFF0C\u8BE5\u5C5E\u6027\u662F\u5FC5\u586B\u7684\u3002 \u7C7B\u578B\u4E3A String \u65F6\uFF0C\u652F\u6301\u591A\u5C42\u8BBF\u95EE\uFF1Auser.info.id\uFF0C\u4F46\u4E0D\u652F\u6301 user.info[0].id\uFF0C\u6B64\u79CD\u60C5\u51B5\u8BF7\u4F7F\u7528 Function\u3002"
          },
          "empty-text": {
            "type": "attr",
            "values": [],
            "description": "\u7A7A\u6570\u636E\u65F6\u663E\u793A\u7684\u6587\u672C\u5185\u5BB9\uFF0C \u4E5F\u53EF\u4EE5\u901A\u8FC7 #empty \u8BBE\u7F6E"
          },
          "default-expand-all": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9ED8\u8BA4\u5C55\u5F00\u6240\u6709\u884C\uFF0C\u5F53 Table \u5305\u542B\u5C55\u5F00\u884C\u5B58\u5728\u6216\u8005\u4E3A\u6811\u5F62\u8868\u683C\u65F6\u6709\u6548"
          },
          "expand-row-keys": {
            "type": "attr",
            "values": ["object"],
            "description": "\u53EF\u4EE5\u901A\u8FC7\u8BE5\u5C5E\u6027\u8BBE\u7F6E Table \u76EE\u524D\u7684\u5C55\u5F00\u884C\uFF0C\u9700\u8981\u8BBE\u7F6E row-key \u5C5E\u6027\u624D\u80FD\u4F7F\u7528\uFF0C\u8BE5\u5C5E\u6027\u4E3A\u5C55\u5F00\u884C\u7684 keys \u6570\u7EC4\u3002"
          },
          "default-sort": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9ED8\u8BA4\u7684\u6392\u5E8F\u5217\u7684 prop \u548C\u987A\u5E8F\u3002 \u5B83\u7684 prop \u5C5E\u6027\u6307\u5B9A\u9ED8\u8BA4\u7684\u6392\u5E8F\u7684\u5217\uFF0Corder \u6307\u5B9A\u9ED8\u8BA4\u6392\u5E8F\u7684\u987A\u5E8F"
          },
          "tooltip-effect": {
            "type": "attr",
            "values": ["dark", "light"],
            "description": "\u6EA2\u51FA\u7684 tooltip \u7684 effect"
          },
          "tooltip-options": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6EA2\u51FA tooltip \u7684\u9009\u9879\uFF0C\u53C2\u89C1\u4E0B\u8FF0 tooltip \u7EC4\u4EF6"
          },
          "show-summary": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728\u8868\u5C3E\u663E\u793A\u5408\u8BA1\u884C"
          },
          "sum-text": {
            "type": "attr",
            "values": [],
            "description": "\u663E\u793A\u6458\u8981\u884C\u7B2C\u4E00\u5217\u7684\u6587\u672C"
          },
          "summary-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u5408\u8BA1\u8BA1\u7B97\u65B9\u6CD5"
          },
          "span-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5408\u5E76\u884C\u6216\u5217\u7684\u8BA1\u7B97\u65B9\u6CD5"
          },
          "select-on-indeterminate": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u591A\u9009\u8868\u683C\u4E2D\uFF0C\u5F53\u4EC5\u6709\u90E8\u5206\u884C\u88AB\u9009\u4E2D\u65F6\uFF0C\u70B9\u51FB\u8868\u5934\u7684\u591A\u9009\u6846\u65F6\u7684\u884C\u4E3A\u3002 \u82E5\u4E3A true\uFF0C\u5219\u9009\u4E2D\u6240\u6709\u884C\uFF1B\u82E5\u4E3A false\uFF0C\u5219\u53D6\u6D88\u9009\u62E9\u6240\u6709\u884C"
          },
          "indent": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5C55\u793A\u6811\u5F62\u6570\u636E\u65F6\uFF0C\u6811\u8282\u70B9\u7684\u7F29\u8FDB"
          },
          "lazy": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u61D2\u52A0\u8F7D\u5B50\u8282\u70B9\u6570\u636E"
          },
          "load": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u52A0\u8F7D\u5B50\u8282\u70B9\u6570\u636E\u7684\u51FD\u6570\uFF0Clazy \u4E3A true \u65F6\u751F\u6548"
          },
          "tree-props": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6E32\u67D3\u5D4C\u5957\u6570\u636E\u7684\u914D\u7F6E\u9009\u9879"
          },
          "table-layout": {
            "type": "attr",
            "values": ["fixed", "auto"],
            "description": "\u8BBE\u7F6E\u8868\u683C\u5355\u5143\u3001\u884C\u548C\u5217\u7684\u5E03\u5C40\u65B9\u5F0F"
          },
          "scrollbar-always-on": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u603B\u662F\u663E\u793A\u6EDA\u52A8\u6761"
          },
          "show-overflow-tooltip": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9690\u85CF\u989D\u5916\u5185\u5BB9\u5E76\u5728\u5355\u5143\u683C\u60AC\u505C\u65F6\u4F7F\u7528 Tooltip \u663E\u793A\u5B83\u4EEC\u3002\u8FD9\u5C06\u5F71\u54CD\u5168\u90E8\u5217\u7684\u5C55\u793A\uFF0C\u8BE6\u8BF7\u53C2\u8003tooltip-options"
          },
          "flexible": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u786E\u4FDD\u4E3B\u8F74\u7684\u6700\u5C0F\u5C3A\u5BF8\uFF0C\u4EE5\u4FBF\u4E0D\u8D85\u8FC7\u5185\u5BB9"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7528\u6237\u624B\u52A8\u52FE\u9009\u6570\u636E\u884C\u7684 Checkbox \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "select-all": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7528\u6237\u624B\u52A8\u52FE\u9009\u5168\u9009 Checkbox \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "selection-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u9009\u62E9\u9879\u53D1\u751F\u53D8\u5316\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "cell-mouse-enter": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u5355\u5143\u683C hover \u8FDB\u5165\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "cell-mouse-leave": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u5355\u5143\u683C hover \u9000\u51FA\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "cell-click": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "cell-dblclick": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u53CC\u51FB\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "cell-contextmenu": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "row-click": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u884C\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "row-contextmenu": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u884C\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "row-dblclick": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u884C\u88AB\u53CC\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "header-click": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u5217\u7684\u8868\u5934\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "header-contextmenu": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u5217\u7684\u8868\u5934\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "sort-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u8868\u683C\u7684\u6392\u5E8F\u6761\u4EF6\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "filter-change": {
            "type": "event",
            "values": [],
            "description": "column \u7684 key\uFF0C \u5982\u679C\u9700\u8981\u4F7F\u7528 filter-change \u4E8B\u4EF6\uFF0C\u5219\u9700\u8981\u6B64\u5C5E\u6027\u6807\u8BC6\u662F\u54EA\u4E2A column \u7684\u7B5B\u9009\u6761\u4EF6"
          },
          "current-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u8868\u683C\u7684\u5F53\u524D\u884C\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6\uFF0C\u5982\u679C\u8981\u9AD8\u4EAE\u5F53\u524D\u884C\uFF0C\u8BF7\u6253\u5F00\u8868\u683C\u7684 highlight-current-row \u5C5E\u6027"
          },
          "header-dragend": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u62D6\u52A8\u8868\u5934\u6539\u53D8\u4E86\u5217\u7684\u5BBD\u5EA6\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "expand-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7528\u6237\u5BF9\u67D0\u4E00\u884C\u5C55\u5F00\u6216\u8005\u5173\u95ED\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6\uFF08\u5C55\u5F00\u884C\u65F6\uFF0C\u56DE\u8C03\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A expandedRows\uFF1B\u6811\u5F62\u8868\u683C\u65F6\u7B2C\u4E8C\u53C2\u6570\u4E3A expanded\uFF09"
          }
        },
        "el-table-column": {
          "_html": {
            "": '<el-table-column label="$1" prop="$2" width="$3">$4</el-table-column>',
            ":filter": '<el-table-column label="$1" prop="$2" width="$3" :filters="${4:filters}" :filter-method="${5:filterHandler}">$6</el-table-column>',
            ":sortable": '<el-table-column label="$1" prop="$2" width="$3" sortable>$4</el-table-column>',
            ":fixed": '<el-table-column fixed="${1:left}" label="$2" prop="$3" width="$4">$5</el-table-column>',
            ":select": '<el-table ref="multipleTableRef" :data="${1:tableData}" style="width: 100%" @selection-change="${2:handleSelectionChange}" >\n<el-table-column type="selection" width="55"></el-table-column>$3\n</el-table>',
            ":default[slot]": '<template #default="scope">\n$1\n</template>',
            ":header[slot]": "<template #header>\n$1\n</template>",
            ":expand": '<el-table-column type="expand">\n<template #default="props">\n$1\n</template>\n</el-table-column>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/table.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| Type| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| type| \u5BF9\u5E94\u5217\u7684\u7C7B\u578B\u3002 \u5982\u679C\u8BBE\u7F6E\u4E86selection\u5219\u663E\u793A\u591A\u9009\u6846\uFF1B \u5982\u679C\u8BBE\u7F6E\u4E86 index \u5219\u663E\u793A\u8BE5\u884C\u7684\u7D22\u5F15\uFF08\u4ECE 1 \u5F00\u59CB\u8BA1\u7B97\uFF09\uFF1B \u5982\u679C\u8BBE\u7F6E\u4E86 expand \u5219\u663E\u793A\u4E3A\u4E00\u4E2A\u53EF\u5C55\u5F00\u7684\u6309\u94AE| enum| default |\n| index| \u5982\u679C\u8BBE\u7F6E\u4E86 type=index\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4F20\u9012 index \u5C5E\u6027\u6765\u81EA\u5B9A\u4E49\u7D22\u5F15| number / Function| \u2014 |\n| label| \u663E\u793A\u7684\u6807\u9898| string| \u2014 |\n| column-key| column \u7684 key\uFF0C column \u7684 key\uFF0C \u5982\u679C\u9700\u8981\u4F7F\u7528 filter-change \u4E8B\u4EF6\uFF0C\u5219\u9700\u8981\u6B64\u5C5E\u6027\u6807\u8BC6\u662F\u54EA\u4E2A column \u7684\u7B5B\u9009\u6761\u4EF6| string| \u2014 |\n| prop| \u5B57\u6BB5\u540D\u79F0 \u5BF9\u5E94\u5217\u5185\u5BB9\u7684\u5B57\u6BB5\u540D\uFF0C \u4E5F\u53EF\u4EE5\u4F7F\u7528 property\u5C5E\u6027| string| \u2014 |\n| width| \u5BF9\u5E94\u5217\u7684\u5BBD\u5EA6| string / number| '' |\n| min-width| \u5BF9\u5E94\u5217\u7684\u6700\u5C0F\u5BBD\u5EA6\uFF0C \u5BF9\u5E94\u5217\u7684\u6700\u5C0F\u5BBD\u5EA6\uFF0C \u4E0E width \u7684\u533A\u522B\u662F width \u662F\u56FA\u5B9A\u7684\uFF0Cmin-width \u4F1A\u628A\u5269\u4F59\u5BBD\u5EA6\u6309\u6BD4\u4F8B\u5206\u914D\u7ED9\u8BBE\u7F6E\u4E86 min-width \u7684\u5217| string / number| '' |\n| fixed| \u5217\u662F\u5426\u56FA\u5B9A\u5728\u5DE6\u4FA7\u6216\u8005\u53F3\u4FA7\u3002 true \u8868\u793A\u56FA\u5B9A\u5728\u5DE6\u4FA7| enum / boolean| false |\n| render-header| \u5217\u6807\u9898 Label \u533A\u57DF\u6E32\u67D3\u4F7F\u7528\u7684 Function| Function| \u2014 |\n| sortable| \u5BF9\u5E94\u5217\u662F\u5426\u53EF\u4EE5\u6392\u5E8F\uFF0C \u5982\u679C\u8BBE\u7F6E\u4E3A 'custom'\uFF0C\u5219\u4EE3\u8868\u7528\u6237\u5E0C\u671B\u8FDC\u7A0B\u6392\u5E8F\uFF0C\u9700\u8981\u76D1\u542C Table \u7684 sort-change \u4E8B\u4EF6| boolean / string| false |\n| sort-method| \u6307\u5B9A\u6570\u636E\u6309\u7167\u54EA\u4E2A\u5C5E\u6027\u8FDB\u884C\u6392\u5E8F\uFF0C\u4EC5\u5F53sortable\u8BBE\u7F6E\u4E3Atrue\u7684\u65F6\u5019\u6709\u6548\u3002 \u5E94\u8BE5\u5982\u540C Array.sort \u90A3\u6837\u8FD4\u56DE\u4E00\u4E2A Number| Function| \u2014 |\n| sort-by| \u6307\u5B9A\u6570\u636E\u6309\u7167\u54EA\u4E2A\u5C5E\u6027\u8FDB\u884C\u6392\u5E8F\uFF0C\u4EC5\u5F53 sortable \u8BBE\u7F6E\u4E3A true \u4E14\u6CA1\u6709\u8BBE\u7F6E sort-method \u7684\u65F6\u5019\u6709\u6548\u3002 \u5982\u679C sort-by \u4E3A\u6570\u7EC4\uFF0C\u5219\u5148\u6309\u7167\u7B2C 1 \u4E2A\u5C5E\u6027\u6392\u5E8F\uFF0C\u5982\u679C\u7B2C 1 \u4E2A\u76F8\u7B49\uFF0C\u518D\u6309\u7167\u7B2C 2 \u4E2A\u6392\u5E8F\uFF0C\u4EE5\u6B64\u7C7B\u63A8| Function / string / object| \u2014 |\n| sort-orders| \u6570\u636E\u5728\u6392\u5E8F\u65F6\u6240\u4F7F\u7528\u6392\u5E8F\u7B56\u7565\u7684\u8F6E\u8F6C\u987A\u5E8F\uFF0C\u4EC5\u5F53 sortable \u4E3A true \u65F6\u6709\u6548\u3002 \u9700\u4F20\u5165\u4E00\u4E2A\u6570\u7EC4\uFF0C\u968F\u7740\u7528\u6237\u70B9\u51FB\u8868\u5934\uFF0C\u8BE5\u5217\u4F9D\u6B21\u6309\u7167\u6570\u7EC4\u4E2D\u5143\u7D20\u7684\u987A\u5E8F\u8FDB\u884C\u6392\u5E8F| object| ['ascending', 'descending', null] |\n| resizable| \u5BF9\u5E94\u5217\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u62D6\u52A8\u6539\u53D8\u5BBD\u5EA6\uFF08\u9700\u8981\u5728 el-table \u4E0A\u8BBE\u7F6E border \u5C5E\u6027\u4E3A\u771F\uFF09| boolean| true |\n| formatter| \u7528\u6765\u683C\u5F0F\u5316\u5185\u5BB9| function| \u2014 |\n| show-overflow-tooltip| \u5F53\u5185\u5BB9\u8FC7\u957F\u88AB\u9690\u85CF\u65F6\u663E\u793A tooltip| boolean / object 2.2.28| undefined |\n| align| \u5BF9\u9F50\u65B9\u5F0F| enum| left |\n| header-align| \u8868\u5934\u5BF9\u9F50\u65B9\u5F0F\uFF0C \u82E5\u4E0D\u8BBE\u7F6E\u8BE5\u9879\uFF0C\u5219\u4F7F\u7528\u8868\u683C\u7684\u5BF9\u9F50\u65B9\u5F0F| enum| left |\n| class-name| \u5217\u7684 className| string| \u2014 |\n| label-class-name| \u5F53\u524D\u5217\u6807\u9898\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| \u2014 |\n| selectable| \u4EC5\u5BF9 type=selection \u7684\u5217\u6709\u6548\uFF0C\u7C7B\u578B\u4E3A Function\uFF0CFunction \u7684\u8FD4\u56DE\u503C\u7528\u6765\u51B3\u5B9A\u8FD9\u4E00\u884C\u7684 CheckBox \u662F\u5426\u53EF\u4EE5\u52FE\u9009| Function| \u2014 |\n| reserve-selection| \u6570\u636E\u5237\u65B0\u540E\u662F\u5426\u4FDD\u7559\u9009\u9879\uFF0C\u4EC5\u5BF9  type=selection \u7684\u5217\u6709\u6548\uFF0C \u8BF7\u6CE8\u610F\uFF0C \u9700\u6307\u5B9A row-key \u6765\u8BA9\u8FD9\u4E2A\u529F\u80FD\u751F\u6548\u3002| boolean| false |\n| filters| \u6570\u636E\u8FC7\u6EE4\u7684\u9009\u9879\uFF0C \u6570\u7EC4\u683C\u5F0F\uFF0C\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u9700\u8981\u6709 text \u548C value \u5C5E\u6027\u3002 \u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u90FD\u9700\u8981\u6709 text \u548C value \u5C5E\u6027\u3002| object| \u2014 |\n| filter-placement| \u8FC7\u6EE4\u5F39\u51FA\u6846\u7684\u5B9A\u4F4D| enum| \u2014 |\n| filter-class-name 2.5.0| \u8FC7\u6EE4\u5F39\u51FA\u6846\u7684 className| string| \u2014 |\n| filter-multiple| \u6570\u636E\u8FC7\u6EE4\u7684\u9009\u9879\u662F\u5426\u591A\u9009| boolean| true |\n| filter-method| \u6570\u636E\u8FC7\u6EE4\u4F7F\u7528\u7684\u65B9\u6CD5\uFF0C \u5982\u679C\u662F\u591A\u9009\u7684\u7B5B\u9009\u9879\uFF0C\u5BF9\u6BCF\u4E00\u6761\u6570\u636E\u4F1A\u6267\u884C\u591A\u6B21\uFF0C\u4EFB\u610F\u4E00\u6B21\u8FD4\u56DE true \u5C31\u4F1A\u663E\u793A\u3002| function| \u2014 |\n| filtered-value| \u9009\u4E2D\u7684\u6570\u636E\u8FC7\u6EE4\u9879\uFF0C\u5982\u679C\u9700\u8981\u81EA\u5B9A\u4E49\u8868\u5934\u8FC7\u6EE4\u7684\u6E32\u67D3\u65B9\u5F0F\uFF0C\u53EF\u80FD\u4F1A\u9700\u8981\u6B64\u5C5E\u6027\u3002| object| \u2014 |\n\n#### Table-column \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u5217\u7684\u5185\u5BB9| object |\n| header| \u81EA\u5B9A\u4E49\u8868\u5934\u7684\u5185\u5BB9\uFF0C| object |\n\n#### Type Declarations\n\n#### \u5E38\u89C1\u95EE\u9898\u89E3\u7B54\uFF08FAQ\uFF09\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "type": {
            "type": "attr",
            "values": ["default", "selection", "index", "expand"],
            "description": "\u5BF9\u5E94\u5217\u7684\u7C7B\u578B\u3002 \u5982\u679C\u8BBE\u7F6E\u4E86selection\u5219\u663E\u793A\u591A\u9009\u6846\uFF1B \u5982\u679C\u8BBE\u7F6E\u4E86 index \u5219\u663E\u793A\u8BE5\u884C\u7684\u7D22\u5F15\uFF08\u4ECE 1 \u5F00\u59CB\u8BA1\u7B97\uFF09\uFF1B \u5982\u679C\u8BBE\u7F6E\u4E86 expand \u5219\u663E\u793A\u4E3A\u4E00\u4E2A\u53EF\u5C55\u5F00\u7684\u6309\u94AE"
          },
          "index": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5982\u679C\u8BBE\u7F6E\u4E86 type=index\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4F20\u9012 index \u5C5E\u6027\u6765\u81EA\u5B9A\u4E49\u7D22\u5F15"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": "\u663E\u793A\u7684\u6807\u9898"
          },
          "column-key": {
            "type": "attr",
            "values": [],
            "description": "column \u7684 key\uFF0C column \u7684 key\uFF0C \u5982\u679C\u9700\u8981\u4F7F\u7528 filter-change \u4E8B\u4EF6\uFF0C\u5219\u9700\u8981\u6B64\u5C5E\u6027\u6807\u8BC6\u662F\u54EA\u4E2A column \u7684\u7B5B\u9009\u6761\u4EF6"
          },
          "prop": {
            "type": "attr",
            "values": [],
            "description": "\u5B57\u6BB5\u540D\u79F0 \u5BF9\u5E94\u5217\u5185\u5BB9\u7684\u5B57\u6BB5\u540D\uFF0C \u4E5F\u53EF\u4EE5\u4F7F\u7528 property\u5C5E\u6027"
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": "\u5BF9\u5E94\u5217\u7684\u5BBD\u5EA6"
          },
          "min-width": {
            "type": "attr",
            "values": [],
            "description": "\u5BF9\u5E94\u5217\u7684\u6700\u5C0F\u5BBD\u5EA6\uFF0C \u5BF9\u5E94\u5217\u7684\u6700\u5C0F\u5BBD\u5EA6\uFF0C \u4E0E width \u7684\u533A\u522B\u662F width \u662F\u56FA\u5B9A\u7684\uFF0Cmin-width \u4F1A\u628A\u5269\u4F59\u5BBD\u5EA6\u6309\u6BD4\u4F8B\u5206\u914D\u7ED9\u8BBE\u7F6E\u4E86 min-width \u7684\u5217"
          },
          "fixed": {
            "type": "attr",
            "values": ["left", "right"],
            "description": "\u5217\u662F\u5426\u56FA\u5B9A\u5728\u5DE6\u4FA7\u6216\u8005\u53F3\u4FA7\u3002 true \u8868\u793A\u56FA\u5B9A\u5728\u5DE6\u4FA7"
          },
          "render-header": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5217\u6807\u9898 Label \u533A\u57DF\u6E32\u67D3\u4F7F\u7528\u7684 Function"
          },
          "sortable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5BF9\u5E94\u5217\u662F\u5426\u53EF\u4EE5\u6392\u5E8F\uFF0C \u5982\u679C\u8BBE\u7F6E\u4E3A 'custom'\uFF0C\u5219\u4EE3\u8868\u7528\u6237\u5E0C\u671B\u8FDC\u7A0B\u6392\u5E8F\uFF0C\u9700\u8981\u76D1\u542C Table \u7684 sort-change \u4E8B\u4EF6"
          },
          "sort-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u6307\u5B9A\u6570\u636E\u6309\u7167\u54EA\u4E2A\u5C5E\u6027\u8FDB\u884C\u6392\u5E8F\uFF0C\u4EC5\u5F53sortable\u8BBE\u7F6E\u4E3Atrue\u7684\u65F6\u5019\u6709\u6548\u3002 \u5E94\u8BE5\u5982\u540C Array.sort \u90A3\u6837\u8FD4\u56DE\u4E00\u4E2A Number"
          },
          "sort-by": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u6307\u5B9A\u6570\u636E\u6309\u7167\u54EA\u4E2A\u5C5E\u6027\u8FDB\u884C\u6392\u5E8F\uFF0C\u4EC5\u5F53 sortable \u8BBE\u7F6E\u4E3A true \u4E14\u6CA1\u6709\u8BBE\u7F6E sort-method \u7684\u65F6\u5019\u6709\u6548\u3002 \u5982\u679C sort-by \u4E3A\u6570\u7EC4\uFF0C\u5219\u5148\u6309\u7167\u7B2C 1 \u4E2A\u5C5E\u6027\u6392\u5E8F\uFF0C\u5982\u679C\u7B2C 1 \u4E2A\u76F8\u7B49\uFF0C\u518D\u6309\u7167\u7B2C 2 \u4E2A\u6392\u5E8F\uFF0C\u4EE5\u6B64\u7C7B\u63A8"
          },
          "sort-orders": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6570\u636E\u5728\u6392\u5E8F\u65F6\u6240\u4F7F\u7528\u6392\u5E8F\u7B56\u7565\u7684\u8F6E\u8F6C\u987A\u5E8F\uFF0C\u4EC5\u5F53 sortable \u4E3A true \u65F6\u6709\u6548\u3002 \u9700\u4F20\u5165\u4E00\u4E2A\u6570\u7EC4\uFF0C\u968F\u7740\u7528\u6237\u70B9\u51FB\u8868\u5934\uFF0C\u8BE5\u5217\u4F9D\u6B21\u6309\u7167\u6570\u7EC4\u4E2D\u5143\u7D20\u7684\u987A\u5E8F\u8FDB\u884C\u6392\u5E8F"
          },
          "resizable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5BF9\u5E94\u5217\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u62D6\u52A8\u6539\u53D8\u5BBD\u5EA6\uFF08\u9700\u8981\u5728 el-table \u4E0A\u8BBE\u7F6E border \u5C5E\u6027\u4E3A\u771F\uFF09"
          },
          "formatter": {
            "type": "attr",
            "values": ["function"],
            "description": "\u7528\u6765\u683C\u5F0F\u5316\u5185\u5BB9"
          },
          "show-overflow-tooltip": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u5185\u5BB9\u8FC7\u957F\u88AB\u9690\u85CF\u65F6\u663E\u793A tooltip"
          },
          "align": {
            "type": "attr",
            "values": ["left", "center", "right"],
            "description": "\u5BF9\u9F50\u65B9\u5F0F"
          },
          "header-align": {
            "type": "attr",
            "values": ["left", "center", "right"],
            "description": "\u8868\u5934\u5BF9\u9F50\u65B9\u5F0F\uFF0C \u82E5\u4E0D\u8BBE\u7F6E\u8BE5\u9879\uFF0C\u5219\u4F7F\u7528\u8868\u683C\u7684\u5BF9\u9F50\u65B9\u5F0F"
          },
          "class-name": {
            "type": "attr",
            "values": [],
            "description": "\u5217\u7684 className"
          },
          "label-class-name": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u524D\u5217\u6807\u9898\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "selectable": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u4EC5\u5BF9 type=selection \u7684\u5217\u6709\u6548\uFF0C\u7C7B\u578B\u4E3A Function\uFF0CFunction \u7684\u8FD4\u56DE\u503C\u7528\u6765\u51B3\u5B9A\u8FD9\u4E00\u884C\u7684 CheckBox \u662F\u5426\u53EF\u4EE5\u52FE\u9009"
          },
          "reserve-selection": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6570\u636E\u5237\u65B0\u540E\u662F\u5426\u4FDD\u7559\u9009\u9879\uFF0C\u4EC5\u5BF9  type=selection \u7684\u5217\u6709\u6548\uFF0C \u8BF7\u6CE8\u610F\uFF0C \u9700\u6307\u5B9A row-key \u6765\u8BA9\u8FD9\u4E2A\u529F\u80FD\u751F\u6548\u3002"
          },
          "filters": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6570\u636E\u8FC7\u6EE4\u7684\u9009\u9879\uFF0C \u6570\u7EC4\u683C\u5F0F\uFF0C\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u9700\u8981\u6709 text \u548C value \u5C5E\u6027\u3002 \u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u90FD\u9700\u8981\u6709 text \u548C value \u5C5E\u6027\u3002"
          },
          "filter-placement": {
            "type": "attr",
            "values": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"],
            "description": "\u8FC7\u6EE4\u5F39\u51FA\u6846\u7684\u5B9A\u4F4D"
          },
          "filter-class-name": {
            "type": "attr",
            "values": [],
            "description": "\u8FC7\u6EE4\u5F39\u51FA\u6846\u7684 className"
          },
          "filter-multiple": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6570\u636E\u8FC7\u6EE4\u7684\u9009\u9879\u662F\u5426\u591A\u9009"
          },
          "filter-method": {
            "type": "attr",
            "values": ["function"],
            "description": "\u6570\u636E\u8FC7\u6EE4\u4F7F\u7528\u7684\u65B9\u6CD5\uFF0C \u5982\u679C\u662F\u591A\u9009\u7684\u7B5B\u9009\u9879\uFF0C\u5BF9\u6BCF\u4E00\u6761\u6570\u636E\u4F1A\u6267\u884C\u591A\u6B21\uFF0C\u4EFB\u610F\u4E00\u6B21\u8FD4\u56DE true \u5C31\u4F1A\u663E\u793A\u3002"
          },
          "filtered-value": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9009\u4E2D\u7684\u6570\u636E\u8FC7\u6EE4\u9879\uFF0C\u5982\u679C\u9700\u8981\u81EA\u5B9A\u4E49\u8868\u5934\u8FC7\u6EE4\u7684\u6E32\u67D3\u65B9\u5F0F\uFF0C\u53EF\u80FD\u4F1A\u9700\u8981\u6B64\u5C5E\u6027\u3002"
          }
        },
        "el-table-v2": {
          "_html": {
            "": '<el-table-v2 :columns="${1:columns}" :data="${2:data}" :width="700" :height="400" fixed>$3</el-table-v2>',
            ":row[slot]": '<template #row="props">\n$1\n</template>',
            ":header[slot]": "<template #header>\n$1\n</template>",
            ":header-cell[slot]": "<template #header-cell>\n$1\n</template>",
            ":footer[slot]": "<template #footer>\n$1\n</template>",
            ":empty[slot]": "<template #empty>\n$1\n</template>",
            ":overlay[slot]": "<template #overlay>\n$1\n</template>"
          },
          "data": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8868\u6570\u636E"
          },
          "height": {
            "type": "attr",
            "values": [],
            "description": "table \u7684\u9AD8\u5EA6\u3002 \u9ED8\u8BA4\u4E3A\u81EA\u52A8\u9AD8\u5EA6\u3002 \u5982\u679C height \u4E3A number \u7C7B\u578B\uFF0C\u5355\u4F4D px\uFF1B\u5982\u679C height \u4E3A string \u7C7B\u578B\uFF0C\u5219\u8FD9\u4E2A\u9AD8\u5EA6\u4F1A\u8BBE\u7F6E\u4E3A Table \u7684 style.height \u7684\u503C\uFF0CTable \u7684\u9AD8\u5EA6\u4F1A\u53D7\u63A7\u4E8E\u5916\u90E8\u6837\u5F0F\u3002"
          },
          "max-height": {
            "type": "attr",
            "values": [],
            "description": "table \u7684\u6700\u5927\u9AD8\u5EA6\u3002 \u5408\u6CD5\u7684\u503C\u4E3A\u6570\u5B57\u6216\u8005\u5355\u4F4D\u4E3A px \u7684\u9AD8\u5EA6\u3002"
          },
          "stripe": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u6591\u9A6C\u7EB9 table"
          },
          "border": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5E26\u6709\u7EB5\u5411\u8FB9\u6846"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "Table \u7684\u5C3A\u5BF8"
          },
          "fit": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5217\u7684\u5BBD\u5EA6\u662F\u5426\u81EA\u6491\u5F00"
          },
          "show-header": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u8868\u5934"
          },
          "highlight-current-row": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u8981\u9AD8\u4EAE\u5F53\u524D\u884C"
          },
          "current-row-key": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u524D\u884C\u7684 key\uFF0C\u53EA\u5199\u5C5E\u6027"
          },
          "row-class-name": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u884C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u884C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002"
          },
          "row-style": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u884C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u884C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002"
          },
          "cell-class-name": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5355\u5143\u683C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002"
          },
          "cell-style": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5355\u5143\u683C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002"
          },
          "header-row-class-name": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8868\u5934\u884C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u8868\u5934\u884C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002"
          },
          "header-row-style": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8868\u5934\u884C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u8868\u5934\u884C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002"
          },
          "header-cell-class-name": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8868\u5934\u5355\u5143\u683C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u8868\u5934\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002"
          },
          "header-cell-style": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u8868\u5934\u5355\u5143\u683C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u8868\u5934\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002"
          },
          "row-key": {
            "type": "attr",
            "values": ["function"],
            "description": "\u884C\u6570\u636E\u7684 Key\uFF0C\u7528\u6765\u4F18\u5316 Table \u7684\u6E32\u67D3\uFF1B \u5728\u4F7F\u7528reserve-selection\u529F\u80FD\u4E0E\u663E\u793A\u6811\u5F62\u6570\u636E\u65F6\uFF0C\u8BE5\u5C5E\u6027\u662F\u5FC5\u586B\u7684\u3002 \u7C7B\u578B\u4E3A String \u65F6\uFF0C\u652F\u6301\u591A\u5C42\u8BBF\u95EE\uFF1Auser.info.id\uFF0C\u4F46\u4E0D\u652F\u6301 user.info[0].id\uFF0C\u6B64\u79CD\u60C5\u51B5\u8BF7\u4F7F\u7528 Function\u3002"
          },
          "empty-text": {
            "type": "attr",
            "values": [],
            "description": "\u7A7A\u6570\u636E\u65F6\u663E\u793A\u7684\u6587\u672C\u5185\u5BB9\uFF0C \u4E5F\u53EF\u4EE5\u901A\u8FC7 #empty \u8BBE\u7F6E"
          },
          "default-expand-all": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9ED8\u8BA4\u5C55\u5F00\u6240\u6709\u884C\uFF0C\u5F53 Table \u5305\u542B\u5C55\u5F00\u884C\u5B58\u5728\u6216\u8005\u4E3A\u6811\u5F62\u8868\u683C\u65F6\u6709\u6548"
          },
          "expand-row-keys": {
            "type": "attr",
            "values": ["object"],
            "description": "\u53EF\u4EE5\u901A\u8FC7\u8BE5\u5C5E\u6027\u8BBE\u7F6E Table \u76EE\u524D\u7684\u5C55\u5F00\u884C\uFF0C\u9700\u8981\u8BBE\u7F6E row-key \u5C5E\u6027\u624D\u80FD\u4F7F\u7528\uFF0C\u8BE5\u5C5E\u6027\u4E3A\u5C55\u5F00\u884C\u7684 keys \u6570\u7EC4\u3002"
          },
          "default-sort": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9ED8\u8BA4\u7684\u6392\u5E8F\u5217\u7684 prop \u548C\u987A\u5E8F\u3002 \u5B83\u7684 prop \u5C5E\u6027\u6307\u5B9A\u9ED8\u8BA4\u7684\u6392\u5E8F\u7684\u5217\uFF0Corder \u6307\u5B9A\u9ED8\u8BA4\u6392\u5E8F\u7684\u987A\u5E8F"
          },
          "tooltip-effect": {
            "type": "attr",
            "values": ["dark", "light"],
            "description": "\u6EA2\u51FA\u7684 tooltip \u7684 effect"
          },
          "tooltip-options": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6EA2\u51FA tooltip \u7684\u9009\u9879\uFF0C\u53C2\u89C1\u4E0B\u8FF0 tooltip \u7EC4\u4EF6"
          },
          "show-summary": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728\u8868\u5C3E\u663E\u793A\u5408\u8BA1\u884C"
          },
          "sum-text": {
            "type": "attr",
            "values": [],
            "description": "\u663E\u793A\u6458\u8981\u884C\u7B2C\u4E00\u5217\u7684\u6587\u672C"
          },
          "summary-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u5408\u8BA1\u8BA1\u7B97\u65B9\u6CD5"
          },
          "span-method": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5408\u5E76\u884C\u6216\u5217\u7684\u8BA1\u7B97\u65B9\u6CD5"
          },
          "select-on-indeterminate": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u591A\u9009\u8868\u683C\u4E2D\uFF0C\u5F53\u4EC5\u6709\u90E8\u5206\u884C\u88AB\u9009\u4E2D\u65F6\uFF0C\u70B9\u51FB\u8868\u5934\u7684\u591A\u9009\u6846\u65F6\u7684\u884C\u4E3A\u3002 \u82E5\u4E3A true\uFF0C\u5219\u9009\u4E2D\u6240\u6709\u884C\uFF1B\u82E5\u4E3A false\uFF0C\u5219\u53D6\u6D88\u9009\u62E9\u6240\u6709\u884C"
          },
          "indent": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5C55\u793A\u6811\u5F62\u6570\u636E\u65F6\uFF0C\u6811\u8282\u70B9\u7684\u7F29\u8FDB"
          },
          "lazy": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u61D2\u52A0\u8F7D\u5B50\u8282\u70B9\u6570\u636E"
          },
          "load": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u52A0\u8F7D\u5B50\u8282\u70B9\u6570\u636E\u7684\u51FD\u6570\uFF0Clazy \u4E3A true \u65F6\u751F\u6548"
          },
          "tree-props": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6E32\u67D3\u5D4C\u5957\u6570\u636E\u7684\u914D\u7F6E\u9009\u9879"
          },
          "table-layout": {
            "type": "attr",
            "values": ["fixed", "auto"],
            "description": "\u8BBE\u7F6E\u8868\u683C\u5355\u5143\u3001\u884C\u548C\u5217\u7684\u5E03\u5C40\u65B9\u5F0F"
          },
          "scrollbar-always-on": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u603B\u662F\u663E\u793A\u6EDA\u52A8\u6761"
          },
          "show-overflow-tooltip": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9690\u85CF\u989D\u5916\u5185\u5BB9\u5E76\u5728\u5355\u5143\u683C\u60AC\u505C\u65F6\u4F7F\u7528 Tooltip \u663E\u793A\u5B83\u4EEC\u3002\u8FD9\u5C06\u5F71\u54CD\u5168\u90E8\u5217\u7684\u5C55\u793A\uFF0C\u8BE6\u8BF7\u53C2\u8003tooltip-options"
          },
          "flexible": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u786E\u4FDD\u4E3B\u8F74\u7684\u6700\u5C0F\u5C3A\u5BF8\uFF0C\u4EE5\u4FBF\u4E0D\u8D85\u8FC7\u5185\u5BB9"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7528\u6237\u624B\u52A8\u52FE\u9009\u6570\u636E\u884C\u7684 Checkbox \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "select-all": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7528\u6237\u624B\u52A8\u52FE\u9009\u5168\u9009 Checkbox \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "selection-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u9009\u62E9\u9879\u53D1\u751F\u53D8\u5316\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "cell-mouse-enter": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u5355\u5143\u683C hover \u8FDB\u5165\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "cell-mouse-leave": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u5355\u5143\u683C hover \u9000\u51FA\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "cell-click": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "cell-dblclick": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u53CC\u51FB\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "cell-contextmenu": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "row-click": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u884C\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "row-contextmenu": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u884C\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "row-dblclick": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u884C\u88AB\u53CC\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "header-click": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u5217\u7684\u8868\u5934\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "header-contextmenu": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u5217\u7684\u8868\u5934\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "sort-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u8868\u683C\u7684\u6392\u5E8F\u6761\u4EF6\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "filter-change": {
            "type": "event",
            "values": [],
            "description": "column \u7684 key\uFF0C \u5982\u679C\u9700\u8981\u4F7F\u7528 filter-change \u4E8B\u4EF6\uFF0C\u5219\u9700\u8981\u6B64\u5C5E\u6027\u6807\u8BC6\u662F\u54EA\u4E2A column \u7684\u7B5B\u9009\u6761\u4EF6"
          },
          "current-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u8868\u683C\u7684\u5F53\u524D\u884C\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6\uFF0C\u5982\u679C\u8981\u9AD8\u4EAE\u5F53\u524D\u884C\uFF0C\u8BF7\u6253\u5F00\u8868\u683C\u7684 highlight-current-row \u5C5E\u6027"
          },
          "header-dragend": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u62D6\u52A8\u8868\u5934\u6539\u53D8\u4E86\u5217\u7684\u5BBD\u5EA6\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "expand-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7528\u6237\u5BF9\u67D0\u4E00\u884C\u5C55\u5F00\u6216\u8005\u5173\u95ED\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6\uFF08\u5C55\u5F00\u884C\u65F6\uFF0C\u56DE\u8C03\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A expandedRows\uFF1B\u6811\u5F62\u8868\u683C\u65F6\u7B2C\u4E8C\u53C2\u6570\u4E3A expanded\uFF09"
          }
        },
        "el-tag": {
          "_html": {
            "": ' <el-tag type="${1:success}">$2</el-tag>',
            ":effect": ' <el-tag type="${1:success}" effect="${2:dark}">$3</el-tag>',
            ":closable": ' <el-tag type="${1:success}" closable>$2</el-tag>',
            ":round": ' <el-tag type="${1:success}" round>$2</el-tag>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/tag.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| type| Tag \u7684\u7C7B\u578B| enum| primary |\n| closable| \u662F\u5426\u53EF\u5173\u95ED| boolean| false |\n| disable-transitions| \u662F\u5426\u7981\u7528\u6E10\u53D8\u52A8\u753B| boolean| false |\n| hit| \u662F\u5426\u6709\u8FB9\u6846\u63CF\u8FB9| boolean| false |\n| color| \u80CC\u666F\u8272| string| \u2014 |\n| size| Tag \u7684\u5C3A\u5BF8| enum| \u2014 |\n| effect| Tag \u7684\u4E3B\u9898| enum| light |\n| round| Tag \u662F\u5426\u4E3A\u5706\u5F62| boolean| false |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| Type |\n| :--- | :--- | :--- |\n| click| \u70B9\u51FB Tag \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n| close| \u5173\u95ED Tag \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n\n#### Tag Slots\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n",
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info"],
            "description": "Tag \u7684\u7C7B\u578B"
          },
          "closable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u5173\u95ED"
          },
          "disable-transitions": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u6E10\u53D8\u52A8\u753B"
          },
          "hit": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6709\u8FB9\u6846\u63CF\u8FB9"
          },
          "color": {
            "type": "attr",
            "values": [],
            "description": "\u80CC\u666F\u8272"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "Tag \u7684\u5C3A\u5BF8"
          },
          "effect": {
            "type": "attr",
            "values": ["dark", "light"],
            "description": "Tag \u7684\u4E3B\u9898"
          },
          "round": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "Tag \u662F\u5426\u4E3A\u5706\u5F62"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB Tag \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "\u5173\u95ED Tag \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-check-tag": {
          "_html": {
            "": '<el-check-tag :checked="${1:checked}" @change="${2:onChange}">$3</el-check-tag>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/tag.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| checked / v-model:checked| \u662F\u5426\u9009\u4E2D| boolean| false |\n| type 2.5.4| CheckTag \u7C7B\u578B| enum| primary |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u70B9\u51FB Check Tag \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n\n#### CheckTag Slots\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model:checked": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9009\u4E2D"
          },
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info"],
            "description": "CheckTag \u7C7B\u578B"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB Check Tag \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-timeline": {
          "_html": {
            "": "<el-timeline>\n$1\n</el-timeline>",
            ":for": '<el-timeline>\n<el-timeline-item\n  v-for="(activity, index) in ${1:activities}"\n  :key="index"\n  :timestamp="activity.timestamp"\n>\n  {{ ${2:activity.content} }}\n</el-timeline-item>\n</el-timeline>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/timeline.html)\n\n\n#### Timeline Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| timeline \u7EC4\u4EF6\u7684\u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Timeline-Item |\n"
        },
        "el-timeline-item": {
          "_html": {
            "": '<el-timeline-item timestamp="$1">\n$2\n</el-timeline-item>',
            ":center": '<el-timeline-item timestamp="$1" center>\n$2\n</el-timeline-item>'
          }
        },
        "el-tour": {
          "_html": {
            "": '<el-tour v-model="${1:open}">\n$2\n</el-tour>',
            ":indicators[slot]": '<template #indicators="{ current, total }">\n$1\n</template>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/tour.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u63CF\u8FF0| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| show-arrow| \u662F\u5426\u663E\u793A\u7BAD\u5934| boolean| true |\n| placement| \u5F15\u5BFC\u5361\u7247\u76F8\u5BF9\u4E8E\u76EE\u6807\u5143\u7D20\u7684\u4F4D\u7F6E| enum| bottom |\n| content-style| \u4E3Acontent\u81EA\u5B9A\u4E49\u6837\u5F0F| CSSProperties| - |\n| mask| \u662F\u5426\u542F\u7528\u906E\u7F69\uFF0C\u901A\u8FC7\u81EA\u5B9A\u4E49\u5C5E\u6027\u6539\u53D8\u906E\u7F69\u6837\u5F0F\u4EE5\u53CA\u586B\u5145\u7684\u989C\u8272| boolean | Object| true |\n| type| \u7C7B\u578B\uFF0C\u5F71\u54CD\u5E95\u8272\u4E0E\u6587\u5B57\u989C\u8272| default | primary| default |\n| model-value / v-model| \u6253\u5F00\u5F15\u5BFC| boolean| * |\n| current / v-model:current| \u5F53\u524D\u503C| number| - |\n| scroll-into-view-options| \u662F\u5426\u652F\u6301\u5F53\u524D\u5143\u7D20\u6EDA\u52A8\u5230\u89C6\u7A97\u5185\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6307\u5B9A\u6EDA\u52A8\u89C6\u7A97\u7684\u76F8\u5173\u53C2\u6570| boolean | ScrollIntoViewOptions| Object |\n| z-index| Tour \u7684\u5C42\u7EA7| number| 2001 |\n| show-close| \u662F\u5426\u663E\u793A\u5173\u95ED\u6309\u94AE| boolean| true |\n| close-icon| \u81EA\u5B9A\u4E49\u5173\u95ED\u56FE\u6807\uFF0C\u9ED8\u8BA4Close| string | Component| * |\n| close-on-press-escape| \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED\u5F15\u5BFC| boolean| true |\n| target-area-clickable| \u542F\u7528\u8499\u5C42\u65F6\uFF0Ctarget \u5143\u7D20\u533A\u57DF\u662F\u5426\u53EF\u4EE5\u70B9\u51FB\u3002| boolean| true |\n\n#### Tour \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| tourStep \u7EC4\u4EF6\u5217\u8868 |\n| indicators| \u81EA\u5B9A\u4E49\u6307\u793A\u5668, scope \u53C2\u6570\u662F { current, total } |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u63CF\u8FF0| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| close| \u5173\u95ED\u5F15\u5BFC\u65F6\u7684\u56DE\u8C03\u51FD\u6570| Function |\n| finish| \u5F15\u5BFC\u5B8C\u6210\u65F6\u7684\u56DE\u8C03| Function |\n| change| \u6B65\u9AA4\u6539\u53D8\u65F6\u7684\u56DE\u8C03| Function |\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u63CF\u8FF0| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| target| \u83B7\u53D6\u5F15\u5BFC\u5361\u7247\u6307\u5411\u7684\u5143\u7D20\uFF0C \u4E3A\u7A7A\u65F6\u5C45\u4E2D\u4E8E\u5C4F\u5E55\u3002 \u81EA2.5.2\u4EE5\u6765\u652F\u6301\u5B57\u7B26\u4E32\u548C\u51FD\u6570\u7C7B\u578B\u3002 \u5B57\u7B26\u4E32\u7C7B\u578B\u662F\u6587\u6863.querySelector\u7684\u9009\u62E9\u5668\u3002| HTMLElement | string | Function| - |\n| show-arrow| \u662F\u5426\u663E\u793A\u7BAD\u5934| boolean| true |\n| title| \u6807\u9898| string| * |\n| description| \u4E3B\u8981\u63CF\u8FF0\u90E8\u5206| string| - |\n| placement| \u5F15\u5BFC\u5361\u7247\u76F8\u5BF9\u4E8E\u76EE\u6807\u5143\u7D20\u7684\u4F4D\u7F6E| enum| bottom |\n| content-style| \u4E3Acontent\u81EA\u5B9A\u4E49\u6837\u5F0F| CSSProperties| * |\n| mask| \u662F\u5426\u542F\u7528\u8499\u5C42\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6539\u53D8\u8499\u5C42\u6837\u5F0F\u548C\u586B\u5145\u8272| boolean | Object| true |\n| type| \u7C7B\u578B\uFF0C\u5F71\u54CD\u5E95\u8272\u4E0E\u6587\u5B57\u989C\u8272| default | primary| default |\n| next-button-props| \u201C\u4E0B\u4E00\u6B65\u201D\u6309\u94AE\u7684\u5C5E\u6027| Object| - |\n| prev-button-props| \u201C\u4E0A\u4E00\u6B65\u201D\u6309\u94AE\u7684\u5C5E\u6027| Object| * |\n| scroll-into-view-options| \u662F\u5426\u652F\u6301\u5F53\u524D\u5143\u7D20\u6EDA\u52A8\u5230\u89C6\u7A97\u5185\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6307\u5B9A\u6EDA\u52A8\u89C6\u7A97\u7684\u76F8\u5173\u53C2\u6570\uFF0C\u9ED8\u8BA4\u8DDF\u968F Tour \u7684 scrollIntoViewOptions \u5C5E\u6027| boolean | ScrollIntoViewOptions| - |\n| show-close| \u662F\u5426\u663E\u793A\u5173\u95ED\u6309\u94AE| boolean| true |\n| close-icon| \u81EA\u5B9A\u4E49\u5173\u95ED\u56FE\u6807\uFF0C\u9ED8\u8BA4Close| string | Component| * |\n\n#### TourStep \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u63CF\u8FF0 |\n| :--- | :--- |\n| default| \u4E3B\u8981\u63CF\u8FF0\u90E8\u5206 |\n| header| \u5934\u90E8 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u63CF\u8FF0| \u53C2\u6570 |\n| :--- | :--- | :--- |\n| close| \u5173\u95ED\u5F15\u5BFC\u65F6\u7684\u56DE\u8C03\u51FD\u6570| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "show-arrow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u7BAD\u5934"
          },
          "placement": {
            "type": "attr",
            "values": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"],
            "description": "\u5F15\u5BFC\u5361\u7247\u76F8\u5BF9\u4E8E\u76EE\u6807\u5143\u7D20\u7684\u4F4D\u7F6E"
          },
          "content-style": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u4E3Acontent\u81EA\u5B9A\u4E49\u6837\u5F0F"
          },
          "mask": {
            "type": "attr",
            "values": ["boolean", "Object"],
            "description": "\u662F\u5426\u542F\u7528\u8499\u5C42\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6539\u53D8\u8499\u5C42\u6837\u5F0F\u548C\u586B\u5145\u8272"
          },
          "type": {
            "type": "attr",
            "values": ["default", "primary"],
            "description": "\u7C7B\u578B\uFF0C\u5F71\u54CD\u5E95\u8272\u4E0E\u6587\u5B57\u989C\u8272"
          },
          "v-model": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6253\u5F00\u5F15\u5BFC"
          },
          "v-model:current": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5F53\u524D\u503C"
          },
          "scroll-into-view-options": {
            "type": "attr",
            "values": ["boolean", "ScrollIntoViewOptions"],
            "description": "\u662F\u5426\u652F\u6301\u5F53\u524D\u5143\u7D20\u6EDA\u52A8\u5230\u89C6\u7A97\u5185\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6307\u5B9A\u6EDA\u52A8\u89C6\u7A97\u7684\u76F8\u5173\u53C2\u6570\uFF0C\u9ED8\u8BA4\u8DDF\u968F Tour \u7684 scrollIntoViewOptions \u5C5E\u6027"
          },
          "z-index": {
            "type": "attr",
            "values": ["number"],
            "description": "Tour \u7684\u5C42\u7EA7"
          },
          "show-close": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u5173\u95ED\u6309\u94AE"
          },
          "close-icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u81EA\u5B9A\u4E49\u5173\u95ED\u56FE\u6807\uFF0C\u9ED8\u8BA4Close"
          },
          "close-on-press-escape": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED\u5F15\u5BFC"
          },
          "target-area-clickable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u542F\u7528\u8499\u5C42\u65F6\uFF0Ctarget \u5143\u7D20\u533A\u57DF\u662F\u5426\u53EF\u4EE5\u70B9\u51FB\u3002"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "\u5173\u95ED\u5F15\u5BFC\u65F6\u7684\u56DE\u8C03\u51FD\u6570"
          },
          "finish": {
            "type": "event",
            "values": [],
            "description": "\u5F15\u5BFC\u5B8C\u6210\u65F6\u7684\u56DE\u8C03"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u6B65\u9AA4\u6539\u53D8\u65F6\u7684\u56DE\u8C03"
          },
          "target": {
            "type": "attr",
            "values": ["HTMLElement", "string", "Function"],
            "description": "\u83B7\u53D6\u5F15\u5BFC\u5361\u7247\u6307\u5411\u7684\u5143\u7D20\uFF0C \u4E3A\u7A7A\u65F6\u5C45\u4E2D\u4E8E\u5C4F\u5E55\u3002 \u81EA2.5.2\u4EE5\u6765\u652F\u6301\u5B57\u7B26\u4E32\u548C\u51FD\u6570\u7C7B\u578B\u3002 \u5B57\u7B26\u4E32\u7C7B\u578B\u662F\u6587\u6863.querySelector\u7684\u9009\u62E9\u5668\u3002"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u6807\u9898"
          },
          "description": {
            "type": "attr",
            "values": [],
            "description": "\u4E3B\u8981\u63CF\u8FF0\u90E8\u5206"
          },
          "next-button-props": {
            "type": "attr",
            "values": ["Object"],
            "description": "\u201C\u4E0B\u4E00\u6B65\u201D\u6309\u94AE\u7684\u5C5E\u6027"
          },
          "prev-button-props": {
            "type": "attr",
            "values": ["Object"],
            "description": "\u201C\u4E0A\u4E00\u6B65\u201D\u6309\u94AE\u7684\u5C5E\u6027"
          }
        },
        "el-tour-step": {
          "_html": {
            "": '<el-tour-step :target="${1:tourRef}?.\\$el" title="$2">\n$3\n</el-tour-step>'
          }
        },
        "el-tree": {
          "_html": {
            "": '<el-tree :data="${1:data}" :props="${2:treeProps}" @node-click="${3:handleNodeClick}">$4</el-tree>',
            ":accordion": '<el-tree :data="${1:data}" :props="${2:treeProps}" accordion @node-click="${3:handleNodeClick}">$4</el-tree>',
            ":show-checkbox": '<el-tree :data="${1:data}" :props="${2:treeProps}" show-checkbox @node-click="${3:handleNodeClick}">$4</el-tree>',
            ":lazy": '<el-tree :load="${1:loadNode}" lazy :props="${2:treeProps}" show-checkbox @node-click="${3:handleNodeClick}">$4</el-tree>',
            ":default[slot]": '<template #default="{ node, data }">\n$1\n</template>',
            ":draggable": '<el-tree :allow-drop="allowDrop" :allow-drag="allowDrag" :data="data" draggable default-expand-all node-key="id"\n@node-drag-start="handleDragStart" @node-drag-enter="handleDragEnter" @node-drag-leave="handleDragLeave" @node-drag-over="handleDragOver" @node-drag-end="handleDragEnd" @node-drop="handleDrop">\n</el-tree>'
          },
          "data": {
            "type": "attr",
            "values": ["array"],
            "description": "\u5C55\u793A\u6570\u636E"
          },
          "empty-text": {
            "type": "attr",
            "values": [],
            "description": "\u5185\u5BB9\u4E3A\u7A7A\u7684\u65F6\u5019\u5C55\u793A\u7684\u6587\u672C"
          },
          "node-key": {
            "type": "attr",
            "values": [],
            "description": "\u6BCF\u4E2A\u6811\u8282\u70B9\u7528\u6765\u4F5C\u4E3A\u552F\u4E00\u6807\u8BC6\u7684\u5C5E\u6027\uFF0C\u6574\u68F5\u6811\u5E94\u8BE5\u662F\u552F\u4E00\u7684"
          },
          "props": {
            "type": "attr",
            "values": ["object"],
            "description": "\u914D\u7F6E\u9009\u9879\uFF0C\u5177\u4F53\u770B\u4E0B\u8868"
          },
          "render-after-expand": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728\u7B2C\u4E00\u6B21\u5C55\u5F00\u67D0\u4E2A\u6811\u8282\u70B9\u540E\u624D\u6E32\u67D3\u5176\u5B50\u8282\u70B9"
          },
          "load": {
            "type": "attr",
            "values": ["function(node,"],
            "description": "\u52A0\u8F7D\u5B50\u6811\u6570\u636E\u7684\u65B9\u6CD5\uFF0C\u4EC5\u5F53 lazy \u5C5E\u6027\u4E3Atrue \u65F6\u751F\u6548"
          },
          "render-content": {
            "type": "attr",
            "values": ["Function(h,"],
            "description": "\u6811\u8282\u70B9\u7684\u5185\u5BB9\u533A\u7684\u6E32\u67D3 Function"
          },
          "highlight-current": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9AD8\u4EAE\u5F53\u524D\u9009\u4E2D\u8282\u70B9\uFF0C\u9ED8\u8BA4\u503C\u662F false\u3002"
          },
          "default-expand-all": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9ED8\u8BA4\u5C55\u5F00\u6240\u6709\u8282\u70B9"
          },
          "expand-on-click-node": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728\u70B9\u51FB\u8282\u70B9\u7684\u65F6\u5019\u5C55\u5F00\u6216\u8005\u6536\u7F29\u8282\u70B9\uFF0C \u9ED8\u8BA4\u503C\u4E3A true\uFF0C\u5982\u679C\u4E3A false\uFF0C\u5219\u53EA\u6709\u70B9\u7BAD\u5934\u56FE\u6807\u7684\u65F6\u5019\u624D\u4F1A\u5C55\u5F00\u6216\u8005\u6536\u7F29\u8282\u70B9\u3002"
          },
          "check-on-click-node": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728\u70B9\u51FB\u8282\u70B9\u7684\u65F6\u5019\u9009\u4E2D\u8282\u70B9\uFF0C\u9ED8\u8BA4\u503C\u4E3A false\uFF0C\u5373\u53EA\u6709\u5728\u70B9\u51FB\u590D\u9009\u6846\u65F6\u624D\u4F1A\u9009\u4E2D\u8282\u70B9\u3002"
          },
          "auto-expand-parent": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5C55\u5F00\u5B50\u8282\u70B9\u7684\u65F6\u5019\u662F\u5426\u81EA\u52A8\u5C55\u5F00\u7236\u8282\u70B9"
          },
          "default-expanded-keys": {
            "type": "attr",
            "values": ["array"],
            "description": "\u9ED8\u8BA4\u5C55\u5F00\u7684\u8282\u70B9\u7684 key \u7684\u6570\u7EC4"
          },
          "show-checkbox": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8282\u70B9\u662F\u5426\u53EF\u88AB\u9009\u62E9"
          },
          "check-strictly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u663E\u793A\u590D\u9009\u6846\u7684\u60C5\u51B5\u4E0B\uFF0C\u662F\u5426\u4E25\u683C\u7684\u9075\u5FAA\u7236\u5B50\u4E0D\u4E92\u76F8\u5173\u8054\u7684\u505A\u6CD5\uFF0C\u9ED8\u8BA4\u4E3A false"
          },
          "default-checked-keys": {
            "type": "attr",
            "values": ["array"],
            "description": "\u9ED8\u8BA4\u52FE\u9009\u7684\u8282\u70B9\u7684 key \u7684\u6570\u7EC4"
          },
          "current-node-key": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u524D\u9009\u4E2D\u7684\u8282\u70B9"
          },
          "filter-node-method": {
            "type": "attr",
            "values": ["Function(value,"],
            "description": "\u5BF9\u6811\u8282\u70B9\u8FDB\u884C\u7B5B\u9009\u65F6\u6267\u884C\u7684\u65B9\u6CD5\uFF0C \u8FD4\u56DE false \u5219\u8868\u793A\u8FD9\u4E2A\u8282\u70B9\u4F1A\u88AB\u9690\u85CF"
          },
          "accordion": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6BCF\u6B21\u53EA\u6253\u5F00\u4E00\u4E2A\u540C\u7EA7\u6811\u8282\u70B9\u5C55\u5F00"
          },
          "indent": {
            "type": "attr",
            "values": ["number"],
            "description": "\u76F8\u90BB\u7EA7\u8282\u70B9\u95F4\u7684\u6C34\u5E73\u7F29\u8FDB\uFF0C\u5355\u4F4D\u4E3A\u50CF\u7D20"
          },
          "icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u81EA\u5B9A\u4E49\u6811\u8282\u70B9\u56FE\u6807\u7EC4\u4EF6"
          },
          "lazy": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u61D2\u52A0\u8F7D\u5B50\u8282\u70B9\uFF0C\u9700\u4E0E load \u65B9\u6CD5\u7ED3\u5408\u4F7F\u7528"
          },
          "draggable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5F00\u542F\u62D6\u62FD\u8282\u70B9\u529F\u80FD"
          },
          "allow-drag": {
            "type": "attr",
            "values": ["Function(node)"],
            "description": "\u5224\u65AD\u8282\u70B9\u80FD\u5426\u88AB\u62D6\u62FD \u5982\u679C\u8FD4\u56DE false \uFF0C\u8282\u70B9\u4E0D\u80FD\u88AB\u62D6\u52A8"
          },
          "allow-drop": {
            "type": "attr",
            "values": ["Function(draggingNode,"],
            "description": "\u62D6\u62FD\u65F6\u5224\u5B9A\u76EE\u6807\u8282\u70B9\u80FD\u5426\u6210\u4E3A\u62D6\u52A8\u76EE\u6807\u4F4D\u7F6E\u3002 \u5982\u679C\u8FD4\u56DE false \uFF0C\u62D6\u52A8\u8282\u70B9\u4E0D\u80FD\u88AB\u62D6\u653E\u5230\u76EE\u6807\u8282\u70B9\u3002 type \u53C2\u6570\u6709\u4E09\u79CD\u60C5\u51B5\uFF1A'prev'\u3001'inner' \u548C 'next'\uFF0C\u5206\u522B\u8868\u793A\u653E\u7F6E\u5728\u76EE\u6807\u8282\u70B9\u524D\u3001\u63D2\u5165\u81F3\u76EE\u6807\u8282\u70B9\u548C\u653E\u7F6E\u5728\u76EE\u6807\u8282\u70B9\u540E"
          },
          "node-click": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u8282\u70B9\u88AB\u70B9\u51FB\u7684\u65F6\u5019\u89E6\u53D1"
          },
          "node-contextmenu": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u67D0\u4E00\u8282\u70B9\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "check-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u590D\u9009\u6846\u88AB\u70B9\u51FB\u7684\u65F6\u5019\u89E6\u53D1"
          },
          "check": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u8282\u70B9\u590D\u9009\u6846\u4E4B\u540E\u89E6\u53D1"
          },
          "current-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u524D\u9009\u4E2D\u8282\u70B9\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "node-expand": {
            "type": "event",
            "values": [],
            "description": "\u8282\u70B9\u88AB\u5C55\u5F00\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "node-collapse": {
            "type": "event",
            "values": [],
            "description": "\u8282\u70B9\u88AB\u5173\u95ED\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "node-drag-start": {
            "type": "event",
            "values": [],
            "description": "\u8282\u70B9\u5F00\u59CB\u62D6\u62FD\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "node-drag-enter": {
            "type": "event",
            "values": [],
            "description": "\u62D6\u62FD\u8FDB\u5165\u5176\u4ED6\u8282\u70B9\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "node-drag-leave": {
            "type": "event",
            "values": [],
            "description": "\u62D6\u62FD\u79BB\u5F00\u67D0\u4E2A\u8282\u70B9\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "node-drag-over": {
            "type": "event",
            "values": [],
            "description": "\u5728\u62D6\u62FD\u8282\u70B9\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6\uFF08\u7C7B\u4F3C\u6D4F\u89C8\u5668\u7684 mouseover \u4E8B\u4EF6\uFF09"
          },
          "node-drag-end": {
            "type": "event",
            "values": [],
            "description": "\u62D6\u62FD\u7ED3\u675F\u65F6\uFF08\u53EF\u80FD\u672A\u6210\u529F\uFF09\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "node-drop": {
            "type": "event",
            "values": [],
            "description": "\u62D6\u62FD\u6210\u529F\u5B8C\u6210\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-tree-select": {
          "_html": {
            "": '<el-tree-select v-model="${1:value}" :data="${2:data}" :render-after-expand="false">$3</el-tree-select>',
            ":lazy": '<el-tree-select v-model="${1:value}" lazy :load="${2:load}" :props="${3:props}">$4</el-tree-select>',
            ":multiple": '<el-tree-select v-model="${1:value}" :data="${2:data}" filterable clearable multiple :render-after-expand="false">$3</el-tree-select>',
            ":check-strictly": '<el-tree-select v-model="${1:value}" :data="${2:data}" filterable clearable check-strictly :render-after-expand="false">$3</el-tree-select>',
            ":show-checkbox": '<el-tree-select v-model="${1:value}" :data="${2:data}" filterable clearable :render-after-expand="false" show-checkbox>$3</el-tree-select>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/tree-select.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u65B9\u6CD5| \u4E8B\u4EF6| \u63D2\u69FD |\n| :--- | :--- | :--- | :--- |\n| tree| tree| tree| tree |\n| select| select| select| select |\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BE6\u60C5| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| cacheData 2.2.26| \u61D2\u52A0\u8F7D\u8282\u70B9\u7684\u7F13\u5B58\u6570\u636E\uFF0C\u7ED3\u6784\u4E0E\u6570\u636E\u76F8\u540C\uFF0C\u7528\u4E8E\u83B7\u53D6\u672A\u52A0\u8F7D\u6570\u636E\u7684\u6807\u7B7E| object| [] |\n\n#### \u7C7B\u578B\u58F0\u660E\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "tree": {
            "type": "attr",
            "values": ["tree"],
            "description": "tree"
          },
          "select": {
            "type": "attr",
            "values": ["select"],
            "description": "select"
          },
          "cacheData": {
            "type": "attr",
            "values": ["object"],
            "description": "\u61D2\u52A0\u8F7D\u8282\u70B9\u7684\u7F13\u5B58\u6570\u636E\uFF0C\u7ED3\u6784\u4E0E\u6570\u636E\u76F8\u540C\uFF0C\u7528\u4E8E\u83B7\u53D6\u672A\u52A0\u8F7D\u6570\u636E\u7684\u6807\u7B7E"
          }
        },
        "el-tree-v2": {
          "_html": {
            "": '<el-tree-v2 :data="${1:data}" :props="${2:props}">$3</el-tree-v2>',
            ":show-checkbox": '<el-tree-v2 :data="${1:data}" :props="${2:props}" show-checkbox>$3</el-tree-v2>',
            ":default[slot]": '<template #default="{ node }">\n$1\n</template>'
          },
          "data": {
            "type": "attr",
            "values": ["array"],
            "description": "\u5C55\u793A\u6570\u636E"
          },
          "empty-text": {
            "type": "attr",
            "values": [],
            "description": "\u5185\u5BB9\u4E3A\u7A7A\u7684\u65F6\u5019\u5C55\u793A\u7684\u6587\u672C"
          },
          "props": {
            "type": "attr",
            "values": ["object"],
            "description": "\u914D\u7F6E\u9009\u9879\uFF0C\u5177\u4F53\u770B\u4E0B\u8868"
          },
          "highlight-current": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9AD8\u4EAE\u5F53\u524D\u9009\u4E2D\u8282\u70B9"
          },
          "expand-on-click-node": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728\u70B9\u51FB\u8282\u70B9\u7684\u65F6\u5019\u5C55\u5F00\u6216\u8005\u6536\u7F29\u8282\u70B9\uFF0C \u9ED8\u8BA4\u503C\u4E3A true\uFF0C\u5982\u679C\u4E3A false\uFF0C\u5219\u53EA\u6709\u70B9\u7BAD\u5934\u56FE\u6807\u7684\u65F6\u5019\u624D\u4F1A\u5C55\u5F00\u6216\u8005\u6536\u7F29\u8282\u70B9"
          },
          "check-on-click-node": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728\u70B9\u51FB\u8282\u70B9\u7684\u65F6\u5019\u9009\u4E2D\u8282\u70B9\uFF0C\u9ED8\u8BA4\u503C\u4E3A false\uFF0C\u5373\u53EA\u6709\u5728\u70B9\u51FB\u590D\u9009\u6846\u65F6\u624D\u4F1A\u9009\u4E2D\u8282\u70B9"
          },
          "default-expanded-keys": {
            "type": "attr",
            "values": ["array"],
            "description": "\u9ED8\u8BA4\u5C55\u5F00\u7684\u8282\u70B9\u7684 key \u7684\u6570\u7EC4"
          },
          "show-checkbox": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8282\u70B9\u662F\u5426\u53EF\u88AB\u9009\u62E9"
          },
          "check-strictly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u663E\u793A\u590D\u9009\u6846\u7684\u60C5\u51B5\u4E0B\uFF0C\u662F\u5426\u4E25\u683C\u7684\u9075\u5FAA\u7236\u5B50\u4E0D\u4E92\u76F8\u5173\u8054\u7684\u505A\u6CD5\uFF0C\u9ED8\u8BA4\u4E3A false"
          },
          "default-checked-keys": {
            "type": "attr",
            "values": ["array"],
            "description": "\u9ED8\u8BA4\u52FE\u9009\u7684\u8282\u70B9\u7684 key \u7684\u6570\u7EC4"
          },
          "current-node-key": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u524D\u9009\u4E2D\u7684\u8282\u70B9"
          },
          "filter-method": {
            "type": "attr",
            "values": ["Function(value,"],
            "description": "\u5BF9\u6811\u8282\u70B9\u8FDB\u884C\u7B5B\u9009\u65F6\u6267\u884C\u7684\u65B9\u6CD5\uFF0C\u8FD4\u56DE true \u8868\u793A\u8FD9\u4E2A\u8282\u70B9\u53EF\u4EE5\u663E\u793A\uFF0C \u8FD4\u56DE false \u5219\u8868\u793A\u8FD9\u4E2A\u8282\u70B9\u4F1A\u88AB\u9690\u85CF"
          },
          "indent": {
            "type": "attr",
            "values": ["number"],
            "description": "\u76F8\u90BB\u7EA7\u8282\u70B9\u95F4\u7684\u6C34\u5E73\u7F29\u8FDB\uFF0C\u5355\u4F4D\u4E3A\u50CF\u7D20"
          },
          "icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u81EA\u5B9A\u4E49\u6811\u8282\u70B9\u7684\u56FE\u6807"
          },
          "item-size": {
            "type": "attr",
            "values": ["number"],
            "description": "\u81EA\u5B9A\u4E49\u6811\u8282\u70B9\u7684\u9AD8\u5EA6"
          },
          "node-click": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u8282\u70B9\u88AB\u70B9\u51FB\u7684\u65F6\u5019\u89E6\u53D1"
          },
          "node-contextmenu": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u8282\u70B9\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6"
          },
          "check-change": {
            "type": "event",
            "values": [],
            "description": "\u8282\u70B9\u9009\u4E2D\u72B6\u6001\u53D1\u751F\u53D8\u5316\u65F6\u7684\u56DE\u8C03"
          },
          "check": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u590D\u9009\u6846\u88AB\u70B9\u51FB\u7684\u65F6\u5019\u89E6\u53D1"
          },
          "current-change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u524D\u9009\u4E2D\u8282\u70B9\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "node-expand": {
            "type": "event",
            "values": [],
            "description": "\u8282\u70B9\u88AB\u5C55\u5F00\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "node-collapse": {
            "type": "event",
            "values": [],
            "description": "\u8282\u70B9\u88AB\u6536\u8D77\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-statistic": {
          "_html": {
            "": '<el-statistic title="$1" :value="$2">$3</el-statistic>',
            ":title[slot]": "<template #title>\n$1\n</template>",
            ":suffix[slot]": "<template #suffix>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/statistic.html)\n\n#### \u5C5E\u6027\n\n| Attribute| \u63CF\u8FF0| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| value| \u6570\u5B57\u5185\u5BB9| number| 0 |\n| decimal-separator| \u8BBE\u7F6E\u5C0F\u6570\u70B9\u7B26\u53F7| string| . |\n| formatter| \u81EA\u5B9A\u4E49\u6570\u5B57\u683C\u5F0F\u5316| Function| \u2014 |\n| group-separator| \u8BBE\u7F6E\u5343\u5206\u4F4D\u6807\u8BC6\u7B26| string| , |\n| precision| \u6570\u5B57\u7CBE\u5EA6| number| 0 |\n| prefix| \u8BBE\u7F6E\u6570\u5B57\u7684\u524D\u7F00| string| \u2014 |\n| suffix| \u8BBE\u7F6E\u6570\u5B57\u7684\u540E\u7F00| string| \u2014 |\n| title| \u6570\u5B57\u6807\u9898| string| \u2014 |\n| value-style| \u6570\u5B57\u6837\u5F0F| string / object| \u2014 |\n\n#### Statistic \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BE6\u60C5 |\n| :--- | :--- |\n| prefix| \u6570\u5B57\u533A\u4E4B\u524D |\n| suffix| \u6570\u5B57\u533A\u4E4B\u540E |\n| title| \u6570\u5B57\u6807\u9898 |\n\n#### Statistic Exposes\n\n| \u540D\u79F0| \u63CF\u8FF0| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| displayValue| \u5F53\u524D\u663E\u793A\u503C| object |\n",
          "value": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6570\u5B57\u5185\u5BB9"
          },
          "decimal-separator": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u5C0F\u6570\u70B9\u7B26\u53F7"
          },
          "formatter": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u81EA\u5B9A\u4E49\u6570\u5B57\u683C\u5F0F\u5316"
          },
          "group-separator": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u5343\u5206\u4F4D\u6807\u8BC6\u7B26"
          },
          "precision": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6570\u5B57\u7CBE\u5EA6"
          },
          "prefix": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u6570\u5B57\u7684\u524D\u7F00"
          },
          "suffix": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u6570\u5B57\u7684\u540E\u7F00"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u6570\u5B57\u6807\u9898"
          },
          "value-style": {
            "type": "attr",
            "values": [],
            "description": "\u6570\u5B57\u6837\u5F0F"
          }
        },
        "el-countdown": {
          "_html": {
            "": '<el-countdown title="$1" :value="$2">$3</el-countdown>',
            ":format": '<el-countdown title="$1" :value="$2" format="HH:mm:ss">$3</el-countdown>',
            ":title[slot]": "<template #title>\n$1\n</template>",
            ":suffix[slot]": "<template #suffix>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/statistic.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BE6\u60C5| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| value| \u76EE\u6807\u65F6\u95F4| number / Dayjs| \u2014 |\n| format| \u683C\u5F0F\u5316\u5012\u8BA1\u65F6| string| HH:mm:ss |\n| prefix| \u8BBE\u7F6E\u5012\u8BA1\u65F6\u524D\u7F00| string| \u2014 |\n| suffix| \u8BBE\u7F6E\u5012\u8BA1\u65F6\u7684\u540E\u7F00| string| \u2014 |\n| title| \u5012\u8BA1\u65F6\u6807\u9898| string| \u2014 |\n| value-style| \u5012\u8BA1\u65F6\u503C\u7684\u6837\u5F0F| string / object| \u2014 |\n#### \u4E8B\u4EF6\n\n| \u65B9\u6CD5| \u63CF\u8FF0| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u65F6\u95F4\u5DEE\u6539\u53D8\u4E8B\u4EF6| Function |\n| finish| \u5012\u8BA1\u65F6\u7ED3\u675F\u4E8B\u4EF6| Function |\n\n#### Countdown \u63D2\u69FD\n\n| \u4E8B\u4EF6\u540D| \u63CF\u8FF0 |\n| :--- | :--- |\n| prefix| \u5012\u8BA1\u65F6\u503C\u524D\u7F00 |\n| suffix| \u5012\u8BA1\u65F6\u540E\u7F00 |\n| title| \u5012\u8BA1\u65F6\u6807\u9898 |\n\n#### Countdown Exposes\n\n| \u540D\u79F0| \u8BE6\u60C5| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| displayValue| \u5F53\u524D\u663E\u793A\u503C| object |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "value": {
            "type": "attr",
            "values": ["number"],
            "description": "\u76EE\u6807\u65F6\u95F4"
          },
          "format": {
            "type": "attr",
            "values": [],
            "description": "\u683C\u5F0F\u5316\u5012\u8BA1\u65F6"
          },
          "prefix": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u5012\u8BA1\u65F6\u524D\u7F00"
          },
          "suffix": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u5012\u8BA1\u65F6\u7684\u540E\u7F00"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u5012\u8BA1\u65F6\u6807\u9898"
          },
          "value-style": {
            "type": "attr",
            "values": [],
            "description": "\u5012\u8BA1\u65F6\u503C\u7684\u6837\u5F0F"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u65F6\u95F4\u5DEE\u6539\u53D8\u4E8B\u4EF6"
          },
          "finish": {
            "type": "event",
            "values": [],
            "description": "\u5012\u8BA1\u65F6\u7ED3\u675F\u4E8B\u4EF6"
          }
        },
        "el-segmented": {
          "_html": {
            "": '<el-segmented v-model="${1:value}" :options="${2:options}">$3</el-segmented>',
            ":block": '<el-segmented v-model="${1:value}" :options="${2:options}" block>$3</el-segmented>',
            ":default[slot]": '<template #default="{ item }">\n$1\n</template>'
          },
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u7ED1\u5B9A\u503C"
          },
          "options": {
            "type": "attr",
            "values": ["array"],
            "description": "\u9009\u9879\u7684\u6570\u636E"
          },
          "size": {
            "type": "attr",
            "values": ["large", "large", "small"],
            "description": "\u7EC4\u4EF6\u5927\u5C0F"
          },
          "block": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6491\u6EE1\u7236\u5143\u7D20\u5BBD\u5EA6"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "validate-event": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F name \u5C5E\u6027"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F id \u5C5E\u6027"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u539F\u751F aria-label \u5C5E\u6027"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u6240\u9009\u503C\u66F4\u6539\u65F6\u89E6\u53D1\uFF0C\u53C2\u6570\u662F\u5F53\u524D\u9009\u4E2D\u7684\u503C"
          }
        },
        "el-affix": {
          "_html": {
            "": '<el-affix :offset="$1">\n$2\n</el-affix>',
            ":target": '<el-affix :offset="$1" target="$2">\n$3\n</el-affix>',
            ":position": '<el-affix :offset="$1" position="${2:bottom}">\n$3\n</el-affix>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/affix.html)\n#### \u5C5E\u6027\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| offset| \u504F\u79FB\u8DDD\u79BB| number| 0 |\n| position| \u56FA\u9489\u4F4D\u7F6E| enum| top |\n| target| \u6307\u5B9A\u5BB9\u5668\uFF08CSS \u9009\u62E9\u5668\uFF09| string| \u2014 |\n| z-index| z-index| number| 100 |\n#### \u4E8B\u4EF6\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| \u56FA\u9489\u72B6\u6001\u6539\u53D8\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n| scroll| \u6EDA\u52A8\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n\n#### \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n\n#### \u66B4\u9732\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| update| \u624B\u52A8\u66F4\u65B0\u56FA\u9489\u72B6\u6001| Function |\n| updateRoot| \u624B\u52A8\u66F4\u65B0\u6839\u5143\u7D20\u7684\u76D2\u6A21\u578B\u4FE1\u606F| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "offset": {
            "type": "attr",
            "values": ["number"],
            "description": "\u504F\u79FB\u8DDD\u79BB"
          },
          "position": {
            "type": "attr",
            "values": ["top", "bottom"],
            "description": "\u56FA\u9489\u4F4D\u7F6E"
          },
          "target": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u5B9A\u5BB9\u5668\uFF08CSS \u9009\u62E9\u5668\uFF09"
          },
          "z-index": {
            "type": "attr",
            "values": ["number"],
            "description": "z-index"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u56FA\u9489\u72B6\u6001\u6539\u53D8\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          },
          "scroll": {
            "type": "event",
            "values": [],
            "description": "\u6EDA\u52A8\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-anchor": {
          "_html": {
            "": '<el-anchor>\n<el-anchor-link :href="$1">\n$2\n</el-anchor-link>$3\n</el-anchor>',
            ":horizontal": '<el-anchor direction="horizontal">\n<el-anchor-link :href="$1">\n$2\n</el-anchor-link>$3\n</el-anchor>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/anchor.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| container| \u6EDA\u52A8\u7684\u5BB9\u5668| string | HTMLElement | Window | \u2014 |\n| offset| \u8BBE\u7F6E\u951A\u70B9\u6EDA\u52A8\u7684\u504F\u79FB\u91CF| number| 0 |\n| bound| \u89E6\u53D1\u951A\u70B9\u7684\u5143\u7D20\u7684\u4F4D\u7F6E\u504F\u79FB\u91CF| number| 15 |\n| duration| \u8BBE\u7F6E\u5BB9\u5668\u6EDA\u52A8\u6301\u7EED\u65F6\u95F4\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2\u3002| number| 300 |\n| marker| \u662F\u5426\u663E\u793A\u6807\u8BB0| boolean| true |\n| type| \u8BBE\u7F6E\u951A\u70B9\u7C7B\u578B| enum| default |\n| direction| \u8BBE\u7F6E\u951A\u70B9\u65B9\u5411| enum| vertical |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| change| step \u6539\u53D8\u65F6\u7684\u56DE\u8C03| Function |\n| click| \u5F53\u7528\u6237\u70B9\u51FB\u94FE\u63A5\u65F6\u89E6\u53D1| Function |\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| scrollTo| \u624B\u52A8\u6EDA\u52A8\u5230\u7279\u5B9A\u4F4D\u7F6E\u3002| Function |\n\n#### Anchor Slots\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| default| AnchorLink \u7EC4\u4EF6\u5217\u8868 |\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| title| \u94FE\u63A5\u7684\u6587\u672C\u5185\u5BB9\u3002| string| \u2014 |\n| href| \u94FE\u63A5\u7684\u5730\u5740\u3002| string| - |\n\n#### AnchorLink Slots\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u94FE\u63A5\u7684\u5185\u5BB9 |\n| sub-link| \u5B50\u94FE\u63A5\u7684\u69FD\u4F4D\u3002 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "container": {
            "type": "attr",
            "values": ["string", "HTMLElement", "Window"],
            "description": "\u6EDA\u52A8\u7684\u5BB9\u5668"
          },
          "offset": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E\u951A\u70B9\u6EDA\u52A8\u7684\u504F\u79FB\u91CF"
          },
          "bound": {
            "type": "attr",
            "values": ["number"],
            "description": "\u89E6\u53D1\u951A\u70B9\u7684\u5143\u7D20\u7684\u4F4D\u7F6E\u504F\u79FB\u91CF"
          },
          "duration": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E\u5BB9\u5668\u6EDA\u52A8\u6301\u7EED\u65F6\u95F4\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2\u3002"
          },
          "marker": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u6807\u8BB0"
          },
          "type": {
            "type": "attr",
            "values": ["defalut", "underline"],
            "description": "\u8BBE\u7F6E\u951A\u70B9\u7C7B\u578B"
          },
          "direction": {
            "type": "attr",
            "values": ["vertical", "horizontal"],
            "description": "\u8BBE\u7F6E\u951A\u70B9\u65B9\u5411"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "step \u6539\u53D8\u65F6\u7684\u56DE\u8C03"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u7528\u6237\u70B9\u51FB\u94FE\u63A5\u65F6\u89E6\u53D1"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u94FE\u63A5\u7684\u6587\u672C\u5185\u5BB9\u3002"
          },
          "href": {
            "type": "attr",
            "values": [],
            "description": "\u94FE\u63A5\u7684\u5730\u5740\u3002"
          }
        },
        "el-anchor-link": {
          "_html": {
            "": '<el-anchor-link :href="$1">\n$2\n</el-anchor-link>',
            ":sub-link[slot]": "<template #sub-link>\n$1\n</template>"
          }
        },
        "el-backtop": {
          "_html": {
            "": '<el-backtop :right="100" :bottom="100">$1</el-backtop>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/backtop.html)\n#### \u5C5E\u6027\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| target| \u89E6\u53D1\u6EDA\u52A8\u7684\u5BF9\u8C61| string| \u2014 |\n| visibility-height| \u6EDA\u52A8\u9AD8\u5EA6\u8FBE\u5230\u6B64\u53C2\u6570\u503C\u624D\u51FA\u73B0| number| 200 |\n| right| \u63A7\u5236\u5176\u663E\u793A\u4F4D\u7F6E\uFF0C\u8DDD\u79BB\u9875\u9762\u53F3\u8FB9\u8DDD| number| 40 |\n| bottom| \u63A7\u5236\u5176\u663E\u793A\u4F4D\u7F6E\uFF0C\u8DDD\u79BB\u9875\u9762\u5E95\u90E8\u8DDD\u79BB| number| 40 |\n#### \u4E8B\u4EF6\n\n| \u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| click| \u70B9\u51FB\u6309\u94AE\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "target": {
            "type": "attr",
            "values": [],
            "description": "\u89E6\u53D1\u6EDA\u52A8\u7684\u5BF9\u8C61"
          },
          "visibility-height": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6EDA\u52A8\u9AD8\u5EA6\u8FBE\u5230\u6B64\u53C2\u6570\u503C\u624D\u51FA\u73B0"
          },
          "right": {
            "type": "attr",
            "values": ["number"],
            "description": "\u63A7\u5236\u5176\u663E\u793A\u4F4D\u7F6E\uFF0C\u8DDD\u79BB\u9875\u9762\u53F3\u8FB9\u8DDD"
          },
          "bottom": {
            "type": "attr",
            "values": ["number"],
            "description": "\u63A7\u5236\u5176\u663E\u793A\u4F4D\u7F6E\uFF0C\u8DDD\u79BB\u9875\u9762\u5E95\u90E8\u8DDD\u79BB"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u6309\u94AE\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-breadcrumb": {
          "_html": {
            "": '<el-breadcrumb separator="${1:/}">\n$2\n</el-breadcrumb>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/breadcrumb.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| separator| \u5206\u9694\u7B26| string| / |\n| separator-icon| \u56FE\u6807\u5206\u9694\u7B26\u7684\u7EC4\u4EF6\u6216\u7EC4\u4EF6\u540D| string / Component| \u2014 |\n\n#### Breadcrumb Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| Breadcrumb Item |\n",
          "separator": {
            "type": "attr",
            "values": [],
            "description": "\u5206\u9694\u7B26"
          },
          "separator-icon": {
            "type": "attr",
            "values": [],
            "description": "\u56FE\u6807\u5206\u9694\u7B26\u7684\u7EC4\u4EF6\u6216\u7EC4\u4EF6\u540D"
          }
        },
        "el-breadcrumb-item": {
          "_html": {
            "": "<el-breadcrumb-item>$1</el-breadcrumb-item>",
            ":to": `<el-breadcrumb-item :to="{ path: '\${1:/}' }">$2</el-breadcrumb-item>`
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/breadcrumb.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| to| \u8DEF\u7531\u8DF3\u8F6C\u76EE\u6807\uFF0C\u540C vue-router \u7684 to \u5C5E\u6027| string / object| '' |\n| replace| \u5982\u679C\u8BBE\u7F6E\u8BE5\u5C5E\u6027\u4E3A true, \u5BFC\u822A\u5C06\u4E0D\u4F1A\u7559\u4E0B\u5386\u53F2\u8BB0\u5F55| boolean| false |\n\n#### BreadcrumbItem Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "to": {
            "type": "attr",
            "values": [],
            "description": "\u8DEF\u7531\u8DF3\u8F6C\u76EE\u6807\uFF0C\u540C vue-router \u7684 to \u5C5E\u6027"
          },
          "replace": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5982\u679C\u8BBE\u7F6E\u8BE5\u5C5E\u6027\u4E3A true, \u5BFC\u822A\u5C06\u4E0D\u4F1A\u7559\u4E0B\u5386\u53F2\u8BB0\u5F55"
          }
        },
        "el-dropdown": {
          "_html": {
            "": '<el-dropdown>\n$1<el-button type="primary">\nDropdown <el-icon class="el-icon--right"><arrow-down /></el-icon>\n</el-button>\n<template #dropdown>\n<el-dropdown-menu>\n<el-dropdown-item>$2</el-dropdown-item>\n</el-dropdown-menu>\n</template>\n</el-dropdown>',
            ":trigger": '<el-dropdown trigger="click">\n$1<el-button type="primary">\nDropdown <el-icon class="el-icon--right"><arrow-down /></el-icon>\n</el-button>\n<template #dropdown>\n<el-dropdown-menu>\n<el-dropdown-item>$2</el-dropdown-item>\n</el-dropdown-menu>\n</template>\n</el-dropdown>',
            ":command": '<el-dropdown @command="${1:handleCommand}">\n$2<el-button type="primary">\nDropdown <el-icon class="el-icon--right"><arrow-down /></el-icon>\n</el-button>\n<template #dropdown>\n<el-dropdown-menu>\n<el-dropdown-item command="$3">$4</el-dropdown-item>\n</el-dropdown-menu>\n</template>\n</el-dropdown>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/dropdown.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| type| \u83DC\u5355\u6309\u94AE\u7C7B\u578B\uFF0C\u540C Button \u7EC4\u4EF6\u4E00\u6837\uFF0C\u4EC5\u5728 split-button \u4E3A true \u7684\u60C5\u51B5\u4E0B\u6709\u6548\u3002| string| \u2014| \u2014 |\n| size| \u83DC\u5355\u5C3A\u5BF8\uFF0C\u5728 split-button \u4E3A true \u7684\u60C5\u51B5\u4E0B\u4E5F\u5BF9\u89E6\u53D1\u6309\u94AE\u751F\u6548\u3002| string| large / default / small| default |\n| max-height| \u83DC\u5355\u6700\u5927\u9AD8\u5EA6| string / number| \u2014| \u2014 |\n| split-button| \u4E0B\u62C9\u89E6\u53D1\u5143\u7D20\u5448\u73B0\u4E3A\u6309\u94AE\u7EC4| boolean| \u2014| false |\n| disabled| \u662F\u5426\u7981\u7528| boolean| \u2014| false |\n| placement| \u83DC\u5355\u5F39\u51FA\u4F4D\u7F6E| string| top/top-start/top-end/bottom/bottom-start/bottom-end| bottom |\n| trigger| \u89E6\u53D1\u4E0B\u62C9\u7684\u884C\u4E3A| string| hover/click/contextmenu| hover |\n| hide-on-click| \u662F\u5426\u5728\u70B9\u51FB\u83DC\u5355\u9879\u540E\u9690\u85CF\u83DC\u5355| boolean| \u2014| true |\n| show-timeout| \u5C55\u5F00\u4E0B\u62C9\u83DC\u5355\u7684\u5EF6\u65F6\uFF0C\u4EC5\u5728 trigger \u4E3A hover \u65F6\u6709\u6548| number| \u2014| 250 |\n| hide-timeout| \u6536\u8D77\u4E0B\u62C9\u83DC\u5355\u7684\u5EF6\u65F6\uFF08\u4EC5\u5728 trigger \u4E3A hover \u65F6\u6709\u6548\uFF09| number| \u2014| 150 |\n| role| \u4E0B\u62C9\u83DC\u5355\u7684 ARIA \u5C5E\u6027\u3002 \u6839\u636E\u5177\u4F53\u573A\u666F\uFF0C\u60A8\u53EF\u80FD\u60F3\u8981\u5C06\u6B64\u66F4\u6539\u4E3A\u201Cnavigation\u201D| string| \u2014| 'menu' |\n| tabindex| Dropdown \u7EC4\u4EF6\u7684 tabindex| number| \u2014| 0 |\n| popper-class| \u81EA\u5B9A\u4E49\u6D6E\u5C42\u7C7B\u540D| string| \u2014| \u2014 |\n| popper-options| popper.js \u53C2\u6570| Object| \u8BF7\u53C2\u8003 popper.js \u6587\u6863| {modifiers: [{name: 'computeStyles',options: {gpuAcceleration: false}}]} |\n| teleported 2.2.20| \u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20| boolean| \u2014| true |\n\n#### Dropdown \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| \u2014| \u4E0B\u62C9\u83DC\u5355\u7684\u5185\u5BB9\u3002 \u6CE8\u610F\uFF1A\u5FC5\u987B\u662F\u6709\u6548\u7684 html DOM \u5143\u7D20\uFF08\u4F8B\u5982 <span>\u3001<button> \u7B49\uFF09\u6216 el-component\uFF0C\u4EE5\u9644\u52A0\u76D1\u542C\u89E6\u53D1\u5668| \u2014 |\n| dropdown| \u4E0B\u62C9\u5217\u8868\uFF0C\u901A\u5E38\u662F <el-dropdown-menu> \u7EC4\u4EF6| Dropdown-Menu |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u53C2\u6570 |\n| :--- | :--- | :--- |\n| click| split-button \u4E3A true \u65F6\uFF0C\u70B9\u51FB\u5DE6\u4FA7\u6309\u94AE\u7684\u56DE\u8C03| \u2014 |\n| command| \u70B9\u51FB\u83DC\u5355\u9879\u89E6\u53D1\u7684\u4E8B\u4EF6\u56DE\u8C03| dropdown-item \u7684\u6307\u4EE4 |\n| visible-change| \u4E0B\u62C9\u6846\u51FA\u73B0/\u9690\u85CF\u65F6\u89E6\u53D1| \u51FA\u73B0\u5219\u4E3A true\uFF0C\u9690\u85CF\u5219\u4E3A false |\n\n| \u65B9\u6CD5\u540D| \u8BF4\u660E| \u53C2\u6570 |\n| :--- | :--- | :--- |\n| handleOpen| \u6253\u5F00\u4E0B\u62C9\u83DC\u5355| \u2014 |\n| handleClose| \u5173\u95ED\u4E0B\u62C9\u83DC\u5355| \u2014 |\n\n#### Dropdown-Menu Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| \u2014| \u4E0B\u62C9\u83DC\u5355\u7684\u5185\u5BB9| Dropdown-Item |\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| command| \u6D3E\u53D1\u5230command\u56DE\u8C03\u51FD\u6570\u7684\u6307\u4EE4\u53C2\u6570| string/number/object| \u2014| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528| boolean| \u2014| false |\n| divided| \u662F\u5426\u663E\u793A\u5206\u9694\u7B26| boolean| \u2014| false |\n| icon| \u81EA\u5B9A\u4E49\u56FE\u6807| string | Component| \u2014| \u2014 |\n\n#### Dropdown-Item Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| \u2014| \u81EA\u5B9A\u4E49Dropdown-Item\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "type": {
            "type": "attr",
            "values": [],
            "description": "\u83DC\u5355\u6309\u94AE\u7C7B\u578B\uFF0C\u540C Button \u7EC4\u4EF6\u4E00\u6837\uFF0C\u4EC5\u5728 split-button \u4E3A true \u7684\u60C5\u51B5\u4E0B\u6709\u6548\u3002"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u83DC\u5355\u5C3A\u5BF8\uFF0C\u5728 split-button \u4E3A true \u7684\u60C5\u51B5\u4E0B\u4E5F\u5BF9\u89E6\u53D1\u6309\u94AE\u751F\u6548\u3002"
          },
          "max-height": {
            "type": "attr",
            "values": [],
            "description": "\u83DC\u5355\u6700\u5927\u9AD8\u5EA6"
          },
          "split-button": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E0B\u62C9\u89E6\u53D1\u5143\u7D20\u5448\u73B0\u4E3A\u6309\u94AE\u7EC4"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "placement": {
            "type": "attr",
            "values": [],
            "description": "\u83DC\u5355\u5F39\u51FA\u4F4D\u7F6E"
          },
          "trigger": {
            "type": "attr",
            "values": [],
            "description": "\u89E6\u53D1\u4E0B\u62C9\u7684\u884C\u4E3A"
          },
          "hide-on-click": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728\u70B9\u51FB\u83DC\u5355\u9879\u540E\u9690\u85CF\u83DC\u5355"
          },
          "show-timeout": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355\u7684\u5EF6\u65F6\uFF0C\u4EC5\u5728 trigger \u4E3A hover \u65F6\u6709\u6548"
          },
          "hide-timeout": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6536\u8D77\u4E0B\u62C9\u83DC\u5355\u7684\u5EF6\u65F6\uFF08\u4EC5\u5728 trigger \u4E3A hover \u65F6\u6709\u6548\uFF09"
          },
          "role": {
            "type": "attr",
            "values": [],
            "description": "\u4E0B\u62C9\u83DC\u5355\u7684 ARIA \u5C5E\u6027\u3002 \u6839\u636E\u5177\u4F53\u573A\u666F\uFF0C\u60A8\u53EF\u80FD\u60F3\u8981\u5C06\u6B64\u66F4\u6539\u4E3A\u201Cnavigation\u201D"
          },
          "tabindex": {
            "type": "attr",
            "values": ["number"],
            "description": "Dropdown \u7EC4\u4EF6\u7684 tabindex"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u6D6E\u5C42\u7C7B\u540D"
          },
          "popper-options": {
            "type": "attr",
            "values": ["Object"],
            "description": "popper.js \u53C2\u6570"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": "split-button \u4E3A true \u65F6\uFF0C\u70B9\u51FB\u5DE6\u4FA7\u6309\u94AE\u7684\u56DE\u8C03"
          },
          "command": {
            "type": "attr",
            "values": [],
            "description": "\u6D3E\u53D1\u5230command\u56DE\u8C03\u51FD\u6570\u7684\u6307\u4EE4\u53C2\u6570"
          },
          "visible-change": {
            "type": "event",
            "values": [],
            "description": "\u4E0B\u62C9\u6846\u51FA\u73B0/\u9690\u85CF\u65F6\u89E6\u53D1"
          },
          "divided": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u5206\u9694\u7B26"
          },
          "icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u81EA\u5B9A\u4E49\u56FE\u6807"
          }
        },
        "el-dropdown-item": {
          "_html": {
            "": "<el-dropdown-item>$1</el-dropdown-item>",
            ":command": '<el-dropdown-item command="$1">$2</el-dropdown-item>'
          }
        },
        "el-menu": {
          "_html": {
            "": '<el-menu :default-active="activeIndex" mode="horizontal" @select="handleSelect">\n$1\n</el-menu>',
            ":collapse": '<el-menu :default-active="activeIndex" mode="horizontal" :collapse="isCollapse" @open="handleOpen" @close="handleClose">\n$1\n</el-menu>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/menu.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| mode| \u83DC\u5355\u5C55\u793A\u6A21\u5F0F| string| horizontal / vertical| vertical |\n| collapse| \u662F\u5426\u6C34\u5E73\u6298\u53E0\u6536\u8D77\u83DC\u5355\uFF08\u4EC5\u5728 mode \u4E3A vertical \u65F6\u53EF\u7528\uFF09| boolean| \u2014| false |\n| ellipsis| \u662F\u5426\u7701\u7565\u591A\u4F59\u7684\u5B50\u9879\uFF08\u4EC5\u5728\u6A2A\u5411\u6A21\u5F0F\u751F\u6548\uFF09| boolean| \u2014| true |\n| ellipsis-icon 2.4.4| \u81EA\u5B9A\u4E49\u7701\u7565\u56FE\u6807 (\u4EC5\u5728\u6C34\u5E73\u6A21\u5F0F\u4E0B\u53EF\u7528)| string | Component| \u2014| \u2014 |\n| popper-offset 2.4.4| \u5F39\u51FA\u5C42\u7684\u504F\u79FB\u91CF(\u5BF9\u6240\u6709\u5B50\u83DC\u5355\u6709\u6548)| number| \u2014| 6 |\n| background-color| \u83DC\u5355\u7684\u80CC\u666F\u989C\u8272\uFF08\u5341\u516D\u8FDB\u5236\u683C\u5F0F\uFF09\uFF08\u5DF2\u88AB\u5E9F\u5F03\uFF0C\u4F7F\u7528--bg-color\uFF09| string| \u2014| #ffffff |\n| text-color| \u6587\u5B57\u989C\u8272\uFF08\u5341\u516D\u8FDB\u5236\u683C\u5F0F\uFF09\uFF08\u5DF2\u88AB\u5E9F\u5F03\uFF0C\u4F7F\u7528--text-color\uFF09| string| \u2014| #303133 |\n| active-text-color| \u6D3B\u52A8\u83DC\u5355\u9879\u7684\u6587\u672C\u989C\u8272\uFF08\u5341\u516D\u8FDB\u5236\u683C\u5F0F\uFF09\uFF08\u5DF2\u88AB\u5E9F\u5F03\uFF0C\u4F7F\u7528--active-color\uFF09| string| \u2014| #409EFF |\n| default-active| \u9875\u9762\u52A0\u8F7D\u65F6\u9ED8\u8BA4\u6FC0\u6D3B\u83DC\u5355\u7684 index| string| \u2014| \u2014 |\n| default-openeds| \u9ED8\u8BA4\u6253\u5F00\u7684 sub-menu \u7684 index \u7684\u6570\u7EC4| Array| \u2014| \u2014 |\n| unique-opened| \u662F\u5426\u53EA\u4FDD\u6301\u4E00\u4E2A\u5B50\u83DC\u5355\u7684\u5C55\u5F00| boolean| \u2014| false |\n| menu-trigger| \u5B50\u83DC\u5355\u6253\u5F00\u7684\u89E6\u53D1\u65B9\u5F0F\uFF0C\u53EA\u5728 mode \u4E3A horizontal \u65F6\u6709\u6548\u3002| string| hover / click| hover |\n| router| \u662F\u5426\u542F\u7528 vue-router \u6A21\u5F0F\u3002 \u542F\u7528\u8BE5\u6A21\u5F0F\u4F1A\u5728\u6FC0\u6D3B\u5BFC\u822A\u65F6\u4EE5 index \u4F5C\u4E3A path \u8FDB\u884C\u8DEF\u7531\u8DF3\u8F6C \u4F7F\u7528 default-active \u6765\u8BBE\u7F6E\u52A0\u8F7D\u65F6\u7684\u6FC0\u6D3B\u9879\u3002| boolean| \u2014| false |\n| collapse-transition| \u662F\u5426\u5F00\u542F\u6298\u53E0\u52A8\u753B| boolean| \u2014| true |\n| popper-effect 2.2.26| Tooltip \u4E3B\u9898\uFF0C\u5185\u7F6E\u4E86 dark / light \u4E24\u79CD\u4E3B\u9898| string| dark / light| dark |\n| close-on-click-outside 2.4.4| \u53EF\u9009\uFF0C\u5355\u51FB\u5916\u90E8\u65F6\u662F\u5426\u6298\u53E0\u83DC\u5355| boolean| \u2014| false |\n| popper-class 2.5.0| \u4E3A popper \u6DFB\u52A0\u7C7B\u540D| string| \u2014| \u2014 |\n| show-timeout 2.5.0| \u83DC\u5355\u51FA\u73B0\u524D\u7684\u5EF6\u8FDF| number| \u2014| 300 |\n| hide-timeout 2.5.0| \u83DC\u5355\u6D88\u5931\u524D\u7684\u5EF6\u8FDF| number| \u2014| 300 |\n\n| \u65B9\u6CD5\u540D| \u8BF4\u660E| \u53C2\u6570 |\n| :--- | :--- | :--- |\n| open| \u5C55\u5F00\u6307\u5B9A\u7684 sub-menu| index: \u9700\u8981\u6253\u5F00\u7684 sub-menu \u7684 index |\n| close| \u6536\u8D77\u6307\u5B9A\u7684 sub-menu| index: \u9700\u8981\u6536\u8D77\u7684 sub-menu \u7684 index |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| select| \u83DC\u5355\u6FC0\u6D3B\u56DE\u8C03| index: \u9009\u4E2D\u83DC\u5355\u9879\u7684 index, indexPath: \u9009\u4E2D\u83DC\u5355\u9879\u7684 index path, item: \u9009\u4E2D\u83DC\u5355\u9879, routeResult: vue-router \u7684\u8FD4\u56DE\u503C\uFF08\u5982\u679C router \u4E3A true\uFF09 |\n| open| sub-menu \u5C55\u5F00\u7684\u56DE\u8C03| index: \u6253\u5F00\u7684 sub-menu \u7684 index, indexPath: \u6253\u5F00\u7684 sub-menu \u7684 index path |\n| close| sub-menu \u6536\u8D77\u7684\u56DE\u8C03| index: \u6536\u8D77\u7684 sub-menu \u7684 index, indexPath: \u6536\u8D77\u7684 sub-menu \u7684 index path |\n\n#### Menu Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| \u2014| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| SubMenu / Menu-Item / Menu-Item-Group |\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| index| \u552F\u4E00\u6807\u5FD7| string| \u2014| \u2014 |\n| popper-class| \u4E3A popper \u6DFB\u52A0\u7C7B\u540D| string| \u2014| \u2014 |\n| show-timeout| \u5B50\u83DC\u5355\u51FA\u73B0\u4E4B\u524D\u7684\u5EF6\u8FDF\uFF0C(\u7EE7\u627F menu \u7684 show-timeout \u914D\u7F6E)| number| \u2014| \u2014 |\n| hide-timeout| \u5B50\u83DC\u5355\u6D88\u5931\u4E4B\u524D\u7684\u5EF6\u8FDF\uFF0C(\u7EE7\u627F menu \u7684 hide-timeout \u914D\u7F6E)| number| \u2014| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528| boolean| \u2014| false |\n| popper-append-to-body deprecated| \u662F\u5426\u5C06\u5F39\u51FA\u83DC\u5355\u63D2\u5165\u81F3 body \u5143\u7D20\u3002 \u5728\u83DC\u5355\u7684\u5B9A\u4F4D\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u53EF\u5C1D\u8BD5\u4FEE\u6539\u8BE5\u5C5E\u6027| boolean| \u2014| \u4E00\u7EA7\u5B50\u83DC\u5355\uFF1Atrue / \u975E\u4E00\u7EA7\u5B50\u83DC\u5355\uFF1Afalse |\n| teleported| \u662F\u5426\u5C06 popup \u7684\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20| boolean| \u2014| \u4E00\u7EA7\u5B50\u83DC\u5355\uFF1Atrue / \u975E\u4E00\u7EA7\u5B50\u83DC\u5355\uFF1Afalse |\n| popper-offset| \u5F39\u51FA\u7A97\u53E3\u7684\u504F\u79FB\u91CF (\u8986\u76D6 popper\u7684\u83DC\u5355)| number| \u2014| \u2014 |\n| expand-close-icon| \u7236\u83DC\u5355\u5C55\u5F00\u4E14\u5B50\u83DC\u5355\u5173\u95ED\u65F6\u7684\u56FE\u6807\uFF0C expand-close-icon \u548C expand-open-icon \u9700\u8981\u4E00\u8D77\u914D\u7F6E\u624D\u80FD\u751F\u6548| string | Component| \u2014| \u2014 |\n| expand-open-icon| \u7236\u83DC\u5355\u5C55\u5F00\u4E14\u5B50\u83DC\u5355\u6253\u5F00\u65F6\u7684\u56FE\u6807\uFF0C expand-open-icon \u548C expand-close-icon \u9700\u8981\u4E00\u8D77\u914D\u7F6E\u624D\u80FD\u751F\u6548| string | Component| \u2014| \u2014 |\n| collapse-close-icon| \u7236\u83DC\u5355\u6536\u8D77\u4E14\u5B50\u83DC\u5355\u5173\u95ED\u65F6\u7684\u56FE\u6807\uFF0C expand-close-icon \u548C expand-open-icon \u9700\u8981\u4E00\u8D77\u914D\u7F6E\u624D\u80FD\u751F\u6548| string | Component| \u2014| \u2014 |\n| collapse-open-icon| \u7236\u83DC\u5355\u6536\u8D77\u4E14\u5B50\u83DC\u5355\u6253\u5F00\u65F6\u7684\u56FE\u6807\uFF0C expand-open-icon \u548C expand-close-icon \u9700\u8981\u4E00\u8D77\u914D\u7F6E\u624D\u80FD\u751F\u6548| string | Component| \u2014| \u2014 |\n\n#### SubMenu Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| \u2014| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9| SubMenu / Menu-Item / Menu-Item-Group |\n| title| \u81EA\u5B9A\u4E49\u6807\u9898\u5185\u5BB9| \u2014 |\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| index| \u552F\u4E00\u6807\u5FD7| string/null| \u2014| null |\n| route| Vue Router \u8DEF\u5F84\u5BF9\u8C61| object| \u2014| \u2014 |\n| disabled| \u662F\u5426\u7981\u7528| boolean| \u2014| false |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| click| \u83DC\u5355\u70B9\u51FB\u65F6\u7684\u56DE\u8C03\u51FD\u6570| el-menu-item \u5B9E\u4F8B |\n\n#### Menu-Item Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| \u2014| \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u5185\u5BB9 |\n| title| \u81EA\u5B9A\u4E49\u6807\u9898\u5185\u5BB9 |\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| title| \u7EC4\u6807\u9898| string| \u2014| \u2014 |\n\n#### Menu-Item-Group Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| \u2014| \u9ED8\u8BA4\u63D2\u69FD\u5185\u5BB9| Menu-Item |\n| title| \u81EA\u5B9A\u4E49\u7EC4\u6807\u9898\u5185\u5BB9| \u2014 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "mode": {
            "type": "attr",
            "values": [],
            "description": "\u83DC\u5355\u5C55\u793A\u6A21\u5F0F"
          },
          "collapse": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6C34\u5E73\u6298\u53E0\u6536\u8D77\u83DC\u5355\uFF08\u4EC5\u5728 mode \u4E3A vertical \u65F6\u53EF\u7528\uFF09"
          },
          "ellipsis": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7701\u7565\u591A\u4F59\u7684\u5B50\u9879\uFF08\u4EC5\u5728\u6A2A\u5411\u6A21\u5F0F\u751F\u6548\uFF09"
          },
          "ellipsis-icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u81EA\u5B9A\u4E49\u7701\u7565\u56FE\u6807 (\u4EC5\u5728\u6C34\u5E73\u6A21\u5F0F\u4E0B\u53EF\u7528)"
          },
          "popper-offset": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5F39\u51FA\u7A97\u53E3\u7684\u504F\u79FB\u91CF (\u8986\u76D6 popper\u7684\u83DC\u5355)"
          },
          "background-color": {
            "type": "attr",
            "values": [],
            "description": "\u83DC\u5355\u7684\u80CC\u666F\u989C\u8272\uFF08\u5341\u516D\u8FDB\u5236\u683C\u5F0F\uFF09\uFF08\u5DF2\u88AB\u5E9F\u5F03\uFF0C\u4F7F\u7528--bg-color\uFF09"
          },
          "text-color": {
            "type": "attr",
            "values": [],
            "description": "\u6587\u5B57\u989C\u8272\uFF08\u5341\u516D\u8FDB\u5236\u683C\u5F0F\uFF09\uFF08\u5DF2\u88AB\u5E9F\u5F03\uFF0C\u4F7F\u7528--text-color\uFF09"
          },
          "active-text-color": {
            "type": "attr",
            "values": [],
            "description": "\u6D3B\u52A8\u83DC\u5355\u9879\u7684\u6587\u672C\u989C\u8272\uFF08\u5341\u516D\u8FDB\u5236\u683C\u5F0F\uFF09\uFF08\u5DF2\u88AB\u5E9F\u5F03\uFF0C\u4F7F\u7528--active-color\uFF09"
          },
          "default-active": {
            "type": "attr",
            "values": [],
            "description": "\u9875\u9762\u52A0\u8F7D\u65F6\u9ED8\u8BA4\u6FC0\u6D3B\u83DC\u5355\u7684 index"
          },
          "default-openeds": {
            "type": "attr",
            "values": ["Array"],
            "description": "\u9ED8\u8BA4\u6253\u5F00\u7684 sub-menu \u7684 index \u7684\u6570\u7EC4"
          },
          "unique-opened": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EA\u4FDD\u6301\u4E00\u4E2A\u5B50\u83DC\u5355\u7684\u5C55\u5F00"
          },
          "menu-trigger": {
            "type": "attr",
            "values": [],
            "description": "\u5B50\u83DC\u5355\u6253\u5F00\u7684\u89E6\u53D1\u65B9\u5F0F\uFF0C\u53EA\u5728 mode \u4E3A horizontal \u65F6\u6709\u6548\u3002"
          },
          "router": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u542F\u7528 vue-router \u6A21\u5F0F\u3002 \u542F\u7528\u8BE5\u6A21\u5F0F\u4F1A\u5728\u6FC0\u6D3B\u5BFC\u822A\u65F6\u4EE5 index \u4F5C\u4E3A path \u8FDB\u884C\u8DEF\u7531\u8DF3\u8F6C \u4F7F\u7528 default-active \u6765\u8BBE\u7F6E\u52A0\u8F7D\u65F6\u7684\u6FC0\u6D3B\u9879\u3002"
          },
          "collapse-transition": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5F00\u542F\u6298\u53E0\u52A8\u753B"
          },
          "popper-effect": {
            "type": "attr",
            "values": [],
            "description": "Tooltip \u4E3B\u9898\uFF0C\u5185\u7F6E\u4E86 dark / light \u4E24\u79CD\u4E3B\u9898"
          },
          "close-on-click-outside": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u53EF\u9009\uFF0C\u5355\u51FB\u5916\u90E8\u65F6\u662F\u5426\u6298\u53E0\u83DC\u5355"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "\u4E3A popper \u6DFB\u52A0\u7C7B\u540D"
          },
          "show-timeout": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5B50\u83DC\u5355\u51FA\u73B0\u4E4B\u524D\u7684\u5EF6\u8FDF\uFF0C(\u7EE7\u627F menu \u7684 show-timeout \u914D\u7F6E)"
          },
          "hide-timeout": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5B50\u83DC\u5355\u6D88\u5931\u4E4B\u524D\u7684\u5EF6\u8FDF\uFF0C(\u7EE7\u627F menu \u7684 hide-timeout \u914D\u7F6E)"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u83DC\u5355\u6FC0\u6D3B\u56DE\u8C03"
          },
          "open": {
            "type": "event",
            "values": [],
            "description": "sub-menu \u5C55\u5F00\u7684\u56DE\u8C03"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "sub-menu \u6536\u8D77\u7684\u56DE\u8C03"
          },
          "index": {
            "type": "attr",
            "values": [],
            "description": "\u552F\u4E00\u6807\u5FD7"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "popper-append-to-bodydeprecated": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06\u5F39\u51FA\u83DC\u5355\u63D2\u5165\u81F3 body \u5143\u7D20\u3002 \u5728\u83DC\u5355\u7684\u5B9A\u4F4D\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u53EF\u5C1D\u8BD5\u4FEE\u6539\u8BE5\u5C5E\u6027"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06 popup \u7684\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20"
          },
          "expand-close-icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u7236\u83DC\u5355\u5C55\u5F00\u4E14\u5B50\u83DC\u5355\u5173\u95ED\u65F6\u7684\u56FE\u6807\uFF0C expand-close-icon \u548C expand-open-icon \u9700\u8981\u4E00\u8D77\u914D\u7F6E\u624D\u80FD\u751F\u6548"
          },
          "expand-open-icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u7236\u83DC\u5355\u5C55\u5F00\u4E14\u5B50\u83DC\u5355\u6253\u5F00\u65F6\u7684\u56FE\u6807\uFF0C expand-open-icon \u548C expand-close-icon \u9700\u8981\u4E00\u8D77\u914D\u7F6E\u624D\u80FD\u751F\u6548"
          },
          "collapse-close-icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u7236\u83DC\u5355\u6536\u8D77\u4E14\u5B50\u83DC\u5355\u5173\u95ED\u65F6\u7684\u56FE\u6807\uFF0C expand-close-icon \u548C expand-open-icon \u9700\u8981\u4E00\u8D77\u914D\u7F6E\u624D\u80FD\u751F\u6548"
          },
          "collapse-open-icon": {
            "type": "attr",
            "values": ["string", "Component"],
            "description": "\u7236\u83DC\u5355\u6536\u8D77\u4E14\u5B50\u83DC\u5355\u6253\u5F00\u65F6\u7684\u56FE\u6807\uFF0C expand-open-icon \u548C expand-close-icon \u9700\u8981\u4E00\u8D77\u914D\u7F6E\u624D\u80FD\u751F\u6548"
          },
          "route": {
            "type": "attr",
            "values": ["object"],
            "description": "Vue Router \u8DEF\u5F84\u5BF9\u8C61"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": "\u83DC\u5355\u70B9\u51FB\u65F6\u7684\u56DE\u8C03\u51FD\u6570"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u7EC4\u6807\u9898"
          }
        },
        "el-menu-item": {
          "_html": {
            "": '<el-menu-item index="$1">$2</el-menu-item>'
          }
        },
        "el-sub-menu": {
          "_html": {
            "": '<el-sub-menu index="$1">$2</el-sub-menu>',
            ":title[slot]": "<template #title>\n$1\n</template>"
          }
        },
        "el-page-header": {
          "_html": {
            "": '<el-page-header title="Back" @back="onBack">\n<template #content>\n$1\n</template>\n</el-page-header>',
            ":breadcrumb[slot]": "<template #breadcrumb>\n$1\n</template>",
            ":content[slot]": "<template #content>\n$1\n</template>",
            ":extra[slot]": "<template #extra>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/page-header.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| icon| Page Header \u7684\u56FE\u6807 Icon \u7EC4\u4EF6| string / Component| Back |\n| title| Page Header \u7684\u4E3B\u6807\u9898\uFF0C\u9ED8\u8BA4\u662F Back (\u5185\u7F6E a11y)| string| '' |\n| content| Page Header \u7684\u5185\u5BB9| string| '' |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| back| \u70B9\u51FB\u5DE6\u4FA7\u533A\u57DF\u89E6\u53D1| Function |\n\n#### \u63D2\u69FD\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| icon| \u56FE\u6807\u5185\u5BB9 |\n| title| \u6807\u9898\u5185\u5BB9 |\n| content| \u5185\u5BB9 |\n| extra| \u6269\u5C55\u8BBE\u7F6E |\n| breadcrumb| \u9762\u5305\u5C51\u5BFC\u822A\u5185\u5BB9 |\n| default| \u9ED8\u8BA4\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "icon": {
            "type": "attr",
            "values": [],
            "description": "Page Header \u7684\u56FE\u6807 Icon \u7EC4\u4EF6"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "Page Header \u7684\u4E3B\u6807\u9898\uFF0C\u9ED8\u8BA4\u662F Back (\u5185\u7F6E a11y)"
          },
          "content": {
            "type": "attr",
            "values": [],
            "description": "Page Header \u7684\u5185\u5BB9"
          },
          "back": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u5DE6\u4FA7\u533A\u57DF\u89E6\u53D1"
          }
        },
        "el-steps": {
          "_html": {
            "": '<el-steps :active="${1:active}" finish-status="${2:success}">\n<el-step title="$3"></el-step>$4\n</el-steps>',
            ":align-center": '<el-steps :active="${1:active}" finish-status="${2:success}" align-center>\n<el-step title="$3"></el-step>$4\n</el-steps>',
            ":vertical": '<el-steps :active="${1:active}" finish-status="${2:success}" direction="vertical">\n<el-step title="$3"></el-step>$4\n</el-steps>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/steps.html)\n\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| space| \u6BCF\u4E2A step \u7684\u95F4\u8DDD\uFF0C\u4E0D\u586B\u5199\u5C06\u81EA\u9002\u5E94\u95F4\u8DDD\u3002 \u652F\u6301\u767E\u5206\u6BD4\u3002| number / string| '' |\n| direction| \u663E\u793A\u65B9\u5411| enum| horizontal |\n| active| \u8BBE\u7F6E\u5F53\u524D\u6FC0\u6D3B\u6B65\u9AA4| number| 0 |\n| process-status| \u8BBE\u7F6E\u5F53\u524D\u6B65\u9AA4\u7684\u72B6\u6001| enum| process |\n| finish-status| \u8BBE\u7F6E\u7ED3\u675F\u6B65\u9AA4\u7684\u72B6\u6001| enum| finish |\n| align-center| \u8FDB\u884C\u5C45\u4E2D\u5BF9\u9F50| boolean| \u2014 |\n| simple| \u662F\u5426\u5E94\u7528\u7B80\u6D01\u98CE\u683C| boolean| \u2014 |\n\n#### Steps \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u5B50\u6807\u7B7E |\n| :--- | :--- | :--- |\n| default| \u9ED8\u8BA4\u63D2\u69FD| Step |\n",
          "space": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6BCF\u4E2A step \u7684\u95F4\u8DDD\uFF0C\u4E0D\u586B\u5199\u5C06\u81EA\u9002\u5E94\u95F4\u8DDD\u3002 \u652F\u6301\u767E\u5206\u6BD4\u3002"
          },
          "direction": {
            "type": "attr",
            "values": ["horizontal", "vertical"],
            "description": "\u663E\u793A\u65B9\u5411"
          },
          "active": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E\u5F53\u524D\u6FC0\u6D3B\u6B65\u9AA4"
          },
          "process-status": {
            "type": "attr",
            "values": ["enum"],
            "description": "\u8BBE\u7F6E\u5F53\u524D\u6B65\u9AA4\u7684\u72B6\u6001"
          },
          "finish-status": {
            "type": "attr",
            "values": ["wait", "process", "finish", "error", "success"],
            "description": "\u8BBE\u7F6E\u7ED3\u675F\u6B65\u9AA4\u7684\u72B6\u6001"
          },
          "align-center": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8FDB\u884C\u5C45\u4E2D\u5BF9\u9F50"
          },
          "simple": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5E94\u7528\u7B80\u6D01\u98CE\u683C"
          }
        },
        "el-step": {
          "_html": {
            "": '<el-step title="$1">$2</el-step>',
            ":icon[slot]": "<template #icon>\n$1\n</template>",
            ":title[slot]": "<template #title>\n$1\n</template>",
            ":description[slot]": "<template #description>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/steps.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| title| \u6807\u9898| string| '' |\n| description| \u63CF\u8FF0\u6587\u6848| string| '' |\n| icon| Step \u7EC4\u4EF6\u7684\u81EA\u5B9A\u4E49\u56FE\u6807\u3002 \u4E5F\u652F\u6301 slot \u65B9\u5F0F\u5199\u5165| string / Component| \u2014 |\n| status| \u8BBE\u7F6E\u5F53\u524D\u6B65\u9AA4\u7684\u72B6\u6001\uFF0C \u4E0D\u8BBE\u7F6E\u5219\u6839\u636E steps \u786E\u5B9A\u72B6\u6001| enum| '' |\n\n#### Step \u63D2\u69FD\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| icon| \u81EA\u5B9A\u4E49\u56FE\u6807 |\n| title| \u81EA\u5B9A\u4E49\u6807\u9898 |\n| description| \u81EA\u5B9A\u4E49\u63CF\u8FF0\u6587\u6848 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u6807\u9898"
          },
          "description": {
            "type": "attr",
            "values": [],
            "description": "\u63CF\u8FF0\u6587\u6848"
          },
          "icon": {
            "type": "attr",
            "values": [],
            "description": "Step \u7EC4\u4EF6\u7684\u81EA\u5B9A\u4E49\u56FE\u6807\u3002 \u4E5F\u652F\u6301 slot \u65B9\u5F0F\u5199\u5165"
          },
          "status": {
            "type": "attr",
            "values": ["wait", "process", "finish", "error", "success"],
            "description": "\u8BBE\u7F6E\u5F53\u524D\u6B65\u9AA4\u7684\u72B6\u6001\uFF0C \u4E0D\u8BBE\u7F6E\u5219\u6839\u636E steps \u786E\u5B9A\u72B6\u6001"
          }
        },
        "el-tabs": {
          "_html": {
            "": '<el-tabs v-model="${1:activeName}" @tab-click="${2:handleClick}">\n<el-tab-pane label="$3" name="$4">$5</el-tab-pane>$6\n</el-tabs>',
            ":card": '<el-tabs v-model="${1:activeName}" type="card" @tab-click="${2:handleClick}">\n<el-tab-pane label="$3" name="$4">$5</el-tab-pane>$6\n</el-tabs>',
            ":editable": '<el-tabs v-model="${1:activeName}" editable @edit="${2:handleTabsEdit}">\n<el-tab-pane label="$3" name="$4">$5</el-tab-pane>$6\n</el-tabs>',
            ":add-icon[slot]": "<template #add-icon>\n$1\n</template>"
          },
          "v-model": {
            "type": "attr",
            "values": [],
            "description": "\u7ED1\u5B9A\u503C\uFF0C\u9009\u4E2D\u9009\u9879\u5361\u7684 name"
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": "\u98CE\u683C\u7C7B\u578B"
          },
          "closable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6807\u7B7E\u662F\u5426\u53EF\u5173\u95ED"
          },
          "addable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6807\u7B7E\u662F\u5426\u53EF\u589E\u52A0"
          },
          "editable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6807\u7B7E\u662F\u5426\u540C\u65F6\u53EF\u589E\u52A0\u548C\u5173\u95ED"
          },
          "tab-position": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u9879\u5361\u6240\u5728\u4F4D\u7F6E"
          },
          "stretch": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6807\u7B7E\u7684\u5BBD\u5EA6\u662F\u5426\u81EA\u6491\u5F00"
          },
          "before-leave": {
            "type": "attr",
            "values": ["Function(activeName,"],
            "description": "\u5207\u6362\u6807\u7B7E\u4E4B\u524D\u7684\u94A9\u5B50\u51FD\u6570\uFF0C \u82E5\u8FD4\u56DE false  \u6216\u8005\u8FD4\u56DE\u88AB reject \u7684 Promise\uFF0C\u5219\u963B\u6B62\u5207\u6362\u3002"
          },
          "tab-click": {
            "type": "event",
            "values": [],
            "description": "tab \u88AB\u9009\u4E2D\u65F6\u89E6\u53D1"
          },
          "tab-change": {
            "type": "event",
            "values": [],
            "description": "activeName \u6539\u53D8\u65F6\u89E6\u53D1"
          },
          "tab-remove": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB tab \u79FB\u9664\u6309\u94AE\u65F6\u89E6\u53D1"
          },
          "tab-add": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB tab \u65B0\u589E\u6309\u94AE\u65F6\u89E6\u53D1"
          },
          "edit": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB tab \u7684\u65B0\u589E\u6216\u79FB\u9664\u6309\u94AE\u540E\u89E6\u53D1"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u9879\u5361\u6807\u9898"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u4E0E\u9009\u9879\u5361\u7ED1\u5B9A\u503C value \u5BF9\u5E94\u7684\u6807\u8BC6\u7B26\uFF0C\u8868\u793A\u9009\u9879\u5361\u522B\u540D"
          },
          "lazy": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6807\u7B7E\u662F\u5426\u5EF6\u8FDF\u6E32\u67D3"
          }
        },
        "el-tab-pane": {
          "_html": {
            "": '<el-tab-pane label="$1" name="$2">$3</el-tab-pane>',
            ":label[slot]": "<template #label>\n$1\n</template>"
          }
        },
        "el-alert": {
          "_html": {
            "": '<el-alert title="$1" type="success">$2</el-alert>',
            ":show-icon": '<el-alert title="$1" type="success" show-icon>$2</el-alert>',
            ":effect": '<el-alert title="$1" type="success" effect="dark">$2</el-alert>',
            ":title[slot]": "<template #title>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/alert.html)\n\n#### \u5C5E\u6027\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| title| Alert \u6807\u9898\u3002| string| \u2014 |\n| type| Alert \u7C7B\u578B\u3002| enum| info |\n| description| \u63CF\u8FF0\u6027\u6587\u672C| string| \u2014 |\n| closable| \u662F\u5426\u53EF\u4EE5\u5173\u95ED| boolean| true |\n| center| \u6587\u5B57\u662F\u5426\u5C45\u4E2D| boolean| false |\n| close-text| \u81EA\u5B9A\u4E49\u5173\u95ED\u6309\u94AE\u6587\u672C| string| \u2014 |\n| show-icon| \u662F\u5426\u663E\u793A\u7C7B\u578B\u56FE\u6807| boolean| false |\n| effect| \u4E3B\u9898\u6837\u5F0F| enum| light |\n#### \u4E8B\u4EF6\n\n| \u540D\u79F0| \u63CF\u8FF0| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| close| \u5173\u95ED Alert \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6| Function |\n\n#### Slots\n\n| \u540D\u79F0| \u63CF\u8FF0 |\n| :--- | :--- |\n| default| Alert \u5185\u5BB9\u63CF\u8FF0 |\n| title| \u6807\u9898\u7684\u5185\u5BB9 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "title": {
            "type": "attr",
            "values": [],
            "description": "Alert \u6807\u9898\u3002"
          },
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info"],
            "description": "Alert \u7C7B\u578B\u3002"
          },
          "description": {
            "type": "attr",
            "values": [],
            "description": "\u63CF\u8FF0\u6027\u6587\u672C"
          },
          "closable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u5173\u95ED"
          },
          "center": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6587\u5B57\u662F\u5426\u5C45\u4E2D"
          },
          "close-text": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u5173\u95ED\u6309\u94AE\u6587\u672C"
          },
          "show-icon": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u7C7B\u578B\u56FE\u6807"
          },
          "effect": {
            "type": "attr",
            "values": ["dark", "light"],
            "description": "\u4E3B\u9898\u6837\u5F0F"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "\u5173\u95ED Alert \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6"
          }
        },
        "el-dialog": {
          "_html": {
            "": '<el-dialog v-model="${1:visible}" title="$2" width="600px" :before-close="handleClose" >\n$3\n<template #footer>\n<div class="dialog-footer">\n<el-button @click="closeDialog">Cancel</el-button>\n<el-button type="primary" @click="confirmDialog">Confirm</el-button>\n</div>\n</template>\n</el-dialog>',
            ":draggable": '<el-dialog v-model="${1:visible}" title="$2" width="600px" draggable :before-close="handleClose" >\n$3\n<template #footer>\n<div class="dialog-footer">\n<el-button @click="closeDialog">Cancel</el-button>\n<el-button type="primary" @click="confirmDialog">Confirm</el-button>\n</div>\n</template>\n</el-dialog>',
            ":append-to-body": '<el-dialog v-model="${1:visible}" title="$2" width="600px" append-to-body :before-close="handleClose" >\n$3\n<template #footer>\n<div class="dialog-footer">\n<el-button @click="closeDialog">Cancel</el-button>\n<el-button type="primary" @click="confirmDialog">Confirm</el-button>\n</div>\n</template>\n</el-dialog>',
            ":header[slot]": '<template #header="{ close, titleId, titleClass }">\n$1\n</template>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/dialog.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u662F\u5426\u663E\u793A Dialog| boolean| \u2014 |\n| title| Dialog \u5BF9\u8BDD\u6846 Dialog \u7684\u6807\u9898\uFF0C \u4E5F\u53EF\u901A\u8FC7\u5177\u540D slot \uFF08\u89C1\u4E0B\u8868\uFF09\u4F20\u5165| string| '' |\n| width| \u5BF9\u8BDD\u6846\u7684\u5BBD\u5EA6\uFF0C\u9ED8\u8BA4\u503C\u4E3A 50%| string / number| '' |\n| fullscreen| \u662F\u5426\u4E3A\u5168\u5C4F Dialog| boolean| false |\n| top| dialog CSS \u4E2D\u7684 margin-top \u503C\uFF0C\u9ED8\u8BA4\u4E3A 15vh| string| '' |\n| modal| \u662F\u5426\u9700\u8981\u906E\u7F69\u5C42| boolean| true |\n| modal-class| \u906E\u7F69\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| \u2014 |\n| append-to-body| Dialog \u81EA\u8EAB\u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\u3002 \u5D4C\u5957\u7684 Dialog \u5FC5\u987B\u6307\u5B9A\u8BE5\u5C5E\u6027\u5E76\u8D4B\u503C\u4E3A true| boolean| false |\n| append-to 2.4.3| Dialog \u6302\u8F7D\u5230\u54EA\u4E2A DOM \u5143\u7D20 \u5C06\u8986\u76D6 append-to-body| string| body |\n| lock-scroll| \u662F\u5426\u5728 Dialog \u51FA\u73B0\u65F6\u5C06 body \u6EDA\u52A8\u9501\u5B9A| boolean| true |\n| custom-class deprecated| Dialog \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| '' |\n| open-delay| dialog \u6253\u5F00\u7684\u5EF6\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2| number| 0 |\n| close-delay| drawer \u5173\u95ED\u7684\u5EF6\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2| number| 0 |\n| close-on-click-modal| \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u70B9\u51FB modal \u5173\u95ED Dialog| boolean| true |\n| close-on-press-escape| \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED Dialog| boolean| true |\n| show-close| \u662F\u5426\u663E\u793A\u5173\u95ED\u6309\u94AE| boolean| true |\n| before-close| \u5173\u95ED\u524D\u7684\u56DE\u8C03\uFF0C\u4F1A\u6682\u505C Dialog \u7684\u5173\u95ED. \u56DE\u8C03\u51FD\u6570\u5185\u6267\u884C done \u53C2\u6570\u65B9\u6CD5\u7684\u65F6\u5019\u624D\u662F\u771F\u6B63\u5173\u95ED\u5BF9\u8BDD\u6846\u7684\u65F6\u5019.| Function| \u2014 |\n| draggable| \u4E3A Dialog \u542F\u7528\u53EF\u62D6\u62FD\u529F\u80FD| boolean| false |\n| overflow 2.5.4| \u62D6\u52A8\u8303\u56F4\u53EF\u4EE5\u8D85\u51FA\u53EF\u89C6\u533A| boolean| false |\n| center| \u662F\u5426\u8BA9 Dialog \u7684 header \u548C footer \u90E8\u5206\u5C45\u4E2D\u6392\u5217| boolean| false |\n| align-center 2.2.16| \u662F\u5426\u6C34\u5E73\u5782\u76F4\u5BF9\u9F50\u5BF9\u8BDD\u6846| boolean| false |\n| destroy-on-close| \u5F53\u5173\u95ED Dialog \u65F6\uFF0C\u9500\u6BC1\u5176\u4E2D\u7684\u5143\u7D20| boolean| false |\n| close-icon| \u81EA\u5B9A\u4E49\u5173\u95ED\u56FE\u6807\uFF0C\u9ED8\u8BA4 Close| string / Component| \u2014 |\n| z-index| \u548C\u539F\u751F\u7684 CSS \u7684 z-index \u76F8\u540C\uFF0C\u6539\u53D8 z \u8F74\u7684\u987A\u5E8F| number| \u2014 |\n| header-aria-level a11y| header \u7684 aria-level \u5C5E\u6027| string| 2 |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| \u2014| Dialog \u7684\u5185\u5BB9 |\n| header| \u5BF9\u8BDD\u6846\u6807\u9898\u7684\u5185\u5BB9\uFF1B\u4F1A\u66FF\u6362\u6807\u9898\u90E8\u5206\uFF0C\u4F46\u4E0D\u4F1A\u79FB\u9664\u5173\u95ED\u6309\u94AE\u3002 |\n| title deprecated| \u4E0E header \u4F5C\u7528\u76F8\u540C \u8BF7\u4F7F\u7528 header |\n| footer| Dialog \u6309\u94AE\u64CD\u4F5C\u533A\u7684\u5185\u5BB9 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| Type |\n| :--- | :--- | :--- |\n| open| Dialog \u6253\u5F00\u7684\u56DE\u8C03| Function |\n| opened| Dialog \u6253\u5F00\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03| Function |\n| close| Dialog \u5173\u95ED\u7684\u56DE\u8C03| Function |\n| closed| Dialog \u5173\u95ED\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03| Function |\n| open-auto-focus| \u8F93\u5165\u7126\u70B9\u805A\u7126\u5728 Dialog \u5185\u5BB9\u65F6\u7684\u56DE\u8C03| Function |\n| close-auto-focus| \u8F93\u5165\u7126\u70B9\u4ECE Dialog \u5185\u5BB9\u5931\u7126\u65F6\u7684\u56DE\u8C03| Function |\n\n#### FAQ\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A Dialog"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "Dialog \u5BF9\u8BDD\u6846 Dialog \u7684\u6807\u9898\uFF0C \u4E5F\u53EF\u901A\u8FC7\u5177\u540D slot \uFF08\u89C1\u4E0B\u8868\uFF09\u4F20\u5165"
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": "\u5BF9\u8BDD\u6846\u7684\u5BBD\u5EA6\uFF0C\u9ED8\u8BA4\u503C\u4E3A 50%"
          },
          "fullscreen": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u5168\u5C4F Dialog"
          },
          "top": {
            "type": "attr",
            "values": [],
            "description": "dialog CSS \u4E2D\u7684 margin-top \u503C\uFF0C\u9ED8\u8BA4\u4E3A 15vh"
          },
          "modal": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9700\u8981\u906E\u7F69\u5C42"
          },
          "modal-class": {
            "type": "attr",
            "values": [],
            "description": "\u906E\u7F69\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "append-to-body": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "Dialog \u81EA\u8EAB\u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\u3002 \u5D4C\u5957\u7684 Dialog \u5FC5\u987B\u6307\u5B9A\u8BE5\u5C5E\u6027\u5E76\u8D4B\u503C\u4E3A true"
          },
          "append-to": {
            "type": "attr",
            "values": [],
            "description": "Dialog \u6302\u8F7D\u5230\u54EA\u4E2A DOM \u5143\u7D20 \u5C06\u8986\u76D6 append-to-body"
          },
          "lock-scroll": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728 Dialog \u51FA\u73B0\u65F6\u5C06 body \u6EDA\u52A8\u9501\u5B9A"
          },
          "custom-classdeprecated": {
            "type": "attr",
            "values": [],
            "description": "Dialog \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "open-delay": {
            "type": "attr",
            "values": ["number"],
            "description": "dialog \u6253\u5F00\u7684\u5EF6\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2"
          },
          "close-delay": {
            "type": "attr",
            "values": ["number"],
            "description": "dialog \u5173\u95ED\u7684\u5EF6\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2"
          },
          "close-on-click-modal": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u70B9\u51FB modal \u5173\u95ED Dialog"
          },
          "close-on-press-escape": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED Dialog"
          },
          "show-close": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u5173\u95ED\u6309\u94AE"
          },
          "before-close": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5173\u95ED\u524D\u7684\u56DE\u8C03\uFF0C\u4F1A\u6682\u505C Dialog \u7684\u5173\u95ED. \u56DE\u8C03\u51FD\u6570\u5185\u6267\u884C done \u53C2\u6570\u65B9\u6CD5\u7684\u65F6\u5019\u624D\u662F\u771F\u6B63\u5173\u95ED\u5BF9\u8BDD\u6846\u7684\u65F6\u5019."
          },
          "draggable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E3A Dialog \u542F\u7528\u53EF\u62D6\u62FD\u529F\u80FD"
          },
          "overflow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u62D6\u52A8\u8303\u56F4\u53EF\u4EE5\u8D85\u51FA\u53EF\u89C6\u533A"
          },
          "center": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u8BA9 Dialog \u7684 header \u548C footer \u90E8\u5206\u5C45\u4E2D\u6392\u5217"
          },
          "align-center": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6C34\u5E73\u5782\u76F4\u5BF9\u9F50\u5BF9\u8BDD\u6846"
          },
          "destroy-on-close": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u5173\u95ED Dialog \u65F6\uFF0C\u9500\u6BC1\u5176\u4E2D\u7684\u5143\u7D20"
          },
          "close-icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u5173\u95ED\u56FE\u6807\uFF0C\u9ED8\u8BA4 Close"
          },
          "z-index": {
            "type": "attr",
            "values": ["number"],
            "description": "\u548C\u539F\u751F\u7684 CSS \u7684 z-index \u76F8\u540C\uFF0C\u6539\u53D8 z \u8F74\u7684\u987A\u5E8F"
          },
          "header-aria-levelay": {
            "type": "attr",
            "values": [],
            "description": "header \u7684 aria-level \u5C5E\u6027"
          },
          "open": {
            "type": "event",
            "values": [],
            "description": "Dialog \u6253\u5F00\u7684\u56DE\u8C03"
          },
          "opened": {
            "type": "event",
            "values": [],
            "description": "Dialog \u6253\u5F00\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "Dialog \u5173\u95ED\u7684\u56DE\u8C03"
          },
          "closed": {
            "type": "event",
            "values": [],
            "description": "Dialog \u5173\u95ED\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03"
          },
          "open-auto-focus": {
            "type": "event",
            "values": [],
            "description": "\u8F93\u5165\u7126\u70B9\u805A\u7126\u5728 Dialog \u5185\u5BB9\u65F6\u7684\u56DE\u8C03"
          },
          "close-auto-focus": {
            "type": "event",
            "values": [],
            "description": "\u8F93\u5165\u7126\u70B9\u4ECE Dialog \u5185\u5BB9\u5931\u7126\u65F6\u7684\u56DE\u8C03"
          }
        },
        "el-drawer": {
          "_html": {
            "": '<el-drawer v-model="${1:drawer}" title="$2" direction="rtl">\n$3\n</el-drawer>',
            ":append-to-body": '<el-drawer v-model="${1:drawer}" title="$2" direction="rtl" :append-to-body="true">\n$3\n</el-drawer>',
            ":default[slot]": "<template #default>\n$1\n</template>",
            ":header[slot]": "<template #header>\n$1\n</template>",
            ":footer[slot]": "<template #footer>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/drawer.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| model-value / v-model| \u662F\u5426\u663E\u793A Drawer| boolean| false |\n| append-to-body| Drawer \u81EA\u8EAB\u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\u3002\u5D4C\u5957\u7684 Drawer \u5FC5\u987B\u6307\u5B9A\u8BE5\u5C5E\u6027\u5E76\u8D4B\u503C\u4E3A true| boolean| false |\n| lock-scroll| \u662F\u5426\u5728 Drawer \u51FA\u73B0\u65F6\u5C06 body \u6EDA\u52A8\u9501\u5B9A| boolean| true |\n| before-close| \u5173\u95ED\u524D\u7684\u56DE\u8C03\uFF0C\u4F1A\u6682\u505C Drawer \u7684\u5173\u95ED| Function| \u2014 |\n| close-on-click-modal| \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u70B9\u51FB modal \u5173\u95ED Drawer| boolean| true |\n| close-on-press-escape| \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED Drawer| boolean| true |\n| open-delay| Drawer \u6253\u5F00\u7684\u5EF6\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2| number| 0 |\n| close-delay| Drawer \u5173\u95ED\u7684\u5EF6\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2| number| 0 |\n| custom-class deprecated| Drawer \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| \u2014 |\n| destroy-on-close| \u63A7\u5236\u662F\u5426\u5728\u5173\u95ED Drawer \u4E4B\u540E\u5C06\u5B50\u5143\u7D20\u5168\u90E8\u9500\u6BC1| boolean| false |\n| modal| \u662F\u5426\u9700\u8981\u906E\u7F69\u5C42| boolean| true |\n| direction| Drawer \u6253\u5F00\u7684\u65B9\u5411| enum| rtl |\n| show-close| \u662F\u5426\u663E\u793A\u5173\u95ED\u6309\u94AE| boolean| true |\n| size| Drawer \u7A97\u4F53\u7684\u5927\u5C0F, \u5F53\u4F7F\u7528 number \u7C7B\u578B\u65F6, \u4EE5\u50CF\u7D20\u4E3A\u5355\u4F4D, \u5F53\u4F7F\u7528 string \u7C7B\u578B\u65F6, \u8BF7\u4F20\u5165 'x%', \u5426\u5219\u4FBF\u4F1A\u4EE5 number \u7C7B\u578B\u89E3\u91CA| number / string| 30% |\n| title| Drawer \u7684\u6807\u9898\uFF0C\u4E5F\u53EF\u901A\u8FC7\u5177\u540D slot \uFF08\u89C1\u4E0B\u8868\uFF09\u4F20\u5165| string| \u2014 |\n| with-header| \u63A7\u5236\u662F\u5426\u663E\u793A header \u680F, \u9ED8\u8BA4\u4E3A true, \u5F53\u6B64\u9879\u4E3A false \u65F6, title attribute \u548C title slot \u5747\u4E0D\u751F\u6548| boolean| true |\n| modal-class| \u906E\u7F69\u5C42\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D| string| \u2014 |\n| z-index| \u8BBE\u7F6E z-index| number| \u2014 |\n| header-aria-level a11y| header \u7684 aria-level \u5C5E\u6027| string| 2 |\n#### \u4E8B\u4EF6\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| open| Drawer \u6253\u5F00\u7684\u56DE\u8C03| Function |\n| opened| Drawer \u6253\u5F00\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03| Function |\n| close| Drawer \u5173\u95ED\u7684\u56DE\u8C03| Function |\n| closed| Drawer \u5173\u95ED\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03| Function |\n| open-auto-focus| \u8F93\u5165\u7126\u70B9\u805A\u7126\u5728 Drawer \u5185\u5BB9\u65F6\u7684\u56DE\u8C03| Function |\n| close-auto-focus| \u8F93\u5165\u7126\u70B9\u4ECE Drawer \u5185\u5BB9\u5931\u7126\u65F6\u7684\u56DE\u8C03| Function |\n\n#### \u63D2\u69FD\n\n| \u540D\u79F0| \u8BF4\u660E |\n| :--- | :--- |\n| default| Drawer \u7684\u5185\u5BB9 |\n| header| Drawer \u6807\u9898\u7684\u5185\u5BB9\uFF1B\u4F1A\u66FF\u6362\u6807\u9898\u90E8\u5206\uFF0C\u4F46\u4E0D\u4F1A\u79FB\u9664\u5173\u95ED\u6309\u94AE\u3002 |\n| title deprecated| \u4E0E header \u4F5C\u7528\u76F8\u540C \u8BF7\u4F7F\u7528 header |\n| footer| Drawer \u9875\u811A\u90E8\u5206 |\n\n#### \u66B4\u9732\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| handleClose| \u7528\u4E8E\u5173\u95ED Drawer, \u8BE5\u65B9\u6CD5\u4F1A\u8C03\u7528\u4F20\u5165\u7684 before-close \u65B9\u6CD5 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "v-model": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A Drawer"
          },
          "append-to-body": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "Drawer \u81EA\u8EAB\u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\u3002\u5D4C\u5957\u7684 Drawer \u5FC5\u987B\u6307\u5B9A\u8BE5\u5C5E\u6027\u5E76\u8D4B\u503C\u4E3A true"
          },
          "lock-scroll": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728 Drawer \u51FA\u73B0\u65F6\u5C06 body \u6EDA\u52A8\u9501\u5B9A"
          },
          "before-close": {
            "type": "attr",
            "values": ["Function"],
            "description": "\u5173\u95ED\u524D\u7684\u56DE\u8C03\uFF0C\u4F1A\u6682\u505C Drawer \u7684\u5173\u95ED"
          },
          "close-on-click-modal": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u70B9\u51FB modal \u5173\u95ED Drawer"
          },
          "close-on-press-escape": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED Drawer"
          },
          "open-delay": {
            "type": "attr",
            "values": ["number"],
            "description": "Drawer \u6253\u5F00\u7684\u5EF6\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2"
          },
          "close-delay": {
            "type": "attr",
            "values": ["number"],
            "description": "Drawer \u5173\u95ED\u7684\u5EF6\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2"
          },
          "custom-classdeprecated": {
            "type": "attr",
            "values": [],
            "description": "Drawer \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "destroy-on-close": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u63A7\u5236\u662F\u5426\u5728\u5173\u95ED Drawer \u4E4B\u540E\u5C06\u5B50\u5143\u7D20\u5168\u90E8\u9500\u6BC1"
          },
          "modal": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9700\u8981\u906E\u7F69\u5C42"
          },
          "direction": {
            "type": "attr",
            "values": ["rtl", "ltr", "ttb", "btt", "rtl"],
            "description": "Drawer \u6253\u5F00\u7684\u65B9\u5411"
          },
          "show-close": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u5173\u95ED\u6309\u94AE"
          },
          "size": {
            "type": "attr",
            "values": ["number"],
            "description": "Drawer \u7A97\u4F53\u7684\u5927\u5C0F, \u5F53\u4F7F\u7528 number \u7C7B\u578B\u65F6, \u4EE5\u50CF\u7D20\u4E3A\u5355\u4F4D, \u5F53\u4F7F\u7528 string \u7C7B\u578B\u65F6, \u8BF7\u4F20\u5165 'x%', \u5426\u5219\u4FBF\u4F1A\u4EE5 number \u7C7B\u578B\u89E3\u91CA"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "Drawer \u7684\u6807\u9898\uFF0C\u4E5F\u53EF\u901A\u8FC7\u5177\u540D slot \uFF08\u89C1\u4E0B\u8868\uFF09\u4F20\u5165"
          },
          "with-header": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u63A7\u5236\u662F\u5426\u663E\u793A header \u680F, \u9ED8\u8BA4\u4E3A true, \u5F53\u6B64\u9879\u4E3A false \u65F6, title attribute \u548C title slot \u5747\u4E0D\u751F\u6548"
          },
          "modal-class": {
            "type": "attr",
            "values": [],
            "description": "\u906E\u7F69\u5C42\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D"
          },
          "z-index": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E z-index"
          },
          "header-aria-levelay": {
            "type": "attr",
            "values": [],
            "description": "header \u7684 aria-level \u5C5E\u6027"
          },
          "open": {
            "type": "event",
            "values": [],
            "description": "Drawer \u6253\u5F00\u7684\u56DE\u8C03"
          },
          "opened": {
            "type": "event",
            "values": [],
            "description": "Drawer \u6253\u5F00\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "Drawer \u5173\u95ED\u7684\u56DE\u8C03"
          },
          "closed": {
            "type": "event",
            "values": [],
            "description": "Drawer \u5173\u95ED\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03"
          },
          "open-auto-focus": {
            "type": "event",
            "values": [],
            "description": "\u8F93\u5165\u7126\u70B9\u805A\u7126\u5728 Drawer \u5185\u5BB9\u65F6\u7684\u56DE\u8C03"
          },
          "close-auto-focus": {
            "type": "event",
            "values": [],
            "description": "\u8F93\u5165\u7126\u70B9\u4ECE Drawer \u5185\u5BB9\u5931\u7126\u65F6\u7684\u56DE\u8C03"
          }
        },
        "el-popconfirm": {
          "_html": {
            "": '<el-popconfirm title="Are you sure to delete this?" confirm-button-text="OK" cancel-button-text="Cancel" @confirm="confirmEvent" @cancel="cancelEvent">\n<template #reference>\n<el-button type="danger" :icon="Delete">${1:Delete}</el-button>\n</template>\n</el-popconfirm>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/popconfirm.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| title| \u6807\u9898| string| \u2014 |\n| confirm-button-text| \u786E\u8BA4\u6309\u94AE\u6587\u5B57| string| \u2014 |\n| cancel-button-text| \u53D6\u6D88\u6309\u94AE\u6587\u5B57| string| \u2014 |\n| confirm-button-type| \u786E\u8BA4\u6309\u94AE\u7C7B\u578B| enum| primary |\n| cancel-button-type| \u53D6\u6D88\u6309\u94AE\u7C7B\u578B| enum| text |\n| icon| \u81EA\u5B9A\u4E49\u56FE\u6807| string / Component| QuestionFilled |\n| icon-color| Icon \u989C\u8272| string| #f90 |\n| hide-icon| \u662F\u5426\u9690\u85CF Icon| boolean| false |\n| hide-after| \u5173\u95ED\u65F6\u7684\u5EF6\u8FDF| number| 200 |\n| teleported| \u662F\u5426\u5C06 popover \u7684\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20| boolean| true |\n| persistent| \u5F53 popover \u7EC4\u4EF6\u957F\u65F6\u95F4\u4E0D\u89E6\u53D1\u4E14 persistent \u5C5E\u6027\u8BBE\u7F6E\u4E3A false \u65F6, popover \u5C06\u4F1A\u88AB\u5220\u9664| boolean| false |\n| width| \u5F39\u5C42\u5BBD\u5EA6\uFF0C\u6700\u5C0F\u5BBD\u5EA6 150px| string / number| 150 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| confirm| \u70B9\u51FB\u786E\u8BA4\u6309\u94AE\u65F6\u89E6\u53D1| Function |\n| cancel| \u70B9\u51FB\u53D6\u6D88\u6309\u94AE\u65F6\u89E6\u53D1| Function |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| reference| \u89E6\u53D1 Popconfirm \u663E\u793A\u7684 HTML \u5143\u7D20 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u6807\u9898"
          },
          "confirm-button-text": {
            "type": "attr",
            "values": [],
            "description": "\u786E\u8BA4\u6309\u94AE\u6587\u5B57"
          },
          "cancel-button-text": {
            "type": "attr",
            "values": [],
            "description": "\u53D6\u6D88\u6309\u94AE\u6587\u5B57"
          },
          "confirm-button-type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info", "text"],
            "description": "\u786E\u8BA4\u6309\u94AE\u7C7B\u578B"
          },
          "cancel-button-type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info", "text"],
            "description": "\u53D6\u6D88\u6309\u94AE\u7C7B\u578B"
          },
          "icon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u56FE\u6807"
          },
          "icon-color": {
            "type": "attr",
            "values": [],
            "description": "Icon \u989C\u8272"
          },
          "hide-icon": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9690\u85CF Icon"
          },
          "hide-after": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5173\u95ED\u65F6\u7684\u5EF6\u8FDF"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06 popover \u7684\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20"
          },
          "persistent": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53 popover \u7EC4\u4EF6\u957F\u65F6\u95F4\u4E0D\u89E6\u53D1\u4E14 persistent \u5C5E\u6027\u8BBE\u7F6E\u4E3A false \u65F6, popover \u5C06\u4F1A\u88AB\u5220\u9664"
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": "\u5F39\u5C42\u5BBD\u5EA6\uFF0C\u6700\u5C0F\u5BBD\u5EA6 150px"
          },
          "confirm": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u786E\u8BA4\u6309\u94AE\u65F6\u89E6\u53D1"
          },
          "cancel": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u53D6\u6D88\u6309\u94AE\u65F6\u89E6\u53D1"
          }
        },
        "el-popover": {
          "_html": {
            "": '<el-popover placement="top-start" title="$1" :width="${2:200}" trigger="${3:hover}">\n<template #reference>\n<el-button>$4</el-button>\n</template>\n<template #default>\n$5\n</template>\n</el-popover>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/popover.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| trigger| \u89E6\u53D1\u65B9\u5F0F| string| click/focus/hover/contextmenu| hover |\n| title| \u6807\u9898| string| \u2014| \u2014 |\n| effect| Tooltip \u4E3B\u9898\uFF0CElement Plus \u5185\u7F6E\u4E86 dark / light \u4E24\u79CD\u4E3B\u9898| string| string| light |\n| content| \u663E\u793A\u7684\u5185\u5BB9\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7\u5199\u5165\u9ED8\u8BA4 slot \u4FEE\u6539\u663E\u793A\u5185\u5BB9| string| \u2014| \u2014 |\n| width| \u5BBD\u5EA6| string / number| \u2014| \u6700\u5C0F\u5BBD\u5EA6 150px |\n| placement| \u51FA\u73B0\u4F4D\u7F6E| string| top/top-start/top-end/bottom/bottom-start/bottom-end/left/left-start/left-end/right/right-start/right-end| bottom |\n| disabled| Popover \u662F\u5426\u53EF\u7528| boolean| \u2014| false |\n| visible / v-model:visible| Popover \u662F\u5426\u663E\u793A| Boolean| \u2014| false |\n| offset| \u6D6E\u5C42\u504F\u79FB\u91CF, Popover \u662F\u5728 Tooltip,\u57FA\u7840\u4E0A\u5F00\u53D1\u7684\uFF0C Popover\u7684 offset \u662F undefined, \u4F46Tooltip \u7684 offset \u662F12| number| \u2014| 12 |\n| transition| \u5B9A\u4E49\u6E10\u53D8\u52A8\u753B| string| \u2014| el-fade-in-linear |\n| show-arrow| \u662F\u5426\u663E\u793A Tooltip \u7BAD\u5934\uFF0C \u6B32\u4E86\u89E3\u66F4\u591A\u4FE1\u606F\uFF0C\u8BF7\u53C2\u8003 ElPopper| boolean| \u2014| true |\n| popper-options| popper.js \u7684\u53C2\u6570| object| \u8BE6\u60C5\u53C2\u8003 popper.js| {modifiers: [{name: 'computeStyles',options: {gpuAcceleration: false}}]} |\n| popper-class| \u4E3A popper \u6DFB\u52A0\u7C7B\u540D| string| \u2014| \u2014 |\n| popper-style| \u4E3A popper \u81EA\u5B9A\u4E49\u6837\u5F0F| string / object| \u2014| \u2014 |\n| show-after| \u5728\u89E6\u53D1\u540E\u591A\u4E45\u663E\u793A\u5185\u5BB9\uFF0C\u5355\u4F4D\u6BEB\u79D2| number| \u2014| 0 |\n| hide-after| \u5EF6\u8FDF\u5173\u95ED\uFF0C\u5355\u4F4D\u6BEB\u79D2| number| \u2014| 200 |\n| auto-close| tooltip \u51FA\u73B0\u540E\u81EA\u52A8\u9690\u85CF\u5EF6\u65F6\uFF0C\u5355\u4F4D\u6BEB\u79D2| number| \u2014| 0 |\n| tabindex| Popover \u7EC4\u4EF6\u7684 tabindex| number| \u2014| \u2014 |\n| teleported| \u662F\u5426\u5C06 popover \u7684\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20| boolean| true / false| true |\n| persistent| \u5F53 popover \u7EC4\u4EF6\u957F\u65F6\u95F4\u4E0D\u89E6\u53D1\u4E14 persistent \u5C5E\u6027\u8BBE\u7F6E\u4E3A false \u65F6, popover \u5C06\u4F1A\u88AB\u5220\u9664| boolean| \u2014| true |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| \u2014| Popover \u5185\u5D4C HTML \u6587\u672C |\n| reference| \u89E6\u53D1 Popover \u663E\u793A\u7684 HTML \u5143\u7D20 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| show| \u663E\u793A\u65F6\u89E6\u53D1| \u2014 |\n| before-enter| \u663E\u793A\u52A8\u753B\u64AD\u653E\u524D\u89E6\u53D1| \u2014 |\n| after-enter| \u663E\u793A\u52A8\u753B\u64AD\u653E\u5B8C\u6BD5\u540E\u89E6\u53D1| \u2014 |\n| hide| \u9690\u85CF\u65F6\u89E6\u53D1| \u2014 |\n| before-leave| \u9690\u85CF\u52A8\u753B\u64AD\u653E\u524D\u89E6\u53D1| \u2014 |\n| after-leave| \u9690\u85CF\u52A8\u753B\u64AD\u653E\u5B8C\u6BD5\u540E\u89E6\u53D1| \u2014 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "trigger": {
            "type": "attr",
            "values": [],
            "description": "\u89E6\u53D1\u65B9\u5F0F"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u6807\u9898"
          },
          "effect": {
            "type": "attr",
            "values": [],
            "description": "Tooltip \u4E3B\u9898\uFF0CElement Plus \u5185\u7F6E\u4E86 dark / light \u4E24\u79CD\u4E3B\u9898"
          },
          "content": {
            "type": "attr",
            "values": [],
            "description": "\u663E\u793A\u7684\u5185\u5BB9\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7\u5199\u5165\u9ED8\u8BA4 slot \u4FEE\u6539\u663E\u793A\u5185\u5BB9"
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": "\u5BBD\u5EA6"
          },
          "placement": {
            "type": "attr",
            "values": [],
            "description": "\u51FA\u73B0\u4F4D\u7F6E"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "Popover \u662F\u5426\u53EF\u7528"
          },
          "v-model:visible": {
            "type": "attr",
            "values": ["Boolean"],
            "description": "Popover \u662F\u5426\u663E\u793A"
          },
          "offset": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6D6E\u5C42\u504F\u79FB\u91CF, Popover \u662F\u5728 Tooltip,\u57FA\u7840\u4E0A\u5F00\u53D1\u7684\uFF0C Popover\u7684 offset \u662F undefined, \u4F46Tooltip \u7684 offset \u662F12"
          },
          "transition": {
            "type": "attr",
            "values": [],
            "description": "\u5B9A\u4E49\u6E10\u53D8\u52A8\u753B"
          },
          "show-arrow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A Tooltip \u7BAD\u5934\uFF0C \u6B32\u4E86\u89E3\u66F4\u591A\u4FE1\u606F\uFF0C\u8BF7\u53C2\u8003 ElPopper"
          },
          "popper-options": {
            "type": "attr",
            "values": ["object"],
            "description": "popper.js \u7684\u53C2\u6570"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "\u4E3A popper \u6DFB\u52A0\u7C7B\u540D"
          },
          "popper-style": {
            "type": "attr",
            "values": [],
            "description": "\u4E3A popper \u81EA\u5B9A\u4E49\u6837\u5F0F"
          },
          "show-after": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5728\u89E6\u53D1\u540E\u591A\u4E45\u663E\u793A\u5185\u5BB9\uFF0C\u5355\u4F4D\u6BEB\u79D2"
          },
          "hide-after": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5EF6\u8FDF\u5173\u95ED\uFF0C\u5355\u4F4D\u6BEB\u79D2"
          },
          "auto-close": {
            "type": "attr",
            "values": ["number"],
            "description": "tooltip \u51FA\u73B0\u540E\u81EA\u52A8\u9690\u85CF\u5EF6\u65F6\uFF0C\u5355\u4F4D\u6BEB\u79D2"
          },
          "tabindex": {
            "type": "attr",
            "values": ["number"],
            "description": "Popover \u7EC4\u4EF6\u7684 tabindex"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C06 popover \u7684\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20"
          },
          "persistent": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53 popover \u7EC4\u4EF6\u957F\u65F6\u95F4\u4E0D\u89E6\u53D1\u4E14 persistent \u5C5E\u6027\u8BBE\u7F6E\u4E3A false \u65F6, popover \u5C06\u4F1A\u88AB\u5220\u9664"
          },
          "show": {
            "type": "event",
            "values": [],
            "description": "\u663E\u793A\u65F6\u89E6\u53D1"
          },
          "before-enter": {
            "type": "event",
            "values": [],
            "description": "\u663E\u793A\u52A8\u753B\u64AD\u653E\u524D\u89E6\u53D1"
          },
          "after-enter": {
            "type": "event",
            "values": [],
            "description": "\u663E\u793A\u52A8\u753B\u64AD\u653E\u5B8C\u6BD5\u540E\u89E6\u53D1"
          },
          "hide": {
            "type": "event",
            "values": [],
            "description": "\u9690\u85CF\u65F6\u89E6\u53D1"
          },
          "before-leave": {
            "type": "event",
            "values": [],
            "description": "\u9690\u85CF\u52A8\u753B\u64AD\u653E\u524D\u89E6\u53D1"
          },
          "after-leave": {
            "type": "event",
            "values": [],
            "description": "\u9690\u85CF\u52A8\u753B\u64AD\u653E\u5B8C\u6BD5\u540E\u89E6\u53D1"
          }
        },
        "el-tooltip": {
          "_html": {
            "": '<el-tooltip effect="dark" content="$1" placement="${2:top}">\n$3\n</el-tooltip>',
            ":content": '<el-tooltip effect="dark">\n$3\n<template #content>\n$4\n</template>\n</el-tooltip>',
            ":content[slot]": "<template #content>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/tooltip.html)\n#### \u5C5E\u6027\n\n| \u540D\u79F0| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| append-to| \u6307\u793A Tooltip \u7684\u5185\u5BB9\u5C06\u9644\u52A0\u5728\u54EA\u4E00\u4E2A\u7F51\u9875\u5143\u7D20\u4E0A| CSSSelector / HTMLElement| \u2014 |\n| effect| Tooltip \u4E3B\u9898\uFF0C\u5185\u7F6E\u4E86 dark / light \u4E24\u79CD| enum| dark |\n| content| \u663E\u793A\u7684\u5185\u5BB9\uFF0C\u4E5F\u53EF\u88AB slot#content \u8986\u76D6| string| '' |\n| raw-content| content \u4E2D\u7684\u5185\u5BB9\u662F\u5426\u4F5C\u4E3A HTML \u5B57\u7B26\u4E32\u5904\u7406| boolean| false |\n| placement| Tooltip \u7EC4\u4EF6\u51FA\u73B0\u7684\u4F4D\u7F6E| enum| bottom |\n| fallback-placements| Tooltip \u53EF\u7528\u7684 positions \u8BF7\u67E5\u770Bpopper.js \u6587\u6863| arrary| \u2014 |\n| visible / v-model:visible| Tooltip \u7EC4\u4EF6\u53EF\u89C1\u6027| boolean| \u2014 |\n| disabled| Tooltip \u7EC4\u4EF6\u662F\u5426\u7981\u7528| boolean| \u2014 |\n| offset| \u51FA\u73B0\u4F4D\u7F6E\u7684\u504F\u79FB\u91CF| number| 12 |\n| transition| \u52A8\u753B\u540D\u79F0| string| \u2014 |\n| popper-options| popper.js \u53C2\u6570| object \u8BF7\u53C2\u8003 popper.js \u6587\u6863| {} |\n| show-after| \u5728\u89E6\u53D1\u540E\u591A\u4E45\u663E\u793A\u5185\u5BB9\uFF0C\u5355\u4F4D\u6BEB\u79D2| number| 0 |\n| show-arrow| tooltip \u7684\u5185\u5BB9\u662F\u5426\u6709\u7BAD\u5934| boolean| true |\n| hide-after| \u5EF6\u8FDF\u5173\u95ED\uFF0C\u5355\u4F4D\u6BEB\u79D2| number| 200 |\n| auto-close| tooltip \u51FA\u73B0\u540E\u81EA\u52A8\u9690\u85CF\u5EF6\u65F6\uFF0C\u5355\u4F4D\u6BEB\u79D2| number| 0 |\n| popper-class| \u4E3A Tooltip \u7684 popper \u6DFB\u52A0\u7C7B\u540D| string| \u2014 |\n| enterable| \u9F20\u6807\u662F\u5426\u53EF\u8FDB\u5165\u5230 tooltip \u4E2D| boolean| true |\n| teleported| \u662F\u5426\u4F7F\u7528 teleport\u3002\u8BBE\u7F6E\u6210 true\u5219\u4F1A\u88AB\u8FFD\u52A0\u5230 append-to \u7684\u4F4D\u7F6E| boolean| true |\n| trigger| \u5982\u4F55\u89E6\u53D1 Tooltip| enum| hover |\n| virtual-triggering| \u7528\u6765\u6807\u8BC6\u865A\u62DF\u89E6\u53D1\u662F\u5426\u88AB\u542F\u7528| boolean| \u2014 |\n| virtual-ref| \u6807\u8BC6\u865A\u62DF\u89E6\u53D1\u65F6\u7684\u89E6\u53D1\u5143\u7D20| HTMLElement| \u2014 |\n| trigger-keys| \u5F53\u9F20\u6807\u70B9\u51FB\u6216\u8005\u805A\u7126\u5728\u89E6\u53D1\u5143\u7D20\u4E0A\u65F6\uFF0C \u53EF\u4EE5\u5B9A\u4E49\u4E00\u7EC4\u952E\u76D8\u6309\u952E\u5E76\u4E14\u901A\u8FC7\u5B83\u4EEC\u6765\u63A7\u5236 Tooltip \u7684\u663E\u793A| Array| ['Enter','Space'] |\n| persistent| \u5F53 tooltip \u7EC4\u4EF6\u957F\u65F6\u95F4\u4E0D\u89E6\u53D1\u4E14 persistent \u5C5E\u6027\u8BBE\u7F6E\u4E3A false \u65F6, popconfirm \u5C06\u4F1A\u88AB\u5220\u9664| boolean| \u2014 |\n| aria-label a11y| \u548C aria-label \u5C5E\u6027\u4FDD\u6301\u4E00\u81F4| string| \u2014 |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| Tooltip \u89E6\u53D1 & \u5F15\u7528\u7684\u5143\u7D20 |\n| content| \u81EA\u5B9A\u4E49\u5185\u5BB9 |\n\n#### Exposes\n\n| \u540D\u79F0| \u8BE6\u60C5| \u7C7B\u578B |\n| :--- | :--- | :--- |\n| popperRef| el-popper \u7EC4\u4EF6\u5B9E\u4F8B| object |\n| contentRef| el-tooltip0-content \u7EC4\u4EF6\u5B9E\u4F8B| object |\n| isFocusInsideContent| \u9A8C\u8BC1\u5F53\u524D\u7126\u70B9\u4E8B\u4EF6\u662F\u5426\u5728 el-tooltip-content \u4E2D\u89E6\u53D1| Function |\n| updatePopper| \u66F4\u65B0 el-popper\u7EC4\u4EF6\u5B9E\u4F8B| Function |\n| onOpen| onOpen \u65B9\u6CD5\u63A7\u5236 el-tooltip \u663E\u793A\u72B6\u6001| Function |\n| onClose| onClose \u65B9\u6CD5\u63A7\u5236 el-tooltip \u663E\u793A\u72B6\u6001| Function |\n| hide| \u63D0\u4F9B hide \u65B9\u6CD5| Function |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "append-to": {
            "type": "attr",
            "values": ["CSSSelector"],
            "description": "\u6307\u793A Tooltip \u7684\u5185\u5BB9\u5C06\u9644\u52A0\u5728\u54EA\u4E00\u4E2A\u7F51\u9875\u5143\u7D20\u4E0A"
          },
          "effect": {
            "type": "attr",
            "values": ["dark", "light"],
            "description": "Tooltip \u4E3B\u9898\uFF0C\u5185\u7F6E\u4E86 dark / light \u4E24\u79CD"
          },
          "content": {
            "type": "attr",
            "values": [],
            "description": "\u663E\u793A\u7684\u5185\u5BB9\uFF0C\u4E5F\u53EF\u88AB slot#content \u8986\u76D6"
          },
          "raw-content": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "content \u4E2D\u7684\u5185\u5BB9\u662F\u5426\u4F5C\u4E3A HTML \u5B57\u7B26\u4E32\u5904\u7406"
          },
          "placement": {
            "type": "attr",
            "values": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"],
            "description": "Tooltip \u7EC4\u4EF6\u51FA\u73B0\u7684\u4F4D\u7F6E"
          },
          "fallback-placements": {
            "type": "attr",
            "values": ["array"],
            "description": "Tooltip \u53EF\u7528\u7684 positions \u8BF7\u67E5\u770Bpopper.js \u6587\u6863"
          },
          "v-model:visible": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "Tooltip \u7EC4\u4EF6\u53EF\u89C1\u6027"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "Tooltip \u7EC4\u4EF6\u662F\u5426\u7981\u7528"
          },
          "offset": {
            "type": "attr",
            "values": ["number"],
            "description": "\u51FA\u73B0\u4F4D\u7F6E\u7684\u504F\u79FB\u91CF"
          },
          "transition": {
            "type": "attr",
            "values": [],
            "description": "\u52A8\u753B\u540D\u79F0"
          },
          "popper-options": {
            "type": "attr",
            "values": ["object"],
            "description": "popper.js \u53C2\u6570"
          },
          "show-after": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5728\u89E6\u53D1\u540E\u591A\u4E45\u663E\u793A\u5185\u5BB9\uFF0C\u5355\u4F4D\u6BEB\u79D2"
          },
          "show-arrow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "tooltip \u7684\u5185\u5BB9\u662F\u5426\u6709\u7BAD\u5934"
          },
          "hide-after": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5EF6\u8FDF\u5173\u95ED\uFF0C\u5355\u4F4D\u6BEB\u79D2"
          },
          "auto-close": {
            "type": "attr",
            "values": ["number"],
            "description": "tooltip \u51FA\u73B0\u540E\u81EA\u52A8\u9690\u85CF\u5EF6\u65F6\uFF0C\u5355\u4F4D\u6BEB\u79D2"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": "\u4E3A Tooltip \u7684 popper \u6DFB\u52A0\u7C7B\u540D"
          },
          "enterable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9F20\u6807\u662F\u5426\u53EF\u8FDB\u5165\u5230 tooltip \u4E2D"
          },
          "teleported": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4F7F\u7528 teleport\u3002\u8BBE\u7F6E\u6210 true\u5219\u4F1A\u88AB\u8FFD\u52A0\u5230 append-to \u7684\u4F4D\u7F6E"
          },
          "trigger": {
            "type": "attr",
            "values": ["hover", "click", "focus", "contextmenu"],
            "description": "\u5982\u4F55\u89E6\u53D1 Tooltip"
          },
          "virtual-triggering": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7528\u6765\u6807\u8BC6\u865A\u62DF\u89E6\u53D1\u662F\u5426\u88AB\u542F\u7528"
          },
          "virtual-ref": {
            "type": "attr",
            "values": ["HTMLElement"],
            "description": "\u6807\u8BC6\u865A\u62DF\u89E6\u53D1\u65F6\u7684\u89E6\u53D1\u5143\u7D20"
          },
          "trigger-keys": {
            "type": "attr",
            "values": ["Array"],
            "description": "\u5F53\u9F20\u6807\u70B9\u51FB\u6216\u8005\u805A\u7126\u5728\u89E6\u53D1\u5143\u7D20\u4E0A\u65F6\uFF0C \u53EF\u4EE5\u5B9A\u4E49\u4E00\u7EC4\u952E\u76D8\u6309\u952E\u5E76\u4E14\u901A\u8FC7\u5B83\u4EEC\u6765\u63A7\u5236 Tooltip \u7684\u663E\u793A"
          },
          "persistent": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53 tooltip \u7EC4\u4EF6\u957F\u65F6\u95F4\u4E0D\u89E6\u53D1\u4E14 persistent \u5C5E\u6027\u8BBE\u7F6E\u4E3A false \u65F6, popconfirm \u5C06\u4F1A\u88AB\u5220\u9664"
          },
          "aria-labelay": {
            "type": "attr",
            "values": [],
            "description": "\u548C aria-label \u5C5E\u6027\u4FDD\u6301\u4E00\u81F4"
          }
        },
        "el-divider": {
          "_html": {
            "": "<el-divider>$1</el-divider>",
            ":dashed": '<el-divider border-style="${1:dashed}">$2</el-divider>',
            ":vertical": '<el-divider direction="vertical">$1</el-divider>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/divider.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| direction| \u8BBE\u7F6E\u5206\u5272\u7EBF\u65B9\u5411| enum| horizontal |\n| border-style| \u8BBE\u7F6E\u5206\u9694\u7B26\u6837\u5F0F| enum css/border-style| solid |\n| content-position| \u81EA\u5B9A\u4E49\u5206\u9694\u7EBF\u5185\u5BB9\u7684\u4F4D\u7F6E| enum| center |\n\n#### Slots\n\n| \u63D2\u69FD\u540D| \u8BF4\u660E |\n| :--- | :--- |\n| default| \u8BBE\u7F6E\u5206\u5272\u7EBF\u6587\u6848\u7684\u4F4D\u7F6E |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "direction": {
            "type": "attr",
            "values": ["horizontal", "vertical"],
            "description": "\u8BBE\u7F6E\u5206\u5272\u7EBF\u65B9\u5411"
          },
          "border-style": {
            "type": "attr",
            "values": ["none", "solid", "hidden", "dashed"],
            "description": "\u8BBE\u7F6E\u5206\u9694\u7B26\u6837\u5F0F"
          },
          "content-position": {
            "type": "attr",
            "values": ["left", "right", "center"],
            "description": "\u81EA\u5B9A\u4E49\u5206\u9694\u7EBF\u5185\u5BB9\u7684\u4F4D\u7F6E"
          }
        },
        "el-watermark": {
          "_html": {
            "": `<el-watermark :font="{ color: 'rgba(0, 0, 0, .15)' }">
$1
</el-watermark>`,
            ":image": '<el-watermark :width="$1" :height="$2" :image="$3">\n$4\n</el-watermark>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://element-plus.org/zh-CN/component/watermark.html)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027\u540D| \u63CF\u8FF0| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| width| \u6C34\u5370\u7684\u5BBD\u5EA6\uFF0C content \u7684\u9ED8\u8BA4\u503C\u662F\u5B83\u81EA\u5DF1\u7684\u5BBD\u5EA6| number| 120 |\n| height| \u6C34\u5370\u7684\u9AD8\u5EA6\uFF0C content \u7684\u9ED8\u8BA4\u503C\u662F\u5B83\u81EA\u5DF1\u7684\u9AD8\u5EA6| number| 64 |\n| rotate| \u6C34\u5370\u7684\u65CB\u8F6C\u89D2\u5EA6, \u5355\u4F4D \xB0| number| -22 |\n| zIndex| \u6C34\u5370\u5143\u7D20\u7684z-index\u503C| number| 9 |\n| image| \u6C34\u5370\u56FE\u7247\uFF0C\u5EFA\u8BAE\u4F7F\u7528 2x \u6216 3x \u56FE\u50CF| string| - |\n| content| \u6C34\u5370\u6587\u672C\u5185\u5BB9| string/object| - |\n| font| \u6587\u5B57\u6837\u5F0F| Font| Font |\n| gap| \u6C34\u5370\u4E4B\u95F4\u7684\u95F4\u8DDD| object| [100, 100] |\n| offset| \u6C34\u5370\u4ECE\u5BB9\u5668\u5DE6\u4E0A\u89D2\u7684\u504F\u79FB \u9ED8\u8BA4\u503C\u4E3A gap/2| object| [gap[0]/2, gap[1]/2] |\n\n#### Font\n\n| \u540D\u79F0| \u8BE6\u60C5| \u7C7B\u578B| \u9ED8\u8BA4 |\n| :--- | :--- | :--- | :--- |\n| color| \u5B57\u4F53\u989C\u8272| string| rgba(0,0,0,.15) |\n| fontSize| \u5B57\u4F53\u5927\u5C0F| number| 16 |\n| fontWeight| \u5B57\u91CD| enum| normal |\n| fontFamily| \u5B57\u4F53| string| sans-serif |\n| fontStyle| \u5B57\u4F53\u6837\u5F0F| enum| normal |\n| textAlign| \u6587\u672C\u5BF9\u9F50| enum| center |\n| textBaseline| \u6587\u672C\u57FA\u7EBF| enum| top |\n\n#### Slots\n\n| \u540D\u79F0| \u8BE6\u60C5 |\n| :--- | :--- |\n| \u9ED8\u8BA4| \u6DFB\u52A0\u6C34\u5370\u7684\u5BB9\u5668 |\n\n#### \u6E90\u4EE3\u7801\n\n#### \u8D21\u732E\u8005\n",
          "width": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6C34\u5370\u7684\u5BBD\u5EA6\uFF0C content \u7684\u9ED8\u8BA4\u503C\u662F\u5B83\u81EA\u5DF1\u7684\u5BBD\u5EA6"
          },
          "height": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6C34\u5370\u7684\u9AD8\u5EA6\uFF0C content \u7684\u9ED8\u8BA4\u503C\u662F\u5B83\u81EA\u5DF1\u7684\u9AD8\u5EA6"
          },
          "rotate": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6C34\u5370\u7684\u65CB\u8F6C\u89D2\u5EA6, \u5355\u4F4D \xB0"
          },
          "zIndex": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6C34\u5370\u5143\u7D20\u7684z-index\u503C"
          },
          "image": {
            "type": "attr",
            "values": [],
            "description": "\u6C34\u5370\u56FE\u7247\uFF0C\u5EFA\u8BAE\u4F7F\u7528 2x \u6216 3x \u56FE\u50CF"
          },
          "content": {
            "type": "attr",
            "values": [],
            "description": "\u6C34\u5370\u6587\u672C\u5185\u5BB9"
          },
          "font": {
            "type": "attr",
            "values": ["Font"],
            "description": "\u6587\u5B57\u6837\u5F0F"
          },
          "gap": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6C34\u5370\u4E4B\u95F4\u7684\u95F4\u8DDD"
          },
          "offset": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6C34\u5370\u4ECE\u5BB9\u5668\u5DE6\u4E0A\u89D2\u7684\u504F\u79FB \u9ED8\u8BA4\u503C\u4E3A gap/2"
          }
        }
      },
      "script": {
        "el-rules": {
          "_html": {
            ":required": "{ required: true, message: '', trigger: 'blur' }",
            ":max": "{ min: 3, max: 5, message: '', trigger: 'blur' }"
          }
        },
        "el-form": {
          "_html": {
            ":submit": "const submitForm = async (formEl: FormInstance | undefined) => {\nif (!formEl) return\nawait formEl.validate((valid, fields) => {\nif (valid) {\nconsole.log('submit!')\n} else {\nconsole.log('error submit!', fields)\n}\n})\n}",
            ":reset": "const resetForm = (formEl: FormInstance | undefined) => {\nif (!formEl) return\nformEl.resetFields()\n}"
          }
        },
        "el-upload": {
          "_html": {
            "": "const fileList = ref<UploadUserFile[]>([\n])\n\nconst handleRemove: UploadProps['onRemove'] = (file, uploadFiles) => {\nconsole.log(file, uploadFiles)\n}\n\nconst handlePreview: UploadProps['onPreview'] = (uploadFile) => {\nconsole.log(uploadFile)\n}\n\nconst handleExceed: UploadProps['onExceed'] = (files, uploadFiles) => {\n\n}\n\nconst beforeRemove: UploadProps['beforeRemove'] = (uploadFile, uploadFiles) => {\n}"
          }
        },
        "el-message": {
          "_html": {
            "": "ElMessage({\ntype: '${1:success}',\nmessage: '$2',\n})",
            ":confirm": "ElMessageBox.confirm(\n'',\n'Warning',\n{\nconfirmButtonText: 'OK',\ncancelButtonText: 'Cancel',\ntype: 'warning',\n}\n).then(() => {\n\n}).catch(() => {\n\n})"
          }
        },
        "el-notification": {
          "_html": {
            "": "ElNotification({\ntitle: '',\nmessage: '',\n})"
          }
        }
      },
      "templateGlobalAttribute": {
        "v-loading": {
          "type": "attr",
          "values": [],
          "description": "loading"
        }
      }
    };
  }
});

// out/frameworks/ant-design-vue.js
var require_ant_design_vue = __commonJS({
  "out/frameworks/ant-design-vue.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.default = {
      "template": {
        "a-button": {
          "_html": {
            "": '<a-button type="primary">$1</a-button>',
            ":dashed": '<a-button type="dashed">$1</a-button>',
            ":text": '<a-button type="text">$1</a-button>',
            ":link": '<a-button type="link">$1</a-button>',
            ":circle": '<a-button type="primary" shape="${1:circle}">$2</a-button>',
            ":icon": '<a-button type="primary" :icon="${1:h(SearchOutlined)}">$2</a-button>',
            ":danger": '<a-button type="primary" danger>$1</a-button>',
            ":block": '<a-button type="primary" block>$1</a-button>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/button-cn)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| block| \u5C06\u6309\u94AE\u5BBD\u5EA6\u8C03\u6574\u4E3A\u5176\u7236\u5BBD\u5EA6\u7684\u9009\u9879| boolean| false|  |\n| danger| \u8BBE\u7F6E\u5371\u9669\u6309\u94AE| boolean| false| 2.2.0 |\n| disabled| \u6309\u94AE\u5931\u6548\u72B6\u6001| boolean| false|  |\n| ghost| \u5E7D\u7075\u5C5E\u6027\uFF0C\u4F7F\u6309\u94AE\u80CC\u666F\u900F\u660E| boolean| false|  |\n| href| \u70B9\u51FB\u8DF3\u8F6C\u7684\u5730\u5740\uFF0C\u6307\u5B9A\u6B64\u5C5E\u6027 button \u7684\u884C\u4E3A\u548C a \u94FE\u63A5\u4E00\u81F4| string| -|  |\n| htmlType| \u8BBE\u7F6E button \u539F\u751F\u7684 type \u503C\uFF0C\u53EF\u9009\u503C\u8BF7\u53C2\u8003 HTML \u6807\u51C6| string| button|  |\n| icon| \u8BBE\u7F6E\u6309\u94AE\u7684\u56FE\u6807\u7C7B\u578B| v-slot| -|  |\n| loading| \u8BBE\u7F6E\u6309\u94AE\u8F7D\u5165\u72B6\u6001| boolean | { delay: number }| false|  |\n| shape| \u8BBE\u7F6E\u6309\u94AE\u5F62\u72B6| default | circle | round| default|  |\n| size| \u8BBE\u7F6E\u6309\u94AE\u5927\u5C0F| large | middle | small| middle|  |\n| target| \u76F8\u5F53\u4E8E a \u94FE\u63A5\u7684 target \u5C5E\u6027\uFF0Chref \u5B58\u5728\u65F6\u751F\u6548| string| -|  |\n| type| \u8BBE\u7F6E\u6309\u94AE\u7C7B\u578B| primary | ghost | dashed | link | text | default| default|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| click| \u70B9\u51FB\u6309\u94AE\u65F6\u7684\u56DE\u8C03| (event) => void|  |\n#### \u65B9\u6CD5\n\n| \u540D\u79F0| \u63CF\u8FF0| \u7248\u672C |\n| :--- | :--- | :--- |\n| blur()| \u79FB\u9664\u7126\u70B9|  |\n| focus()| \u83B7\u53D6\u7126\u70B9|  |\n",
          "block": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5C06\u6309\u94AE\u5BBD\u5EA6\u8C03\u6574\u4E3A\u5176\u7236\u5BBD\u5EA6\u7684\u9009\u9879"
          },
          "danger": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u5371\u9669\u6309\u94AE"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6309\u94AE\u5931\u6548\u72B6\u6001"
          },
          "ghost": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5E7D\u7075\u5C5E\u6027\uFF0C\u4F7F\u6309\u94AE\u80CC\u666F\u900F\u660E"
          },
          "href": {
            "type": "attr",
            "values": [],
            "description": "\u70B9\u51FB\u8DF3\u8F6C\u7684\u5730\u5740\uFF0C\u6307\u5B9A\u6B64\u5C5E\u6027 button \u7684\u884C\u4E3A\u548C a \u94FE\u63A5\u4E00\u81F4"
          },
          "htmlType": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E button \u539F\u751F\u7684 type \u503C\uFF0C\u53EF\u9009\u503C\u8BF7\u53C2\u8003 HTML \u6807\u51C6"
          },
          "icon": {
            "type": "attr",
            "values": ["v-slot"],
            "description": "\u8BBE\u7F6E\u6309\u94AE\u7684\u56FE\u6807\u7C7B\u578B"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u6309\u94AE\u8F7D\u5165\u72B6\u6001"
          },
          "shape": {
            "type": "attr",
            "values": ["default", "circle", "round"],
            "description": "\u8BBE\u7F6E\u6309\u94AE\u5F62\u72B6"
          },
          "size": {
            "type": "attr",
            "values": ["large", "middle", "small"],
            "description": "\u8BBE\u7F6E\u6309\u94AE\u5927\u5C0F"
          },
          "target": {
            "type": "attr",
            "values": [],
            "description": "\u76F8\u5F53\u4E8E a \u94FE\u63A5\u7684 target \u5C5E\u6027\uFF0Chref \u5B58\u5728\u65F6\u751F\u6548"
          },
          "type": {
            "type": "attr",
            "values": ["primary", "ghost", "dashed", "link", "text", "default"],
            "description": "\u8BBE\u7F6E\u6309\u94AE\u7C7B\u578B"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u6309\u94AE\u65F6\u7684\u56DE\u8C03"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          }
        },
        "a-typography": {
          "_html": {
            "": "<a-typography>$1</a-typography>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/typography-cn)\n#### \u5C5E\u6027\n"
        },
        "a-typography-title": {
          "_html": {
            "": "<a-typography-title>$1</a-typography-title>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/typography-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| code| \u6DFB\u52A0\u4EE3\u7801\u6837\u5F0F| boolean| false|  |\n| content(v-model)| \u5F53\u4F7F\u7528 ellipsis \u6216 editable \u65F6\uFF0C\u4F7F\u7528 content \u4EE3\u66FF children| string| -|  |\n| copyable| \u662F\u5426\u53EF\u62F7\u8D1D\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u8FDB\u884C\u5404\u79CD\u81EA\u5B9A\u4E49| boolean | copyable| false| copyable |\n| delete| \u6DFB\u52A0\u5220\u9664\u7EBF\u6837\u5F0F| boolean| false|  |\n| disabled| \u7981\u7528\u6587\u672C| boolean| false|  |\n| editable| \u662F\u5426\u53EF\u7F16\u8F91\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u5BF9\u7F16\u8F91\u8FDB\u884C\u63A7\u5236| boolean | editable| false| editable |\n| ellipsis| \u81EA\u52A8\u6EA2\u51FA\u7701\u7565\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u8BBE\u7F6E\u7701\u7565\u884C\u6570\u3001\u662F\u5426\u53EF\u5C55\u5F00\u3001\u6DFB\u52A0\u540E\u7F00\u7B49| boolean | ellipsis| false| ellipsis |\n| level| \u91CD\u8981\u7A0B\u5EA6\uFF0C\u76F8\u5F53\u4E8E h1\u3001h2\u3001h3\u3001h4\u3001h5| number: 1, 2, 3, 4, 5| 1|  |\n| mark| \u6DFB\u52A0\u6807\u8BB0\u6837\u5F0F| boolean| false|  |\n| type| \u6587\u672C\u7C7B\u578B| secondary | success | warning | danger| -|  |\n| underline| \u6DFB\u52A0\u4E0B\u5212\u7EBF\u6837\u5F0F| boolean| false|  |\n",
          "code": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u4EE3\u7801\u6837\u5F0F"
          },
          "v-model:content": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u4F7F\u7528 ellipsis \u6216 editable \u65F6\uFF0C\u4F7F\u7528 content \u4EE3\u66FF children"
          },
          "copyable": {
            "type": "attr",
            "values": ["boolean", "copyable"],
            "description": "\u662F\u5426\u53EF\u62F7\u8D1D\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u8FDB\u884C\u5404\u79CD\u81EA\u5B9A\u4E49"
          },
          "delete": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u5220\u9664\u7EBF\u6837\u5F0F"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u7528\u6587\u672C"
          },
          "editable": {
            "type": "attr",
            "values": ["boolean", "editable"],
            "description": "\u662F\u5426\u53EF\u7F16\u8F91\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u5BF9\u7F16\u8F91\u8FDB\u884C\u63A7\u5236"
          },
          "ellipsis": {
            "type": "attr",
            "values": ["boolean", "ellipsis"],
            "description": "\u81EA\u52A8\u6EA2\u51FA\u7701\u7565\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u8BBE\u7F6E\u7701\u7565\u884C\u6570\u3001\u662F\u5426\u53EF\u5C55\u5F00\u3001\u6DFB\u52A0\u540E\u7F00\u7B49"
          },
          "level": {
            "type": "attr",
            "values": ["number: 1, 2, 3, 4, 5"],
            "description": "\u91CD\u8981\u7A0B\u5EA6\uFF0C\u76F8\u5F53\u4E8E h1\u3001h2\u3001h3\u3001h4\u3001h5"
          },
          "mark": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u6807\u8BB0\u6837\u5F0F"
          },
          "type": {
            "type": "attr",
            "values": ["secondary", "success", "warning", "danger"],
            "description": "\u6587\u672C\u7C7B\u578B"
          },
          "underline": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u4E0B\u5212\u7EBF\u6837\u5F0F"
          }
        },
        "a-typography-paragraph": {
          "_html": {
            "": "<a-typography-paragraph>$1</a-typography-paragraph>",
            ":copyableIcon[slot]": '<template #copyableIcon="{ copied }">\n$1\n</template>',
            ":copyableTooltip[slot]": '<template #copyableTooltip="{ copied }">\n$1\n</template>',
            ":ellipsisSymbol[slot]": '<template #ellipsisSymbol="{ copied }">\n$1\n</template>',
            ":editableIcon[slot]": '<template #editableIcon="{ copied }">\n$1\n</template>',
            ":editableTooltip[slot]": '<template #editableTooltip="{ copied }">\n$1\n</template>',
            ":ellipsisTooltip[slot]": '<template #ellipsisTooltip="{ copied }">\n$1\n</template>',
            ":enterEnterIcon[slot]": '<template #enterEnterIcon="{ copied }">\n$1\n</template>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/typography-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| code| \u6DFB\u52A0\u4EE3\u7801\u6837\u5F0F| boolean| false|  |\n| content(v-model)| \u5F53\u4F7F\u7528 ellipsis \u6216 editable \u65F6\uFF0C\u4F7F\u7528 content \u4EE3\u66FF children| string| -|  |\n| copyable| \u662F\u5426\u53EF\u62F7\u8D1D\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u8FDB\u884C\u5404\u79CD\u81EA\u5B9A\u4E49| boolean | copyable| false| copyable |\n| delete| \u6DFB\u52A0\u5220\u9664\u7EBF\u6837\u5F0F| boolean| false|  |\n| disabled| \u7981\u7528\u6587\u672C| boolean| false|  |\n| editable| \u662F\u5426\u53EF\u7F16\u8F91\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u5BF9\u7F16\u8F91\u8FDB\u884C\u63A7\u5236| boolean | editable| false| editable |\n| ellipsis| \u81EA\u52A8\u6EA2\u51FA\u7701\u7565\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u8BBE\u7F6E\u7701\u7565\u884C\u6570\u3001\u662F\u5426\u53EF\u5C55\u5F00\u3001\u6DFB\u52A0\u540E\u7F00\u7B49| boolean | ellipsis| false| ellipsis |\n| mark| \u6DFB\u52A0\u6807\u8BB0\u6837\u5F0F| boolean| false|  |\n| strong| \u662F\u5426\u52A0\u7C97| boolean| false|  |\n| type| \u6587\u672C\u7C7B\u578B| secondary | success | warning | danger| -|  |\n| underline| \u6DFB\u52A0\u4E0B\u5212\u7EBF\u6837\u5F0F| boolean| false|  |\n\n| \u540D\u79F0| \u8BF4\u660E| \u53C2\u6570| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| copyableIcon| \u81EA\u5B9A\u4E49\u62F7\u8D1D\u56FE\u6807| { copied: boolean }| copied ? <CheckOutlined /> : <CopyOutlined />|  |\n| copyableTooltip| \u81EA\u5B9A\u4E49\u63D0\u793A\u6587\u6848\uFF0C\u5F53 copyable.tooltip = false \u65F6\u5173\u95ED| { copied: boolean }| copied ? '\u590D\u5236\u6210\u529F' : '\u590D\u5236'|  |\n| editableIcon| \u81EA\u5B9A\u4E49\u7F16\u8F91\u56FE\u6807| -| <EditOutlined />|  |\n| editableTooltip| \u81EA\u5B9A\u4E49\u63D0\u793A\u6587\u672C\uFF0C\u5F53 editable.tooltip = false \u65F6\u5173\u95ED| -| \u7F16\u8F91|  |\n| ellipsisSymbol| \u81EA\u5B9A\u4E49\u5C55\u5F00\u63CF\u8FF0\u6587\u6848| -| -|  |\n| ellipsisTooltip| \u7701\u7565\u65F6\uFF0C\u5C55\u793A\u63D0\u793A\u4FE1\u606F| -| -|  |\n| enterEnterIcon| \u5728\u7F16\u8F91\u6BB5\u4E2D\u81EA\u5B9A\u4E49\u201Center\u201D\u56FE\u6807| {className: string}| <EnterOutlined />| 3.0 |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| text| \u62F7\u8D1D\u5230\u526A\u5207\u677F\u91CC\u7684\u6587\u672C| string| -|  |\n| tooltip| \u662F\u5426\u5C55\u793A\u63D0\u793A\u6587\u672C| boolean| true|  |\n| onCopy| \u62F7\u8D1D\u6210\u529F\u7684\u56DE\u8C03\u51FD\u6570| function| -|  |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| autoSize| \u81EA\u52A8 resize \u6587\u672C\u57DF| boolean | { minRows: number, maxRows: number }| -|  |\n| editing| \u63A7\u5236\u662F\u5426\u662F\u7F16\u8F91\u4E2D\u72B6\u6001| boolean| false|  |\n| maxlength| \u7F16\u8F91\u4E2D\u6587\u672C\u57DF\u6700\u5927\u957F\u5EA6| number| -|  |\n| tooltip| \u662F\u5426\u5C55\u793A\u63D0\u793A\u6587\u672C| boolean| true|  |\n| triggerType| \u7F16\u8F91\u6A21\u5F0F\u89E6\u53D1\u5668\u7C7B\u578B\uFF0C\u56FE\u6807\u3001\u6587\u672C\u6216\u8005\u4E24\u8005\u90FD\u8BBE\u7F6E\uFF08\u4E0D\u8BBE\u7F6E\u56FE\u6807\u4F5C\u4E3A\u89E6\u53D1\u5668\u65F6\u5B83\u4F1A\u9690\u85CF\uFF09| Array<icon|text>| [icon]|  |\n| onCancel| \u6309 ESC \u9000\u51FA\u7F16\u8F91\u72B6\u6001\u65F6\u89E6\u53D1| function| -|  |\n| onChange| \u6587\u672C\u57DF\u7F16\u8F91\u65F6\u89E6\u53D1| function(event)| -|  |\n| onEnd| \u6309 ENTER \u7ED3\u675F\u7F16\u8F91\u72B6\u6001\u65F6\u89E6\u53D1| function| -|  |\n| onStart| \u8FDB\u5165\u7F16\u8F91\u4E2D\u72B6\u6001\u65F6\u89E6\u53D1| function| -|  |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| expandable| \u662F\u5426\u53EF\u5C55\u5F00| boolean| -|  |\n| rows| \u6700\u591A\u663E\u793A\u7684\u884C\u6570| number| -|  |\n| suffix| \u81EA\u5B9A\u4E49\u7701\u7565\u5185\u5BB9\u540E\u7F00| string| -|  |\n| symbol| \u81EA\u5B9A\u4E49\u5C55\u5F00\u63CF\u8FF0\u6587\u6848| string| \u5C55\u5F00|  |\n| tooltip| \u7701\u7565\u65F6\uFF0C\u5C55\u793A\u63D0\u793A\u4FE1\u606F| boolean | string| -|  |\n| onEllipsis| \u89E6\u53D1\u7701\u7565\u65F6\u7684\u56DE\u8C03| function(ellipsis)| -|  |\n| onExpand| \u70B9\u51FB\u5C55\u5F00\u65F6\u7684\u56DE\u8C03| function(event)| -|  |\n",
          "code": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u4EE3\u7801\u6837\u5F0F"
          },
          "v-model:content": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u4F7F\u7528 ellipsis \u6216 editable \u65F6\uFF0C\u4F7F\u7528 content \u4EE3\u66FF children"
          },
          "copyable": {
            "type": "attr",
            "values": ["boolean", "copyable"],
            "description": "\u662F\u5426\u53EF\u62F7\u8D1D\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u8FDB\u884C\u5404\u79CD\u81EA\u5B9A\u4E49"
          },
          "delete": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u5220\u9664\u7EBF\u6837\u5F0F"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u7528\u6587\u672C"
          },
          "editable": {
            "type": "attr",
            "values": ["boolean", "editable"],
            "description": "\u662F\u5426\u53EF\u7F16\u8F91\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u5BF9\u7F16\u8F91\u8FDB\u884C\u63A7\u5236"
          },
          "ellipsis": {
            "type": "attr",
            "values": ["boolean", "ellipsis"],
            "description": "\u81EA\u52A8\u6EA2\u51FA\u7701\u7565\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u8BBE\u7F6E\u7701\u7565\u884C\u6570\u3001\u662F\u5426\u53EF\u5C55\u5F00\u3001\u6DFB\u52A0\u540E\u7F00\u7B49"
          },
          "mark": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u6807\u8BB0\u6837\u5F0F"
          },
          "strong": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u52A0\u7C97"
          },
          "type": {
            "type": "attr",
            "values": ["secondary", "success", "warning", "danger"],
            "description": "\u6587\u672C\u7C7B\u578B"
          },
          "underline": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u4E0B\u5212\u7EBF\u6837\u5F0F"
          }
        },
        "a-typography-link": {
          "_html": {
            "": "<a-typography-link>$1</a-typography-link>"
          }
        },
        "a-typography-text": {
          "_html": {
            "": "<a-typography-text>$1</a-typography-text>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/typography-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| code| \u6DFB\u52A0\u4EE3\u7801\u6837\u5F0F| boolean| false|  |\n| content(v-model)| \u5F53\u4F7F\u7528 ellipsis \u6216 editable \u65F6\uFF0C\u4F7F\u7528 content \u4EE3\u66FF children| string| -|  |\n| copyable| \u662F\u5426\u53EF\u62F7\u8D1D\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u8FDB\u884C\u5404\u79CD\u81EA\u5B9A\u4E49| boolean | copyable| false| copyable |\n| delete| \u6DFB\u52A0\u5220\u9664\u7EBF\u6837\u5F0F| boolean| false|  |\n| disabled| \u7981\u7528\u6587\u672C| boolean| false|  |\n| editable| \u662F\u5426\u53EF\u7F16\u8F91\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u5BF9\u7F16\u8F91\u8FDB\u884C\u63A7\u5236| boolean | editable| false| editable |\n| ellipsis| \u81EA\u52A8\u6EA2\u51FA\u7701\u7565| boolean| false|  |\n| keyboard| \u6DFB\u52A0\u952E\u76D8\u6837\u5F0F| boolean| false|  |\n| mark| \u6DFB\u52A0\u6807\u8BB0\u6837\u5F0F| boolean| false|  |\n| strong| \u662F\u5426\u52A0\u7C97| boolean| false|  |\n| type| \u6587\u672C\u7C7B\u578B| secondary | success | warning | danger| -|  |\n| underline| \u6DFB\u52A0\u4E0B\u5212\u7EBF\u6837\u5F0F| boolean| false|  |\n",
          "code": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u4EE3\u7801\u6837\u5F0F"
          },
          "v-model:content": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u4F7F\u7528 ellipsis \u6216 editable \u65F6\uFF0C\u4F7F\u7528 content \u4EE3\u66FF children"
          },
          "copyable": {
            "type": "attr",
            "values": ["boolean", "copyable"],
            "description": "\u662F\u5426\u53EF\u62F7\u8D1D\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u8FDB\u884C\u5404\u79CD\u81EA\u5B9A\u4E49"
          },
          "delete": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u5220\u9664\u7EBF\u6837\u5F0F"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u7528\u6587\u672C"
          },
          "editable": {
            "type": "attr",
            "values": ["boolean", "editable"],
            "description": "\u662F\u5426\u53EF\u7F16\u8F91\uFF0C\u4E3A\u5BF9\u8C61\u65F6\u53EF\u5BF9\u7F16\u8F91\u8FDB\u884C\u63A7\u5236"
          },
          "ellipsis": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u81EA\u52A8\u6EA2\u51FA\u7701\u7565"
          },
          "keyboard": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u952E\u76D8\u6837\u5F0F"
          },
          "mark": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u6807\u8BB0\u6837\u5F0F"
          },
          "strong": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u52A0\u7C97"
          },
          "type": {
            "type": "attr",
            "values": ["secondary", "success", "warning", "danger"],
            "description": "\u6587\u672C\u7C7B\u578B"
          },
          "underline": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6DFB\u52A0\u4E0B\u5212\u7EBF\u6837\u5F0F"
          }
        },
        "a-divider": {
          "_html": {
            "": "<a-divider>$1</a-divider>",
            ":dashed": "<a-divider dashed>$1</a-divider>",
            ":vertical": '<a-divider type="vertical">$1</a-divider>',
            ":orientation": '<a-divider orientation="${1:left}">$2</a-divider>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/divider-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| dashed| \u662F\u5426\u865A\u7EBF| boolean| false|  |\n| orientation| \u5206\u5272\u7EBF\u6807\u9898\u7684\u4F4D\u7F6E| left | right | center| center|  |\n| orientationMargin| \u6807\u9898\u548C\u6700\u8FD1 left/right \u8FB9\u6846\u4E4B\u95F4\u7684\u8DDD\u79BB\uFF0C\u53BB\u9664\u4E86\u5206\u5272\u7EBF\uFF0C\u540C\u65F6 orientation \u5FC5\u987B\u4E3A left \u6216 right| string | number| -| 3.0 |\n| plain| \u6587\u5B57\u662F\u5426\u663E\u793A\u4E3A\u666E\u901A\u6B63\u6587\u6837\u5F0F| boolean| false| 2.2.0 |\n| type| \u6C34\u5E73\u8FD8\u662F\u5782\u76F4\u7C7B\u578B| horizontal | vertical| horizontal|  |\n",
          "dashed": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u865A\u7EBF"
          },
          "orientation": {
            "type": "attr",
            "values": ["left", "right", "center"],
            "description": "\u5206\u5272\u7EBF\u6807\u9898\u7684\u4F4D\u7F6E"
          },
          "orientationMargin": {
            "type": "attr",
            "values": ["string", "number"],
            "description": "\u6807\u9898\u548C\u6700\u8FD1 left/right \u8FB9\u6846\u4E4B\u95F4\u7684\u8DDD\u79BB\uFF0C\u53BB\u9664\u4E86\u5206\u5272\u7EBF\uFF0C\u540C\u65F6 orientation \u5FC5\u987B\u4E3A left \u6216 right"
          },
          "plain": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6587\u5B57\u662F\u5426\u663E\u793A\u4E3A\u666E\u901A\u6B63\u6587\u6837\u5F0F"
          },
          "type": {
            "type": "attr",
            "values": ["horizontal", "vertical"],
            "description": "\u6C34\u5E73\u8FD8\u662F\u5782\u76F4\u7C7B\u578B"
          }
        },
        "a-flex": {
          "_html": {
            "": '<a-flex gap="middle">$1</a-flex>',
            ":vertical": '<a-flex gap="middle" :vertical="true">$1</a-flex>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/flex-cn)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| vertical| flex \u4E3B\u8F74\u7684\u65B9\u5411\u662F\u5426\u5782\u76F4\uFF0C\u4F7F\u7528 flex-direction: column| boolean| false|  |\n| wrap| \u8BBE\u7F6E\u5143\u7D20\u5355\u884C\u663E\u793A\u8FD8\u662F\u591A\u884C\u663E\u793A| \u53C2\u8003 flex-wrap| nowrap|  |\n| justify| \u8BBE\u7F6E\u5143\u7D20\u5728\u4E3B\u8F74\u65B9\u5411\u4E0A\u7684\u5BF9\u9F50\u65B9\u5F0F| \u53C2\u8003 justify-content| normal|  |\n| align| \u8BBE\u7F6E\u5143\u7D20\u5728\u4EA4\u53C9\u8F74\u65B9\u5411\u4E0A\u7684\u5BF9\u9F50\u65B9\u5F0F| \u53C2\u8003 align-items| normal|  |\n| flex| flex CSS \u7B80\u5199\u5C5E\u6027| \u53C2\u8003 flex| normal|  |\n| gap| \u8BBE\u7F6E\u7F51\u683C\u4E4B\u95F4\u7684\u95F4\u9699| small | middle | large | string | number| -|  |\n| component| \u81EA\u5B9A\u4E49\u5143\u7D20\u7C7B\u578B| Component| div|  |\n",
          "vertical": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "flex \u4E3B\u8F74\u7684\u65B9\u5411\u662F\u5426\u5782\u76F4\uFF0C\u4F7F\u7528 flex-direction: column"
          },
          "wrap": {
            "type": "attr",
            "values": ["\u53C2\u8003 flex-wrap"],
            "description": "\u8BBE\u7F6E\u5143\u7D20\u5355\u884C\u663E\u793A\u8FD8\u662F\u591A\u884C\u663E\u793A"
          },
          "justify": {
            "type": "attr",
            "values": ["\u53C2\u8003 justify-content"],
            "description": "\u8BBE\u7F6E\u5143\u7D20\u5728\u4E3B\u8F74\u65B9\u5411\u4E0A\u7684\u5BF9\u9F50\u65B9\u5F0F"
          },
          "align": {
            "type": "attr",
            "values": ["\u53C2\u8003 align-items"],
            "description": "\u8BBE\u7F6E\u5143\u7D20\u5728\u4EA4\u53C9\u8F74\u65B9\u5411\u4E0A\u7684\u5BF9\u9F50\u65B9\u5F0F"
          },
          "flex": {
            "type": "attr",
            "values": ["\u53C2\u8003 flex"],
            "description": "flex CSS \u7B80\u5199\u5C5E\u6027"
          },
          "gap": {
            "type": "attr",
            "values": ["small", "middle", "large", "string", "number"],
            "description": "\u8BBE\u7F6E\u7F51\u683C\u4E4B\u95F4\u7684\u95F4\u9699"
          },
          "component": {
            "type": "attr",
            "values": ["Component"],
            "description": "\u81EA\u5B9A\u4E49\u5143\u7D20\u7C7B\u578B"
          }
        },
        "a-row": {
          "_html": {
            "": '<a-row>\n<a-col :span="$1">$2</a-col>$3\n</a-row>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/grid-cn)\n#### \u5C5E\u6027\n\n| \u6210\u5458| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| align| \u5782\u76F4\u5BF9\u9F50\u65B9\u5F0F| top | middle | bottom | stretch | {[key in 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl']: 'top' | 'middle' | 'bottom' | 'stretch'}| top| object: 4.0 |\n| gutter| \u6805\u683C\u95F4\u9694\uFF0C\u53EF\u4EE5\u5199\u6210\u50CF\u7D20\u503C\u6216\u652F\u6301\u54CD\u5E94\u5F0F\u7684\u5BF9\u8C61\u5199\u6CD5\u6765\u8BBE\u7F6E\u6C34\u5E73\u95F4\u9694 { xs: 8, sm: 16, md: 24}\u3002\u6216\u8005\u4F7F\u7528\u6570\u7EC4\u5F62\u5F0F\u540C\u65F6\u8BBE\u7F6E [\u6C34\u5E73\u95F4\u8DDD, \u5782\u76F4\u95F4\u8DDD]\uFF081.5.0 \u540E\u652F\u6301\uFF09\u3002| number | object | array| 0| - |\n| justify| \u6C34\u5E73\u6392\u5217\u65B9\u5F0F| start | end | center | space-around | space-between | space-evenly | {[key in 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl']: 'start' | 'end' | 'center' | 'space-around' | 'space-between' | 'space-evenly'}| start| object: 4.0 |\n| wrap| \u662F\u5426\u81EA\u52A8\u6362\u884C| boolean| false| - |\n",
          "align": {
            "type": "attr",
            "values": ["top", "middle", "bottom", "stretch", "'sm'", "'md'", "'lg'", "'xl'", "'xxl']: 'top'", "'middle'", "'bottom'", "'stretch'}"],
            "description": "\u5782\u76F4\u5BF9\u9F50\u65B9\u5F0F"
          },
          "gutter": {
            "type": "attr",
            "values": ["number", "object", "array"],
            "description": "\u6805\u683C\u95F4\u9694\uFF0C\u53EF\u4EE5\u5199\u6210\u50CF\u7D20\u503C\u6216\u652F\u6301\u54CD\u5E94\u5F0F\u7684\u5BF9\u8C61\u5199\u6CD5\u6765\u8BBE\u7F6E\u6C34\u5E73\u95F4\u9694 { xs: 8, sm: 16, md: 24}\u3002\u6216\u8005\u4F7F\u7528\u6570\u7EC4\u5F62\u5F0F\u540C\u65F6\u8BBE\u7F6E [\u6C34\u5E73\u95F4\u8DDD, \u5782\u76F4\u95F4\u8DDD]\uFF081.5.0 \u540E\u652F\u6301\uFF09\u3002"
          },
          "justify": {
            "type": "attr",
            "values": ["start", "end", "center", "space-around", "space-between", "space-evenly", "'sm'", "'md'", "'lg'", "'xl'", "'xxl']: 'start'", "'end'", "'center'", "'space-around'", "'space-between'", "'space-evenly'}"],
            "description": "\u6C34\u5E73\u6392\u5217\u65B9\u5F0F"
          },
          "wrap": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u81EA\u52A8\u6362\u884C"
          }
        },
        "a-col": {
          "_html": {
            "": '<a-col :span="$1">$2</a-col>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/grid-cn)\n#### \u5C5E\u6027\n\n| \u6210\u5458| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| flex| flex \u5E03\u5C40\u586B\u5145| string|number| -|  |\n| offset| \u6805\u683C\u5DE6\u4FA7\u7684\u95F4\u9694\u683C\u6570\uFF0C\u95F4\u9694\u5185\u4E0D\u53EF\u4EE5\u6709\u6805\u683C| number| 0|  |\n| order| \u6805\u683C\u987A\u5E8F\uFF0Cflex \u5E03\u5C40\u6A21\u5F0F\u4E0B\u6709\u6548| number| 0|  |\n| pull| \u6805\u683C\u5411\u5DE6\u79FB\u52A8\u683C\u6570| number| 0|  |\n| push| \u6805\u683C\u5411\u53F3\u79FB\u52A8\u683C\u6570| number| 0|  |\n| span| \u6805\u683C\u5360\u4F4D\u683C\u6570\uFF0C\u4E3A 0 \u65F6\u76F8\u5F53\u4E8E display: none| number| -|  |\n| xs| <576px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61| number|object| -|  |\n| sm| \u2265576px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61| number|object| -|  |\n| md| \u2265768px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61| number|object| -|  |\n| lg| \u2265992px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61| number|object| -|  |\n| xl| \u22651200px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61| number|object| -|  |\n| xxl| \u22651600px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61| number|object| -|  |\n",
          "flex": {
            "type": "attr",
            "values": ["string|number"],
            "description": "flex \u5E03\u5C40\u586B\u5145"
          },
          "offset": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6805\u683C\u5DE6\u4FA7\u7684\u95F4\u9694\u683C\u6570\uFF0C\u95F4\u9694\u5185\u4E0D\u53EF\u4EE5\u6709\u6805\u683C"
          },
          "order": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6805\u683C\u987A\u5E8F\uFF0Cflex \u5E03\u5C40\u6A21\u5F0F\u4E0B\u6709\u6548"
          },
          "pull": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6805\u683C\u5411\u5DE6\u79FB\u52A8\u683C\u6570"
          },
          "push": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6805\u683C\u5411\u53F3\u79FB\u52A8\u683C\u6570"
          },
          "span": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6805\u683C\u5360\u4F4D\u683C\u6570\uFF0C\u4E3A 0 \u65F6\u76F8\u5F53\u4E8E display: none"
          },
          "xs": {
            "type": "attr",
            "values": ["number|object"],
            "description": "<576px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61"
          },
          "sm": {
            "type": "attr",
            "values": ["number|object"],
            "description": "\u2265576px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61"
          },
          "md": {
            "type": "attr",
            "values": ["number|object"],
            "description": "\u2265768px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61"
          },
          "lg": {
            "type": "attr",
            "values": ["number|object"],
            "description": "\u2265992px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61"
          },
          "xl": {
            "type": "attr",
            "values": ["number|object"],
            "description": "\u22651200px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61"
          },
          "xxl": {
            "type": "attr",
            "values": ["number|object"],
            "description": "\u22651600px \u54CD\u5E94\u5F0F\u6805\u683C\uFF0C\u53EF\u4E3A\u6805\u683C\u6570\u6216\u4E00\u4E2A\u5305\u542B\u5176\u4ED6\u5C5E\u6027\u7684\u5BF9\u8C61"
          }
        },
        "a-layout": {
          "_html": {
            "": "<a-layout>$1</a-layout>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/layout-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| class| \u5BB9\u5668 class| string| - |\n| hasSider| \u8868\u793A\u5B50\u5143\u7D20\u91CC\u6709 Sider\uFF0C\u4E00\u822C\u4E0D\u7528\u6307\u5B9A\u3002\u53EF\u7528\u4E8E\u670D\u52A1\u7AEF\u6E32\u67D3\u65F6\u907F\u514D\u6837\u5F0F\u95EA\u52A8| boolean| - |\n| style| \u6307\u5B9A\u6837\u5F0F| object| - |\n",
          "class": {
            "type": "attr",
            "values": [],
            "description": "\u5BB9\u5668 class"
          },
          "hasSider": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8868\u793A\u5B50\u5143\u7D20\u91CC\u6709 Sider\uFF0C\u4E00\u822C\u4E0D\u7528\u6307\u5B9A\u3002\u53EF\u7528\u4E8E\u670D\u52A1\u7AEF\u6E32\u67D3\u65F6\u907F\u514D\u6837\u5F0F\u95EA\u52A8"
          },
          "style": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6307\u5B9A\u6837\u5F0F"
          }
        },
        "a-layout-header": {
          "_html": {
            "": "<a-layout-header>$1</a-layout-header>"
          }
        },
        "a-layout-content": {
          "_html": {
            "": "<a-layout-content>$1</a-layout-content>"
          }
        },
        "a-layout-footer": {
          "_html": {
            "": "<a-layout-footer>$1</a-layout-footer>"
          }
        },
        "a-layout-sider": {
          "_html": {
            "": "<a-layout-sider>$1</a-layout-sider>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/layout-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| breakpoint| \u89E6\u53D1\u54CD\u5E94\u5F0F\u5E03\u5C40\u7684\u65AD\u70B9| xs | sm | md | lg | xl | xxl| -|  |\n| class| \u5BB9\u5668 class| string| -|  |\n| collapsed(v-model)| \u5F53\u524D\u6536\u8D77\u72B6\u6001| boolean| -|  |\n| collapsedWidth| \u6536\u7F29\u5BBD\u5EA6\uFF0C\u8BBE\u7F6E\u4E3A 0 \u4F1A\u51FA\u73B0\u7279\u6B8A trigger| number| 80|  |\n| collapsible| \u662F\u5426\u53EF\u6536\u8D77| boolean| false|  |\n| defaultCollapsed| \u662F\u5426\u9ED8\u8BA4\u6536\u8D77| boolean| false|  |\n| reverseArrow| \u7FFB\u8F6C\u6298\u53E0\u63D0\u793A\u7BAD\u5934\u7684\u65B9\u5411\uFF0C\u5F53 Sider \u5728\u53F3\u8FB9\u65F6\u53EF\u4EE5\u4F7F\u7528| boolean| false|  |\n| style| \u6307\u5B9A\u6837\u5F0F| object|string| -|  |\n| theme| \u4E3B\u9898\u989C\u8272| light | dark| dark|  |\n| trigger| \u81EA\u5B9A\u4E49 trigger\uFF0C\u8BBE\u7F6E\u4E3A null \u65F6\u9690\u85CF trigger| string|slot| -|  |\n| width| \u5BBD\u5EA6| number|string| 200|  |\n| zeroWidthTriggerStyle| \u6307\u5B9A\u5F53 collapsedWidth \u4E3A 0 \u65F6\u51FA\u73B0\u7684\u7279\u6B8A trigger \u7684\u6837\u5F0F| object| -| 1.5.0 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| breakpoint| \u89E6\u53D1\u54CD\u5E94\u5F0F\u5E03\u5C40\u65AD\u70B9\u65F6\u7684\u56DE\u8C03| (broken) => {} |\n| collapse| \u5C55\u5F00-\u6536\u8D77\u65F6\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u6709\u70B9\u51FB trigger \u4EE5\u53CA\u54CD\u5E94\u5F0F\u53CD\u9988\u4E24\u79CD\u65B9\u5F0F\u53EF\u4EE5\u89E6\u53D1| (collapsed, type) => {} |\n",
          "breakpoint": {
            "type": "event",
            "values": [],
            "description": "\u89E6\u53D1\u54CD\u5E94\u5F0F\u5E03\u5C40\u65AD\u70B9\u65F6\u7684\u56DE\u8C03"
          },
          "class": {
            "type": "attr",
            "values": [],
            "description": "\u5BB9\u5668 class"
          },
          "v-model:collapsed": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u524D\u6536\u8D77\u72B6\u6001"
          },
          "collapsedWidth": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6536\u7F29\u5BBD\u5EA6\uFF0C\u8BBE\u7F6E\u4E3A 0 \u4F1A\u51FA\u73B0\u7279\u6B8A trigger"
          },
          "collapsible": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u6536\u8D77"
          },
          "defaultCollapsed": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9ED8\u8BA4\u6536\u8D77"
          },
          "reverseArrow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7FFB\u8F6C\u6298\u53E0\u63D0\u793A\u7BAD\u5934\u7684\u65B9\u5411\uFF0C\u5F53 Sider \u5728\u53F3\u8FB9\u65F6\u53EF\u4EE5\u4F7F\u7528"
          },
          "style": {
            "type": "attr",
            "values": ["object|string"],
            "description": "\u6307\u5B9A\u6837\u5F0F"
          },
          "theme": {
            "type": "attr",
            "values": ["light", "dark"],
            "description": "\u4E3B\u9898\u989C\u8272"
          },
          "trigger": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u81EA\u5B9A\u4E49 trigger\uFF0C\u8BBE\u7F6E\u4E3A null \u65F6\u9690\u85CF trigger"
          },
          "width": {
            "type": "attr",
            "values": ["number|string"],
            "description": "\u5BBD\u5EA6"
          },
          "zeroWidthTriggerStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "\u6307\u5B9A\u5F53 collapsedWidth \u4E3A 0 \u65F6\u51FA\u73B0\u7684\u7279\u6B8A trigger \u7684\u6837\u5F0F"
          },
          "collapse": {
            "type": "event",
            "values": [],
            "description": "\u5C55\u5F00-\u6536\u8D77\u65F6\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u6709\u70B9\u51FB trigger \u4EE5\u53CA\u54CD\u5E94\u5F0F\u53CD\u9988\u4E24\u79CD\u65B9\u5F0F\u53EF\u4EE5\u89E6\u53D1"
          }
        },
        "a-space": {
          "_html": {
            "": "<a-space>$1</a-space>",
            ":vertical": '<a-space direction="vertical">\n$1\n</a-space>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/space-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| align| \u5BF9\u9F50\u65B9\u5F0F| start | end |center |baseline| -| 1.6.5 |\n| direction| \u95F4\u8DDD\u65B9\u5411| vertical | horizontal| horizontal| 1.6.5 |\n| size| \u95F4\u8DDD\u5927\u5C0F| small | middle | large | number| small| 1.6.5 |\n| split| \u8BBE\u7F6E\u62C6\u5206| VueNode | v-slot| -| 2.2.0 |\n| wrap| \u662F\u5426\u81EA\u52A8\u6362\u884C\uFF0C\u4EC5\u5728 horizontal \u65F6\u6709\u6548| boolean| false| 2.2.0 |\n",
          "align": {
            "type": "attr",
            "values": ["start", "end |center |baseline"],
            "description": "\u5BF9\u9F50\u65B9\u5F0F"
          },
          "direction": {
            "type": "attr",
            "values": ["vertical", "horizontal"],
            "description": "\u95F4\u8DDD\u65B9\u5411"
          },
          "size": {
            "type": "attr",
            "values": ["small", "middle", "large", "number"],
            "description": "\u95F4\u8DDD\u5927\u5C0F"
          },
          "split": {
            "type": "attr",
            "values": ["VueNode", "v-slot"],
            "description": "\u8BBE\u7F6E\u62C6\u5206"
          },
          "wrap": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u81EA\u52A8\u6362\u884C\uFF0C\u4EC5\u5728 horizontal \u65F6\u6709\u6548"
          }
        },
        "a-space-compact": {
          "_html": {
            "": "<a-space-compact block>$1</a-space-compact>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/space-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| block| \u5C06\u5BBD\u5EA6\u8C03\u6574\u4E3A\u7236\u5143\u7D20\u5BBD\u5EA6\u7684\u9009\u9879| boolean| false| 4.0.0 |\n| direction| \u6307\u5B9A\u6392\u5217\u65B9\u5411| vertical | horizontal| horizontal| 4.0.0 |\n| size| \u5B50\u7EC4\u4EF6\u5927\u5C0F| large | middle | small| middle| 4.0.0 |\n",
          "block": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5C06\u5BBD\u5EA6\u8C03\u6574\u4E3A\u7236\u5143\u7D20\u5BBD\u5EA6\u7684\u9009\u9879"
          },
          "direction": {
            "type": "attr",
            "values": ["vertical", "horizontal"],
            "description": "\u6307\u5B9A\u6392\u5217\u65B9\u5411"
          },
          "size": {
            "type": "attr",
            "values": ["large", "middle", "small"],
            "description": "\u5B50\u7EC4\u4EF6\u5927\u5C0F"
          }
        },
        "a-anchor": {
          "_html": {
            "": '<a-anchor :items="$1">$2</a-anchor>',
            ":horizontal": '<a-anchor direction="horizontal" :items="$1">$2</a-anchor>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/anchor-cn)\n#### \u5C5E\u6027\n#### [](https://www.antdv.com/components/anchor-cn)#### \u5C5E\u6027\n\n| \u6210\u5458| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| affix| \u56FA\u5B9A\u6A21\u5F0F| boolean| true|  |\n| bounds| \u951A\u70B9\u533A\u57DF\u8FB9\u754C| number| 5(px)|  |\n| getContainer| \u6307\u5B9A\u6EDA\u52A8\u7684\u5BB9\u5668| () => HTMLElement| () => window|  |\n| getCurrentAnchor| \u81EA\u5B9A\u4E49\u9AD8\u4EAE\u7684\u951A\u70B9| (activeLink: string) => string| -| activeLink(3.3) |\n| offsetBottom| \u8DDD\u79BB\u7A97\u53E3\u5E95\u90E8\u8FBE\u5230\u6307\u5B9A\u504F\u79FB\u91CF\u540E\u89E6\u53D1| number| |  |\n| offsetTop| \u8DDD\u79BB\u7A97\u53E3\u9876\u90E8\u8FBE\u5230\u6307\u5B9A\u504F\u79FB\u91CF\u540E\u89E6\u53D1| number| |  |\n| showInkInFixed| :affix="false" \u65F6\u662F\u5426\u663E\u793A\u5C0F\u65B9\u5757| boolean| false|  |\n| targetOffset| \u951A\u70B9\u6EDA\u52A8\u504F\u79FB\u91CF\uFF0C\u9ED8\u8BA4\u4E0E offsetTop \u76F8\u540C\uFF0C\u4F8B\u5B50| number| offsetTop| 1.5.0 |\n| wrapperClass| \u5BB9\u5668\u7684\u7C7B\u540D| string| -|  |\n| wrapperStyle| \u5BB9\u5668\u6837\u5F0F| object| -|  |\n| items| \u6570\u636E\u5316\u914D\u7F6E\u9009\u9879\u5185\u5BB9\uFF0C\u652F\u6301\u901A\u8FC7 children \u5D4C\u5957| { key, href, title, target, children }[] \u5177\u4F53\u89C1| -| 4.0 |\n| direction| \u8BBE\u7F6E\u5BFC\u822A\u65B9\u5411| vertical | horizontal| vertical| 4.0 |\n| customTitle| \u4F7F\u7528\u63D2\u69FD\u81EA\u5B9A\u4E49\u9009\u9879 title| v-slot="AnchorItem"| -| 4.0 |\n',
          "affix": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u56FA\u5B9A\u6A21\u5F0F"
          },
          "bounds": {
            "type": "attr",
            "values": ["number"],
            "description": "\u951A\u70B9\u533A\u57DF\u8FB9\u754C"
          },
          "getContainer": {
            "type": "attr",
            "values": ["() => HTMLElement"],
            "description": "\u6307\u5B9A\u6EDA\u52A8\u7684\u5BB9\u5668"
          },
          "getCurrentAnchor": {
            "type": "attr",
            "values": ["(activeLink: string) => string"],
            "description": "\u81EA\u5B9A\u4E49\u9AD8\u4EAE\u7684\u951A\u70B9"
          },
          "offsetBottom": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8DDD\u79BB\u7A97\u53E3\u5E95\u90E8\u8FBE\u5230\u6307\u5B9A\u504F\u79FB\u91CF\u540E\u89E6\u53D1"
          },
          "offsetTop": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8DDD\u79BB\u7A97\u53E3\u9876\u90E8\u8FBE\u5230\u6307\u5B9A\u504F\u79FB\u91CF\u540E\u89E6\u53D1"
          },
          "showInkInFixed": {
            "type": "attr",
            "values": ["true", "false"],
            "description": ':affix="false" \u65F6\u662F\u5426\u663E\u793A\u5C0F\u65B9\u5757'
          },
          "targetOffset": {
            "type": "attr",
            "values": ["number"],
            "description": "\u951A\u70B9\u6EDA\u52A8\u504F\u79FB\u91CF\uFF0C\u9ED8\u8BA4\u4E0E offsetTop \u76F8\u540C\uFF0C\u4F8B\u5B50"
          },
          "wrapperClass": {
            "type": "attr",
            "values": [],
            "description": "\u5BB9\u5668\u7684\u7C7B\u540D"
          },
          "wrapperStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "\u5BB9\u5668\u6837\u5F0F"
          },
          "items": {
            "type": "attr",
            "values": [],
            "description": "\u6570\u636E\u5316\u914D\u7F6E\u9009\u9879\u5185\u5BB9\uFF0C\u652F\u6301\u901A\u8FC7 children \u5D4C\u5957"
          },
          "direction": {
            "type": "attr",
            "values": ["vertical", "horizontal"],
            "description": "\u8BBE\u7F6E\u5BFC\u822A\u65B9\u5411"
          },
          "customTitle": {
            "type": "attr",
            "values": ['v-slot="AnchorItem"'],
            "description": "\u4F7F\u7528\u63D2\u69FD\u81EA\u5B9A\u4E49\u9009\u9879 title"
          }
        },
        "a-breadcrumb": {
          "_html": {
            "": "<a-breadcrumb>\n<a-breadcrumb-item>$1</a-breadcrumb-item>$2\n</a-breadcrumb>",
            ":routes": '<a-breadcrumb :routes="routes">\n<template #itemRender="{ route, paths }">\n$1\n</template>\n</a-breadcrumb>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/breadcrumb-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u53EF\u9009\u503C| \u9ED8\u8BA4\u503C |
| :--- | :--- | :--- | :--- | :--- |
| itemRender| \u81EA\u5B9A\u4E49\u94FE\u63A5\u51FD\u6570\uFF0C\u548C vue-router \u914D\u7F6E\u4F7F\u7528\uFF0C \u4E5F\u53EF\u4F7F\u7528 #itemRender="props"| ({route, params, routes, paths}) => vNode| | - |
| params| \u8DEF\u7531\u7684\u53C2\u6570| object| | - |
| routes| router \u7684\u8DEF\u7531\u6808\u4FE1\u606F| routes[]| | - |
| separator| \u5206\u9694\u7B26\u81EA\u5B9A\u4E49| string|slot| | '/' |
`,
          "itemRender": {
            "type": "attr",
            "values": [],
            "description": '\u81EA\u5B9A\u4E49\u94FE\u63A5\u51FD\u6570\uFF0C\u548C vue-router \u914D\u7F6E\u4F7F\u7528\uFF0C \u4E5F\u53EF\u4F7F\u7528 #itemRender="props"'
          },
          "params": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8DEF\u7531\u7684\u53C2\u6570"
          },
          "routes": {
            "type": "attr",
            "values": ["routes[]"],
            "description": "router \u7684\u8DEF\u7531\u6808\u4FE1\u606F"
          },
          "separator": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5206\u9694\u7B26\u81EA\u5B9A\u4E49"
          }
        },
        "a-breadcrumb-item": {
          "_html": {
            "": "<a-breadcrumb-item>$1</a-breadcrumb-item>",
            ":overlay[slot]": "<template #overlay>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/breadcrumb-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u53C2\u6570| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| href| \u94FE\u63A5\u7684\u76EE\u7684\u5730| string| -| 1.5.0 |\n| overlay| \u4E0B\u62C9\u83DC\u5355\u7684\u5185\u5BB9| Menu | () => Menu| -| 1.5.0 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C|  |\n| :--- | :--- | :--- | :--- | :--- |\n| click| \u5355\u51FB\u4E8B\u4EF6| (e:MouseEvent)=>void| -| 1.5.0 |\n\n| \u53C2\u6570| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| -| -| -| - |\n",
          "href": {
            "type": "attr",
            "values": [],
            "description": "\u94FE\u63A5\u7684\u76EE\u7684\u5730"
          },
          "overlay": {
            "type": "attr",
            "values": ["Menu", "() => Menu"],
            "description": "\u4E0B\u62C9\u83DC\u5355\u7684\u5185\u5BB9"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": "\u5355\u51FB\u4E8B\u4EF6"
          }
        },
        "a-breadcrumb-separator": {
          "_html": {
            "": "<a-breadcrumb-separator>$1</a-breadcrumb-separator>"
          }
        },
        "a-dropdown": {
          "_html": {
            "": "<a-dropdown>\n<a @click.prevent>\n${1:Hover me}\n<DownOutlined />\n</a>\n<template #overlay>\n<a-menu>\n<a-menu-item>$2</a-menu-item>$2\n</a-menu>\n</template>\n</a-dropdown>",
            ":contextmenu": `<a-dropdown :trigger="['contextmenu']">
<div :style="{ textAlign: 'center', background: '#f7f7f7', height: '200px', lineHeight: '200px', color: '#777', }" >
\${1:Right Click on here}
</div>
<template #overlay>
<a-menu>
<a-menu-item key="1">$2</a-menu-item>
</a-menu>
</template>
</a-dropdown>`,
            ":click": `<a-dropdown :trigger="['click']">
<a class="ant-dropdown-link" @click.prevent>
\${1:Click me}
<DownOutlined />
</a>
<template #overlay>
<a-menu>
<a-menu-item key="3">3rd menu item</a-menu-item>
</a-menu>
</template>
</a-dropdown>`
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/dropdown-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C|  |\n| :--- | :--- | :--- | :--- | :--- |\n| align| \u8BE5\u503C\u5C06\u5408\u5E76\u5230 placement \u7684\u914D\u7F6E\u4E2D\uFF0C\u8BBE\u7F6E\u53C2\u8003 dom-align| Object| \u65E0|  |\n| arrow| \u4E0B\u62C9\u6846\u7BAD\u5934\u662F\u5426\u663E\u793A| boolean | { pointAtCenter: boolean }| false| 3.3.0 |\n| destroyPopupOnHide| \u5173\u95ED\u540E\u662F\u5426\u9500\u6BC1 Dropdown| boolean| false| 3.0 |\n| disabled| \u83DC\u5355\u662F\u5426\u7981\u7528| boolean| -|  |\n| getPopupContainer| \u83DC\u5355\u6E32\u67D3\u7236\u8282\u70B9\u3002\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\uFF0C\u5982\u679C\u4F60\u9047\u5230\u83DC\u5355\u6EDA\u52A8\u5B9A\u4F4D\u95EE\u9898\uFF0C\u8BD5\u8BD5\u4FEE\u6539\u4E3A\u6EDA\u52A8\u7684\u533A\u57DF\uFF0C\u5E76\u76F8\u5BF9\u5176\u5B9A\u4F4D\u3002| Function(triggerNode)| () => document.body|  |\n| overlay(v-slot)| \u83DC\u5355| Menu| -|  |\n| overlayClassName| \u4E0B\u62C9\u6839\u5143\u7D20\u7684\u7C7B\u540D\u79F0| string| -|  |\n| overlayStyle| \u4E0B\u62C9\u6839\u5143\u7D20\u7684\u6837\u5F0F| object| -|  |\n| placement| \u83DC\u5355\u5F39\u51FA\u4F4D\u7F6E| bottomLeft | bottom | bottomRight | topLeft | top | topRight| bottomLeft|  |\n| trigger| \u89E6\u53D1\u4E0B\u62C9\u7684\u884C\u4E3A, \u79FB\u52A8\u7AEF\u4E0D\u652F\u6301 hover| Array<click|hover|contextmenu>| ['hover']|  |\n| open(v-model)| \u83DC\u5355\u662F\u5426\u663E\u793A| boolean| -|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| openChange| \u83DC\u5355\u663E\u793A\u72B6\u6001\u6539\u53D8\u65F6\u8C03\u7528\uFF0C\u53C2\u6570\u4E3A visible\u3002\u70B9\u51FB\u83DC\u5355\u6309\u94AE\u5BFC\u81F4\u7684\u6D88\u5931\u4E0D\u4F1A\u89E6\u53D1| function(open)| 4.0 |\n",
          "align": {
            "type": "attr",
            "values": ["Object"],
            "description": "\u8BE5\u503C\u5C06\u5408\u5E76\u5230 placement \u7684\u914D\u7F6E\u4E2D\uFF0C\u8BBE\u7F6E\u53C2\u8003 dom-align"
          },
          "arrow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E0B\u62C9\u6846\u7BAD\u5934\u662F\u5426\u663E\u793A"
          },
          "destroyPopupOnHide": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5173\u95ED\u540E\u662F\u5426\u9500\u6BC1 Dropdown"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u83DC\u5355\u662F\u5426\u7981\u7528"
          },
          "getPopupContainer": {
            "type": "attr",
            "values": ["Function(triggerNode)"],
            "description": "\u83DC\u5355\u6E32\u67D3\u7236\u8282\u70B9\u3002\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\uFF0C\u5982\u679C\u4F60\u9047\u5230\u83DC\u5355\u6EDA\u52A8\u5B9A\u4F4D\u95EE\u9898\uFF0C\u8BD5\u8BD5\u4FEE\u6539\u4E3A\u6EDA\u52A8\u7684\u533A\u57DF\uFF0C\u5E76\u76F8\u5BF9\u5176\u5B9A\u4F4D\u3002"
          },
          "overlay(v-slot)": {
            "type": "attr",
            "values": ["Menu"],
            "description": "\u83DC\u5355"
          },
          "overlayClassName": {
            "type": "attr",
            "values": [],
            "description": "\u4E0B\u62C9\u6839\u5143\u7D20\u7684\u7C7B\u540D\u79F0"
          },
          "overlayStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "\u4E0B\u62C9\u6839\u5143\u7D20\u7684\u6837\u5F0F"
          },
          "placement": {
            "type": "attr",
            "values": ["bottomLeft", "bottom", "bottomRight", "topLeft", "top", "topRight"],
            "description": "\u83DC\u5355\u5F39\u51FA\u4F4D\u7F6E"
          },
          "trigger": {
            "type": "attr",
            "values": ["Array<click|hover|contextmenu>"],
            "description": "\u89E6\u53D1\u4E0B\u62C9\u7684\u884C\u4E3A, \u79FB\u52A8\u7AEF\u4E0D\u652F\u6301 hover"
          },
          "v-model:open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u83DC\u5355\u662F\u5426\u663E\u793A"
          },
          "openChange": {
            "type": "event",
            "values": [],
            "description": "\u83DC\u5355\u663E\u793A\u72B6\u6001\u6539\u53D8\u65F6\u8C03\u7528\uFF0C\u53C2\u6570\u4E3A visible\u3002\u70B9\u51FB\u83DC\u5355\u6309\u94AE\u5BFC\u81F4\u7684\u6D88\u5931\u4E0D\u4F1A\u89E6\u53D1"
          }
        },
        "a-menu-divider": {
          "_html": {
            "": "<a-menu-divider>$1</a-menu-divider>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/menu-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| dashed| \u662F\u5426\u865A\u7EBF| boolean| false| 3.0 |\n",
          "dashed": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u865A\u7EBF"
          }
        },
        "a-dropdown-button": {
          "_html": {
            "": '<a-dropdown-button type="primary">\n<template #overlay>\n<a-menu>\n<a-menu-item key="1">$1</a-menu-item>$2\n</a-menu>\n</template>\nSubmit\n</a-dropdown-button>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/dropdown-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| disabled| \u83DC\u5355\u662F\u5426\u7981\u7528| boolean| -|  |\n| icon| \u53F3\u4FA7\u7684 icon| VNode | slot| -| 1.5.0 |\n| loading| \u8BBE\u7F6E\u6309\u94AE\u8F7D\u5165\u72B6\u6001| boolean | { delay: number }| false| 3.0 |\n| overlay(v-slot)| \u83DC\u5355| Menu| -|  |\n| placement| \u83DC\u5355\u5F39\u51FA\u4F4D\u7F6E| bottomLeft | bottom | bottomRight | topLeft | top | topRight| bottomLeft|  |\n| size| \u6309\u94AE\u5927\u5C0F\uFF0C\u548C Button \u4E00\u81F4| string| 'default'|  |\n| trigger| \u89E6\u53D1\u4E0B\u62C9\u7684\u884C\u4E3A| Array<click|hover|contextmenu>| ['hover']|  |\n| type| \u6309\u94AE\u7C7B\u578B\uFF0C\u548C Button \u4E00\u81F4| string| 'default'|  |\n| open(v-model)| \u83DC\u5355\u662F\u5426\u663E\u793A| boolean| -|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| click| \u70B9\u51FB\u5DE6\u4FA7\u6309\u94AE\u7684\u56DE\u8C03\uFF0C\u548C Button \u4E00\u81F4| Function|  |\n| openChange| \u83DC\u5355\u663E\u793A\u72B6\u6001\u6539\u53D8\u65F6\u8C03\u7528\uFF0C\u53C2\u6570\u4E3A visible\u3002\u70B9\u51FB\u83DC\u5355\u6309\u94AE\u5BFC\u81F4\u7684\u6D88\u5931\u4E0D\u4F1A\u89E6\u53D1| function(open)| 4.0 |\n",
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u83DC\u5355\u662F\u5426\u7981\u7528"
          },
          "icon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u53F3\u4FA7\u7684 icon"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u6309\u94AE\u8F7D\u5165\u72B6\u6001"
          },
          "overlay(v-slot)": {
            "type": "attr",
            "values": ["Menu"],
            "description": "\u83DC\u5355"
          },
          "placement": {
            "type": "attr",
            "values": ["bottomLeft", "bottom", "bottomRight", "topLeft", "top", "topRight"],
            "description": "\u83DC\u5355\u5F39\u51FA\u4F4D\u7F6E"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u6309\u94AE\u5927\u5C0F\uFF0C\u548C Button \u4E00\u81F4"
          },
          "trigger": {
            "type": "attr",
            "values": ["Array<click|hover|contextmenu>"],
            "description": "\u89E6\u53D1\u4E0B\u62C9\u7684\u884C\u4E3A"
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": "\u6309\u94AE\u7C7B\u578B\uFF0C\u548C Button \u4E00\u81F4"
          },
          "v-model:open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u83DC\u5355\u662F\u5426\u663E\u793A"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u5DE6\u4FA7\u6309\u94AE\u7684\u56DE\u8C03\uFF0C\u548C Button \u4E00\u81F4"
          },
          "openChange": {
            "type": "event",
            "values": [],
            "description": "\u83DC\u5355\u663E\u793A\u72B6\u6001\u6539\u53D8\u65F6\u8C03\u7528\uFF0C\u53C2\u6570\u4E3A visible\u3002\u70B9\u51FB\u83DC\u5355\u6309\u94AE\u5BFC\u81F4\u7684\u6D88\u5931\u4E0D\u4F1A\u89E6\u53D1"
          }
        },
        "a-menu": {
          "_html": {
            "": '<a-menu v-model:selectedKeys="${1:current}" mode="horizontal" :items="${2:items}">$3</a-menu>',
            ":inline": '<a-menu v-model:openKeys="${1:openKeys}" v-model:selectedKeys="${2:selectedKeys}" mode="inline" :items="${3:items}" @click="${4:handleClick}">$5</a-menu>',
            ":vertical": '<a-menu v-model:openKeys="openKeys" v-model:selectedKeys="selectedKeys" mode="vertical" :items="items" @click="handleClick"></a-menu>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/menu-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| forceSubMenuRender| \u5728\u5B50\u83DC\u5355\u5C55\u793A\u4E4B\u524D\u5C31\u6E32\u67D3\u8FDB DOM| boolean| false |\n| inlineCollapsed| inline \u65F6\u83DC\u5355\u662F\u5426\u6536\u8D77\u72B6\u6001| boolean| - |\n| inlineIndent| inline \u6A21\u5F0F\u7684\u83DC\u5355\u7F29\u8FDB\u5BBD\u5EA6| number| 24 |\n| items| \u83DC\u5355\u5185\u5BB9| ItemType[]| - |\n| mode| \u83DC\u5355\u7C7B\u578B\uFF0C\u73B0\u5728\u652F\u6301\u5782\u76F4\u3001\u6C34\u5E73\u3001\u548C\u5185\u5D4C\u6A21\u5F0F\u4E09\u79CD| vertical | horizontal | inline| vertical |\n| multiple| \u662F\u5426\u5141\u8BB8\u591A\u9009| boolean| false |\n| openKeys(v-model)| \u5F53\u524D\u5C55\u5F00\u7684 SubMenu \u83DC\u5355\u9879 key \u6570\u7EC4| (string | number)[]|  |\n| overflowedIndicator| \u7528\u4E8E\u81EA\u5B9A\u4E49 Menu \u6C34\u5E73\u7A7A\u95F4\u4E0D\u8DB3\u65F6\u7684\u7701\u7565\u6536\u7F29\u7684\u56FE\u6807| slot| <EllipsisOutlined /> |\n| selectable| \u662F\u5426\u5141\u8BB8\u9009\u4E2D| boolean| true |\n| selectedKeys(v-model)| \u5F53\u524D\u9009\u4E2D\u7684\u83DC\u5355\u9879 key \u6570\u7EC4| (string | number)[]|  |\n| subMenuCloseDelay| \u7528\u6237\u9F20\u6807\u79BB\u5F00\u5B50\u83DC\u5355\u540E\u5173\u95ED\u5EF6\u65F6\uFF0C\u5355\u4F4D\uFF1A\u79D2| number| 0.1 |\n| subMenuOpenDelay| \u7528\u6237\u9F20\u6807\u8FDB\u5165\u5B50\u83DC\u5355\u540E\u5F00\u542F\u5EF6\u65F6\uFF0C\u5355\u4F4D\uFF1A\u79D2| number| 0 |\n| theme| \u4E3B\u9898\u989C\u8272| light | dark| light |\n| triggerSubMenuAction| \u4FEE\u6539 Menu \u5B50\u83DC\u5355\u7684\u89E6\u53D1\u65B9\u5F0F| click | hover| hover |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| click| \u70B9\u51FB MenuItem \u8C03\u7528\u6B64\u51FD\u6570| function({ item, key, keyPath }) |\n| deselect| \u53D6\u6D88\u9009\u4E2D\u65F6\u8C03\u7528\uFF0C\u4EC5\u5728 multiple \u751F\u6548| function({ item, key, selectedKeys }) |\n| openChange| SubMenu \u5C55\u5F00/\u5173\u95ED\u7684\u56DE\u8C03| function(openKeys: (string | number)[]) |\n| select| \u88AB\u9009\u4E2D\u65F6\u8C03\u7528| function({ item, key, selectedKeys }) |\n",
          "forceSubMenuRender": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u5B50\u83DC\u5355\u5C55\u793A\u4E4B\u524D\u5C31\u6E32\u67D3\u8FDB DOM"
          },
          "inlineCollapsed": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "inline \u65F6\u83DC\u5355\u662F\u5426\u6536\u8D77\u72B6\u6001"
          },
          "inlineIndent": {
            "type": "attr",
            "values": ["number"],
            "description": "inline \u6A21\u5F0F\u7684\u83DC\u5355\u7F29\u8FDB\u5BBD\u5EA6"
          },
          "items": {
            "type": "attr",
            "values": ["ItemType[]"],
            "description": "\u83DC\u5355\u5185\u5BB9"
          },
          "mode": {
            "type": "attr",
            "values": ["vertical", "horizontal", "inline"],
            "description": "\u83DC\u5355\u7C7B\u578B\uFF0C\u73B0\u5728\u652F\u6301\u5782\u76F4\u3001\u6C34\u5E73\u3001\u548C\u5185\u5D4C\u6A21\u5F0F\u4E09\u79CD"
          },
          "multiple": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5141\u8BB8\u591A\u9009"
          },
          "v-model:openKeys": {
            "type": "attr",
            "values": ["(string", "number)[]"],
            "description": "\u5F53\u524D\u5C55\u5F00\u7684 SubMenu \u83DC\u5355\u9879 key \u6570\u7EC4"
          },
          "overflowedIndicator": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u7528\u4E8E\u81EA\u5B9A\u4E49 Menu \u6C34\u5E73\u7A7A\u95F4\u4E0D\u8DB3\u65F6\u7684\u7701\u7565\u6536\u7F29\u7684\u56FE\u6807"
          },
          "selectable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5141\u8BB8\u9009\u4E2D"
          },
          "v-model:selectedKeys": {
            "type": "attr",
            "values": ["(string", "number)[]"],
            "description": "\u5F53\u524D\u9009\u4E2D\u7684\u83DC\u5355\u9879 key \u6570\u7EC4"
          },
          "subMenuCloseDelay": {
            "type": "attr",
            "values": ["number"],
            "description": "\u7528\u6237\u9F20\u6807\u79BB\u5F00\u5B50\u83DC\u5355\u540E\u5173\u95ED\u5EF6\u65F6\uFF0C\u5355\u4F4D\uFF1A\u79D2"
          },
          "subMenuOpenDelay": {
            "type": "attr",
            "values": ["number"],
            "description": "\u7528\u6237\u9F20\u6807\u8FDB\u5165\u5B50\u83DC\u5355\u540E\u5F00\u542F\u5EF6\u65F6\uFF0C\u5355\u4F4D\uFF1A\u79D2"
          },
          "theme": {
            "type": "attr",
            "values": ["light", "dark"],
            "description": "\u4E3B\u9898\u989C\u8272"
          },
          "triggerSubMenuAction": {
            "type": "attr",
            "values": ["click", "hover"],
            "description": "\u4FEE\u6539 Menu \u5B50\u83DC\u5355\u7684\u89E6\u53D1\u65B9\u5F0F"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB MenuItem \u8C03\u7528\u6B64\u51FD\u6570"
          },
          "deselect": {
            "type": "event",
            "values": [],
            "description": "\u53D6\u6D88\u9009\u4E2D\u65F6\u8C03\u7528\uFF0C\u4EC5\u5728 multiple \u751F\u6548"
          },
          "openChange": {
            "type": "event",
            "values": [],
            "description": "SubMenu \u5C55\u5F00/\u5173\u95ED\u7684\u56DE\u8C03"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u88AB\u9009\u4E2D\u65F6\u8C03\u7528"
          }
        },
        "a-page-header": {
          "_html": {
            "": '<a-page-header title="$1" sub-title="$2" @back="$3">$4</a-page-header>',
            ":breadcrumb": '<a-page-header title="$1" sub-title="$2" @back="$3" :breadcrumb="{ routes }">$4</a-page-header>',
            ":extra[slot]": "<template #extra>\n$1\n</template>",
            ":tags[slot]": "<template #tags>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/page-header-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| avatar| \u6807\u9898\u680F\u65C1\u7684\u5934\u50CF| avatar props| - |\n| backIcon| \u81EA\u5B9A\u4E49 back icon \uFF0C\u5982\u679C\u4E3A false \u4E0D\u6E32\u67D3 back icon| string|slot| <ArrowLeft /> |\n| breadcrumb| \u9762\u5305\u5C51\u7684\u914D\u7F6E| breadcrumb| - |\n| extra| \u64CD\u4F5C\u533A\uFF0C\u4F4D\u4E8E title \u884C\u7684\u884C\u5C3E| string|slot| - |\n| footer| PageHeader \u7684\u9875\u811A\uFF0C\u4E00\u822C\u7528\u4E8E\u6E32\u67D3 TabBar| string|slot| - |\n| ghost| pageHeader \u7684\u7C7B\u578B\uFF0C\u5C06\u4F1A\u6539\u53D8\u80CC\u666F\u989C\u8272| boolean| true |\n| subTitle| \u81EA\u5B9A\u4E49\u7684\u4E8C\u7EA7\u6807\u9898\u6587\u5B57| string|slot| - |\n| tags| title \u65C1\u7684 tag \u5217\u8868| Tag[] | Tag| - |\n| title| \u81EA\u5B9A\u4E49\u6807\u9898\u6587\u5B57| string|slot| - |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| back| \u8FD4\u56DE\u6309\u94AE\u7684\u70B9\u51FB\u4E8B\u4EF6| function(e) |\n",
          "avatar": {
            "type": "attr",
            "values": ["avatar props"],
            "description": "\u6807\u9898\u680F\u65C1\u7684\u5934\u50CF"
          },
          "backIcon": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u81EA\u5B9A\u4E49 back icon \uFF0C\u5982\u679C\u4E3A false \u4E0D\u6E32\u67D3 back icon"
          },
          "breadcrumb": {
            "type": "attr",
            "values": ["breadcrumb"],
            "description": "\u9762\u5305\u5C51\u7684\u914D\u7F6E"
          },
          "extra": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u64CD\u4F5C\u533A\uFF0C\u4F4D\u4E8E title \u884C\u7684\u884C\u5C3E"
          },
          "footer": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "PageHeader \u7684\u9875\u811A\uFF0C\u4E00\u822C\u7528\u4E8E\u6E32\u67D3 TabBar"
          },
          "ghost": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "pageHeader \u7684\u7C7B\u578B\uFF0C\u5C06\u4F1A\u6539\u53D8\u80CC\u666F\u989C\u8272"
          },
          "subTitle": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u4E8C\u7EA7\u6807\u9898\u6587\u5B57"
          },
          "tags": {
            "type": "attr",
            "values": ["Tag[]", "Tag"],
            "description": "title \u65C1\u7684 tag \u5217\u8868"
          },
          "title": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u81EA\u5B9A\u4E49\u6807\u9898\u6587\u5B57"
          },
          "back": {
            "type": "event",
            "values": [],
            "description": "\u8FD4\u56DE\u6309\u94AE\u7684\u70B9\u51FB\u4E8B\u4EF6"
          }
        },
        "a-pagination": {
          "_html": {
            "": ' <a-pagination v-model:current="$1" show-quick-jumper :total="$2" @change="$3">$4</a-pagination>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/pagination-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| current(v-model)| \u5F53\u524D\u9875\u6570| number| -|  |
| defaultPageSize| \u9ED8\u8BA4\u7684\u6BCF\u9875\u6761\u6570| number| 10|  |
| disabled| \u7981\u7528\u5206\u9875| boolean| -| 1.5.0 |
| hideOnSinglePage| \u53EA\u6709\u4E00\u9875\u65F6\u662F\u5426\u9690\u85CF\u5206\u9875\u5668| boolean| false|  |
| itemRender| \u7528\u4E8E\u81EA\u5B9A\u4E49\u9875\u7801\u7684\u7ED3\u6784\uFF0C\u53EF\u7528\u4E8E\u4F18\u5316 SEO| ({page, type: 'page' | 'prev' | 'next', originalElement}) => vNode | v-slot| -|  |
| pageSize(v-model)| \u6BCF\u9875\u6761\u6570| number| -|  |
| pageSizeOptions| \u6307\u5B9A\u6BCF\u9875\u53EF\u4EE5\u663E\u793A\u591A\u5C11\u6761| string[] | number[]| ['10', '20', '50', '100']|  |
| responsive| \u5F53 size \u672A\u6307\u5B9A\u65F6\uFF0C\u6839\u636E\u5C4F\u5E55\u5BBD\u5EA6\u81EA\u52A8\u8C03\u6574\u5C3A\u5BF8| boolean| -| 3.1 |
| showLessItems| \u662F\u5426\u663E\u793A\u8F83\u5C11\u9875\u9762\u5185\u5BB9| boolean| false| 1.5.0 |
| showQuickJumper| \u662F\u5426\u53EF\u4EE5\u5FEB\u901F\u8DF3\u8F6C\u81F3\u67D0\u9875| boolean| false|  |
| showSizeChanger| \u662F\u5426\u5C55\u793A pageSize \u5207\u6362\u5668\uFF0C\u5F53 total \u5927\u4E8E 50 \u65F6\u9ED8\u8BA4\u4E3A true| boolean| -|  |
| showTotal| \u7528\u4E8E\u663E\u793A\u6570\u636E\u603B\u91CF\u548C\u5F53\u524D\u6570\u636E\u987A\u5E8F| Function(total, range)| -|  |
| simple| \u5F53\u6DFB\u52A0\u8BE5\u5C5E\u6027\u65F6\uFF0C\u663E\u793A\u4E3A\u7B80\u5355\u5206\u9875| boolean| -|  |
| size| \u5F53\u4E3A\u300Csmall\u300D\u65F6\uFF0C\u662F\u5C0F\u5C3A\u5BF8\u5206\u9875| string| ""|  |
| total| \u6570\u636E\u603B\u6570| number| 0|  |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570|  |
| :--- | :--- | :--- | :--- |
| change| \u9875\u7801\u6216 pageSize \u6539\u53D8\u7684\u56DE\u8C03\uFF0C\u53C2\u6570\u662F\u6539\u53D8\u540E\u7684\u9875\u7801\u53CA\u6BCF\u9875\u6761\u6570| Function(page, pageSize)| noop |
| showSizeChange| pageSize \u53D8\u5316\u7684\u56DE\u8C03| Function(current, size)| noop |
`,
          "position": {
            "type": "attr",
            "values": ["Array"],
            "description": "\u6307\u5B9A\u5206\u9875\u663E\u793A\u7684\u4F4D\u7F6E\uFF0C \u53D6\u503C\u4E3AtopLeft | topCenter | topRight |bottomLeft | bottomCenter | bottomRight"
          }
        },
        "a-steps": {
          "_html": {
            "": '<a-steps :current="$1" :items="$2">$3</a-steps>',
            ":vertical": '<a-steps :current="$1" :items="$2" direction="vertical">$3</a-steps>',
            ":progressDot[slot]": '<template #progressDot="{ index, status, prefixCls }">\n$1\n</template>',
            ":navigation": '<a-steps :current="$1" :items="$2" type="navigation">$3</a-steps>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/steps-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| current (v-model)| \u6307\u5B9A\u5F53\u524D\u6B65\u9AA4\uFF0C\u4ECE 0 \u5F00\u59CB\u8BB0\u6570\u3002\u5728\u5B50 Step \u5143\u7D20\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7 status \u5C5E\u6027\u8986\u76D6\u72B6\u6001, 1.5.0 \u540E\u652F\u6301 v-model| number| 0|  |\n| direction| \u6307\u5B9A\u6B65\u9AA4\u6761\u65B9\u5411\u3002\u76EE\u524D\u652F\u6301\u6C34\u5E73\uFF08horizontal\uFF09\u548C\u7AD6\u76F4\uFF08vertical\uFF09\u4E24\u79CD\u65B9\u5411| string| horizontal|  |\n| initial| \u8D77\u59CB\u5E8F\u53F7\uFF0C\u4ECE 0 \u5F00\u59CB\u8BB0\u6570| number| 0|  |\n| labelPlacement| \u6307\u5B9A\u6807\u7B7E\u653E\u7F6E\u4F4D\u7F6E\uFF0C\u9ED8\u8BA4\u6C34\u5E73\u653E\u56FE\u6807\u53F3\u4FA7\uFF0C\u53EF\u9009vertical\u653E\u56FE\u6807\u4E0B\u65B9| string| horizontal|  |\n| percent| \u5F53\u524D process \u6B65\u9AA4\u663E\u793A\u7684\u8FDB\u5EA6\u6761\u8FDB\u5EA6\uFF08\u53EA\u5BF9\u57FA\u672C\u7C7B\u578B\u7684 Steps \u751F\u6548\uFF09| number| -| 3.0 |\n| progressDot| \u70B9\u72B6\u6B65\u9AA4\u6761\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u4E3A\u4E00\u4E2A \u4F5C\u7528\u57DF\u63D2\u69FD,labelPlacement \u5C06\u5F3A\u5236\u4E3Avertical| Boolean or v-slot:progressDot="{index, status, title, description, prefixCls, iconDot}"| false|  |\n| responsive| \u5F53\u5C4F\u5E55\u5BBD\u5EA6\u5C0F\u4E8E 532px \u65F6\u81EA\u52A8\u53D8\u4E3A\u5782\u76F4\u6A21\u5F0F| boolean| true| 3.0 |\n| size| \u6307\u5B9A\u5927\u5C0F\uFF0C\u76EE\u524D\u652F\u6301\u666E\u901A\uFF08default\uFF09\u548C\u8FF7\u4F60\uFF08small\uFF09| string| default|  |\n| status| \u6307\u5B9A\u5F53\u524D\u6B65\u9AA4\u7684\u72B6\u6001\uFF0C\u53EF\u9009 wait process finish error| string| process|  |\n| type| \u6B65\u9AA4\u6761\u7C7B\u578B\uFF0C\u6709 default \u548C navigation \u4E24\u79CD| string| default| 1.5.0 |\n| items| \u914D\u7F6E\u9009\u9879\u5361\u5185\u5BB9| StepItem[]| []|  |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| current| \u6307\u5B9A\u5F53\u524D\u6B65\u9AA4\uFF0C\u4ECE 0 \u5F00\u59CB\u8BB0\u6570\u3002\u5728\u5B50 Step \u5143\u7D20\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7 status \u5C5E\u6027\u8986\u76D6\u72B6\u6001| number| 0|  |\n| initial| \u8D77\u59CB\u5E8F\u53F7\uFF0C\u4ECE 0 \u5F00\u59CB\u8BB0\u6570| number| 0|  |\n| status| \u6307\u5B9A\u5F53\u524D\u6B65\u9AA4\u7684\u72B6\u6001\uFF0C\u53EF\u9009 wait process finish error| string| process|  |\n| items| \u914D\u7F6E\u9009\u9879\u5361\u5185\u5BB9\uFF0C\u4E0D\u652F\u6301 icon subtitle| StepItem| []|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C|  |\n| :--- | :--- | :--- | :--- | :--- |\n| change| \u70B9\u51FB\u5207\u6362\u6B65\u9AA4\u65F6\u89E6\u53D1| (current) => void| -| 1.5.0 |\n',
          "v-model:current": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6307\u5B9A\u5F53\u524D\u6B65\u9AA4\uFF0C\u4ECE 0 \u5F00\u59CB\u8BB0\u6570\u3002\u5728\u5B50 Step \u5143\u7D20\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7 status \u5C5E\u6027\u8986\u76D6\u72B6\u6001, 1.5.0 \u540E\u652F\u6301 v-model"
          },
          "direction": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u5B9A\u6B65\u9AA4\u6761\u65B9\u5411\u3002\u76EE\u524D\u652F\u6301\u6C34\u5E73\uFF08horizontal\uFF09\u548C\u7AD6\u76F4\uFF08vertical\uFF09\u4E24\u79CD\u65B9\u5411"
          },
          "initial": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8D77\u59CB\u5E8F\u53F7\uFF0C\u4ECE 0 \u5F00\u59CB\u8BB0\u6570"
          },
          "labelPlacement": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u5B9A\u6807\u7B7E\u653E\u7F6E\u4F4D\u7F6E\uFF0C\u9ED8\u8BA4\u6C34\u5E73\u653E\u56FE\u6807\u53F3\u4FA7\uFF0C\u53EF\u9009vertical\u653E\u56FE\u6807\u4E0B\u65B9"
          },
          "percent": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5F53\u524D process \u6B65\u9AA4\u663E\u793A\u7684\u8FDB\u5EA6\u6761\u8FDB\u5EA6\uFF08\u53EA\u5BF9\u57FA\u672C\u7C7B\u578B\u7684 Steps \u751F\u6548\uFF09"
          },
          "progressDot": {
            "type": "attr",
            "values": [],
            "description": "\u70B9\u72B6\u6B65\u9AA4\u6761\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u4E3A\u4E00\u4E2A \u4F5C\u7528\u57DF\u63D2\u69FD,labelPlacement \u5C06\u5F3A\u5236\u4E3Avertical"
          },
          "responsive": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u5C4F\u5E55\u5BBD\u5EA6\u5C0F\u4E8E 532px \u65F6\u81EA\u52A8\u53D8\u4E3A\u5782\u76F4\u6A21\u5F0F"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u5B9A\u5927\u5C0F\uFF0C\u76EE\u524D\u652F\u6301\u666E\u901A\uFF08default\uFF09\u548C\u8FF7\u4F60\uFF08small\uFF09"
          },
          "status": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u5B9A\u5F53\u524D\u6B65\u9AA4\u7684\u72B6\u6001\uFF0C\u53EF\u9009 wait process finish error"
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": "\u6B65\u9AA4\u6761\u7C7B\u578B\uFF0C\u6709 default \u548C navigation \u4E24\u79CD"
          },
          "items": {
            "type": "attr",
            "values": ["StepItem[]"],
            "description": "\u914D\u7F6E\u9009\u9879\u5361\u5185\u5BB9"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u5207\u6362\u6B65\u9AA4\u65F6\u89E6\u53D1"
          }
        },
        "a-auto-complete": {
          "_html": {
            "": '<a-auto-complete v-model:value="${1:value}" :options="${2:options}" :allow-clear="true" placeholder="${3:Please Input}" @select="${4:onSelect}" @search="${5:onSearch}">$6</a-auto-complete>',
            ":option[slot]": '<template #option="{ value: val }">\n$1\n</template>',
            ":search": '<a-auto-complete v-model:value="${1:value}" :options="${2:dataSource}" :allow-clear="true" @select="${3:onSelect}" @search="${4:handleSearch}">\n<template #option="item">\n$5\n</template>\n<a-input-search size="large" placeholder="Please Input" enter-button></a-input-search>$1</a-auto-complete>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/auto-complete-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| allowClear| \u652F\u6301\u6E05\u9664, \u5355\u9009\u6A21\u5F0F\u6709\u6548| boolean| false|  |
| autofocus| \u81EA\u52A8\u83B7\u53D6\u7126\u70B9| boolean| false|  |
| backfill| \u4F7F\u7528\u952E\u76D8\u9009\u62E9\u9009\u9879\u7684\u65F6\u5019\u628A\u9009\u4E2D\u9879\u56DE\u586B\u5230\u8F93\u5165\u6846\u4E2D| boolean| false|  |
| bordered| \u662F\u5426\u6709\u8FB9\u6846| boolean| true| 4.0 |
| clearIcon| \u4F7F\u7528\u63D2\u69FD\u81EA\u5B9A\u4E49\u6E05\u9664\u6309\u94AE| slot| <CloseCircleFilled />| 4.0 |
| default (\u81EA\u5B9A\u4E49\u8F93\u5165\u6846)| \u81EA\u5B9A\u4E49\u8F93\u5165\u6846| slot| <Input />|  |
| defaultActiveFirstOption| \u662F\u5426\u9ED8\u8BA4\u9AD8\u4EAE\u7B2C\u4E00\u4E2A\u9009\u9879\u3002| boolean| true|  |
| defaultOpen| \u662F\u5426\u9ED8\u8BA4\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355| boolean| -|  |
| disabled| \u662F\u5426\u7981\u7528| boolean| false|  |
| popupClassName| \u4E0B\u62C9\u83DC\u5355\u7684 className \u5C5E\u6027| string| -| 4.0 |
| dropdownMatchSelectWidth| \u4E0B\u62C9\u83DC\u5355\u548C\u9009\u62E9\u5668\u540C\u5BBD\u3002\u9ED8\u8BA4\u5C06\u8BBE\u7F6E min-width\uFF0C\u5F53\u503C\u5C0F\u4E8E\u9009\u62E9\u6846\u5BBD\u5EA6\u65F6\u4F1A\u88AB\u5FFD\u7565\u3002false \u65F6\u4F1A\u5173\u95ED\u865A\u62DF\u6EDA\u52A8| boolean | number| true|  |
| dropdownMenuStyle| dropdown \u83DC\u5355\u81EA\u5B9A\u4E49\u6837\u5F0F| object| | 1.5.0 |
| filterOption| \u662F\u5426\u6839\u636E\u8F93\u5165\u9879\u8FDB\u884C\u7B5B\u9009\u3002\u5F53\u5176\u4E3A\u4E00\u4E2A\u51FD\u6570\u65F6\uFF0C\u4F1A\u63A5\u6536 inputValue option \u4E24\u4E2A\u53C2\u6570\uFF0C\u5F53 option \u7B26\u5408\u7B5B\u9009\u6761\u4EF6\u65F6\uFF0C\u5E94\u8FD4\u56DE true\uFF0C\u53CD\u4E4B\u5219\u8FD4\u56DE false\u3002| boolean or function(inputValue, option)| true|  |
| open| \u662F\u5426\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355| boolean| -|  |
| option| \u901A\u8FC7 option \u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u8282\u70B9| v-slot:option="{value, label, [disabled, key, title]}"| -| 3.0 |
| options| \u81EA\u52A8\u5B8C\u6210\u7684\u6570\u636E\u6E90| DataSourceItemType[]| |  |
| placeholder| \u8F93\u5165\u6846\u63D0\u793A| string | slot| -|  |
| status| \u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001| 'error' | 'warning'| -| 3.3.0 |
| v-model:value| \u6307\u5B9A\u5F53\u524D\u9009\u4E2D\u7684\u6761\u76EE| string|string[]|{ key: string, label: string|vNodes }|Array<{ key: string, label: string|vNodes }>| \u65E0|  |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |
| :--- | :--- | :--- | :--- |
| blur| \u5931\u53BB\u7126\u70B9\u65F6\u7684\u56DE\u8C03| function()|  |
| change| \u9009\u4E2D option\uFF0C\u6216 input \u7684 value \u53D8\u5316\u65F6\uFF0C\u8C03\u7528\u6B64\u51FD\u6570| function(value)|  |
| dropdownVisibleChange| \u5C55\u5F00\u4E0B\u62C9\u83DC\u5355\u7684\u56DE\u8C03| function(open)|  |
| focus| \u83B7\u5F97\u7126\u70B9\u65F6\u7684\u56DE\u8C03| function()|  |
| search| \u641C\u7D22\u8865\u5168\u9879\u7684\u65F6\u5019\u8C03\u7528| function(value)|  |
| select| \u88AB\u9009\u4E2D\u65F6\u8C03\u7528\uFF0C\u53C2\u6570\u4E3A\u9009\u4E2D\u9879\u7684 value \u503C| function(value, option)|  |
| clear| \u6E05\u9664\u5185\u5BB9\u65F6\u56DE\u8C03| function| - |
#### \u65B9\u6CD5

| \u540D\u79F0| \u63CF\u8FF0| \u7248\u672C |
| :--- | :--- | :--- |
| blur()| \u79FB\u9664\u7126\u70B9|  |
| focus()| \u83B7\u53D6\u7126\u70B9|  |
`,
          "allowClear": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u652F\u6301\u6E05\u9664, \u5355\u9009\u6A21\u5F0F\u6709\u6548"
          },
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u81EA\u52A8\u83B7\u53D6\u7126\u70B9"
          },
          "backfill": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4F7F\u7528\u952E\u76D8\u9009\u62E9\u9009\u9879\u7684\u65F6\u5019\u628A\u9009\u4E2D\u9879\u56DE\u586B\u5230\u8F93\u5165\u6846\u4E2D"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6709\u8FB9\u6846"
          },
          "clearIcon": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u4F7F\u7528\u63D2\u69FD\u81EA\u5B9A\u4E49\u6E05\u9664\u6309\u94AE"
          },
          "default(\u81EA\u5B9A\u4E49\u8F93\u5165\u6846)": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49\u8F93\u5165\u6846"
          },
          "defaultActiveFirstOption": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9ED8\u8BA4\u9AD8\u4EAE\u7B2C\u4E00\u4E2A\u9009\u9879\u3002"
          },
          "defaultOpen": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9ED8\u8BA4\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "popupClassName": {
            "type": "attr",
            "values": [],
            "description": "\u4E0B\u62C9\u83DC\u5355\u7684 className \u5C5E\u6027"
          },
          "dropdownMatchSelectWidth": {
            "type": "attr",
            "values": ["boolean", "number"],
            "description": "\u4E0B\u62C9\u83DC\u5355\u548C\u9009\u62E9\u5668\u540C\u5BBD\u3002\u9ED8\u8BA4\u5C06\u8BBE\u7F6E min-width\uFF0C\u5F53\u503C\u5C0F\u4E8E\u9009\u62E9\u6846\u5BBD\u5EA6\u65F6\u4F1A\u88AB\u5FFD\u7565\u3002false \u65F6\u4F1A\u5173\u95ED\u865A\u62DF\u6EDA\u52A8"
          },
          "dropdownMenuStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "dropdown \u83DC\u5355\u81EA\u5B9A\u4E49\u6837\u5F0F"
          },
          "filterOption": {
            "type": "attr",
            "values": ["boolean or function(inputValue, option)"],
            "description": "\u662F\u5426\u6839\u636E\u8F93\u5165\u9879\u8FDB\u884C\u7B5B\u9009\u3002\u5F53\u5176\u4E3A\u4E00\u4E2A\u51FD\u6570\u65F6\uFF0C\u4F1A\u63A5\u6536 inputValue option \u4E24\u4E2A\u53C2\u6570\uFF0C\u5F53 option \u7B26\u5408\u7B5B\u9009\u6761\u4EF6\u65F6\uFF0C\u5E94\u8FD4\u56DE true\uFF0C\u53CD\u4E4B\u5219\u8FD4\u56DE false\u3002"
          },
          "open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355"
          },
          "option": {
            "type": "attr",
            "values": [],
            "description": "\u901A\u8FC7 option \u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u8282\u70B9"
          },
          "options": {
            "type": "attr",
            "values": ["DataSourceItemType[]"],
            "description": "\u81EA\u52A8\u5B8C\u6210\u7684\u6570\u636E\u6E90"
          },
          "placeholder": {
            "type": "attr",
            "values": ["string", "slot"],
            "description": "\u8F93\u5165\u6846\u63D0\u793A"
          },
          "status": {
            "type": "attr",
            "values": ["'error'", "'warning'"],
            "description": "\u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001"
          },
          "v-model:value": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u5B9A\u5F53\u524D\u9009\u4E2D\u7684\u6761\u76EE"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u9009\u4E2D option\uFF0C\u6216 input \u7684 value \u53D8\u5316\u65F6\uFF0C\u8C03\u7528\u6B64\u51FD\u6570"
          },
          "dropdownVisibleChange": {
            "type": "event",
            "values": [],
            "description": "\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355\u7684\u56DE\u8C03"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          },
          "search": {
            "type": "event",
            "values": [],
            "description": "\u641C\u7D22\u8865\u5168\u9879\u7684\u65F6\u5019\u8C03\u7528"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u88AB\u9009\u4E2D\u65F6\u8C03\u7528\uFF0C\u53C2\u6570\u4E3A\u9009\u4E2D\u9879\u7684 value \u503C"
          },
          "clear": {
            "type": "event",
            "values": [],
            "description": "\u6E05\u9664\u5185\u5BB9\u65F6\u56DE\u8C03"
          }
        },
        "a-cascader": {
          "_html": {
            "": '<a-cascader v-model:value="${1:value}" :options="${2:options}" placeholder="Please select">$3</a-cascader>',
            ":displayRender[slot]": '<template #displayRender="{ labels, selectedOptions }">\n$1\n</template>',
            ":loadData": '<a-cascader v-model:value="${1:value}" :options="${2:options}" :load-data="${3:loadData}" placeholder="Please Input" change-on-select>$4</a-cascader>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/cascader-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| Version |
| :--- | :--- | :--- | :--- | :--- |
| allowClear| \u662F\u5426\u652F\u6301\u6E05\u9664| boolean| true|  |
| autofocus| \u81EA\u52A8\u83B7\u53D6\u7126\u70B9| boolean| false|  |
| bordered| \u662F\u5426\u6709\u8FB9\u6846| boolean| true| 3.2 |
| clearIcon| \u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u6E05\u7A7A\u56FE\u6807| slot| -| 3.2 |
| changeOnSelect| \uFF08\u5355\u9009\u65F6\u751F\u6548\uFF09\u5F53\u6B64\u9879\u4E3A true \u65F6\uFF0C\u70B9\u9009\u6BCF\u7EA7\u83DC\u5355\u9009\u9879\u503C\u90FD\u4F1A\u53D1\u751F\u53D8\u5316\uFF0C\u5177\u4F53\u89C1\u4E0A\u9762\u7684\u6F14\u793A| boolean| false|  |
| defaultValue| \u9ED8\u8BA4\u7684\u9009\u4E2D\u9879| string[] | number[]| []|  |
| disabled| \u7981\u7528| boolean| false|  |
| displayRender| \u9009\u62E9\u540E\u5C55\u793A\u7684\u6E32\u67D3\u51FD\u6570,\u53EF\u4F7F\u7528 #displayRender="{labels, selectedOptions}"| ({labels, selectedOptions}) => VNode| labels => labels.join(' / ')|  |
| popupClassName| \u81EA\u5B9A\u4E49\u6D6E\u5C42\u7C7B\u540D| string| -| 4.0 |
| dropdownStyle| \u81EA\u5B9A\u4E49\u6D6E\u5C42\u6837\u5F0F| CSSProperties| {}| 3.0 |
| expandIcon| \u81EA\u5B9A\u4E49\u6B21\u7EA7\u83DC\u5355\u5C55\u5F00\u56FE\u6807| slot| -| 3.0 |
| expandTrigger| \u6B21\u7EA7\u83DC\u5355\u7684\u5C55\u5F00\u65B9\u5F0F| click | hover| 'click'|  |
| fieldNames| \u81EA\u5B9A\u4E49 options \u4E2D label value children \u7684\u5B57\u6BB5| object| { label: 'label', value: 'value', children: 'children' }|  |
| getPopupContainer| \u83DC\u5355\u6E32\u67D3\u7236\u8282\u70B9\u3002\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\uFF0C\u5982\u679C\u4F60\u9047\u5230\u83DC\u5355\u6EDA\u52A8\u5B9A\u4F4D\u95EE\u9898\uFF0C\u8BD5\u8BD5\u4FEE\u6539\u4E3A\u6EDA\u52A8\u7684\u533A\u57DF\uFF0C\u5E76\u76F8\u5BF9\u5176\u5B9A\u4F4D\u3002| Function(triggerNode)| () => document.body|  |
| loadData| \u7528\u4E8E\u52A8\u6001\u52A0\u8F7D\u9009\u9879\uFF0C\u65E0\u6CD5\u4E0E showSearch \u4E00\u8D77\u4F7F\u7528| (selectedOptions) => void| -|  |
| maxTagCount| \u6700\u591A\u663E\u793A\u591A\u5C11\u4E2A tag\uFF0C\u54CD\u5E94\u5F0F\u6A21\u5F0F\u4F1A\u5BF9\u6027\u80FD\u4EA7\u751F\u635F\u8017| number | responsive| -| 3.0 |
| maxTagPlaceholder| \u9690\u85CF tag \u65F6\u663E\u793A\u7684\u5185\u5BB9| v-slot | function(omittedValues)| -| 3.0 |
| multiple| \u652F\u6301\u591A\u9009\u8282\u70B9| boolean| -| 3.0 |
| notFoundContent| \u5F53\u4E0B\u62C9\u5217\u8868\u4E3A\u7A7A\u65F6\u663E\u793A\u7684\u5185\u5BB9| string | slot| 'Not Found'|  |
| open| \u63A7\u5236\u6D6E\u5C42\u663E\u9690| boolean| -| 3.0 |
| options| \u53EF\u9009\u9879\u6570\u636E\u6E90| Option[]| -|  |
| placeholder| \u8F93\u5165\u6846\u5360\u4F4D\u6587\u672C| string| '\u8BF7\u9009\u62E9'|  |
| placement| \u6D6E\u5C42\u9884\u8BBE\u4F4D\u7F6E| bottomLeft | bottomRight | topLeft | topRight| bottomLeft| 3.0 |
| showCheckedStrategy| \u5B9A\u4E49\u9009\u4E2D\u9879\u56DE\u586B\u7684\u65B9\u5F0F\u3002Cascader.SHOW_CHILD: \u53EA\u663E\u793A\u9009\u4E2D\u7684\u5B50\u8282\u70B9\u3002Cascader.SHOW_PARENT: \u53EA\u663E\u793A\u7236\u8282\u70B9\uFF08\u5F53\u7236\u8282\u70B9\u4E0B\u6240\u6709\u5B50\u8282\u70B9\u90FD\u9009\u4E2D\u65F6\uFF09\u3002| Cascader.SHOW_PARENT | Cascader.SHOW_CHILD| Cascader.SHOW_PARENT| 3.3.0 |
| removeIcon| \u81EA\u5B9A\u4E49\u7684\u591A\u9009\u6846\u6E05\u9664\u56FE\u6807| slot| -| 3.2 |
| searchValue| \u8BBE\u7F6E\u641C\u7D22\u7684\u503C\uFF0C\u9700\u8981\u4E0E showSearch \u914D\u5408\u4F7F\u7528| string| -| 3.0 |
| showSearch| \u5728\u9009\u62E9\u6846\u4E2D\u663E\u793A\u641C\u7D22\u6846| boolean | object| false|  |
| status| \u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001| 'error' | 'warning'| -| 3.3.0 |
| size| \u8F93\u5165\u6846\u5927\u5C0F| large | default | small| default|  |
| suffixIcon| \u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u540E\u7F00\u56FE\u6807| string | VNode | slot| -|  |
| tagRender| \u81EA\u5B9A\u4E49 tag \u5185\u5BB9\uFF0C\u591A\u9009\u65F6\u751F\u6548| slot| -| 3.0 |
| value(v-model)| \u6307\u5B9A\u9009\u4E2D\u9879| string[] | number[]| -|  |
`,
          "allowClear": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u652F\u6301\u6E05\u9664"
          },
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u81EA\u52A8\u83B7\u53D6\u7126\u70B9"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6709\u8FB9\u6846"
          },
          "clearIcon": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u6E05\u7A7A\u56FE\u6807"
          },
          "changeOnSelect": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\uFF08\u5355\u9009\u65F6\u751F\u6548\uFF09\u5F53\u6B64\u9879\u4E3A true \u65F6\uFF0C\u70B9\u9009\u6BCF\u7EA7\u83DC\u5355\u9009\u9879\u503C\u90FD\u4F1A\u53D1\u751F\u53D8\u5316\uFF0C\u5177\u4F53\u89C1\u4E0A\u9762\u7684\u6F14\u793A"
          },
          "defaultValue": {
            "type": "attr",
            "values": ["string[]", "number[]"],
            "description": "\u9ED8\u8BA4\u7684\u9009\u4E2D\u9879"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u7528"
          },
          "displayRender": {
            "type": "attr",
            "values": [],
            "description": '\u9009\u62E9\u540E\u5C55\u793A\u7684\u6E32\u67D3\u51FD\u6570,\u53EF\u4F7F\u7528 #displayRender="{labels, selectedOptions}"'
          },
          "popupClassName": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u6D6E\u5C42\u7C7B\u540D"
          },
          "dropdownStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u81EA\u5B9A\u4E49\u6D6E\u5C42\u6837\u5F0F"
          },
          "expandIcon": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49\u6B21\u7EA7\u83DC\u5355\u5C55\u5F00\u56FE\u6807"
          },
          "expandTrigger": {
            "type": "attr",
            "values": ["click", "hover"],
            "description": "\u6B21\u7EA7\u83DC\u5355\u7684\u5C55\u5F00\u65B9\u5F0F"
          },
          "fieldNames": {
            "type": "attr",
            "values": ["object"],
            "description": "\u81EA\u5B9A\u4E49 options \u4E2D label value children \u7684\u5B57\u6BB5"
          },
          "getPopupContainer": {
            "type": "attr",
            "values": ["Function(triggerNode)"],
            "description": "\u83DC\u5355\u6E32\u67D3\u7236\u8282\u70B9\u3002\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\uFF0C\u5982\u679C\u4F60\u9047\u5230\u83DC\u5355\u6EDA\u52A8\u5B9A\u4F4D\u95EE\u9898\uFF0C\u8BD5\u8BD5\u4FEE\u6539\u4E3A\u6EDA\u52A8\u7684\u533A\u57DF\uFF0C\u5E76\u76F8\u5BF9\u5176\u5B9A\u4F4D\u3002"
          },
          "loadData": {
            "type": "attr",
            "values": ["(selectedOptions) => void"],
            "description": "\u7528\u4E8E\u52A8\u6001\u52A0\u8F7D\u9009\u9879\uFF0C\u65E0\u6CD5\u4E0E showSearch \u4E00\u8D77\u4F7F\u7528"
          },
          "maxTagCount": {
            "type": "attr",
            "values": ["number", "responsive"],
            "description": "\u6700\u591A\u663E\u793A\u591A\u5C11\u4E2A tag\uFF0C\u54CD\u5E94\u5F0F\u6A21\u5F0F\u4F1A\u5BF9\u6027\u80FD\u4EA7\u751F\u635F\u8017"
          },
          "maxTagPlaceholder": {
            "type": "attr",
            "values": ["v-slot", "function(omittedValues)"],
            "description": "\u9690\u85CF tag \u65F6\u663E\u793A\u7684\u5185\u5BB9"
          },
          "multiple": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u652F\u6301\u591A\u9009\u8282\u70B9"
          },
          "notFoundContent": {
            "type": "attr",
            "values": ["string", "slot"],
            "description": "\u5F53\u4E0B\u62C9\u5217\u8868\u4E3A\u7A7A\u65F6\u663E\u793A\u7684\u5185\u5BB9"
          },
          "open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u63A7\u5236\u6D6E\u5C42\u663E\u9690"
          },
          "options": {
            "type": "attr",
            "values": ["Option[]"],
            "description": "\u53EF\u9009\u9879\u6570\u636E\u6E90"
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u5360\u4F4D\u6587\u672C"
          },
          "placement": {
            "type": "attr",
            "values": ["bottomLeft", "bottomRight", "topLeft", "topRight"],
            "description": "\u6D6E\u5C42\u9884\u8BBE\u4F4D\u7F6E"
          },
          "showCheckedStrategy": {
            "type": "attr",
            "values": ["Cascader.SHOW_PARENT", "Cascader.SHOW_CHILD"],
            "description": "\u5B9A\u4E49\u9009\u4E2D\u9879\u56DE\u586B\u7684\u65B9\u5F0F\u3002Cascader.SHOW_CHILD: \u53EA\u663E\u793A\u9009\u4E2D\u7684\u5B50\u8282\u70B9\u3002Cascader.SHOW_PARENT: \u53EA\u663E\u793A\u7236\u8282\u70B9\uFF08\u5F53\u7236\u8282\u70B9\u4E0B\u6240\u6709\u5B50\u8282\u70B9\u90FD\u9009\u4E2D\u65F6\uFF09\u3002"
          },
          "removeIcon": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u591A\u9009\u6846\u6E05\u9664\u56FE\u6807"
          },
          "searchValue": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u641C\u7D22\u7684\u503C\uFF0C\u9700\u8981\u4E0E showSearch \u914D\u5408\u4F7F\u7528"
          },
          "showSearch": {
            "type": "attr",
            "values": ["boolean", "object"],
            "description": "\u5728\u9009\u62E9\u6846\u4E2D\u663E\u793A\u641C\u7D22\u6846"
          },
          "status": {
            "type": "attr",
            "values": ["'error'", "'warning'"],
            "description": "\u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u8F93\u5165\u6846\u5927\u5C0F"
          },
          "suffixIcon": {
            "type": "attr",
            "values": ["string", "VNode", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u540E\u7F00\u56FE\u6807"
          },
          "tagRender": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49 tag \u5185\u5BB9\uFF0C\u591A\u9009\u65F6\u751F\u6548"
          },
          "v-model:value": {
            "type": "attr",
            "values": ["string[]", "number[]"],
            "description": "\u6307\u5B9A\u9009\u4E2D\u9879"
          }
        },
        "a-checkbox": {
          "_html": {
            "": '<a-checkbox v-model:checked="${1:checked}">$2</a-checkbox>',
            ":value": '<a-checkbox value="$1">$2</a-checkbox>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/checkbox-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| autofocus| \u81EA\u52A8\u83B7\u53D6\u7126\u70B9| boolean| false|  |\n| checked(v-model)| \u6307\u5B9A\u5F53\u524D\u662F\u5426\u9009\u4E2D| boolean| false|  |\n| disabled| \u5931\u6548\u72B6\u6001| boolean| false|  |\n| indeterminate| \u8BBE\u7F6E indeterminate \u72B6\u6001\uFF0C\u53EA\u8D1F\u8D23\u6837\u5F0F\u63A7\u5236| boolean| false|  |\n| value| \u4E0E CheckboxGroup \u7EC4\u5408\u4F7F\u7528\u65F6\u7684\u503C| boolean | string | number| -|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C|  |\n| :--- | :--- | :--- | :--- | :--- |\n| change| \u53D8\u5316\u65F6\u56DE\u8C03\u51FD\u6570| Function(e:Event)| -|  |\n\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| disabled| \u6574\u7EC4\u5931\u6548| boolean| false|  |\n| name| CheckboxGroup \u4E0B\u6240\u6709 input[type="checkbox"] \u7684 name \u5C5E\u6027| string| -| 1.5.0 |\n| options| \u6307\u5B9A\u53EF\u9009\u9879\uFF0C\u53EF\u4EE5\u901A\u8FC7 slot="label" slot-scope="option" \u5B9A\u5236label| string[] | Array<{ label: string value: string disabled?: boolean, indeterminate?: boolean, onChange?: function }>| []|  |\n| value(v-model)| \u6307\u5B9A\u9009\u4E2D\u7684\u9009\u9879| (boolean | string | number)[]| []|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C|  |\n| :--- | :--- | :--- | :--- | :--- |\n| change| \u53D8\u5316\u65F6\u56DE\u8C03\u51FD\u6570| Function(checkedValue)| -|  |\n#### \u65B9\u6CD5\n\n| \u540D\u79F0| \u63CF\u8FF0| \u7248\u672C |\n| :--- | :--- | :--- |\n| blur()| \u79FB\u9664\u7126\u70B9|  |\n| focus()| \u83B7\u53D6\u7126\u70B9|  |\n',
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6574\u7EC4\u5931\u6548"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": 'CheckboxGroup \u4E0B\u6240\u6709 input[type="checkbox"] \u7684 name \u5C5E\u6027'
          },
          "options": {
            "type": "attr",
            "values": ["string[]"],
            "description": '\u6307\u5B9A\u53EF\u9009\u9879\uFF0C\u53EF\u4EE5\u901A\u8FC7 slot="label" slot-scope="option" \u5B9A\u5236label'
          },
          "v-model:value": {
            "type": "attr",
            "values": ["(boolean", "string", "number)[]"],
            "description": "\u6307\u5B9A\u9009\u4E2D\u7684\u9009\u9879"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u53D8\u5316\u65F6\u56DE\u8C03\u51FD\u6570"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          }
        },
        "a-checkbox-group": {
          "_html": {
            "": ' <a-checkbox-group v-model:value="${1:value}">\n<a-checkbox value="$2">$3</a-checkbox>$4\n</a-checkbox-group>'
          }
        },
        "a-date-picker": {
          "_html": {
            "": '<a-date-picker v-model:value="${1:value}">$2</a-date-picker>',
            ":time": '<a-date-picker show-time placeholder="Select time" @change="${1:onChange}" @ok="${2:onOk}"></a-date-picker>',
            ":format": '<a-date-picker v-model:value="${1:value}" format="${2:YYYY/MM/DD}">$3</a-date-picker>',
            ":presets": '<a-date-picker :presets="${1:presets}" @change="${2:onChange}">$3</a-date-picker>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/date-picker-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| allowClear| \u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE| boolean| true|  |
| autofocus| \u81EA\u52A8\u83B7\u53D6\u7126\u70B9| boolean| false|  |
| bordered| \u662F\u5426\u6709\u8FB9\u6846| boolean| true|  |
| dateRender| \u81EA\u5B9A\u4E49\u65E5\u671F\u5355\u5143\u683C\u7684\u5185\u5BB9| v-slot:dateRender="{current, today}"| -|  |
| disabled| \u7981\u7528| boolean| false|  |
| disabledDate| \u4E0D\u53EF\u9009\u62E9\u7684\u65E5\u671F| (currentDate: dayjs) => boolean| -|  |
| format| \u8BBE\u7F6E\u65E5\u671F\u683C\u5F0F\uFF0C\u4E3A\u6570\u7EC4\u65F6\u652F\u6301\u591A\u683C\u5F0F\u5339\u914D\uFF0C\u5C55\u793A\u4EE5\u7B2C\u4E00\u4E2A\u4E3A\u51C6\u3002\u914D\u7F6E\u53C2\u8003 dayjs\uFF0C\u652F\u6301\u81EA\u5B9A\u4E49\u683C\u5F0F| formatType| YYYY-MM-DD|  |
| dropdownClassName| \u989D\u5916\u7684\u5F39\u51FA\u65E5\u5386 className| string| -|  |
| getPopupContainer| \u5B9A\u4E49\u6D6E\u5C42\u7684\u5BB9\u5668\uFF0C\u9ED8\u8BA4\u4E3A body \u4E0A\u65B0\u5EFA div| function(trigger)| -|  |
| inputReadOnly| \u8BBE\u7F6E\u8F93\u5165\u6846\u4E3A\u53EA\u8BFB\uFF08\u907F\u514D\u5728\u79FB\u52A8\u8BBE\u5907\u4E0A\u6253\u5F00\u865A\u62DF\u952E\u76D8\uFF09| boolean| false|  |
| locale| \u56FD\u9645\u5316\u914D\u7F6E| object| \u9ED8\u8BA4\u914D\u7F6E| - |
| mode| \u65E5\u671F\u9762\u677F\u7684\u72B6\u6001| time | date | month | year | decade| -|  |
| nextIcon| \u81EA\u5B9A\u4E49\u4E0B\u4E00\u4E2A\u56FE\u6807| slot| -| 3.0 |
| open| \u63A7\u5236\u5F39\u5C42\u662F\u5426\u5C55\u5F00| boolean| -|  |
| picker| \u8BBE\u7F6E\u9009\u62E9\u5668\u7C7B\u578B| date | week | month | quarter | year| date| quarter |
| placeholder| \u8F93\u5165\u6846\u63D0\u793A\u6587\u5B57| string | [string, string]| -|  |
| placement| \u9009\u62E9\u6846\u5F39\u51FA\u7684\u4F4D\u7F6E| bottomLeft bottomRight topLeft topRight| bottomLeft| 3.3.0 |
| popupStyle| \u989D\u5916\u7684\u5F39\u51FA\u65E5\u5386\u6837\u5F0F| CSSProperties| {}|  |
| prevIcon| \u81EA\u5B9A\u4E49\u4E0A\u4E00\u4E2A\u56FE\u6807| slot| -| 3.0 |
| presets| \u9884\u8BBE\u65F6\u95F4\u8303\u56F4\u5FEB\u6377\u9009\u62E9| { label: slot, value: dayjs }[]| -| 4.0 |
| size| \u8F93\u5165\u6846\u5927\u5C0F\uFF0Clarge \u9AD8\u5EA6\u4E3A 40px\uFF0Csmall \u4E3A 24px\uFF0C\u9ED8\u8BA4\u662F 32px| large | middle | small| -|  |
| status| \u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001| 'error' | 'warning'| -| 3.3.0 |
| suffixIcon| \u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u540E\u7F00\u56FE\u6807| v-slot:suffixIcon| -|  |
| superNextIcon| \u81EA\u5B9A\u4E49 << \u5207\u6362\u56FE\u6807| slot| -| 3.0 |
| superPrevIcon| \u81EA\u5B9A\u4E49 >> \u5207\u6362\u56FE\u6807| slot| -| 3.0 |
| valueFormat| \u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\uFF0C\u5BF9 value\u3001defaultValue\u3001defaultPickerValue \u8D77\u4F5C\u7528\u3002\u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A dayjs \u5BF9\u8C61| string\uFF0C\u5177\u4F53\u683C\u5F0F| -|  |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570|  |
| :--- | :--- | :--- | :--- |
| openChange| \u5F39\u51FA\u65E5\u5386\u548C\u5173\u95ED\u65E5\u5386\u7684\u56DE\u8C03| function(status)|  |
| panelChange| \u65E5\u671F\u9762\u677F\u53D8\u5316\u65F6\u7684\u56DE\u8C03| function(value, mode)| - |
#### \u65B9\u6CD5

| \u540D\u79F0| \u63CF\u8FF0 |
| :--- | :--- |
| blur()| \u79FB\u9664\u7126\u70B9 |
| focus()| \u83B7\u53D6\u7126\u70B9 |

#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| defaultPickerValue| \u9ED8\u8BA4\u9762\u677F\u65E5\u671F| dayjs| -|  |
| disabledTime| \u4E0D\u53EF\u9009\u62E9\u7684\u65F6\u95F4| function(date)| -|  |
| format| \u5C55\u793A\u7684\u65E5\u671F\u683C\u5F0F\uFF0C\u914D\u7F6E\u53C2\u8003 dayjs| formatType| YYYY-MM-DD|  |
| renderExtraFooter| \u5728\u9762\u677F\u4E2D\u6DFB\u52A0\u989D\u5916\u7684\u9875\u811A| v-slot:renderExtraFooter="mode"| -|  |
| showNow| \u5F53\u8BBE\u5B9A\u4E86 showTime \u7684\u65F6\u5019\uFF0C\u9762\u677F\u662F\u5426\u663E\u793A\u201C\u6B64\u523B\u201D\u6309\u94AE| boolean| -|  |
| showTime| \u589E\u52A0\u65F6\u95F4\u9009\u62E9\u529F\u80FD| Object | boolean| TimePicker Options|  |
| showTime.defaultValue| \u8BBE\u7F6E\u7528\u6237\u9009\u62E9\u65E5\u671F\u65F6\u9ED8\u8BA4\u7684\u65F6\u5206\u79D2\uFF0C\u4F8B\u5B50| dayjs| dayjs()|  |
| showToday| \u662F\u5426\u5C55\u793A\u201C\u4ECA\u5929\u201D\u6309\u94AE| boolean| true|  |
| value(v-model)| \u65E5\u671F| dayjs| -|  |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |
| :--- | :--- | :--- |
| change| \u65F6\u95F4\u53D1\u751F\u53D8\u5316\u7684\u56DE\u8C03| function(date: dayjs | string, dateString: string) |
| ok| \u70B9\u51FB\u786E\u5B9A\u6309\u94AE\u7684\u56DE\u8C03| function(date: dayjs | string) |

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| format| \u5C55\u793A\u7684\u65E5\u671F\u683C\u5F0F\uFF0C\u914D\u7F6E\u53C2\u8003 dayjs| formatType| YYYY|  |

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| format| \u5C55\u793A\u7684\u65E5\u671F\u683C\u5F0F\uFF0C\u914D\u7F6E\u53C2\u8003 dayjs| formatType| YYYY-QQ|  |

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| format| \u5C55\u793A\u7684\u65E5\u671F\u683C\u5F0F\uFF0C\u914D\u7F6E\u53C2\u8003 dayjs| formatType| YYYY-MM|  |
| monthCellRender| \u81EA\u5B9A\u4E49\u7684\u6708\u4EFD\u5185\u5BB9\u6E32\u67D3\u65B9\u6CD5| v-slot:monthCellRender="{current, locale}"| -|  |

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| format| \u5C55\u793A\u7684\u65E5\u671F\u683C\u5F0F\uFF0C\u914D\u7F6E\u53C2\u8003 dayjs| formatType| YYYY-wo|  |
`,
          "defaultPickerValue": {
            "type": "attr",
            "values": ["dayjs"],
            "description": "\u9ED8\u8BA4\u9762\u677F\u65E5\u671F"
          },
          "disabledTime": {
            "type": "attr",
            "values": ["function(date)"],
            "description": "\u4E0D\u53EF\u9009\u62E9\u7684\u65F6\u95F4"
          },
          "format": {
            "type": "attr",
            "values": ["formatType"],
            "description": "\u5C55\u793A\u7684\u65E5\u671F\u683C\u5F0F\uFF0C\u914D\u7F6E\u53C2\u8003 dayjs"
          },
          "renderExtraFooter": {
            "type": "attr",
            "values": ['v-slot:renderExtraFooter="mode"'],
            "description": "\u5728\u9762\u677F\u4E2D\u6DFB\u52A0\u989D\u5916\u7684\u9875\u811A"
          },
          "showNow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u8BBE\u5B9A\u4E86 showTime \u7684\u65F6\u5019\uFF0C\u9762\u677F\u662F\u5426\u663E\u793A\u201C\u6B64\u523B\u201D\u6309\u94AE"
          },
          "showTime": {
            "type": "attr",
            "values": ["Object", "boolean"],
            "description": "\u589E\u52A0\u65F6\u95F4\u9009\u62E9\u529F\u80FD"
          },
          "showTimedefaultValue": {
            "type": "attr",
            "values": ["dayjs"],
            "description": "\u8BBE\u7F6E\u7528\u6237\u9009\u62E9\u65E5\u671F\u65F6\u9ED8\u8BA4\u7684\u65F6\u5206\u79D2\uFF0C\u4F8B\u5B50"
          },
          "showToday": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u201C\u4ECA\u5929\u201D\u6309\u94AE"
          },
          "v-model:value": {
            "type": "attr",
            "values": ["dayjs"],
            "description": "\u65E5\u671F"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u65F6\u95F4\u53D1\u751F\u53D8\u5316\u7684\u56DE\u8C03"
          },
          "ok": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u786E\u5B9A\u6309\u94AE\u7684\u56DE\u8C03"
          }
        },
        "a-range-picker": {
          "_html": {
            "": '<a-range-picker v-model:value="${1:value}">$2</a-range-picker>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/date-picker-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| allowEmpty| \u5141\u8BB8\u8D77\u59CB\u9879\u90E8\u5206\u4E3A\u7A7A| [boolean, boolean]| [false, false]|  |\n| dateRender| \u81EA\u5B9A\u4E49\u65E5\u671F\u5355\u5143\u683C\u7684\u5185\u5BB9\u3002| v-slot:dateRender="{current: dayjs, today: dayjs, info: { range: start | end }}"| -|  |\n| defaultPickerValue| \u9ED8\u8BA4\u9762\u677F\u65E5\u671F| dayjs[]| -|  |\n| disabled| \u7981\u7528\u8D77\u59CB\u9879| [boolean, boolean]| -|  |\n| disabledTime| \u4E0D\u53EF\u9009\u62E9\u7684\u65F6\u95F4| function(date: dayjs, partial: start | end)| -|  |\n| format| \u5C55\u793A\u7684\u65E5\u671F\u683C\u5F0F| formatType| YYYY-MM-DD HH:mm:ss|  |\n| presets| \u9884\u8BBE\u65F6\u95F4\u8303\u56F4\u5FEB\u6377\u9009\u62E9| { label: slot, value: dayjs[] }[]| -| 4.0 |\n| ranges| \u9884\u8BBE\u65F6\u95F4\u8303\u56F4\u5FEB\u6377\u9009\u62E9| { [range: string]: dayjs[] } | { [range: string]: () => dayjs[] }| -|  |\n| renderExtraFooter| \u5728\u9762\u677F\u4E2D\u6DFB\u52A0\u989D\u5916\u7684\u9875\u811A| v-slot:renderExtraFooter="mode"| -|  |\n| separator| \u8BBE\u7F6E\u5206\u9694\u7B26| string | v-slot:separator| <SwapRightOutlined />|  |\n| showTime| \u589E\u52A0\u65F6\u95F4\u9009\u62E9\u529F\u80FD| Object|boolean| TimePicker Options|  |\n| showTime.defaultValue| \u8BBE\u7F6E\u7528\u6237\u9009\u62E9\u65E5\u671F\u65F6\u9ED8\u8BA4\u7684\u65F6\u5206\u79D2\uFF0C\u4F8B\u5B50| dayjs[]| [dayjs(), dayjs()]|  |\n| value(v-model)| \u65E5\u671F| dayjs[]| -|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| calendarChange| \u5F85\u9009\u65E5\u671F\u53D1\u751F\u53D8\u5316\u7684\u56DE\u8C03| function(dates: [dayjs, dayjs] | [string, string], dateStrings: [string, string], info: { range:start|end }) |\n| change| \u65E5\u671F\u8303\u56F4\u53D1\u751F\u53D8\u5316\u7684\u56DE\u8C03| function(dates: [dayjs, dayjs] | [string, string], dateStrings: [string, string]) |\n| ok| \u70B9\u51FB\u786E\u5B9A\u6309\u94AE\u7684\u56DE\u8C03| function(dates: [dayjs, dayjs] | [string, string]) |\n',
          "allowEmpty": {
            "type": "attr",
            "values": ["[boolean, boolean]"],
            "description": "\u5141\u8BB8\u8D77\u59CB\u9879\u90E8\u5206\u4E3A\u7A7A"
          },
          "dateRender": {
            "type": "attr",
            "values": ['end }}"'],
            "description": "\u81EA\u5B9A\u4E49\u65E5\u671F\u5355\u5143\u683C\u7684\u5185\u5BB9\u3002"
          },
          "defaultPickerValue": {
            "type": "attr",
            "values": ["dayjs[]"],
            "description": "\u9ED8\u8BA4\u9762\u677F\u65E5\u671F"
          },
          "disabled": {
            "type": "attr",
            "values": ["[boolean, boolean]"],
            "description": "\u7981\u7528\u8D77\u59CB\u9879"
          },
          "disabledTime": {
            "type": "attr",
            "values": ["function(date: dayjs, partial: start", "end)"],
            "description": "\u4E0D\u53EF\u9009\u62E9\u7684\u65F6\u95F4"
          },
          "format": {
            "type": "attr",
            "values": ["formatType"],
            "description": "\u5C55\u793A\u7684\u65E5\u671F\u683C\u5F0F"
          },
          "presets": {
            "type": "attr",
            "values": [],
            "description": "\u9884\u8BBE\u65F6\u95F4\u8303\u56F4\u5FEB\u6377\u9009\u62E9"
          },
          "ranges": {
            "type": "attr",
            "values": [],
            "description": "\u9884\u8BBE\u65F6\u95F4\u8303\u56F4\u5FEB\u6377\u9009\u62E9"
          },
          "renderExtraFooter": {
            "type": "attr",
            "values": ['v-slot:renderExtraFooter="mode"'],
            "description": "\u5728\u9762\u677F\u4E2D\u6DFB\u52A0\u989D\u5916\u7684\u9875\u811A"
          },
          "separator": {
            "type": "attr",
            "values": ["string", "v-slot:separator"],
            "description": "\u8BBE\u7F6E\u5206\u9694\u7B26"
          },
          "showTime": {
            "type": "attr",
            "values": ["Object|boolean"],
            "description": "\u589E\u52A0\u65F6\u95F4\u9009\u62E9\u529F\u80FD"
          },
          "showTimedefaultValue": {
            "type": "attr",
            "values": ["dayjs[]"],
            "description": "\u8BBE\u7F6E\u7528\u6237\u9009\u62E9\u65E5\u671F\u65F6\u9ED8\u8BA4\u7684\u65F6\u5206\u79D2\uFF0C\u4F8B\u5B50"
          },
          "v-model:value": {
            "type": "attr",
            "values": ["dayjs[]"],
            "description": "\u65E5\u671F"
          },
          "calendarChange": {
            "type": "event",
            "values": [],
            "description": "\u5F85\u9009\u65E5\u671F\u53D1\u751F\u53D8\u5316\u7684\u56DE\u8C03"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u65E5\u671F\u8303\u56F4\u53D1\u751F\u53D8\u5316\u7684\u56DE\u8C03"
          },
          "ok": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u786E\u5B9A\u6309\u94AE\u7684\u56DE\u8C03"
          }
        },
        "a-form": {
          "_html": {
            "": '<a-form :model="${1:formState}" :rules="${2:rules}">\n$3\n</a-form>',
            ":inline": '<a-form :model="${1:formState}" :rules="${2:rules}" mode="inline">\n$3\n</a-form>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/form-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| colon| \u914D\u7F6E Form.Item \u7684 colon \u7684\u9ED8\u8BA4\u503C (\u53EA\u6709\u5728\u5C5E\u6027 layout \u4E3A horizontal \u65F6\u6709\u6548)| boolean| true|  |\n| disabled| \u8BBE\u7F6E\u8868\u5355\u7EC4\u4EF6\u7981\u7528\uFF0C\u4EC5\u5BF9 antdv \u7EC4\u4EF6\u6709\u6548| boolean| false| 4.0 |\n| hideRequiredMark| \u9690\u85CF\u6240\u6709\u8868\u5355\u9879\u7684\u5FC5\u9009\u6807\u8BB0| Boolean| false|  |\n| labelAlign| label \u6807\u7B7E\u7684\u6587\u672C\u5BF9\u9F50\u65B9\u5F0F| 'left' | 'right'| 'right'|  |\n| labelCol| label \u6807\u7B7E\u5E03\u5C40\uFF0C\u540C <Col> \u7EC4\u4EF6\uFF0C\u8BBE\u7F6E span offset \u503C\uFF0C\u5982 {span: 3, offset: 12} \u6216 sm: {span: 3, offset: 12}| object| |  |\n| labelWrap| label \u6807\u7B7E\u7684\u6587\u672C\u6362\u884C\u65B9\u5F0F| boolean| false| 3.0 |\n| layout| \u8868\u5355\u5E03\u5C40| 'horizontal'|'vertical'|'inline'| 'horizontal'|  |\n| model| \u8868\u5355\u6570\u636E\u5BF9\u8C61| object| |  |\n| name| \u8868\u5355\u540D\u79F0\uFF0C\u4F1A\u4F5C\u4E3A\u8868\u5355\u5B57\u6BB5 id \u524D\u7F00\u4F7F\u7528| string| -| 2.0.0 |\n| noStyle| \u4E3A true \u65F6\u4E0D\u5E26\u6837\u5F0F\uFF0C\u4F5C\u4E3A\u7EAF\u5B57\u6BB5\u63A7\u4EF6\u4F7F\u7528| boolean| false| 3.0 |\n| rules| \u8868\u5355\u9A8C\u8BC1\u89C4\u5219| object| |  |\n| scrollToFirstError| \u63D0\u4EA4\u5931\u8D25\u81EA\u52A8\u6EDA\u52A8\u5230\u7B2C\u4E00\u4E2A\u9519\u8BEF\u5B57\u6BB5| boolean | options| false| 2.0.0 |\n| validateOnRuleChange| \u662F\u5426\u5728 rules \u5C5E\u6027\u6539\u53D8\u540E\u7ACB\u5373\u89E6\u53D1\u4E00\u6B21\u9A8C\u8BC1| boolean| true|  |\n| validateTrigger| \u7EDF\u4E00\u8BBE\u7F6E\u5B57\u6BB5\u6821\u9A8C\u89C4\u5219| string | string[]| change| 2.0.0 |\n| wrapperCol| \u9700\u8981\u4E3A\u8F93\u5165\u63A7\u4EF6\u8BBE\u7F6E\u5E03\u5C40\u6837\u5F0F\u65F6\uFF0C\u4F7F\u7528\u8BE5\u5C5E\u6027\uFF0C\u7528\u6CD5\u540C labelCol| object| |  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C|  |\n| :--- | :--- | :--- | :--- | :--- |\n| finish| \u63D0\u4EA4\u8868\u5355\u4E14\u6570\u636E\u9A8C\u8BC1\u6210\u529F\u540E\u56DE\u8C03\u4E8B\u4EF6| function(values)| -| 2.0.0 |\n| finishFailed| \u63D0\u4EA4\u8868\u5355\u4E14\u6570\u636E\u9A8C\u8BC1\u5931\u8D25\u540E\u56DE\u8C03\u4E8B\u4EF6| function({ values, errorFields, outOfDate })| -| 2.0.0 |\n| submit| \u6570\u636E\u9A8C\u8BC1\u6210\u529F\u540E\u56DE\u8C03\u4E8B\u4EF6| Function(e:Event)| \uFF5C|  |\n| validate| \u4EFB\u4E00\u8868\u5355\u9879\u88AB\u6821\u9A8C\u540E\u89E6\u53D1| Function(name, status, errorMsgs)| |  |\n#### \u65B9\u6CD5\n\n| \u65B9\u6CD5\u540D| \u8BF4\u660E| \u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| clearValidate| \u79FB\u9664\u8868\u5355\u9879\u7684\u6821\u9A8C\u7ED3\u679C\u3002\u4F20\u5165\u5F85\u79FB\u9664\u7684\u8868\u5355\u9879\u7684 name \u5C5E\u6027\u6216\u8005 name \u7EC4\u6210\u7684\u6570\u7EC4\uFF0C\u5982\u4E0D\u4F20\u5219\u79FB\u9664\u6574\u4E2A\u8868\u5355\u7684\u6821\u9A8C\u7ED3\u679C| (nameList?: NamePath[]) => void|  |\n| resetFields| \u5BF9\u6574\u4E2A\u8868\u5355\u8FDB\u884C\u91CD\u7F6E\uFF0C\u5C06\u6240\u6709\u5B57\u6BB5\u503C\u91CD\u7F6E\u4E3A\u521D\u59CB\u503C\u5E76\u79FB\u9664\u6821\u9A8C\u7ED3\u679C| (nameList?: NamePath[]) => void|  |\n| scrollToField| \u6EDA\u52A8\u5230\u5BF9\u5E94\u5B57\u6BB5\u4F4D\u7F6E| (name: NamePath, options: [ScrollOptions]) => void|  |\n| validate| \u89E6\u53D1\u8868\u5355\u9A8C\u8BC1, \u540C validateFields| (nameList?: NamePath[]) => Promise|  |\n| validateFields| \u89E6\u53D1\u8868\u5355\u9A8C\u8BC1| (nameList?: NamePath[]) => Promise|  |\n",
          "colon": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u914D\u7F6E Form.Item \u7684 colon \u7684\u9ED8\u8BA4\u503C (\u53EA\u6709\u5728\u5C5E\u6027 layout \u4E3A horizontal \u65F6\u6709\u6548)"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u8868\u5355\u7EC4\u4EF6\u7981\u7528\uFF0C\u4EC5\u5BF9 antdv \u7EC4\u4EF6\u6709\u6548"
          },
          "hideRequiredMark": {
            "type": "attr",
            "values": ["Boolean"],
            "description": "\u9690\u85CF\u6240\u6709\u8868\u5355\u9879\u7684\u5FC5\u9009\u6807\u8BB0"
          },
          "labelAlign": {
            "type": "attr",
            "values": ["'left'", "'right'"],
            "description": "label \u6807\u7B7E\u7684\u6587\u672C\u5BF9\u9F50\u65B9\u5F0F"
          },
          "labelCol": {
            "type": "attr",
            "values": ["object"],
            "description": "label \u6807\u7B7E\u5E03\u5C40\uFF0C\u540C <Col> \u7EC4\u4EF6\uFF0C\u8BBE\u7F6E span offset \u503C\uFF0C\u5982 {span: 3, offset: 12} \u6216 sm: {span: 3, offset: 12}"
          },
          "labelWrap": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "label \u6807\u7B7E\u7684\u6587\u672C\u6362\u884C\u65B9\u5F0F"
          },
          "layout": {
            "type": "attr",
            "values": ["'horizontal'|'vertical'|'inline'"],
            "description": "\u8868\u5355\u5E03\u5C40"
          },
          "model": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8868\u5355\u6570\u636E\u5BF9\u8C61"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u8868\u5355\u540D\u79F0\uFF0C\u4F1A\u4F5C\u4E3A\u8868\u5355\u5B57\u6BB5 id \u524D\u7F00\u4F7F\u7528"
          },
          "noStyle": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E3A true \u65F6\u4E0D\u5E26\u6837\u5F0F\uFF0C\u4F5C\u4E3A\u7EAF\u5B57\u6BB5\u63A7\u4EF6\u4F7F\u7528"
          },
          "rules": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8868\u5355\u9A8C\u8BC1\u89C4\u5219"
          },
          "scrollToFirstError": {
            "type": "attr",
            "values": ["boolean", "options"],
            "description": "\u63D0\u4EA4\u5931\u8D25\u81EA\u52A8\u6EDA\u52A8\u5230\u7B2C\u4E00\u4E2A\u9519\u8BEF\u5B57\u6BB5"
          },
          "validateOnRuleChange": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728 rules \u5C5E\u6027\u6539\u53D8\u540E\u7ACB\u5373\u89E6\u53D1\u4E00\u6B21\u9A8C\u8BC1"
          },
          "validateTrigger": {
            "type": "attr",
            "values": ["string", "string[]"],
            "description": "\u7EDF\u4E00\u8BBE\u7F6E\u5B57\u6BB5\u6821\u9A8C\u89C4\u5219"
          },
          "wrapperCol": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9700\u8981\u4E3A\u8F93\u5165\u63A7\u4EF6\u8BBE\u7F6E\u5E03\u5C40\u6837\u5F0F\u65F6\uFF0C\u4F7F\u7528\u8BE5\u5C5E\u6027\uFF0C\u7528\u6CD5\u540C labelCol"
          },
          "finish": {
            "type": "event",
            "values": [],
            "description": "\u63D0\u4EA4\u8868\u5355\u4E14\u6570\u636E\u9A8C\u8BC1\u6210\u529F\u540E\u56DE\u8C03\u4E8B\u4EF6"
          },
          "finishFailed": {
            "type": "event",
            "values": [],
            "description": "\u63D0\u4EA4\u8868\u5355\u4E14\u6570\u636E\u9A8C\u8BC1\u5931\u8D25\u540E\u56DE\u8C03\u4E8B\u4EF6"
          },
          "submit": {
            "type": "event",
            "values": [],
            "description": "\u6570\u636E\u9A8C\u8BC1\u6210\u529F\u540E\u56DE\u8C03\u4E8B\u4EF6"
          },
          "validate": {
            "type": "event",
            "values": [],
            "description": "\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1, \u540C validateFields"
          },
          "clearValidate": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u8868\u5355\u9879\u7684\u6821\u9A8C\u7ED3\u679C\u3002\u4F20\u5165\u5F85\u79FB\u9664\u7684\u8868\u5355\u9879\u7684 name \u5C5E\u6027\u6216\u8005 name \u7EC4\u6210\u7684\u6570\u7EC4\uFF0C\u5982\u4E0D\u4F20\u5219\u79FB\u9664\u6574\u4E2A\u8868\u5355\u7684\u6821\u9A8C\u7ED3\u679C"
          },
          "resetFields": {
            "type": "event",
            "values": [],
            "description": "\u5BF9\u6574\u4E2A\u8868\u5355\u8FDB\u884C\u91CD\u7F6E\uFF0C\u5C06\u6240\u6709\u5B57\u6BB5\u503C\u91CD\u7F6E\u4E3A\u521D\u59CB\u503C\u5E76\u79FB\u9664\u6821\u9A8C\u7ED3\u679C"
          },
          "scrollToField": {
            "type": "event",
            "values": [],
            "description": "\u6EDA\u52A8\u5230\u5BF9\u5E94\u5B57\u6BB5\u4F4D\u7F6E"
          },
          "validateFields": {
            "type": "event",
            "values": [],
            "description": "\u89E6\u53D1\u8868\u5355\u9A8C\u8BC1"
          }
        },
        "a-form-item": {
          "_html": {
            "": '<a-form-item label="$1">\n$2\n</a-form-item>',
            ":rules": '<a-form-item label="$1" :rules="$2">\n$3\n</a-form-item>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/form-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| autoLink| \u662F\u5426\u81EA\u52A8\u5173\u8054\u8868\u5355\u57DF\uFF0C\u5BF9\u4E8E\u5927\u90E8\u5206\u60C5\u51B5\u90FD\u53EF\u4EE5\u4F7F\u7528\u81EA\u52A8\u5173\u8054\uFF0C\u5982\u679C\u4E0D\u6EE1\u8DB3\u81EA\u52A8\u5173\u8054\u7684\u6761\u4EF6\uFF0C\u53EF\u4EE5\u624B\u52A8\u5173\u8054\uFF0C\u53C2\u89C1\u4E0B\u65B9\u6CE8\u610F\u4E8B\u9879| boolean| true|  |\n| colon| \u914D\u5408 label \u5C5E\u6027\u4F7F\u7528\uFF0C\u8868\u793A\u662F\u5426\u663E\u793A label \u540E\u9762\u7684\u5192\u53F7| boolean| true|  |\n| extra| \u989D\u5916\u7684\u63D0\u793A\u4FE1\u606F\uFF0C\u548C help \u7C7B\u4F3C\uFF0C\u5F53\u9700\u8981\u9519\u8BEF\u4FE1\u606F\u548C\u63D0\u793A\u6587\u6848\u540C\u65F6\u51FA\u73B0\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E2A\u3002| string|slot| |  |\n| hasFeedback| \u914D\u5408 validateStatus \u5C5E\u6027\u4F7F\u7528\uFF0C\u5C55\u793A\u6821\u9A8C\u72B6\u6001\u56FE\u6807\uFF0C\u5EFA\u8BAE\u53EA\u914D\u5408 Input \u7EC4\u4EF6\u4F7F\u7528| boolean| false|  |\n| help| \u63D0\u793A\u4FE1\u606F\uFF0C\u5982\u4E0D\u8BBE\u7F6E\uFF0C\u5219\u4F1A\u6839\u636E\u6821\u9A8C\u89C4\u5219\u81EA\u52A8\u751F\u6210| string|slot| |  |\n| htmlFor| \u8BBE\u7F6E\u5B50\u5143\u7D20 label htmlFor \u5C5E\u6027| string| |  |\n| label| label \u6807\u7B7E\u7684\u6587\u672C| string|slot| |  |\n| labelAlign| \u6807\u7B7E\u6587\u672C\u5BF9\u9F50\u65B9\u5F0F| 'left' | 'right'| 'right'|  |\n| labelCol| label \u6807\u7B7E\u5E03\u5C40\uFF0C\u540C <Col> \u7EC4\u4EF6\uFF0C\u8BBE\u7F6E span offset \u503C\uFF0C\u5982 {span: 3, offset: 12} \u6216 sm: {span: 3, offset: 12}| object| |  |\n| name| \u8868\u5355\u57DF model \u5B57\u6BB5\uFF0C\u5728\u4F7F\u7528 validate\u3001resetFields \u65B9\u6CD5\u7684\u60C5\u51B5\u4E0B\uFF0C\u8BE5\u5C5E\u6027\u662F\u5FC5\u586B\u7684| NamePath| |  |\n| required| \u662F\u5426\u5FC5\u586B\uFF0C\u5982\u4E0D\u8BBE\u7F6E\uFF0C\u5219\u4F1A\u6839\u636E\u6821\u9A8C\u89C4\u5219\u81EA\u52A8\u751F\u6210| boolean| false|  |\n| rules| \u8868\u5355\u9A8C\u8BC1\u89C4\u5219| object | array| |  |\n| tooltip| \u914D\u7F6E\u63D0\u793A\u4FE1\u606F| string | slot| | 4.0.4 |\n| validateFirst| \u5F53\u67D0\u4E00\u89C4\u5219\u6821\u9A8C\u4E0D\u901A\u8FC7\u65F6\uFF0C\u662F\u5426\u505C\u6B62\u5269\u4E0B\u7684\u89C4\u5219\u7684\u6821\u9A8C\u3002| boolean| false| 2.0.0 |\n| validateStatus| \u6821\u9A8C\u72B6\u6001\uFF0C\u5982\u4E0D\u8BBE\u7F6E\uFF0C\u5219\u4F1A\u6839\u636E\u6821\u9A8C\u89C4\u5219\u81EA\u52A8\u751F\u6210\uFF0C\u53EF\u9009\uFF1A'success' 'warning' 'error' 'validating'| string| |  |\n| validateTrigger| \u8BBE\u7F6E\u5B57\u6BB5\u6821\u9A8C\u7684\u65F6\u673A| string | string[]| change| 2.0.0 |\n| wrapperCol| \u9700\u8981\u4E3A\u8F93\u5165\u63A7\u4EF6\u8BBE\u7F6E\u5E03\u5C40\u6837\u5F0F\u65F6\uFF0C\u4F7F\u7528\u8BE5\u5C5E\u6027\uFF0C\u7528\u6CD5\u540C labelCol| object| |  |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| enum| \u679A\u4E3E\u7C7B\u578B| string| - |\n| len| \u5B57\u6BB5\u957F\u5EA6| number| - |\n| max| \u6700\u5927\u957F\u5EA6| number| - |\n| message| \u6821\u9A8C\u6587\u6848| string| - |\n| min| \u6700\u5C0F\u957F\u5EA6| number| - |\n| pattern| \u6B63\u5219\u8868\u8FBE\u5F0F\u6821\u9A8C| RegExp| - |\n| required| \u662F\u5426\u5FC5\u9009| boolean| false |\n| transform| \u6821\u9A8C\u524D\u8F6C\u6362\u5B57\u6BB5\u503C| function(value) => transformedValue:any| - |\n| trigger| \u6821\u9A8C\u89E6\u53D1\u7684\u65F6\u673A| 'blur' | 'change' | ['change', 'blur']| - |\n| type| \u5185\u5EFA\u6821\u9A8C\u7C7B\u578B\uFF0C\u53EF\u9009\u9879| string| 'string' |\n| validator| \u81EA\u5B9A\u4E49\u6821\u9A8C\uFF08\u6CE8\u610F\uFF0Ccallback \u5FC5\u987B\u88AB\u8C03\u7528\uFF09| function(rule, value, callback)| - |\n| whitespace| \u5FC5\u9009\u65F6\uFF0C\u7A7A\u683C\u662F\u5426\u4F1A\u88AB\u89C6\u4E3A\u9519\u8BEF| boolean| false |\n",
          "autoLink": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u81EA\u52A8\u5173\u8054\u8868\u5355\u57DF\uFF0C\u5BF9\u4E8E\u5927\u90E8\u5206\u60C5\u51B5\u90FD\u53EF\u4EE5\u4F7F\u7528\u81EA\u52A8\u5173\u8054\uFF0C\u5982\u679C\u4E0D\u6EE1\u8DB3\u81EA\u52A8\u5173\u8054\u7684\u6761\u4EF6\uFF0C\u53EF\u4EE5\u624B\u52A8\u5173\u8054\uFF0C\u53C2\u89C1\u4E0B\u65B9\u6CE8\u610F\u4E8B\u9879"
          },
          "colon": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u914D\u5408 label \u5C5E\u6027\u4F7F\u7528\uFF0C\u8868\u793A\u662F\u5426\u663E\u793A label \u540E\u9762\u7684\u5192\u53F7"
          },
          "extra": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u989D\u5916\u7684\u63D0\u793A\u4FE1\u606F\uFF0C\u548C help \u7C7B\u4F3C\uFF0C\u5F53\u9700\u8981\u9519\u8BEF\u4FE1\u606F\u548C\u63D0\u793A\u6587\u6848\u540C\u65F6\u51FA\u73B0\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E2A\u3002"
          },
          "hasFeedback": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u914D\u5408 validateStatus \u5C5E\u6027\u4F7F\u7528\uFF0C\u5C55\u793A\u6821\u9A8C\u72B6\u6001\u56FE\u6807\uFF0C\u5EFA\u8BAE\u53EA\u914D\u5408 Input \u7EC4\u4EF6\u4F7F\u7528"
          },
          "help": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u63D0\u793A\u4FE1\u606F\uFF0C\u5982\u4E0D\u8BBE\u7F6E\uFF0C\u5219\u4F1A\u6839\u636E\u6821\u9A8C\u89C4\u5219\u81EA\u52A8\u751F\u6210"
          },
          "htmlFor": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u5B50\u5143\u7D20 label htmlFor \u5C5E\u6027"
          },
          "label": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "label \u6807\u7B7E\u7684\u6587\u672C"
          },
          "labelAlign": {
            "type": "attr",
            "values": ["'left'", "'right'"],
            "description": "\u6807\u7B7E\u6587\u672C\u5BF9\u9F50\u65B9\u5F0F"
          },
          "labelCol": {
            "type": "attr",
            "values": ["object"],
            "description": "label \u6807\u7B7E\u5E03\u5C40\uFF0C\u540C <Col> \u7EC4\u4EF6\uFF0C\u8BBE\u7F6E span offset \u503C\uFF0C\u5982 {span: 3, offset: 12} \u6216 sm: {span: 3, offset: 12}"
          },
          "name": {
            "type": "attr",
            "values": ["NamePath"],
            "description": "\u8868\u5355\u57DF model \u5B57\u6BB5\uFF0C\u5728\u4F7F\u7528 validate\u3001resetFields \u65B9\u6CD5\u7684\u60C5\u51B5\u4E0B\uFF0C\u8BE5\u5C5E\u6027\u662F\u5FC5\u586B\u7684"
          },
          "required": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5FC5\u586B\uFF0C\u5982\u4E0D\u8BBE\u7F6E\uFF0C\u5219\u4F1A\u6839\u636E\u6821\u9A8C\u89C4\u5219\u81EA\u52A8\u751F\u6210"
          },
          "rules": {
            "type": "attr",
            "values": ["object", "array"],
            "description": "\u8868\u5355\u9A8C\u8BC1\u89C4\u5219"
          },
          "tooltip": {
            "type": "attr",
            "values": ["string", "slot"],
            "description": "\u914D\u7F6E\u63D0\u793A\u4FE1\u606F"
          },
          "validateFirst": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u67D0\u4E00\u89C4\u5219\u6821\u9A8C\u4E0D\u901A\u8FC7\u65F6\uFF0C\u662F\u5426\u505C\u6B62\u5269\u4E0B\u7684\u89C4\u5219\u7684\u6821\u9A8C\u3002"
          },
          "validateStatus": {
            "type": "attr",
            "values": [],
            "description": "\u6821\u9A8C\u72B6\u6001\uFF0C\u5982\u4E0D\u8BBE\u7F6E\uFF0C\u5219\u4F1A\u6839\u636E\u6821\u9A8C\u89C4\u5219\u81EA\u52A8\u751F\u6210\uFF0C\u53EF\u9009\uFF1A'success' 'warning' 'error' 'validating'"
          },
          "validateTrigger": {
            "type": "attr",
            "values": ["string", "string[]"],
            "description": "\u8BBE\u7F6E\u5B57\u6BB5\u6821\u9A8C\u7684\u65F6\u673A"
          },
          "wrapperCol": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9700\u8981\u4E3A\u8F93\u5165\u63A7\u4EF6\u8BBE\u7F6E\u5E03\u5C40\u6837\u5F0F\u65F6\uFF0C\u4F7F\u7528\u8BE5\u5C5E\u6027\uFF0C\u7528\u6CD5\u540C labelCol"
          }
        },
        "a-input": {
          "_html": {
            "": '<a-input v-model:value="${1:value}" placeholder="Please Input">$2</a-input>',
            ":prefix[slot]": "<template #prefix>\n$1\n</template>",
            ":suffix[slot]": "<template #suffix>\n$1\n</template>",
            ":addonBefore[slot]": "<template #addonBefore>\n$1\n</template>",
            ":addonAfter[slot]": "<template #addonAfter>\n$1\n</template>",
            ":show-count": '<a-input v-model:value="${1:value}" show-count :maxlength="20">$2</a-input>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/input-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| addonAfter| \u5E26\u6807\u7B7E\u7684 input\uFF0C\u8BBE\u7F6E\u540E\u7F6E\u6807\u7B7E| string|slot| |  |
| addonBefore| \u5E26\u6807\u7B7E\u7684 input\uFF0C\u8BBE\u7F6E\u524D\u7F6E\u6807\u7B7E| string|slot| |  |
| allowClear| \u53EF\u4EE5\u70B9\u51FB\u6E05\u9664\u56FE\u6807\u5220\u9664\u5185\u5BB9| boolean| |  |
| bordered| \u662F\u5426\u6709\u8FB9\u6846| boolean| true| 3.0 |
| clearIcon| \u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807 \uFF08allowClear \u4E3A true \u65F6\u751F\u6548\uFF09| slot| <CloseCircleFilled />| 3.3.0 |
| defaultValue| \u8F93\u5165\u6846\u9ED8\u8BA4\u5185\u5BB9| string| |  |
| disabled| \u662F\u5426\u7981\u7528\u72B6\u6001\uFF0C\u9ED8\u8BA4\u4E3A false| boolean| false|  |
| id| \u8F93\u5165\u6846\u7684 id| string| |  |
| maxlength| \u6700\u5927\u957F\u5EA6| number| | 1.5.0 |
| prefix| \u5E26\u6709\u524D\u7F00\u56FE\u6807\u7684 input| string|slot| |  |
| showCount| \u662F\u5426\u5C55\u793A\u5B57\u6570| boolean| false| 3.0 |
| status| \u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001| 'error' | 'warning'| -| 3.3.0 |
| size| \u63A7\u4EF6\u5927\u5C0F\u3002\u6CE8\uFF1A\u6807\u51C6\u8868\u5355\u5185\u7684\u8F93\u5165\u6846\u5927\u5C0F\u9650\u5236\u4E3A middle\u3002\u53EF\u9009 large middle small| string| -|  |
| suffix| \u5E26\u6709\u540E\u7F00\u56FE\u6807\u7684 input| string|slot| |  |
| type| \u58F0\u660E input \u7C7B\u578B\uFF0C\u540C\u539F\u751F input \u6807\u7B7E\u7684 type \u5C5E\u6027\uFF0C\u89C1\uFF1AMDN(\u8BF7\u76F4\u63A5\u4F7F\u7528 <a-textarea /> \u4EE3\u66FF type="textarea")\u3002| string| text|  |
| value(v-model)| \u8F93\u5165\u6846\u5185\u5BB9| string| |  |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570|  |
| :--- | :--- | :--- | :--- |
| change| \u8F93\u5165\u6846\u5185\u5BB9\u53D8\u5316\u65F6\u7684\u56DE\u8C03| function(e)|  |
| pressEnter| \u6309\u4E0B\u56DE\u8F66\u7684\u56DE\u8C03| function(e)|  |
`,
          "addonAfter": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5E26\u6807\u7B7E\u7684 input\uFF0C\u8BBE\u7F6E\u540E\u7F6E\u6807\u7B7E"
          },
          "addonBefore": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5E26\u6807\u7B7E\u7684 input\uFF0C\u8BBE\u7F6E\u524D\u7F6E\u6807\u7B7E"
          },
          "allowClear": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u53EF\u4EE5\u70B9\u51FB\u6E05\u9664\u56FE\u6807\u5220\u9664\u5185\u5BB9"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6709\u8FB9\u6846"
          },
          "clearIcon": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49\u6E05\u9664\u56FE\u6807 \uFF08allowClear \u4E3A true \u65F6\u751F\u6548\uFF09"
          },
          "defaultValue": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u9ED8\u8BA4\u5185\u5BB9"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u72B6\u6001\uFF0C\u9ED8\u8BA4\u4E3A false"
          },
          "id": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u7684 id"
          },
          "maxlength": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u5927\u957F\u5EA6"
          },
          "prefix": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5E26\u6709\u524D\u7F00\u56FE\u6807\u7684 input"
          },
          "showCount": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u5B57\u6570"
          },
          "status": {
            "type": "attr",
            "values": ["'error'", "'warning'"],
            "description": "\u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u63A7\u4EF6\u5927\u5C0F\u3002\u6CE8\uFF1A\u6807\u51C6\u8868\u5355\u5185\u7684\u8F93\u5165\u6846\u5927\u5C0F\u9650\u5236\u4E3A middle\u3002\u53EF\u9009 large middle small"
          },
          "suffix": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5E26\u6709\u540E\u7F00\u56FE\u6807\u7684 input"
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": '\u58F0\u660E input \u7C7B\u578B\uFF0C\u540C\u539F\u751F input \u6807\u7B7E\u7684 type \u5C5E\u6027\uFF0C\u89C1\uFF1AMDN(\u8BF7\u76F4\u63A5\u4F7F\u7528 <a-textarea /> \u4EE3\u66FF type="textarea")\u3002'
          },
          "v-model:value": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u5185\u5BB9"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u8F93\u5165\u6846\u5185\u5BB9\u53D8\u5316\u65F6\u7684\u56DE\u8C03"
          },
          "pressEnter": {
            "type": "event",
            "values": [],
            "description": "\u6309\u4E0B\u56DE\u8F66\u7684\u56DE\u8C03"
          }
        },
        "a-textarea": {
          "_html": {
            "": '<a-textarea v-model:value="${1:value}" placeholder="Please Input">$2</a-textarea>'
          }
        },
        "a-input-search": {
          "_html": {
            "": '<a-input-search v-model:value="${1:value}" placeholder="Please Input" loading enter-button @search="onSearch">$2</a-input-search>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/input-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| enterButton| \u662F\u5426\u6709\u786E\u8BA4\u6309\u94AE\uFF0C\u53EF\u8BBE\u4E3A\u6309\u94AE\u6587\u5B57\u3002\u8BE5\u5C5E\u6027\u4F1A\u4E0E addon \u51B2\u7A81\u3002| boolean|slot| false|  |\n| loading| \u641C\u7D22 loading| boolean| | 1.5.0 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| search| \u70B9\u51FB\u641C\u7D22\u6216\u6309\u4E0B\u56DE\u8F66\u952E\u65F6\u7684\u56DE\u8C03| function(value, event) |\n",
          "enterButton": {
            "type": "attr",
            "values": ["boolean|slot"],
            "description": "\u662F\u5426\u6709\u786E\u8BA4\u6309\u94AE\uFF0C\u53EF\u8BBE\u4E3A\u6309\u94AE\u6587\u5B57\u3002\u8BE5\u5C5E\u6027\u4F1A\u4E0E addon \u51B2\u7A81\u3002"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u641C\u7D22 loading"
          },
          "search": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u641C\u7D22\u6216\u6309\u4E0B\u56DE\u8F66\u952E\u65F6\u7684\u56DE\u8C03"
          }
        },
        "a-input-group": {
          "_html": {
            "": "<a-input-group>$1</a-input-group>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/input-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| compact| \u662F\u5426\u7528\u7D27\u51D1\u6A21\u5F0F| boolean| false |\n| size| Input.Group \u4E2D\u6240\u6709\u7684 Input \u7684\u5927\u5C0F\uFF0C\u53EF\u9009 large default small| string| default |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| visible(v-model)| \u5BC6\u7801\u662F\u5426\u53EF\u89C1| boolean| false |\n| iconRender| \u81EA\u5B9A\u4E49\u5207\u6362\u6309\u94AE| slot| - |\n| visibilityToggle| \u662F\u5426\u663E\u793A\u5207\u6362\u6309\u94AE\u6216\u8005\u63A7\u5236\u5BC6\u7801\u663E\u9690| boolean| true |\n",
          "compact": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7528\u7D27\u51D1\u6A21\u5F0F"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "Input.Group \u4E2D\u6240\u6709\u7684 Input \u7684\u5927\u5C0F\uFF0C\u53EF\u9009 large default small"
          }
        },
        "a-input-password": {
          "_html": {
            "": '<a-input-password v-model:value="${1:value}" placeholder="Please Input">$2</a-input-password>'
          }
        },
        "a-input-number": {
          "_html": {
            "": '<a-input-number v-model:value="${1:value}" :min="1" :max="10"></a-input-number>',
            ":addonBefore[slot]": "<template #addonBefore>\n$1\n</template>",
            ":addonAfter[slot]": "<template #addonAfter>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/input-number-cn)\n#### \u5C5E\u6027\n\n| \u6210\u5458| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| addonAfter| \u5E26\u6807\u7B7E\u7684 input\uFF0C\u8BBE\u7F6E\u540E\u7F6E\u6807\u7B7E| slot| -| 3.0 |\n| addonBefore| \u5E26\u6807\u7B7E\u7684 input\uFF0C\u8BBE\u7F6E\u524D\u7F6E\u6807\u7B7E| slot| -| 3.0 |\n| autofocus| \u81EA\u52A8\u83B7\u53D6\u7126\u70B9| boolean| false|  |\n| bordered| \u662F\u5426\u6709\u8FB9\u6846| boolean| true| 3.0 |\n| controls| \u662F\u5426\u663E\u793A\u589E\u51CF\u6309\u94AE| boolean| true| 3.0 |\n| decimalSeparator| \u5C0F\u6570\u70B9| string| -|  |\n| defaultValue| \u521D\u59CB\u503C| number| |  |\n| disabled| \u7981\u7528| boolean| false|  |\n| formatter| \u6307\u5B9A\u8F93\u5165\u6846\u5C55\u793A\u503C\u7684\u683C\u5F0F| function(value: number | string, info: { userTyping: boolean, input: string }): string| -| info: 3.0 |\n| keyboard| \u662F\u5426\u542F\u7528\u952E\u76D8\u5FEB\u6377\u884C\u4E3A| boolean| true| 3.0 |\n| max| \u6700\u5927\u503C| number| Infinity|  |\n| min| \u6700\u5C0F\u503C| number| -Infinity|  |\n| parser| \u6307\u5B9A\u4ECE formatter \u91CC\u8F6C\u6362\u56DE\u6570\u5B57\u7684\u65B9\u5F0F\uFF0C\u548C formatter \u642D\u914D\u4F7F\u7528| function( string): number| -|  |\n| precision| \u6570\u503C\u7CBE\u5EA6| number| -|  |\n| prefix| \u5E26\u6709\u524D\u7F00\u56FE\u6807\u7684 input| slot| -| 3.0 |\n| size| \u8F93\u5165\u6846\u5927\u5C0F| string| \u65E0|  |\n| status| \u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001| 'error' | 'warning'| -| 3.3.0 |\n| step| \u6BCF\u6B21\u6539\u53D8\u6B65\u6570\uFF0C\u53EF\u4EE5\u4E3A\u5C0F\u6570| number|string| 1|  |\n| stringMode| \u5B57\u7B26\u503C\u6A21\u5F0F\uFF0C\u5F00\u542F\u540E\u652F\u6301\u9AD8\u7CBE\u5EA6\u5C0F\u6570\u3002\u540C\u65F6 change \u4E8B\u4EF6\u5C06\u8FD4\u56DE string \u7C7B\u578B| boolean| false| 3.0 |\n| upIcon| \u81EA\u5B9A\u4E49\u4E0A\u7BAD\u5934\u56FE\u6807| slot| <UpOutlined />| 3.3.0 |\n| downIcon| \u81EA\u5B9A\u4E49\u4E0B\u7BAD\u5934\u56FE\u6807| slot| <DownOutlined />| 3.3.0 |\n| value(v-model)| \u5F53\u524D\u503C| number| |  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| change| \u53D8\u5316\u56DE\u8C03| Function(value: number | string)|  |\n| pressEnter| \u6309\u4E0B\u56DE\u8F66\u7684\u56DE\u8C03| function(e)|  |\n| step| \u70B9\u51FB\u4E0A\u4E0B\u7BAD\u5934\u7684\u56DE\u8C03| (value: number, info: { offset: number, type: 'up' | 'down' }) => void| 3.0 |\n#### \u65B9\u6CD5\n\n| \u540D\u79F0| \u63CF\u8FF0 |\n| :--- | :--- |\n| blur()| \u79FB\u9664\u7126\u70B9 |\n| focus()| \u83B7\u53D6\u7126\u70B9 |\n#### \u4E8B\u4EF6\n",
          "addonAfter": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u5E26\u6807\u7B7E\u7684 input\uFF0C\u8BBE\u7F6E\u540E\u7F6E\u6807\u7B7E"
          },
          "addonBefore": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u5E26\u6807\u7B7E\u7684 input\uFF0C\u8BBE\u7F6E\u524D\u7F6E\u6807\u7B7E"
          },
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u81EA\u52A8\u83B7\u53D6\u7126\u70B9"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6709\u8FB9\u6846"
          },
          "controls": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u589E\u51CF\u6309\u94AE"
          },
          "decimalSeparator": {
            "type": "attr",
            "values": [],
            "description": "\u5C0F\u6570\u70B9"
          },
          "defaultValue": {
            "type": "attr",
            "values": ["number"],
            "description": "\u521D\u59CB\u503C"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u7528"
          },
          "formatter": {
            "type": "attr",
            "values": ["function(value: number"],
            "description": "\u6307\u5B9A\u8F93\u5165\u6846\u5C55\u793A\u503C\u7684\u683C\u5F0F"
          },
          "keyboard": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u542F\u7528\u952E\u76D8\u5FEB\u6377\u884C\u4E3A"
          },
          "max": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u5927\u503C"
          },
          "min": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u5C0F\u503C"
          },
          "parser": {
            "type": "attr",
            "values": ["function( string): number"],
            "description": "\u6307\u5B9A\u4ECE formatter \u91CC\u8F6C\u6362\u56DE\u6570\u5B57\u7684\u65B9\u5F0F\uFF0C\u548C formatter \u642D\u914D\u4F7F\u7528"
          },
          "precision": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6570\u503C\u7CBE\u5EA6"
          },
          "prefix": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u5E26\u6709\u524D\u7F00\u56FE\u6807\u7684 input"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u6846\u5927\u5C0F"
          },
          "status": {
            "type": "attr",
            "values": ["'error'", "'warning'"],
            "description": "\u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001"
          },
          "step": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u4E0A\u4E0B\u7BAD\u5934\u7684\u56DE\u8C03"
          },
          "stringMode": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5B57\u7B26\u503C\u6A21\u5F0F\uFF0C\u5F00\u542F\u540E\u652F\u6301\u9AD8\u7CBE\u5EA6\u5C0F\u6570\u3002\u540C\u65F6 change \u4E8B\u4EF6\u5C06\u8FD4\u56DE string \u7C7B\u578B"
          },
          "upIcon": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49\u4E0A\u7BAD\u5934\u56FE\u6807"
          },
          "downIcon": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49\u4E0B\u7BAD\u5934\u56FE\u6807"
          },
          "v-model:value": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5F53\u524D\u503C"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u53D8\u5316\u56DE\u8C03"
          },
          "pressEnter": {
            "type": "event",
            "values": [],
            "description": "\u6309\u4E0B\u56DE\u8F66\u7684\u56DE\u8C03"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          }
        },
        "a-mentions": {
          "_html": {
            "": '<a-mentions v-model:value="${1:value}" autofocus :options="${2:options}" @select="${3:onSelect}">$4</a-mentions>',
            ":search": '<a-mentions v-model:value="${1:value}" autofocus :options="${2:options}" @select="${3:onSelect}" @search="${4:onSearch}">$5</a-mentions>',
            ":option[slot]": '<template #option="{ payload }">\n$1\n</template>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/mentions-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |
| :--- | :--- | :--- | :--- |
| autofocus| \u81EA\u52A8\u83B7\u5F97\u7126\u70B9| boolean| false |
| defaultValue| \u9ED8\u8BA4\u503C| string|  |
| filterOption| \u81EA\u5B9A\u4E49\u8FC7\u6EE4\u903B\u8F91| false | (input: string, option: OptionProps) => boolean|  |
| getPopupContainer| \u6307\u5B9A\u5EFA\u8BAE\u6846\u6302\u8F7D\u7684 HTML \u8282\u70B9| () => HTMLElement|  |
| notFoundContent| \u5F53\u4E0B\u62C9\u5217\u8868\u4E3A\u7A7A\u65F6\u663E\u793A\u7684\u5185\u5BB9| string | slot| 'Not Found' |
| placement| \u5F39\u51FA\u5C42\u5C55\u793A\u4F4D\u7F6E| top | bottom| bottom |
| prefix| \u8BBE\u7F6E\u89E6\u53D1\u5173\u952E\u5B57| string | string[]| '@' |
| split| \u8BBE\u7F6E\u9009\u4E2D\u9879\u524D\u540E\u5206\u9694\u7B26| string| ' ' |
| status| \u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001| 'error' | 'warning'| - |
| validateSearch| \u81EA\u5B9A\u4E49\u89E6\u53D1\u9A8C\u8BC1\u903B\u8F91| (text: string, props: MentionsProps) => void|  |
| value(v-model)| \u8BBE\u7F6E\u503C| string|  |
| options| \u9009\u9879\u914D\u7F6E| Options| [] |
| option| \u901A\u8FC7 option \u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u8282\u70B9| v-slot:option="option"| - |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |
| :--- | :--- | :--- |
| blur| \u5931\u53BB\u7126\u70B9\u7684\u65F6\u56DE\u8C03| function |
| change| \u503C\u6539\u53D8\u65F6\u89E6\u53D1| function(value: string) |
| focus| \u83B7\u5F97\u7126\u70B9\u65F6\u56DE\u8C03| function |
| search| \u6587\u672C\u6846\u503C\u53D8\u5316\u65F6\u56DE\u8C03| function(value: string, prefix: string) |
| select| \u9009\u62E9\u9009\u9879\u65F6\u89E6\u53D1| function(option: OptionProps, prefix: string) |
#### \u65B9\u6CD5

| \u540D\u79F0| \u63CF\u8FF0 |
| :--- | :--- |
| blur()| \u79FB\u9664\u7126\u70B9 |
| focus()| \u83B7\u53D6\u7126\u70B9 |

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |
| :--- | :--- | :--- | :--- |
| value| \u9009\u62E9\u65F6\u586B\u5145\u7684\u503C| string| '' |

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |
| :--- | :--- | :--- | :--- |
| value| \u9009\u62E9\u65F6\u586B\u5145\u7684\u503C| string| number |
| label| \u9009\u9879\u7684\u6807\u9898| VueNode| (o: Option)=> VueNode |
| disabled| \u662F\u5426\u53EF\u9009| boolean| - |
| class| css \u7C7B\u540D| string| - |
| style| \u9009\u9879\u6837\u5F0F| CSSProperties| - |
| payload| \u5176\u5B83\u6570\u636E| object| - |
`,
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u81EA\u52A8\u83B7\u5F97\u7126\u70B9"
          },
          "defaultValue": {
            "type": "attr",
            "values": [],
            "description": "\u9ED8\u8BA4\u503C"
          },
          "filterOption": {
            "type": "attr",
            "values": ["false", "(input: string, option: OptionProps) => boolean"],
            "description": "\u81EA\u5B9A\u4E49\u8FC7\u6EE4\u903B\u8F91"
          },
          "getPopupContainer": {
            "type": "attr",
            "values": ["() => HTMLElement"],
            "description": "\u6307\u5B9A\u5EFA\u8BAE\u6846\u6302\u8F7D\u7684 HTML \u8282\u70B9"
          },
          "notFoundContent": {
            "type": "attr",
            "values": ["string", "slot"],
            "description": "\u5F53\u4E0B\u62C9\u5217\u8868\u4E3A\u7A7A\u65F6\u663E\u793A\u7684\u5185\u5BB9"
          },
          "placement": {
            "type": "attr",
            "values": ["top", "bottom"],
            "description": "\u5F39\u51FA\u5C42\u5C55\u793A\u4F4D\u7F6E"
          },
          "prefix": {
            "type": "attr",
            "values": ["string", "string[]"],
            "description": "\u8BBE\u7F6E\u89E6\u53D1\u5173\u952E\u5B57"
          },
          "split": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u9009\u4E2D\u9879\u524D\u540E\u5206\u9694\u7B26"
          },
          "status": {
            "type": "attr",
            "values": ["'error'", "'warning'"],
            "description": "\u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001"
          },
          "validateSearch": {
            "type": "attr",
            "values": ["(text: string, props: MentionsProps) => void"],
            "description": "\u81EA\u5B9A\u4E49\u89E6\u53D1\u9A8C\u8BC1\u903B\u8F91"
          },
          "v-model:value": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u503C"
          },
          "options": {
            "type": "attr",
            "values": ["Options"],
            "description": "\u9009\u9879\u914D\u7F6E"
          },
          "option": {
            "type": "attr",
            "values": ['v-slot:option="option"'],
            "description": "\u901A\u8FC7 option \u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u8282\u70B9"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u503C\u6539\u53D8\u65F6\u89E6\u53D1"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          },
          "search": {
            "type": "event",
            "values": [],
            "description": "\u6587\u672C\u6846\u503C\u53D8\u5316\u65F6\u56DE\u8C03"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u9009\u62E9\u9009\u9879\u65F6\u89E6\u53D1"
          }
        },
        "a-radio-group": {
          "_html": {
            "": '<a-radio-group v-model:value="${1:value}">\n<a-radio value="$2">$3</a-radio>$4\n</a-radio-group>',
            ":options": '<a-radio-group v-model:value="${1:value}" :options="${2:options}">$3</a-radio-group>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/radio-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| buttonStyle| RadioButton \u7684\u98CE\u683C\u6837\u5F0F\uFF0C\u76EE\u524D\u6709\u63CF\u8FB9\u548C\u586B\u8272\u4E24\u79CD\u98CE\u683C| outline | solid| outline|  |\n| disabled| \u7981\u9009\u6240\u6709\u5B50\u5355\u9009\u5668| boolean| false|  |\n| name| RadioGroup \u4E0B\u6240\u6709 input[type="radio"] \u7684 name \u5C5E\u6027| string| -|  |\n| options| \u4EE5\u914D\u7F6E\u5F62\u5F0F\u8BBE\u7F6E\u5B50\u5143\u7D20| string[] | number[] | Array<{ label: string value: string disabled?: boolean }>| -|  |\n| optionType| \u7528\u4E8E\u8BBE\u7F6E Radio options \u7C7B\u578B| default | button| default| 3.0.0 |\n| size| \u5927\u5C0F\uFF0C\u53EA\u5BF9\u6309\u94AE\u6837\u5F0F\u751F\u6548| large | default | small| default|  |\n| value(v-model)| \u7528\u4E8E\u8BBE\u7F6E\u5F53\u524D\u9009\u4E2D\u7684\u503C| any| -|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change| \u9009\u9879\u53D8\u5316\u65F6\u7684\u56DE\u8C03\u51FD\u6570| Function(e:Event) |\n#### \u65B9\u6CD5\n',
          "buttonStyle": {
            "type": "attr",
            "values": ["outline", "solid"],
            "description": "RadioButton \u7684\u98CE\u683C\u6837\u5F0F\uFF0C\u76EE\u524D\u6709\u63CF\u8FB9\u548C\u586B\u8272\u4E24\u79CD\u98CE\u683C"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u9009\u6240\u6709\u5B50\u5355\u9009\u5668"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": 'RadioGroup \u4E0B\u6240\u6709 input[type="radio"] \u7684 name \u5C5E\u6027'
          },
          "options": {
            "type": "attr",
            "values": ["string[]", "number[]"],
            "description": "\u4EE5\u914D\u7F6E\u5F62\u5F0F\u8BBE\u7F6E\u5B50\u5143\u7D20"
          },
          "optionType": {
            "type": "attr",
            "values": ["default", "button"],
            "description": "\u7528\u4E8E\u8BBE\u7F6E Radio options \u7C7B\u578B"
          },
          "size": {
            "type": "attr",
            "values": ["large", "default", "small"],
            "description": "\u5927\u5C0F\uFF0C\u53EA\u5BF9\u6309\u94AE\u6837\u5F0F\u751F\u6548"
          },
          "v-model:value": {
            "type": "attr",
            "values": ["any"],
            "description": "\u7528\u4E8E\u8BBE\u7F6E\u5F53\u524D\u9009\u4E2D\u7684\u503C"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u9009\u9879\u53D8\u5316\u65F6\u7684\u56DE\u8C03\u51FD\u6570"
          }
        },
        "a-radio": {
          "_html": {
            "": '<a-radio v-model:checked="${1:checked}">$2</a-radio>',
            ":value": '<a-radio value="$1">$2</a-radio>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/radio-cn)\n#### \u5C5E\u6027\n\n#### \u5C5E\u6027\n\n| \u540D\u79F0| \u63CF\u8FF0 |\n| :--- | :--- |\n| blur()| \u79FB\u9664\u7126\u70B9 |\n| focus()| \u83B7\u53D6\u7126\u70B9 |\n",
          "blur()": {
            "type": "attr",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "focus()": {
            "type": "attr",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          }
        },
        "a-rate": {
          "_html": {
            "": '<a-rate v-model:value="${1:value}">$2</a-rate>',
            ":character": '<a-rate v-model:value="${1:value}" character="$2">$3</a-rate>',
            ":allow-half": '<a-rate v-model:value="${1:value}" allow-half>$2</a-rate>',
            ":tooltips": '<a-rate v-model:value="${1:value}" :tooltips="${2:tooltips}">$3</a-rate>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/rate-cn)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| allowClear| \u662F\u5426\u5141\u8BB8\u518D\u6B21\u70B9\u51FB\u540E\u6E05\u9664| boolean| true |\n| allowHalf| \u662F\u5426\u5141\u8BB8\u534A\u9009| boolean| false |\n| autofocus| \u81EA\u52A8\u83B7\u53D6\u7126\u70B9| boolean| false |\n| character| \u81EA\u5B9A\u4E49\u5B57\u7B26| string | slot| <StarOutlined /> |\n| count| star \u603B\u6570| number| 5 |\n| disabled| \u53EA\u8BFB\uFF0C\u65E0\u6CD5\u8FDB\u884C\u4EA4\u4E92| boolean| false |\n| tooltips| \u81EA\u5B9A\u4E49\u6BCF\u9879\u7684\u63D0\u793A\u4FE1\u606F| string[]| - |\n| value(v-model)| \u5F53\u524D\u6570\uFF0C\u53D7\u63A7\u503C| number| - |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570|  |\n| :--- | :--- | :--- | :--- |\n| blur| \u5931\u53BB\u7126\u70B9\u65F6\u7684\u56DE\u8C03| Function()| - |\n| change| \u9009\u62E9\u65F6\u7684\u56DE\u8C03| Function(value: number)| - |\n| focus| \u83B7\u53D6\u7126\u70B9\u65F6\u7684\u56DE\u8C03| Function()| - |\n| hoverChange| \u9F20\u6807\u7ECF\u8FC7\u65F6\u6570\u503C\u53D8\u5316\u7684\u56DE\u8C03| Function(value: number)| - |\n| keydown| \u6309\u952E\u56DE\u8C03| Function(event)| - |\n#### \u65B9\u6CD5\n\n| \u540D\u79F0| \u63CF\u8FF0 |\n| :--- | :--- |\n| blur()| \u79FB\u9664\u7126\u70B9 |\n| focus()| \u83B7\u53D6\u7126\u70B9 |\n",
          "allowClear": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5141\u8BB8\u518D\u6B21\u70B9\u51FB\u540E\u6E05\u9664"
          },
          "allowHalf": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5141\u8BB8\u534A\u9009"
          },
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u81EA\u52A8\u83B7\u53D6\u7126\u70B9"
          },
          "character": {
            "type": "attr",
            "values": ["string", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u5B57\u7B26"
          },
          "count": {
            "type": "attr",
            "values": ["number"],
            "description": "star \u603B\u6570"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u53EA\u8BFB\uFF0C\u65E0\u6CD5\u8FDB\u884C\u4EA4\u4E92"
          },
          "tooltips": {
            "type": "attr",
            "values": ["string[]"],
            "description": "\u81EA\u5B9A\u4E49\u6BCF\u9879\u7684\u63D0\u793A\u4FE1\u606F"
          },
          "v-model:value": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5F53\u524D\u6570\uFF0C\u53D7\u63A7\u503C"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u9009\u62E9\u65F6\u7684\u56DE\u8C03"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          },
          "hoverChange": {
            "type": "event",
            "values": [],
            "description": "\u9F20\u6807\u7ECF\u8FC7\u65F6\u6570\u503C\u53D8\u5316\u7684\u56DE\u8C03"
          },
          "keydown": {
            "type": "event",
            "values": [],
            "description": "\u6309\u952E\u56DE\u8C03"
          }
        },
        "a-select": {
          "_html": {
            "": '<a-select v-model:value="${1:value}" show-search allowClear @change="${2:handleChange}">\n<a-select-option value="$3">$4</a-select-option>$5\n</a-select>',
            ":options": '<a-select v-model:value="${1:value}" show-search allowClear placeholder="Please select" :options="${2:options}" @change="${3:handleChange}">$4</a-select>',
            ":multiple": '<a-select v-model:value="${1:value}" show-search allowClear mode="multiple" placeholder="Please select" :options="${2:options}" @change="${3:handleChange}">$4</a-select>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/select-cn)
#### \u5C5E\u6027
#### [](https://www.antdv.com/components/select-cn)#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| allowClear| \u652F\u6301\u6E05\u9664| boolean| false|  |
| autoClearSearchValue| \u662F\u5426\u5728\u9009\u4E2D\u9879\u540E\u6E05\u7A7A\u641C\u7D22\u6846\uFF0C\u53EA\u5728 mode \u4E3A multiple \u6216 tags \u65F6\u6709\u6548\u3002| boolean| true|  |
| autofocus| \u9ED8\u8BA4\u83B7\u53D6\u7126\u70B9| boolean| false|  |
| bordered| \u662F\u5426\u6709\u8FB9\u6846| boolean| true|  |
| clearIcon| \u81EA\u5B9A\u4E49\u7684\u591A\u9009\u6846\u6E05\u7A7A\u56FE\u6807| VNode | slot| -|  |
| defaultActiveFirstOption| \u662F\u5426\u9ED8\u8BA4\u9AD8\u4EAE\u7B2C\u4E00\u4E2A\u9009\u9879\u3002| boolean| true|  |
| defaultOpen| \u662F\u5426\u9ED8\u8BA4\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355| boolean| -|  |
| disabled| \u662F\u5426\u7981\u7528| boolean| false|  |
| popupClassName| \u4E0B\u62C9\u83DC\u5355\u7684 className \u5C5E\u6027| string| -| 4.0 |
| dropdownMatchSelectWidth| \u4E0B\u62C9\u83DC\u5355\u548C\u9009\u62E9\u5668\u540C\u5BBD\u3002\u9ED8\u8BA4\u5C06\u8BBE\u7F6E min-width\uFF0C\u5F53\u503C\u5C0F\u4E8E\u9009\u62E9\u6846\u5BBD\u5EA6\u65F6\u4F1A\u88AB\u5FFD\u7565\u3002false \u65F6\u4F1A\u5173\u95ED\u865A\u62DF\u6EDA\u52A8| boolean | number| true|  |
| dropdownMenuStyle| dropdown \u83DC\u5355\u81EA\u5B9A\u4E49\u6837\u5F0F| object| -|  |
| dropdownRender| \u81EA\u5B9A\u4E49\u4E0B\u62C9\u6846\u5185\u5BB9| ({menuNode: VNode, props}) => VNode | v-slot| -|  |
| dropdownStyle| \u4E0B\u62C9\u83DC\u5355\u7684 style \u5C5E\u6027| object| -|  |
| fieldNames| \u81EA\u5B9A\u4E49\u8282\u70B9 label\u3001value\u3001options \u7684\u5B57\u6BB5| object| { label: label, value: value, options: options }| 3.0 |
| filterOption| \u662F\u5426\u6839\u636E\u8F93\u5165\u9879\u8FDB\u884C\u7B5B\u9009\u3002\u5F53\u5176\u4E3A\u4E00\u4E2A\u51FD\u6570\u65F6\uFF0C\u4F1A\u63A5\u6536 inputValue option \u4E24\u4E2A\u53C2\u6570\uFF0C\u5F53 option \u7B26\u5408\u7B5B\u9009\u6761\u4EF6\u65F6\uFF0C\u5E94\u8FD4\u56DE true\uFF0C\u53CD\u4E4B\u5219\u8FD4\u56DE false\u3002| boolean | function(inputValue, option)| true|  |
| filterSort| \u641C\u7D22\u65F6\u5BF9\u7B5B\u9009\u7ED3\u679C\u9879\u7684\u6392\u5E8F\u51FD\u6570, \u7C7B\u4F3CArray.sort\u91CC\u7684 compareFunction| (optionA: Option, optionB: Option) => number| -| 3.0 |
| firstActiveValue| \u9ED8\u8BA4\u9AD8\u4EAE\u7684\u9009\u9879| string | string[]| -|  |
| getPopupContainer| \u83DC\u5355\u6E32\u67D3\u7236\u8282\u70B9\u3002\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\uFF0C\u5982\u679C\u4F60\u9047\u5230\u83DC\u5355\u6EDA\u52A8\u5B9A\u4F4D\u95EE\u9898\uFF0C\u8BD5\u8BD5\u4FEE\u6539\u4E3A\u6EDA\u52A8\u7684\u533A\u57DF\uFF0C\u5E76\u76F8\u5BF9\u5176\u5B9A\u4F4D\u3002| function(triggerNode)| () => document.body|  |
| labelInValue| \u662F\u5426\u628A\u6BCF\u4E2A\u9009\u9879\u7684 label \u5305\u88C5\u5230 value \u4E2D\uFF0C\u4F1A\u628A Select \u7684 value \u7C7B\u578B\u4ECE string \u53D8\u4E3A {key: string, label: vNodes, originLabel: any} \u7684\u683C\u5F0F, originLabel\uFF083.1\uFF09 \u4FDD\u6301\u539F\u59CB\u7C7B\u578B\uFF0C\u5982\u679C\u901A\u8FC7 a-select-option children \u6784\u9020\u7684\u8282\u70B9\uFF0C\u8BE5\u503C\u662F\u662F\u4E2A\u51FD\u6570\uFF08\u5373 a-select-option \u7684\u9ED8\u8BA4\u63D2\u69FD\uFF09| boolean| false|  |
| listHeight| \u8BBE\u7F6E\u5F39\u7A97\u6EDA\u52A8\u9AD8\u5EA6| number| 256|  |
| maxTagCount| \u6700\u591A\u663E\u793A\u591A\u5C11\u4E2A tag| number| -|  |
| maxTagPlaceholder| \u9690\u85CF tag \u65F6\u663E\u793A\u7684\u5185\u5BB9| slot | function(omittedValues)| -|  |
| maxTagTextLength| \u6700\u5927\u663E\u793A\u7684 tag \u6587\u672C\u957F\u5EA6| number| -|  |
| menuItemSelectedIcon| \u81EA\u5B9A\u4E49\u5F53\u524D\u9009\u4E2D\u7684\u6761\u76EE\u56FE\u6807| VNode | slot| -|  |
| mode| \u8BBE\u7F6E Select \u7684\u6A21\u5F0F\u4E3A\u591A\u9009\u6216\u6807\u7B7E| 'multiple' | 'tags' | 'combobox'| -|  |
| notFoundContent| \u5F53\u4E0B\u62C9\u5217\u8868\u4E3A\u7A7A\u65F6\u663E\u793A\u7684\u5185\u5BB9| string|slot| Not Found|  |
| open| \u662F\u5426\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355| boolean| -|  |
| option| \u901A\u8FC7 option \u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u8282\u70B9| v-slot:option="{value, label, [disabled, key, title]}"| -| 2.2.5 |
| optionFilterProp| \u641C\u7D22\u65F6\u8FC7\u6EE4\u5BF9\u5E94\u7684 option \u5C5E\u6027\uFF0C\u4E0D\u652F\u6301 children| string| value|  |
| optionLabelProp| \u56DE\u586B\u5230\u9009\u62E9\u6846\u7684 Option \u7684\u5C5E\u6027\u503C\uFF0C\u9ED8\u8BA4\u662F Option \u7684\u5B50\u5143\u7D20\u3002\u6BD4\u5982\u5728\u5B50\u5143\u7D20\u9700\u8981\u9AD8\u4EAE\u6548\u679C\u65F6\uFF0C\u6B64\u503C\u53EF\u4EE5\u8BBE\u4E3A value\u3002| string| children | label(\u8BBE\u7F6E options \u65F6)|  |
| options| options \u6570\u636E\uFF0C\u5982\u679C\u8BBE\u7F6E\u5219\u4E0D\u9700\u8981\u624B\u52A8\u6784\u9020 selectOption \u8282\u70B9| Array<{value, label, [disabled, key, title]}>| []|  |
| placeholder| \u9009\u62E9\u6846\u9ED8\u8BA4\u6587\u5B57| string|slot| -|  |
| placement| \u9009\u62E9\u6846\u5F39\u51FA\u7684\u4F4D\u7F6E| bottomLeft bottomRight topLeft topRight| bottomLeft| 3.3.0 |
| removeIcon| \u81EA\u5B9A\u4E49\u7684\u591A\u9009\u6846\u6E05\u9664\u56FE\u6807| VNode | slot| -|  |
| searchValue| \u63A7\u5236\u641C\u7D22\u6587\u672C| string| -|  |
| showArrow| \u662F\u5426\u663E\u793A\u4E0B\u62C9\u5C0F\u7BAD\u5934| boolean| \u5355\u9009\u4E3A true,\u591A\u9009\u4E3A false|  |
| showSearch| \u914D\u7F6E\u662F\u5426\u53EF\u641C\u7D22| boolean| \u5355\u9009\u4E3A false,\u591A\u9009\u4E3A true|  |
| size| \u9009\u62E9\u6846\u5927\u5C0F\uFF0C\u53EF\u9009 large small| string| default|  |
| status| \u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001| 'error' | 'warning'| -| 3.3.0 |
| suffixIcon| \u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u540E\u7F00\u56FE\u6807| VNode | slot| -|  |
| tagRender| \u81EA\u5B9A\u4E49 tag \u5185\u5BB9 render\uFF0C\u4EC5\u5728 mode \u4E3A multiple \u6216 tags \u65F6\u751F\u6548| slot | (props) => any| -| 3.0 |
| tokenSeparators| \u81EA\u52A8\u5206\u8BCD\u7684\u5206\u9694\u7B26\uFF0C\u4EC5\u5728 mode="tags" \u65F6\u751F\u6548| string[]| -|  |
| value(v-model)| \u6307\u5B9A\u5F53\u524D\u9009\u4E2D\u7684\u6761\u76EE| string|string[]|number|number[]| -|  |
| virtual| \u8BBE\u7F6E false \u65F6\u5173\u95ED\u865A\u62DF\u6EDA\u52A8| boolean| true| 3.0 |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |
| :--- | :--- | :--- |
| blur| \u5931\u53BB\u7126\u70B9\u7684\u65F6\u56DE\u8C03| function |
| change| \u9009\u4E2D option\uFF0C\u6216 input \u7684 value \u53D8\u5316\uFF08combobox \u6A21\u5F0F\u4E0B\uFF09\u65F6\uFF0C\u8C03\u7528\u6B64\u51FD\u6570| function(value, option:Option | Array<Option>) |
| deselect| \u53D6\u6D88\u9009\u4E2D\u65F6\u8C03\u7528\uFF0C\u53C2\u6570\u4E3A\u9009\u4E2D\u9879\u7684 value (\u6216 key) \u503C\uFF0C\u4EC5\u5728 multiple \u6216 tags \u6A21\u5F0F\u4E0B\u751F\u6548| function(value\uFF0Coption:Option) |
| dropdownVisibleChange| \u5C55\u5F00\u4E0B\u62C9\u83DC\u5355\u7684\u56DE\u8C03| function(open) |
| focus| \u83B7\u5F97\u7126\u70B9\u65F6\u56DE\u8C03| function |
| inputKeyDown| \u952E\u76D8\u6309\u4E0B\u65F6\u56DE\u8C03| function |
| mouseenter| \u9F20\u6807\u79FB\u5165\u65F6\u56DE\u8C03| function |
| mouseleave| \u9F20\u6807\u79FB\u51FA\u65F6\u56DE\u8C03| function |
| popupScroll| \u4E0B\u62C9\u5217\u8868\u6EDA\u52A8\u65F6\u7684\u56DE\u8C03| function |
| search| \u6587\u672C\u6846\u503C\u53D8\u5316\u65F6\u56DE\u8C03| function(value: string) |
| select| \u88AB\u9009\u4E2D\u65F6\u8C03\u7528\uFF0C\u53C2\u6570\u4E3A\u9009\u4E2D\u9879\u7684 value (\u6216 key) \u503C| function(value, option:Option) |

#### \u5C5E\u6027

| \u540D\u79F0| \u8BF4\u660E |
| :--- | :--- |
| blur()| \u53D6\u6D88\u7126\u70B9 |
| focus()| \u83B7\u53D6\u7126\u70B9 |
#### [](https://www.antdv.com/components/select-cn)#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |
| :--- | :--- | :--- | :--- |
| class| Option \u5668\u7C7B\u540D| string| - |
| disabled| \u662F\u5426\u7981\u7528| boolean| false |
| key| \u548C value \u542B\u4E49\u4E00\u81F4\u3002\u5982\u679C Vue \u9700\u8981\u4F60\u8BBE\u7F6E\u6B64\u9879\uFF0C\u6B64\u9879\u503C\u4E0E value \u7684\u503C\u76F8\u540C\uFF0C\u7136\u540E\u53EF\u4EE5\u7701\u7565 value \u8BBE\u7F6E| string|  |
| title| \u9009\u4E2D\u8BE5 Option \u540E\uFF0CSelect \u7684 title| string| - |
| value| \u9ED8\u8BA4\u6839\u636E\u6B64\u5C5E\u6027\u503C\u8FDB\u884C\u7B5B\u9009| string|number| - |
#### [](https://www.antdv.com/components/select-cn)#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |
| :--- | :--- | :--- | :--- |
| key| | string| - |
| label| \u7EC4\u540D| string|function(h)|slot| \u65E0 |
`,
          "allowClear": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u652F\u6301\u6E05\u9664"
          },
          "autoClearSearchValue": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5728\u9009\u4E2D\u9879\u540E\u6E05\u7A7A\u641C\u7D22\u6846\uFF0C\u53EA\u5728 mode \u4E3A multiple \u6216 tags \u65F6\u6709\u6548\u3002"
          },
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9ED8\u8BA4\u83B7\u53D6\u7126\u70B9"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6709\u8FB9\u6846"
          },
          "clearIcon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u591A\u9009\u6846\u6E05\u7A7A\u56FE\u6807"
          },
          "defaultActiveFirstOption": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9ED8\u8BA4\u9AD8\u4EAE\u7B2C\u4E00\u4E2A\u9009\u9879\u3002"
          },
          "defaultOpen": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u9ED8\u8BA4\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "popupClassName": {
            "type": "attr",
            "values": [],
            "description": "\u4E0B\u62C9\u83DC\u5355\u7684 className \u5C5E\u6027"
          },
          "dropdownMatchSelectWidth": {
            "type": "attr",
            "values": ["boolean", "number"],
            "description": "\u4E0B\u62C9\u83DC\u5355\u548C\u9009\u62E9\u5668\u540C\u5BBD\u3002\u9ED8\u8BA4\u5C06\u8BBE\u7F6E min-width\uFF0C\u5F53\u503C\u5C0F\u4E8E\u9009\u62E9\u6846\u5BBD\u5EA6\u65F6\u4F1A\u88AB\u5FFD\u7565\u3002false \u65F6\u4F1A\u5173\u95ED\u865A\u62DF\u6EDA\u52A8"
          },
          "dropdownMenuStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "dropdown \u83DC\u5355\u81EA\u5B9A\u4E49\u6837\u5F0F"
          },
          "dropdownRender": {
            "type": "attr",
            "values": ["v-slot"],
            "description": "\u81EA\u5B9A\u4E49\u4E0B\u62C9\u6846\u5185\u5BB9"
          },
          "dropdownStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "\u4E0B\u62C9\u83DC\u5355\u7684 style \u5C5E\u6027"
          },
          "fieldNames": {
            "type": "attr",
            "values": ["object"],
            "description": "\u81EA\u5B9A\u4E49\u8282\u70B9 label\u3001value\u3001options \u7684\u5B57\u6BB5"
          },
          "filterOption": {
            "type": "attr",
            "values": ["boolean", "function(inputValue, option)"],
            "description": "\u662F\u5426\u6839\u636E\u8F93\u5165\u9879\u8FDB\u884C\u7B5B\u9009\u3002\u5F53\u5176\u4E3A\u4E00\u4E2A\u51FD\u6570\u65F6\uFF0C\u4F1A\u63A5\u6536 inputValue option \u4E24\u4E2A\u53C2\u6570\uFF0C\u5F53 option \u7B26\u5408\u7B5B\u9009\u6761\u4EF6\u65F6\uFF0C\u5E94\u8FD4\u56DE true\uFF0C\u53CD\u4E4B\u5219\u8FD4\u56DE false\u3002"
          },
          "filterSort": {
            "type": "attr",
            "values": ["(optionA: Option, optionB: Option) => number"],
            "description": "\u641C\u7D22\u65F6\u5BF9\u7B5B\u9009\u7ED3\u679C\u9879\u7684\u6392\u5E8F\u51FD\u6570, \u7C7B\u4F3CArray.sort\u91CC\u7684 compareFunction"
          },
          "firstActiveValue": {
            "type": "attr",
            "values": ["string", "string[]"],
            "description": "\u9ED8\u8BA4\u9AD8\u4EAE\u7684\u9009\u9879"
          },
          "getPopupContainer": {
            "type": "attr",
            "values": ["function(triggerNode)"],
            "description": "\u83DC\u5355\u6E32\u67D3\u7236\u8282\u70B9\u3002\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\uFF0C\u5982\u679C\u4F60\u9047\u5230\u83DC\u5355\u6EDA\u52A8\u5B9A\u4F4D\u95EE\u9898\uFF0C\u8BD5\u8BD5\u4FEE\u6539\u4E3A\u6EDA\u52A8\u7684\u533A\u57DF\uFF0C\u5E76\u76F8\u5BF9\u5176\u5B9A\u4F4D\u3002"
          },
          "labelInValue": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u628A\u6BCF\u4E2A\u9009\u9879\u7684 label \u5305\u88C5\u5230 value \u4E2D\uFF0C\u4F1A\u628A Select \u7684 value \u7C7B\u578B\u4ECE string \u53D8\u4E3A {key: string, label: vNodes, originLabel: any} \u7684\u683C\u5F0F, originLabel\uFF083.1\uFF09 \u4FDD\u6301\u539F\u59CB\u7C7B\u578B\uFF0C\u5982\u679C\u901A\u8FC7 a-select-option children \u6784\u9020\u7684\u8282\u70B9\uFF0C\u8BE5\u503C\u662F\u662F\u4E2A\u51FD\u6570\uFF08\u5373 a-select-option \u7684\u9ED8\u8BA4\u63D2\u69FD\uFF09"
          },
          "listHeight": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E\u5F39\u7A97\u6EDA\u52A8\u9AD8\u5EA6"
          },
          "maxTagCount": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u591A\u663E\u793A\u591A\u5C11\u4E2A tag"
          },
          "maxTagPlaceholder": {
            "type": "attr",
            "values": ["slot", "function(omittedValues)"],
            "description": "\u9690\u85CF tag \u65F6\u663E\u793A\u7684\u5185\u5BB9"
          },
          "maxTagTextLength": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u5927\u663E\u793A\u7684 tag \u6587\u672C\u957F\u5EA6"
          },
          "menuItemSelectedIcon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u5F53\u524D\u9009\u4E2D\u7684\u6761\u76EE\u56FE\u6807"
          },
          "mode": {
            "type": "attr",
            "values": ["'multiple'", "'tags'", "'combobox'"],
            "description": "\u8BBE\u7F6E Select \u7684\u6A21\u5F0F\u4E3A\u591A\u9009\u6216\u6807\u7B7E"
          },
          "notFoundContent": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5F53\u4E0B\u62C9\u5217\u8868\u4E3A\u7A7A\u65F6\u663E\u793A\u7684\u5185\u5BB9"
          },
          "open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355"
          },
          "option": {
            "type": "attr",
            "values": [],
            "description": "\u901A\u8FC7 option \u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u8282\u70B9"
          },
          "optionFilterProp": {
            "type": "attr",
            "values": [],
            "description": "\u641C\u7D22\u65F6\u8FC7\u6EE4\u5BF9\u5E94\u7684 option \u5C5E\u6027\uFF0C\u4E0D\u652F\u6301 children"
          },
          "optionLabelProp": {
            "type": "attr",
            "values": [],
            "description": "\u56DE\u586B\u5230\u9009\u62E9\u6846\u7684 Option \u7684\u5C5E\u6027\u503C\uFF0C\u9ED8\u8BA4\u662F Option \u7684\u5B50\u5143\u7D20\u3002\u6BD4\u5982\u5728\u5B50\u5143\u7D20\u9700\u8981\u9AD8\u4EAE\u6548\u679C\u65F6\uFF0C\u6B64\u503C\u53EF\u4EE5\u8BBE\u4E3A value\u3002"
          },
          "options": {
            "type": "attr",
            "values": [],
            "description": "options \u6570\u636E\uFF0C\u5982\u679C\u8BBE\u7F6E\u5219\u4E0D\u9700\u8981\u624B\u52A8\u6784\u9020 selectOption \u8282\u70B9"
          },
          "placeholder": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u9009\u62E9\u6846\u9ED8\u8BA4\u6587\u5B57"
          },
          "placement": {
            "type": "attr",
            "values": ["bottomLeft bottomRight topLeft topRight"],
            "description": "\u9009\u62E9\u6846\u5F39\u51FA\u7684\u4F4D\u7F6E"
          },
          "removeIcon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u591A\u9009\u6846\u6E05\u9664\u56FE\u6807"
          },
          "searchValue": {
            "type": "attr",
            "values": [],
            "description": "\u63A7\u5236\u641C\u7D22\u6587\u672C"
          },
          "showArrow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u4E0B\u62C9\u5C0F\u7BAD\u5934"
          },
          "showSearch": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u914D\u7F6E\u662F\u5426\u53EF\u641C\u7D22"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u62E9\u6846\u5927\u5C0F\uFF0C\u53EF\u9009 large small"
          },
          "status": {
            "type": "attr",
            "values": ["'error'", "'warning'"],
            "description": "\u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001"
          },
          "suffixIcon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u540E\u7F00\u56FE\u6807"
          },
          "tagRender": {
            "type": "attr",
            "values": ["slot", "(props) => any"],
            "description": "\u81EA\u5B9A\u4E49 tag \u5185\u5BB9 render\uFF0C\u4EC5\u5728 mode \u4E3A multiple \u6216 tags \u65F6\u751F\u6548"
          },
          "tokenSeparators": {
            "type": "attr",
            "values": ["string[]"],
            "description": '\u81EA\u52A8\u5206\u8BCD\u7684\u5206\u9694\u7B26\uFF0C\u4EC5\u5728 mode="tags" \u65F6\u751F\u6548'
          },
          "v-model:value": {
            "type": "attr",
            "values": ["string|string[]|number|number[]"],
            "description": "\u6307\u5B9A\u5F53\u524D\u9009\u4E2D\u7684\u6761\u76EE"
          },
          "virtual": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E false \u65F6\u5173\u95ED\u865A\u62DF\u6EDA\u52A8"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u53D6\u6D88\u7126\u70B9"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u9009\u4E2D option\uFF0C\u6216 input \u7684 value \u53D8\u5316\uFF08combobox \u6A21\u5F0F\u4E0B\uFF09\u65F6\uFF0C\u8C03\u7528\u6B64\u51FD\u6570"
          },
          "deselect": {
            "type": "event",
            "values": [],
            "description": "\u53D6\u6D88\u9009\u4E2D\u65F6\u8C03\u7528\uFF0C\u53C2\u6570\u4E3A\u9009\u4E2D\u9879\u7684 value (\u6216 key) \u503C\uFF0C\u4EC5\u5728 multiple \u6216 tags \u6A21\u5F0F\u4E0B\u751F\u6548"
          },
          "dropdownVisibleChange": {
            "type": "event",
            "values": [],
            "description": "\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355\u7684\u56DE\u8C03"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          },
          "inputKeyDown": {
            "type": "event",
            "values": [],
            "description": "\u952E\u76D8\u6309\u4E0B\u65F6\u56DE\u8C03"
          },
          "mouseenter": {
            "type": "event",
            "values": [],
            "description": "\u9F20\u6807\u79FB\u5165\u65F6\u56DE\u8C03"
          },
          "mouseleave": {
            "type": "event",
            "values": [],
            "description": "\u9F20\u6807\u79FB\u51FA\u65F6\u56DE\u8C03"
          },
          "popupScroll": {
            "type": "event",
            "values": [],
            "description": "\u4E0B\u62C9\u5217\u8868\u6EDA\u52A8\u65F6\u7684\u56DE\u8C03"
          },
          "search": {
            "type": "event",
            "values": [],
            "description": "\u6587\u672C\u6846\u503C\u53D8\u5316\u65F6\u56DE\u8C03"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u88AB\u9009\u4E2D\u65F6\u8C03\u7528\uFF0C\u53C2\u6570\u4E3A\u9009\u4E2D\u9879\u7684 value (\u6216 key) \u503C"
          },
          "class": {
            "type": "attr",
            "values": [],
            "description": "Option \u5668\u7C7B\u540D"
          },
          "key": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u4E2D\u8BE5 Option \u540E\uFF0CSelect \u7684 title"
          },
          "value": {
            "type": "attr",
            "values": ["string|number"],
            "description": "\u9ED8\u8BA4\u6839\u636E\u6B64\u5C5E\u6027\u503C\u8FDB\u884C\u7B5B\u9009"
          },
          "label": {
            "type": "attr",
            "values": ["string|function(h)|slot"],
            "description": "\u7EC4\u540D"
          }
        },
        "a-select-option": {
          "_html": {
            "": '<a-select-option value="$1">$2</a-select-option>'
          }
        },
        "a-slider": {
          "_html": {
            "": '<a-slider v-model:value="${1:value}">$2</a-slider>',
            ":tip-formatter": '<a-slider v-model:value="${1:value}" :tip-formatter="${2:formatter}">$3</a-slider>',
            ":range": '<a-slider v-model:value="${1:value}" range :step="${2:10}" @afterChange="${3:onAfterChange}">$4</a-slider>',
            ":mark[slot]": '<template #mark="{ label, point }">\n$1\n</template>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/slider-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| autofocus| \u81EA\u52A8\u83B7\u53D6\u7126\u70B9| boolean| false|  |\n| disabled| \u503C\u4E3A true \u65F6\uFF0C\u6ED1\u5757\u4E3A\u7981\u7528\u72B6\u6001| boolean| false|  |\n| dots| \u662F\u5426\u53EA\u80FD\u62D6\u62FD\u5230\u523B\u5EA6\u4E0A| boolean| false|  |\n| included| marks \u4E0D\u4E3A\u7A7A\u5BF9\u8C61\u65F6\u6709\u6548\uFF0C\u503C\u4E3A true \u65F6\u8868\u793A\u503C\u4E3A\u5305\u542B\u5173\u7CFB\uFF0Cfalse \u8868\u793A\u5E76\u5217| boolean| true|  |\n| mark| \u81EA\u5B9A\u4E49\u523B\u5EA6\u6807\u8BB0| v-slot:mark| { point: number, label: any }| 3.0 |\n| marks| \u523B\u5EA6\u6807\u8BB0\uFF0Ckey \u7684\u7C7B\u578B\u5FC5\u987B\u4E3A number \u4E14\u53D6\u503C\u5728\u95ED\u533A\u95F4 [min, max] \u5185\uFF0C\u6BCF\u4E2A\u6807\u7B7E\u53EF\u4EE5\u5355\u72EC\u8BBE\u7F6E\u6837\u5F0F| object| { number: string|VNode } or { number: { style: object, label: string|VNode } } or { number: () => VNode }|  |\n| max| \u6700\u5927\u503C| number| 100|  |\n| min| \u6700\u5C0F\u503C| number| 0|  |\n| range| \u53CC\u6ED1\u5757\u6A21\u5F0F| boolean| false|  |\n| reverse| \u53CD\u5411\u5750\u6807\u8F74| boolean| false| 1.5.0 |\n| step| \u6B65\u957F\uFF0C\u53D6\u503C\u5FC5\u987B\u5927\u4E8E 0\uFF0C\u5E76\u4E14\u53EF\u88AB (max - min) \u6574\u9664\u3002\u5F53 marks \u4E0D\u4E3A\u7A7A\u5BF9\u8C61\u65F6\uFF0C\u53EF\u4EE5\u8BBE\u7F6E step \u4E3A null\uFF0C\u6B64\u65F6 Slider \u7684\u53EF\u9009\u503C\u4EC5\u6709 marks \u6807\u51FA\u6765\u7684\u90E8\u5206\u3002| number|null| 1|  |\n| value(v-model)| \u8BBE\u7F6E\u5F53\u524D\u53D6\u503C\u3002\u5F53 range \u4E3A false \u65F6\uFF0C\u4F7F\u7528 number\uFF0C\u5426\u5219\u7528 [number, number]| number|number[]| |  |\n| vertical| \u503C\u4E3A true \u65F6\uFF0CSlider \u4E3A\u5782\u76F4\u65B9\u5411| Boolean| false|  |\n| tipFormatter| Slider \u4F1A\u628A\u5F53\u524D\u503C\u4F20\u7ED9 tipFormatter\uFF0C\u5E76\u5728 Tooltip \u4E2D\u663E\u793A tipFormatter \u7684\u8FD4\u56DE\u503C\uFF0C\u82E5\u4E3A null\uFF0C\u5219\u9690\u85CF Tooltip\u3002| Function|null| IDENTITY|  |\n| tooltipPlacement| \u8BBE\u7F6E Tooltip \u5C55\u793A\u4F4D\u7F6E\u3002\u53C2\u8003 Tooltip\u3002| string| | 1.5.0 |\n| tooltipOpen| \u503C\u4E3Atrue\u65F6\uFF0CTooltip \u5C06\u4F1A\u59CB\u7EC8\u663E\u793A\uFF1B\u5426\u5219\u59CB\u7EC8\u4E0D\u663E\u793A\uFF0C\u54EA\u6015\u5728\u62D6\u62FD\u53CA\u79FB\u5165\u65F6\u3002| Boolean| | 4.0 |\n| getTooltipPopupContainer| Tooltip \u6E32\u67D3\u7236\u8282\u70B9\uFF0C\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\u3002| Function| () => document.body| 1.5.0 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570|  |\n| :--- | :--- | :--- | :--- |\n| change| \u5F53 Slider \u7684\u503C\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u4F1A\u89E6\u53D1 change \u4E8B\u4EF6\uFF0C\u5E76\u628A\u6539\u53D8\u540E\u7684\u503C\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u3002| Function(value)| NOOP |\n| afterChange| \u4E0E mouseup \u89E6\u53D1\u65F6\u673A\u4E00\u81F4\uFF0C\u628A\u5F53\u524D\u503C\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u3002| Function(value)| NOOP |\n#### \u65B9\u6CD5\n\n| \u540D\u79F0| \u63CF\u8FF0 |\n| :--- | :--- |\n| blur()| \u79FB\u9664\u7126\u70B9 |\n| focus()| \u83B7\u53D6\u7126\u70B9 |\n",
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u81EA\u52A8\u83B7\u53D6\u7126\u70B9"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u503C\u4E3A true \u65F6\uFF0C\u6ED1\u5757\u4E3A\u7981\u7528\u72B6\u6001"
          },
          "dots": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EA\u80FD\u62D6\u62FD\u5230\u523B\u5EA6\u4E0A"
          },
          "included": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "marks \u4E0D\u4E3A\u7A7A\u5BF9\u8C61\u65F6\u6709\u6548\uFF0C\u503C\u4E3A true \u65F6\u8868\u793A\u503C\u4E3A\u5305\u542B\u5173\u7CFB\uFF0Cfalse \u8868\u793A\u5E76\u5217"
          },
          "mark": {
            "type": "attr",
            "values": ["v-slot:mark"],
            "description": "\u81EA\u5B9A\u4E49\u523B\u5EA6\u6807\u8BB0"
          },
          "marks": {
            "type": "attr",
            "values": ["object"],
            "description": "\u523B\u5EA6\u6807\u8BB0\uFF0Ckey \u7684\u7C7B\u578B\u5FC5\u987B\u4E3A number \u4E14\u53D6\u503C\u5728\u95ED\u533A\u95F4 [min, max] \u5185\uFF0C\u6BCF\u4E2A\u6807\u7B7E\u53EF\u4EE5\u5355\u72EC\u8BBE\u7F6E\u6837\u5F0F"
          },
          "max": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u5927\u503C"
          },
          "min": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u5C0F\u503C"
          },
          "range": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u53CC\u6ED1\u5757\u6A21\u5F0F"
          },
          "reverse": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u53CD\u5411\u5750\u6807\u8F74"
          },
          "step": {
            "type": "attr",
            "values": ["number|null"],
            "description": "\u6B65\u957F\uFF0C\u53D6\u503C\u5FC5\u987B\u5927\u4E8E 0\uFF0C\u5E76\u4E14\u53EF\u88AB (max - min) \u6574\u9664\u3002\u5F53 marks \u4E0D\u4E3A\u7A7A\u5BF9\u8C61\u65F6\uFF0C\u53EF\u4EE5\u8BBE\u7F6E step \u4E3A null\uFF0C\u6B64\u65F6 Slider \u7684\u53EF\u9009\u503C\u4EC5\u6709 marks \u6807\u51FA\u6765\u7684\u90E8\u5206\u3002"
          },
          "v-model:value": {
            "type": "attr",
            "values": ["number|number[]"],
            "description": "\u8BBE\u7F6E\u5F53\u524D\u53D6\u503C\u3002\u5F53 range \u4E3A false \u65F6\uFF0C\u4F7F\u7528 number\uFF0C\u5426\u5219\u7528 [number, number]"
          },
          "vertical": {
            "type": "attr",
            "values": ["Boolean"],
            "description": "\u503C\u4E3A true \u65F6\uFF0CSlider \u4E3A\u5782\u76F4\u65B9\u5411"
          },
          "tipFormatter": {
            "type": "attr",
            "values": ["Function|null"],
            "description": "Slider \u4F1A\u628A\u5F53\u524D\u503C\u4F20\u7ED9 tipFormatter\uFF0C\u5E76\u5728 Tooltip \u4E2D\u663E\u793A tipFormatter \u7684\u8FD4\u56DE\u503C\uFF0C\u82E5\u4E3A null\uFF0C\u5219\u9690\u85CF Tooltip\u3002"
          },
          "tooltipPlacement": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E Tooltip \u5C55\u793A\u4F4D\u7F6E\u3002\u53C2\u8003 Tooltip\u3002"
          },
          "tooltipOpen": {
            "type": "attr",
            "values": ["Boolean"],
            "description": "\u503C\u4E3Atrue\u65F6\uFF0CTooltip \u5C06\u4F1A\u59CB\u7EC8\u663E\u793A\uFF1B\u5426\u5219\u59CB\u7EC8\u4E0D\u663E\u793A\uFF0C\u54EA\u6015\u5728\u62D6\u62FD\u53CA\u79FB\u5165\u65F6\u3002"
          },
          "getTooltipPopupContainer": {
            "type": "attr",
            "values": ["Function"],
            "description": "Tooltip \u6E32\u67D3\u7236\u8282\u70B9\uFF0C\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\u3002"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5F53 Slider \u7684\u503C\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u4F1A\u89E6\u53D1 change \u4E8B\u4EF6\uFF0C\u5E76\u628A\u6539\u53D8\u540E\u7684\u503C\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u3002"
          },
          "afterChange": {
            "type": "event",
            "values": [],
            "description": "\u4E0E mouseup \u89E6\u53D1\u65F6\u673A\u4E00\u81F4\uFF0C\u628A\u5F53\u524D\u503C\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u3002"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          }
        },
        "a-switch": {
          "_html": {
            "": '<a-switch v-model:checked="${1:checked}">$2</a-switch>',
            ":self": '<a-switch v-model:checked="${1:checked}" checked-children="${2:\u5F00}" un-checked-children="${3:\u5173}" checked-value="$4" un-checked-value="$5">$6</a-switch>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/switch-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| autofocus| \u7EC4\u4EF6\u81EA\u52A8\u83B7\u53D6\u7126\u70B9| boolean| false|  |\n| checked(v-model)| \u6307\u5B9A\u5F53\u524D\u662F\u5426\u9009\u4E2D| checkedValue | unCheckedValue| false|  |\n| checkedChildren| \u9009\u4E2D\u65F6\u7684\u5185\u5BB9| string|slot| |  |\n| checkedValue| \u9009\u4E2D\u65F6\u7684\u503C| boolean | string | number| true| 2.2.1 |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false|  |\n| loading| \u52A0\u8F7D\u4E2D\u7684\u5F00\u5173| boolean| false|  |\n| size| \u5F00\u5173\u5927\u5C0F\uFF0C\u53EF\u9009\u503C\uFF1Adefault small| string| default|  |\n| unCheckedChildren| \u975E\u9009\u4E2D\u65F6\u7684\u5185\u5BB9| string|slot| |  |\n| unCheckedValue| \u975E\u9009\u4E2D\u65F6\u7684\u503C| boolean | string | number| false| 2.2.1 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570|  |\n| :--- | :--- | :--- | :--- |\n| change| \u53D8\u5316\u65F6\u56DE\u8C03\u51FD\u6570| Function(checked: boolean | string | number, event: Event)|  |\n| click| \u70B9\u51FB\u65F6\u56DE\u8C03\u51FD\u6570| Function(checked: boolean | string | number, event: Event)|  |\n#### \u65B9\u6CD5\n\n| \u540D\u79F0| \u63CF\u8FF0 |\n| :--- | :--- |\n| blur()| \u79FB\u9664\u7126\u70B9 |\n| focus()| \u83B7\u53D6\u7126\u70B9 |\n",
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7EC4\u4EF6\u81EA\u52A8\u83B7\u53D6\u7126\u70B9"
          },
          "v-model:checked": {
            "type": "attr",
            "values": ["checkedValue", "unCheckedValue"],
            "description": "\u6307\u5B9A\u5F53\u524D\u662F\u5426\u9009\u4E2D"
          },
          "checkedChildren": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u9009\u4E2D\u65F6\u7684\u5185\u5BB9"
          },
          "checkedValue": {
            "type": "attr",
            "values": ["boolean", "string", "number"],
            "description": "\u9009\u4E2D\u65F6\u7684\u503C"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u52A0\u8F7D\u4E2D\u7684\u5F00\u5173"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u5F00\u5173\u5927\u5C0F\uFF0C\u53EF\u9009\u503C\uFF1Adefault small"
          },
          "unCheckedChildren": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u975E\u9009\u4E2D\u65F6\u7684\u5185\u5BB9"
          },
          "unCheckedValue": {
            "type": "attr",
            "values": ["boolean", "string", "number"],
            "description": "\u975E\u9009\u4E2D\u65F6\u7684\u503C"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u53D8\u5316\u65F6\u56DE\u8C03\u51FD\u6570"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u65F6\u56DE\u8C03\u51FD\u6570"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          }
        },
        "a-time-picker": {
          "_html": {
            "": '<a-time-picker v-model:value="value"></a-time-picker>',
            ":use12-hours": '<a-time-picker v-model:value="value" use12-hours></a-time-picker>',
            ":renderExtraFooter[slot]": '<template #renderExtraFooter="{ prefixCls }">\n$1\n</template>',
            ":clearIcon[slot]": "<template #clearIcon>\n$1\n</template>",
            ":suffixIcon[slot]": "<template #suffixIcon>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/time-picker-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| allowClear| \u662F\u5426\u5C55\u793A\u6E05\u9664\u6309\u94AE| boolean| true|  |\n| autofocus| \u81EA\u52A8\u83B7\u53D6\u7126\u70B9| boolean| false|  |\n| bordered| \u662F\u5426\u6709\u8FB9\u6846| boolean| true|  |\n| clearIcon| \u81EA\u5B9A\u4E49\u7684\u6E05\u9664\u56FE\u6807| v-slot:clearIcon| -|  |\n| clearText| \u6E05\u9664\u6309\u94AE\u7684\u63D0\u793A\u6587\u6848| string| clear|  |\n| disabled| \u7981\u7528\u5168\u90E8\u64CD\u4F5C| boolean| false|  |\n| disabledTime| \u4E0D\u53EF\u9009\u62E9\u7684\u65F6\u95F4| DisabledTime| -| 3.3.0 |\n| format| \u5C55\u793A\u7684\u65F6\u95F4\u683C\u5F0F| string| HH:mm:ss|  |\n| getPopupContainer| \u5B9A\u4E49\u6D6E\u5C42\u7684\u5BB9\u5668\uFF0C\u9ED8\u8BA4\u4E3A body \u4E0A\u65B0\u5EFA div| function(trigger)| -|  |\n| hideDisabledOptions| \u9690\u85CF\u7981\u6B62\u9009\u62E9\u7684\u9009\u9879| boolean| false|  |\n| hourStep| \u5C0F\u65F6\u9009\u9879\u95F4\u9694| number| 1|  |\n| inputReadOnly| \u8BBE\u7F6E\u8F93\u5165\u6846\u4E3A\u53EA\u8BFB\uFF08\u907F\u514D\u5728\u79FB\u52A8\u8BBE\u5907\u4E0A\u6253\u5F00\u865A\u62DF\u952E\u76D8\uFF09| boolean| false|  |\n| minuteStep| \u5206\u949F\u9009\u9879\u95F4\u9694| number| 1|  |\n| open(v-model)| \u9762\u677F\u662F\u5426\u6253\u5F00| boolean| false|  |\n| placeholder| \u6CA1\u6709\u503C\u7684\u65F6\u5019\u663E\u793A\u7684\u5185\u5BB9| string | [string, string]| \u8BF7\u9009\u62E9\u65F6\u95F4|  |\n| placement| \u9009\u62E9\u6846\u5F39\u51FA\u7684\u4F4D\u7F6E| bottomLeft bottomRight topLeft topRight| bottomLeft|  |\n| popupClassName| \u5F39\u51FA\u5C42\u7C7B\u540D| string| -|  |\n| popupStyle| \u5F39\u51FA\u5C42\u6837\u5F0F\u5BF9\u8C61| object| -|  |\n| renderExtraFooter| \u9009\u62E9\u6846\u5E95\u90E8\u663E\u793A\u81EA\u5B9A\u4E49\u7684\u5185\u5BB9| v-slot:renderExtraFooter| -|  |\n| secondStep| \u79D2\u9009\u9879\u95F4\u9694| number| 1|  |\n| showNow| \u9762\u677F\u662F\u5426\u663E\u793A\u201C\u6B64\u523B\u201D\u6309\u94AE| boolean| -|  |\n| status| \u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001| 'error' | 'warning'| -| 3.3.0 |\n| suffixIcon| \u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u540E\u7F00\u56FE\u6807| v-slot:suffixIcon| -|  |\n| use12Hours| \u4F7F\u7528 12 \u5C0F\u65F6\u5236\uFF0C\u4E3A true \u65F6 format \u9ED8\u8BA4\u4E3A h:mm:ss a| boolean| false|  |\n| value(v-model)| \u5F53\u524D\u65F6\u95F4| dayjs| -|  |\n| valueFormat| \u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\uFF0C\u5BF9 value\u3001defaultValue \u8D77\u4F5C\u7528\u3002\u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A dayjs \u5BF9\u8C61| string\uFF0C\u5177\u4F53\u683C\u5F0F| -|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change| \u65F6\u95F4\u53D1\u751F\u53D8\u5316\u7684\u56DE\u8C03| function(time: dayjs | string, timeString: string): void |\n| openChange| \u9762\u677F\u6253\u5F00/\u5173\u95ED\u65F6\u7684\u56DE\u8C03| (open: boolean): void |\n#### \u65B9\u6CD5\n\n| \u540D\u79F0| \u63CF\u8FF0 |\n| :--- | :--- |\n| blur()| \u79FB\u9664\u7126\u70B9 |\n| focus()| \u83B7\u53D6\u7126\u70B9 |\n",
          "allowClear": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u6E05\u9664\u6309\u94AE"
          },
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u81EA\u52A8\u83B7\u53D6\u7126\u70B9"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6709\u8FB9\u6846"
          },
          "clearIcon": {
            "type": "attr",
            "values": ["v-slot:clearIcon"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u6E05\u9664\u56FE\u6807"
          },
          "clearText": {
            "type": "attr",
            "values": [],
            "description": "\u6E05\u9664\u6309\u94AE\u7684\u63D0\u793A\u6587\u6848"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u7528\u5168\u90E8\u64CD\u4F5C"
          },
          "disabledTime": {
            "type": "attr",
            "values": ["DisabledTime"],
            "description": "\u4E0D\u53EF\u9009\u62E9\u7684\u65F6\u95F4"
          },
          "format": {
            "type": "attr",
            "values": [],
            "description": "\u5C55\u793A\u7684\u65F6\u95F4\u683C\u5F0F"
          },
          "getPopupContainer": {
            "type": "attr",
            "values": ["function(trigger)"],
            "description": "\u5B9A\u4E49\u6D6E\u5C42\u7684\u5BB9\u5668\uFF0C\u9ED8\u8BA4\u4E3A body \u4E0A\u65B0\u5EFA div"
          },
          "hideDisabledOptions": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9690\u85CF\u7981\u6B62\u9009\u62E9\u7684\u9009\u9879"
          },
          "hourStep": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5C0F\u65F6\u9009\u9879\u95F4\u9694"
          },
          "inputReadOnly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u8F93\u5165\u6846\u4E3A\u53EA\u8BFB\uFF08\u907F\u514D\u5728\u79FB\u52A8\u8BBE\u5907\u4E0A\u6253\u5F00\u865A\u62DF\u952E\u76D8\uFF09"
          },
          "minuteStep": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5206\u949F\u9009\u9879\u95F4\u9694"
          },
          "v-model:open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9762\u677F\u662F\u5426\u6253\u5F00"
          },
          "placeholder": {
            "type": "attr",
            "values": ["string", "[string, string]"],
            "description": "\u6CA1\u6709\u503C\u7684\u65F6\u5019\u663E\u793A\u7684\u5185\u5BB9"
          },
          "placement": {
            "type": "attr",
            "values": ["bottomLeft bottomRight topLeft topRight"],
            "description": "\u9009\u62E9\u6846\u5F39\u51FA\u7684\u4F4D\u7F6E"
          },
          "popupClassName": {
            "type": "attr",
            "values": [],
            "description": "\u5F39\u51FA\u5C42\u7C7B\u540D"
          },
          "popupStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "\u5F39\u51FA\u5C42\u6837\u5F0F\u5BF9\u8C61"
          },
          "renderExtraFooter": {
            "type": "attr",
            "values": ["v-slot:renderExtraFooter"],
            "description": "\u9009\u62E9\u6846\u5E95\u90E8\u663E\u793A\u81EA\u5B9A\u4E49\u7684\u5185\u5BB9"
          },
          "secondStep": {
            "type": "attr",
            "values": ["number"],
            "description": "\u79D2\u9009\u9879\u95F4\u9694"
          },
          "showNow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9762\u677F\u662F\u5426\u663E\u793A\u201C\u6B64\u523B\u201D\u6309\u94AE"
          },
          "status": {
            "type": "attr",
            "values": ["'error'", "'warning'"],
            "description": "\u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001"
          },
          "suffixIcon": {
            "type": "attr",
            "values": ["v-slot:suffixIcon"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u540E\u7F00\u56FE\u6807"
          },
          "useHours": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4F7F\u7528 12 \u5C0F\u65F6\u5236\uFF0C\u4E3A true \u65F6 format \u9ED8\u8BA4\u4E3A h:mm:ss a"
          },
          "v-model:value": {
            "type": "attr",
            "values": ["dayjs"],
            "description": "\u5F53\u524D\u65F6\u95F4"
          },
          "valueFormat": {
            "type": "attr",
            "values": ["string\uFF0C\u5177\u4F53\u683C\u5F0F"],
            "description": "\u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\uFF0C\u5BF9 value\u3001defaultValue \u8D77\u4F5C\u7528\u3002\u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A dayjs \u5BF9\u8C61"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u65F6\u95F4\u53D1\u751F\u53D8\u5316\u7684\u56DE\u8C03"
          },
          "openChange": {
            "type": "event",
            "values": [],
            "description": "\u9762\u677F\u6253\u5F00/\u5173\u95ED\u65F6\u7684\u56DE\u8C03"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          }
        },
        "a-time-range-picker": {
          "_html": {
            "": '<a-time-range-picker v-model:value="${1:value}"></a-time-range-picker>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/time-picker-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| order| \u59CB\u672B\u65F6\u95F4\u662F\u5426\u81EA\u52A8\u6392\u5E8F| boolean| true|  |\n| disabledTime| \u4E0D\u53EF\u9009\u62E9\u7684\u65F6\u95F4| RangeDisabledTime| -| 3.3.0 |\n",
          "order": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u59CB\u672B\u65F6\u95F4\u662F\u5426\u81EA\u52A8\u6392\u5E8F"
          },
          "disabledTime": {
            "type": "attr",
            "values": ["RangeDisabledTime"],
            "description": "\u4E0D\u53EF\u9009\u62E9\u7684\u65F6\u95F4"
          }
        },
        "a-transfer": {
          "_html": {
            "": `<a-transfer
v-model:target-keys="\${1:targetKeys}"
v-model:selected-keys="\${2:selectedKeys}"
:data-source="\${3:dataSource}"
:titles="['Source', 'Target']"
:render="item => item.title"
@change="handleChange"
@selectChange="handleSelectChange"
></a-transfer>`,
            ":show-search": `<a-transfer
v-model:target-keys="\${1:targetKeys}"
v-model:selected-keys="\${2:selectedKeys}"
:data-source="\${3:dataSource}"
show-search
:titles="['Source', 'Target']"
:render="item => item.title"
@change="handleChange"
@selectChange="handleSelectChange"
></a-transfer>`
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/transfer-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| dataSource| \u6570\u636E\u6E90\uFF0C\u5176\u4E2D\u7684\u6570\u636E\u5C06\u4F1A\u88AB\u6E32\u67D3\u5230\u5DE6\u8FB9\u4E00\u680F\u4E2D\uFF0CtargetKeys \u4E2D\u6307\u5B9A\u7684\u9664\u5916\u3002| [{key: string.isRequired,title: string.isRequired,description: string,disabled: bool}][]| []|  |
| disabled| \u662F\u5426\u7981\u7528| boolean| false|  |
| filterOption| \u63A5\u6536 inputValue option \u4E24\u4E2A\u53C2\u6570\uFF0C\u5F53 option \u7B26\u5408\u7B5B\u9009\u6761\u4EF6\u65F6\uFF0C\u5E94\u8FD4\u56DE true\uFF0C\u53CD\u4E4B\u5219\u8FD4\u56DE false\u3002| (inputValue, option): boolean| |  |
| footer| \u53EF\u4EE5\u8BBE\u7F6E\u4E3A\u4E00\u4E2A \u4F5C\u7528\u57DF\u63D2\u69FD| slot="footer" slot-scope="props"| |  |
| listStyle| \u4E24\u4E2A\u7A7F\u68AD\u6846\u7684\u81EA\u5B9A\u4E49\u6837\u5F0F| CSSProperties| |  |
| locale| \u5404\u79CD\u8BED\u8A00| object| { itemUnit: '\u9879', itemsUnit: '\u9879', notFoundContent: '\u5217\u8868\u4E3A\u7A7A', searchPlaceholder: '\u8BF7\u8F93\u5165\u641C\u7D22\u5185\u5BB9' }|  |
| oneWay| \u5C55\u793A\u4E3A\u5355\u5411\u6837\u5F0F| boolean| false| 3.0.0 |
| operations| \u64CD\u4F5C\u6587\u6848\u96C6\u5408\uFF0C\u987A\u5E8F\u4ECE\u4E0A\u81F3\u4E0B| string[]| ['>', '<']|  |
| operationStyle| \u64CD\u4F5C\u680F\u7684\u81EA\u5B9A\u4E49\u6837\u5F0F| CSSProperties| -| 3.0.0 |
| pagination| \u4F7F\u7528\u5206\u9875\u6837\u5F0F\uFF0C\u81EA\u5B9A\u4E49\u6E32\u67D3\u5217\u8868\u4E0B\u65E0\u6548| boolean | { pageSize: number, simple: boolean, showSizeChanger?: boolean, showLessItems?: boolean }| flase| 3.0.0 |
| render| \u6BCF\u884C\u6570\u636E\u6E32\u67D3\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u7684\u5165\u53C2\u4E3A dataSource \u4E2D\u7684\u9879\uFF0C\u8FD4\u56DE\u503C\u4E3A element\u3002\u6216\u8005\u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\uFF0C\u5176\u4E2D label \u5B57\u6BB5\u4E3A element\uFF0Cvalue \u5B57\u6BB5\u4E3A title| Function(record)| slot| |  |
| selectAllLabels| \u81EA\u5B9A\u4E49\u9876\u90E8\u591A\u9009\u6846\u6807\u9898\u7684\u96C6\u5408| VueNode | ((info: { selectedCount: number; totalCount: number }) => VueNode);| -| 3.0.0 |
| selectedKeys(v-model)| \u8BBE\u7F6E\u54EA\u4E9B\u9879\u5E94\u8BE5\u88AB\u9009\u4E2D| string[]| []|  |
| showSearch| \u662F\u5426\u663E\u793A\u641C\u7D22\u6846| boolean| false|  |
| showSelectAll| \u662F\u5426\u5C55\u793A\u5168\u9009\u52FE\u9009\u6846| boolean| true|  |
| status| \u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001| 'error' | 'warning'| -| 3.3.0 |
| targetKeys(v-model)| \u663E\u793A\u5728\u53F3\u4FA7\u6846\u6570\u636E\u7684 key \u96C6\u5408| string[]| []|  |
| titles| \u6807\u9898\u96C6\u5408\uFF0C\u987A\u5E8F\u4ECE\u5DE6\u81F3\u53F3| string[]| ['', '']|  |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |
| :--- | :--- | :--- | :--- |
| change| \u9009\u9879\u5728\u4E24\u680F\u4E4B\u95F4\u8F6C\u79FB\u65F6\u7684\u56DE\u8C03\u51FD\u6570| (targetKeys, direction, moveKeys): void|  |
| scroll| \u9009\u9879\u5217\u8868\u6EDA\u52A8\u65F6\u7684\u56DE\u8C03\u51FD\u6570| (direction, event): void|  |
| search| \u641C\u7D22\u6846\u5185\u5BB9\u65F6\u6539\u53D8\u65F6\u7684\u56DE\u8C03\u51FD\u6570| (direction: 'left'|'right', value: string): void| - |
| selectChange| \u9009\u4E2D\u9879\u53D1\u751F\u6539\u53D8\u65F6\u7684\u56DE\u8C03\u51FD\u6570| (sourceSelectedKeys, targetSelectedKeys): void|  |
#### [](https://www.antdv.com/components/transfer-cn)#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u7248\u672C |
| :--- | :--- | :--- | :--- |
| direction| \u6E32\u67D3\u5217\u8868\u7684\u65B9\u5411| 'left' | 'right'|  |
| disabled| \u662F\u5426\u7981\u7528\u5217\u8868| boolean|  |
| filteredItems| \u8FC7\u6EE4\u540E\u7684\u6570\u636E| TransferItem[]|  |
| itemSelect| \u52FE\u9009\u6761\u76EE| (key: string, selected: boolean)|  |
| itemSelectAll| \u52FE\u9009\u4E00\u7EC4\u6761\u76EE| (keys: string[], selected: boolean)|  |
| selectedKeys| \u9009\u4E2D\u7684\u6761\u76EE| string[]|  |
`,
          "dataSource": {
            "type": "attr",
            "values": [],
            "description": "\u6570\u636E\u6E90\uFF0C\u5176\u4E2D\u7684\u6570\u636E\u5C06\u4F1A\u88AB\u6E32\u67D3\u5230\u5DE6\u8FB9\u4E00\u680F\u4E2D\uFF0CtargetKeys \u4E2D\u6307\u5B9A\u7684\u9664\u5916\u3002"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528\u5217\u8868"
          },
          "filterOption": {
            "type": "attr",
            "values": ["(inputValue, option): boolean"],
            "description": "\u63A5\u6536 inputValue option \u4E24\u4E2A\u53C2\u6570\uFF0C\u5F53 option \u7B26\u5408\u7B5B\u9009\u6761\u4EF6\u65F6\uFF0C\u5E94\u8FD4\u56DE true\uFF0C\u53CD\u4E4B\u5219\u8FD4\u56DE false\u3002"
          },
          "footer": {
            "type": "attr",
            "values": ['slot="footer" slot-scope="props"'],
            "description": "\u53EF\u4EE5\u8BBE\u7F6E\u4E3A\u4E00\u4E2A \u4F5C\u7528\u57DF\u63D2\u69FD"
          },
          "listStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u4E24\u4E2A\u7A7F\u68AD\u6846\u7684\u81EA\u5B9A\u4E49\u6837\u5F0F"
          },
          "locale": {
            "type": "attr",
            "values": ["object"],
            "description": "\u5404\u79CD\u8BED\u8A00"
          },
          "oneWay": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5C55\u793A\u4E3A\u5355\u5411\u6837\u5F0F"
          },
          "operations": {
            "type": "attr",
            "values": ["string[]"],
            "description": "\u64CD\u4F5C\u6587\u6848\u96C6\u5408\uFF0C\u987A\u5E8F\u4ECE\u4E0A\u81F3\u4E0B"
          },
          "operationStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u64CD\u4F5C\u680F\u7684\u81EA\u5B9A\u4E49\u6837\u5F0F"
          },
          "pagination": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4F7F\u7528\u5206\u9875\u6837\u5F0F\uFF0C\u81EA\u5B9A\u4E49\u6E32\u67D3\u5217\u8868\u4E0B\u65E0\u6548"
          },
          "render": {
            "type": "attr",
            "values": ["Function(record)| slot"],
            "description": "\u6BCF\u884C\u6570\u636E\u6E32\u67D3\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u7684\u5165\u53C2\u4E3A dataSource \u4E2D\u7684\u9879\uFF0C\u8FD4\u56DE\u503C\u4E3A element\u3002\u6216\u8005\u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\uFF0C\u5176\u4E2D label \u5B57\u6BB5\u4E3A element\uFF0Cvalue \u5B57\u6BB5\u4E3A title"
          },
          "selectAllLabels": {
            "type": "attr",
            "values": ["VueNode"],
            "description": "\u81EA\u5B9A\u4E49\u9876\u90E8\u591A\u9009\u6846\u6807\u9898\u7684\u96C6\u5408"
          },
          "v-model:selectedKeys": {
            "type": "attr",
            "values": ["string[]"],
            "description": "\u8BBE\u7F6E\u54EA\u4E9B\u9879\u5E94\u8BE5\u88AB\u9009\u4E2D"
          },
          "showSearch": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u641C\u7D22\u6846"
          },
          "showSelectAll": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u5168\u9009\u52FE\u9009\u6846"
          },
          "status": {
            "type": "attr",
            "values": ["'error'", "'warning'"],
            "description": "\u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001"
          },
          "v-model:targetKeys": {
            "type": "attr",
            "values": ["string[]"],
            "description": "\u663E\u793A\u5728\u53F3\u4FA7\u6846\u6570\u636E\u7684 key \u96C6\u5408"
          },
          "titles": {
            "type": "attr",
            "values": ["string[]"],
            "description": "\u6807\u9898\u96C6\u5408\uFF0C\u987A\u5E8F\u4ECE\u5DE6\u81F3\u53F3"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u9009\u9879\u5728\u4E24\u680F\u4E4B\u95F4\u8F6C\u79FB\u65F6\u7684\u56DE\u8C03\u51FD\u6570"
          },
          "scroll": {
            "type": "event",
            "values": [],
            "description": "\u9009\u9879\u5217\u8868\u6EDA\u52A8\u65F6\u7684\u56DE\u8C03\u51FD\u6570"
          },
          "search": {
            "type": "event",
            "values": [],
            "description": "\u641C\u7D22\u6846\u5185\u5BB9\u65F6\u6539\u53D8\u65F6\u7684\u56DE\u8C03\u51FD\u6570"
          },
          "selectChange": {
            "type": "event",
            "values": [],
            "description": "\u9009\u4E2D\u9879\u53D1\u751F\u6539\u53D8\u65F6\u7684\u56DE\u8C03\u51FD\u6570"
          },
          "direction": {
            "type": "attr",
            "values": ["'left'", "'right'"],
            "description": "\u6E32\u67D3\u5217\u8868\u7684\u65B9\u5411"
          },
          "filteredItems": {
            "type": "attr",
            "values": ["TransferItem[]"],
            "description": "\u8FC7\u6EE4\u540E\u7684\u6570\u636E"
          },
          "itemSelect": {
            "type": "attr",
            "values": ["(key: string, selected: boolean)"],
            "description": "\u52FE\u9009\u6761\u76EE"
          },
          "itemSelectAll": {
            "type": "attr",
            "values": ["(keys: string[], selected: boolean)"],
            "description": "\u52FE\u9009\u4E00\u7EC4\u6761\u76EE"
          },
          "selectedKeys": {
            "type": "attr",
            "values": ["string[]"],
            "description": "\u9009\u4E2D\u7684\u6761\u76EE"
          }
        },
        "a-tree-select": {
          "_html": {
            "": '<a-tree-select\nv-model:value="value"\nshow-search\nplaceholder="Please select"\nallow-clear\ntree-default-expand-all\n:tree-data="treeData"\ntree-node-filter-prop="label"\n>\n<template #title="{ value: val, label }">\n$1\n</template>\n</a-tree-select>',
            ":tree-checkable": '<a-tree-select\nv-model:value="value"\nshow-search\nplaceholder="Please select"\ntree-checkable\nallow-clear\ntree-default-expand-all\n:tree-data="treeData"\ntree-node-filter-prop="label"\n>\n<template #title="{ value: val, label }">\n$1\n</template>\n</a-tree-select>',
            ":suffixIcon[slot]": "<template #suffixIcon>\n$1\n</template>",
            ":load-data": '<a-tree-select\nv-model:value="value"\ntree-data-simple-mode\n:tree-data="treeData"\nplaceholder="Please select"\n:load-data="onLoadData"\n></a-tree-select>',
            ":tagRender[slot]": '<template #tagRender="{ label, closable, onClose, option }">\n$1\n</template>',
            ":title[slot]": '<template #title="{ value: val, label }">\n$1\n</template>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/tree-select-cn)
#### \u5C5E\u6027
#### [](https://www.antdv.com/components/tree-select-cn)#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C|  |
| :--- | :--- | :--- | :--- | :--- | :--- |
| allowClear| \u663E\u793A\u6E05\u9664\u6309\u94AE| boolean| false| |  |
| defaultValue| \u6307\u5B9A\u9ED8\u8BA4\u9009\u4E2D\u7684\u6761\u76EE| string/string[]| -| |  |
| disabled| \u662F\u5426\u7981\u7528| boolean| false| |  |
| popupClassName| \u4E0B\u62C9\u83DC\u5355\u7684 className \u5C5E\u6027| string| -| | 4.0 |
| dropdownMatchSelectWidth| \u4E0B\u62C9\u83DC\u5355\u548C\u9009\u62E9\u5668\u540C\u5BBD\u3002\u9ED8\u8BA4\u5C06\u8BBE\u7F6E min-width\uFF0C\u5F53\u503C\u5C0F\u4E8E\u9009\u62E9\u6846\u5BBD\u5EA6\u65F6\u4F1A\u88AB\u5FFD\u7565\u3002false \u65F6\u4F1A\u5173\u95ED\u865A\u62DF\u6EDA\u52A8| boolean | number| true| |  |
| dropdownStyle| \u4E0B\u62C9\u83DC\u5355\u7684\u6837\u5F0F| object| -| |  |
| fieldNames| \u66FF\u6362 treeNode \u4E2D label,value,children \u5B57\u6BB5\u4E3A treeData \u4E2D\u5BF9\u5E94\u7684\u5B57\u6BB5| object| {children:'children', label:'title', value: 'value' }| | 3.0.0 |
| filterTreeNode| \u662F\u5426\u6839\u636E\u8F93\u5165\u9879\u8FDB\u884C\u7B5B\u9009\uFF0C\u9ED8\u8BA4\u7528 treeNodeFilterProp \u7684\u503C\u4F5C\u4E3A\u8981\u7B5B\u9009\u7684 TreeNode \u7684\u5C5E\u6027\u503C| boolean|Function(inputValue: string, treeNode: TreeNode) (\u51FD\u6570\u9700\u8981\u8FD4\u56DE bool \u503C)| Function| |  |
| getPopupContainer| \u83DC\u5355\u6E32\u67D3\u7236\u8282\u70B9\u3002\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\uFF0C\u5982\u679C\u4F60\u9047\u5230\u83DC\u5355\u6EDA\u52A8\u5B9A\u4F4D\u95EE\u9898\uFF0C\u8BD5\u8BD5\u4FEE\u6539\u4E3A\u6EDA\u52A8\u7684\u533A\u57DF\uFF0C\u5E76\u76F8\u5BF9\u5176\u5B9A\u4F4D\u3002| Function(triggerNode)| () => document.body| |  |
| labelInValue| \u662F\u5426\u628A\u6BCF\u4E2A\u9009\u9879\u7684 label \u5305\u88C5\u5230 value \u4E2D\uFF0C\u4F1A\u628A value \u7C7B\u578B\u4ECE string \u53D8\u4E3A {value: string, label: VNode, halfChecked(treeCheckStrictly \u65F6\u6709\u6548): string[] } \u7684\u683C\u5F0F| boolean| false| |  |
| listHeight| \u8BBE\u7F6E\u5F39\u7A97\u6EDA\u52A8\u9AD8\u5EA6| number| 256| |  |
| loadData| \u5F02\u6B65\u52A0\u8F7D\u6570\u636E| function(node)| -| |  |
| maxTagCount| \u6700\u591A\u663E\u793A\u591A\u5C11\u4E2A tag| number| -| |  |
| maxTagPlaceholder| \u9690\u85CF tag \u65F6\u663E\u793A\u7684\u5185\u5BB9| slot/function(omittedValues)| -| |  |
| multiple| \u652F\u6301\u591A\u9009\uFF08\u5F53\u8BBE\u7F6E treeCheckable \u65F6\u81EA\u52A8\u53D8\u4E3A true\uFF09| boolean| false| |  |
| notFoundContent| \u5F53\u4E0B\u62C9\u5217\u8868\u4E3A\u7A7A\u65F6\u663E\u793A\u7684\u5185\u5BB9| slot| Not Found| |  |
| placeholder| \u9009\u62E9\u6846\u9ED8\u8BA4\u6587\u5B57| string|slot| -| |  |
| placement| \u9009\u62E9\u6846\u5F39\u51FA\u7684\u4F4D\u7F6E| bottomLeft bottomRight topLeft topRight| bottomLeft| 3.3.0|  |
| replaceFields| \u66FF\u6362 treeNode \u4E2D label,value,key,children \u5B57\u6BB5\u4E3A treeData \u4E2D\u5BF9\u5E94\u7684\u5B57\u6BB5| object| {children:'children', label:'title', key:'key', value: 'value' }| | 1.6.1 (3.0.0 \u5E9F\u5F03) |
| searchPlaceholder| \u641C\u7D22\u6846\u9ED8\u8BA4\u6587\u5B57| string|slot| -| |  |
| searchValue(v-model)| \u641C\u7D22\u6846\u7684\u503C\uFF0C\u53EF\u4EE5\u901A\u8FC7 search \u4E8B\u4EF6\u83B7\u53D6\u7528\u6237\u8F93\u5165| string| -| |  |
| showCheckedStrategy| \u5B9A\u4E49\u9009\u4E2D\u9879\u56DE\u586B\u7684\u65B9\u5F0F\u3002TreeSelect.SHOW_ALL: \u663E\u793A\u6240\u6709\u9009\u4E2D\u8282\u70B9(\u5305\u62EC\u7236\u8282\u70B9). TreeSelect.SHOW_PARENT: \u53EA\u663E\u793A\u7236\u8282\u70B9(\u5F53\u7236\u8282\u70B9\u4E0B\u6240\u6709\u5B50\u8282\u70B9\u90FD\u9009\u4E2D\u65F6). \u9ED8\u8BA4\u53EA\u663E\u793A\u5B50\u8282\u70B9.| enum{TreeSelect.SHOW_ALL, TreeSelect.SHOW_PARENT, TreeSelect.SHOW_CHILD }| TreeSelect.SHOW_CHILD| |  |
| showSearch| \u5728\u4E0B\u62C9\u4E2D\u663E\u793A\u641C\u7D22\u6846(\u4EC5\u5728\u5355\u9009\u6A21\u5F0F\u4E0B\u751F\u6548)| boolean| false| |  |
| size| \u9009\u62E9\u6846\u5927\u5C0F\uFF0C\u53EF\u9009 large small| string| 'default'| |  |
| status| \u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001| 'error' | 'warning'| -| 3.3.0|  |
| suffixIcon| \u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u540E\u7F00\u56FE\u6807| VNode | slot| -| |  |
| tagRender| \u81EA\u5B9A\u4E49 tag \u5185\u5BB9\uFF0C\u591A\u9009\u65F6\u751F\u6548| slot| -| 3.0|  |
| title| \u81EA\u5B9A\u4E49\u6807\u9898| slot| | 3.0.0|  |
| treeCheckable| \u663E\u793A checkbox| boolean| false| |  |
| treeCheckStrictly| checkable \u72B6\u6001\u4E0B\u8282\u70B9\u9009\u62E9\u5B8C\u5168\u53D7\u63A7\uFF08\u7236\u5B50\u8282\u70B9\u9009\u4E2D\u72B6\u6001\u4E0D\u518D\u5173\u8054\uFF09\uFF0C\u4F1A\u4F7F\u5F97 labelInValue \u5F3A\u5236\u4E3A true| boolean| false| |  |
| treeData| treeNodes \u6570\u636E\uFF0C\u5982\u679C\u8BBE\u7F6E\u5219\u4E0D\u9700\u8981\u624B\u52A8\u6784\u9020 TreeNode \u8282\u70B9\uFF08value \u5728\u6574\u4E2A\u6811\u8303\u56F4\u5185\u552F\u4E00\uFF09| array<{value, label, children, [disabled, disableCheckbox, selectable]}>| []| |  |
| treeDataSimpleMode| \u4F7F\u7528\u7B80\u5355\u683C\u5F0F\u7684 treeData\uFF0C\u5177\u4F53\u8BBE\u7F6E\u53C2\u8003\u53EF\u8BBE\u7F6E\u7684\u7C7B\u578B (\u6B64\u65F6 treeData \u5E94\u53D8\u4E3A\u8FD9\u6837\u7684\u6570\u636E\u7ED3\u6784: [{id:1, pId:0, value:'1', label:"test1",...},...], pId \u662F\u7236\u8282\u70B9\u7684 id)| false|Array<{ id: string, pId: string, rootPId: null }>| false| |  |
| treeDefaultExpandAll| \u9ED8\u8BA4\u5C55\u5F00\u6240\u6709\u6811\u8282\u70B9| boolean| false| |  |
| treeDefaultExpandedKeys| \u9ED8\u8BA4\u5C55\u5F00\u7684\u6811\u8282\u70B9| string[] | number[]| -| |  |
| treeExpandedKeys(v-model)| \u8BBE\u7F6E\u5C55\u5F00\u7684\u6811\u8282\u70B9| string[] | number[]| -| |  |
| treeIcon| \u662F\u5426\u5C55\u793A TreeNode title \u524D\u7684\u56FE\u6807\uFF0C\u6CA1\u6709\u9ED8\u8BA4\u6837\u5F0F\uFF0C\u5982\u8BBE\u7F6E\u4E3A true\uFF0C\u9700\u8981\u81EA\u884C\u5B9A\u4E49\u56FE\u6807\u76F8\u5173\u6837\u5F0F| boolean| false| |  |
| treeLine| \u662F\u5426\u5C55\u793A\u7EBF\u6761\u6837\u5F0F\uFF0C\u8BF7\u53C2\u8003 Tree - showLine| boolean | object| false| 3.0|  |
| treeLoadedKeys| \uFF08\u53D7\u63A7\uFF09\u5DF2\u7ECF\u52A0\u8F7D\u7684\u8282\u70B9\uFF0C\u9700\u8981\u914D\u5408 loadData \u4F7F\u7528| string[]| []| 3.3.0|  |
| treeNodeFilterProp| \u8F93\u5165\u9879\u8FC7\u6EE4\u5BF9\u5E94\u7684 treeNode \u5C5E\u6027| string| 'value'| |  |
| treeNodeLabelProp| \u4F5C\u4E3A\u663E\u793A\u7684 prop \u8BBE\u7F6E| string| 'title'| |  |
| value(v-model)| \u6307\u5B9A\u5F53\u524D\u9009\u4E2D\u7684\u6761\u76EE| string/string[]| -| |  |
| virtual| \u8BBE\u7F6E false \u65F6\u5173\u95ED\u865A\u62DF\u6EDA\u52A8| boolean| true| 3.0|  |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |
| :--- | :--- | :--- | :--- |
| change| \u9009\u4E2D\u6811\u8282\u70B9\u65F6\u8C03\u7528\u6B64\u51FD\u6570| function(value, label, extra)|  |
| dropdownVisibleChange| \u5C55\u5F00\u4E0B\u62C9\u83DC\u5355\u7684\u56DE\u8C03| function(open)| 3.0 |
| search| \u6587\u672C\u6846\u503C\u53D8\u5316\u65F6\u56DE\u8C03| function(value: string)|  |
| select| \u88AB\u9009\u4E2D\u65F6\u8C03\u7528| function(value, node, extra)|  |
| treeExpand| \u5C55\u5F00\u8282\u70B9\u65F6\u8C03\u7528| function(expandedKeys)|  |
#### \u65B9\u6CD5

| \u540D\u79F0| \u63CF\u8FF0 |
| :--- | :--- |
| blur()| \u79FB\u9664\u7126\u70B9 |
| focus()| \u83B7\u53D6\u7126\u70B9 |
#### [](https://www.antdv.com/components/tree-select-cn)#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| checkable| \u5F53\u6811\u4E3A checkable \u65F6\uFF0C\u8BBE\u7F6E\u72EC\u7ACB\u8282\u70B9\u662F\u5426\u5C55\u793A Checkbox| boolean| -|  |
| disableCheckbox| \u7981\u6389 checkbox| boolean| false|  |
| disabled| \u662F\u5426\u7981\u7528| boolean| false|  |
| isLeaf| \u662F\u5426\u662F\u53F6\u5B50\u8282\u70B9| boolean| false|  |
| key| \u6B64\u9879\u5FC5\u987B\u8BBE\u7F6E\uFF08\u5176\u503C\u5728\u6574\u4E2A\u6811\u8303\u56F4\u5185\u552F\u4E00\uFF09| string | number| -|  |
| selectable| \u662F\u5426\u53EF\u9009| boolean| true|  |
| title| \u6811\u8282\u70B9\u663E\u793A\u7684\u5185\u5BB9| string|slot| '---'|  |
| value| \u9ED8\u8BA4\u6839\u636E\u6B64\u5C5E\u6027\u503C\u8FDB\u884C\u7B5B\u9009\uFF08\u5176\u503C\u5728\u6574\u4E2A\u6811\u8303\u56F4\u5185\u552F\u4E00\uFF09| string| -|  |
`,
          "allowClear": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u663E\u793A\u6E05\u9664\u6309\u94AE"
          },
          "defaultValue": {
            "type": "attr",
            "values": ["string/string[]"],
            "description": "\u6307\u5B9A\u9ED8\u8BA4\u9009\u4E2D\u7684\u6761\u76EE"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "popupClassName": {
            "type": "attr",
            "values": [],
            "description": "\u4E0B\u62C9\u83DC\u5355\u7684 className \u5C5E\u6027"
          },
          "dropdownMatchSelectWidth": {
            "type": "attr",
            "values": ["boolean", "number"],
            "description": "\u4E0B\u62C9\u83DC\u5355\u548C\u9009\u62E9\u5668\u540C\u5BBD\u3002\u9ED8\u8BA4\u5C06\u8BBE\u7F6E min-width\uFF0C\u5F53\u503C\u5C0F\u4E8E\u9009\u62E9\u6846\u5BBD\u5EA6\u65F6\u4F1A\u88AB\u5FFD\u7565\u3002false \u65F6\u4F1A\u5173\u95ED\u865A\u62DF\u6EDA\u52A8"
          },
          "dropdownStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "\u4E0B\u62C9\u83DC\u5355\u7684\u6837\u5F0F"
          },
          "fieldNames": {
            "type": "attr",
            "values": ["object"],
            "description": "\u66FF\u6362 treeNode \u4E2D label,value,children \u5B57\u6BB5\u4E3A treeData \u4E2D\u5BF9\u5E94\u7684\u5B57\u6BB5"
          },
          "filterTreeNode": {
            "type": "attr",
            "values": ["boolean|Function(inputValue: string, treeNode: TreeNode) (\u51FD\u6570\u9700\u8981\u8FD4\u56DE bool \u503C)"],
            "description": "\u662F\u5426\u6839\u636E\u8F93\u5165\u9879\u8FDB\u884C\u7B5B\u9009\uFF0C\u9ED8\u8BA4\u7528 treeNodeFilterProp \u7684\u503C\u4F5C\u4E3A\u8981\u7B5B\u9009\u7684 TreeNode \u7684\u5C5E\u6027\u503C"
          },
          "getPopupContainer": {
            "type": "attr",
            "values": ["Function(triggerNode)"],
            "description": "\u83DC\u5355\u6E32\u67D3\u7236\u8282\u70B9\u3002\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\uFF0C\u5982\u679C\u4F60\u9047\u5230\u83DC\u5355\u6EDA\u52A8\u5B9A\u4F4D\u95EE\u9898\uFF0C\u8BD5\u8BD5\u4FEE\u6539\u4E3A\u6EDA\u52A8\u7684\u533A\u57DF\uFF0C\u5E76\u76F8\u5BF9\u5176\u5B9A\u4F4D\u3002"
          },
          "labelInValue": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u628A\u6BCF\u4E2A\u9009\u9879\u7684 label \u5305\u88C5\u5230 value \u4E2D\uFF0C\u4F1A\u628A value \u7C7B\u578B\u4ECE string \u53D8\u4E3A {value: string, label: VNode, halfChecked(treeCheckStrictly \u65F6\u6709\u6548): string[] } \u7684\u683C\u5F0F"
          },
          "listHeight": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E\u5F39\u7A97\u6EDA\u52A8\u9AD8\u5EA6"
          },
          "loadData": {
            "type": "attr",
            "values": ["function(node)"],
            "description": "\u5F02\u6B65\u52A0\u8F7D\u6570\u636E"
          },
          "maxTagCount": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6700\u591A\u663E\u793A\u591A\u5C11\u4E2A tag"
          },
          "maxTagPlaceholder": {
            "type": "attr",
            "values": ["slot/function(omittedValues)"],
            "description": "\u9690\u85CF tag \u65F6\u663E\u793A\u7684\u5185\u5BB9"
          },
          "multiple": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u652F\u6301\u591A\u9009\uFF08\u5F53\u8BBE\u7F6E treeCheckable \u65F6\u81EA\u52A8\u53D8\u4E3A true\uFF09"
          },
          "notFoundContent": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u5F53\u4E0B\u62C9\u5217\u8868\u4E3A\u7A7A\u65F6\u663E\u793A\u7684\u5185\u5BB9"
          },
          "placeholder": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u9009\u62E9\u6846\u9ED8\u8BA4\u6587\u5B57"
          },
          "placement": {
            "type": "attr",
            "values": ["bottomLeft bottomRight topLeft topRight"],
            "description": "\u9009\u62E9\u6846\u5F39\u51FA\u7684\u4F4D\u7F6E"
          },
          "replaceFields": {
            "type": "attr",
            "values": ["object"],
            "description": "\u66FF\u6362 treeNode \u4E2D label,value,key,children \u5B57\u6BB5\u4E3A treeData \u4E2D\u5BF9\u5E94\u7684\u5B57\u6BB5"
          },
          "searchPlaceholder": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u641C\u7D22\u6846\u9ED8\u8BA4\u6587\u5B57"
          },
          "v-model:searchValue": {
            "type": "attr",
            "values": [],
            "description": "\u641C\u7D22\u6846\u7684\u503C\uFF0C\u53EF\u4EE5\u901A\u8FC7 search \u4E8B\u4EF6\u83B7\u53D6\u7528\u6237\u8F93\u5165"
          },
          "showCheckedStrategy": {
            "type": "attr",
            "values": [],
            "description": "\u5B9A\u4E49\u9009\u4E2D\u9879\u56DE\u586B\u7684\u65B9\u5F0F\u3002TreeSelect.SHOW_ALL: \u663E\u793A\u6240\u6709\u9009\u4E2D\u8282\u70B9(\u5305\u62EC\u7236\u8282\u70B9). TreeSelect.SHOW_PARENT: \u53EA\u663E\u793A\u7236\u8282\u70B9(\u5F53\u7236\u8282\u70B9\u4E0B\u6240\u6709\u5B50\u8282\u70B9\u90FD\u9009\u4E2D\u65F6). \u9ED8\u8BA4\u53EA\u663E\u793A\u5B50\u8282\u70B9."
          },
          "showSearch": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5728\u4E0B\u62C9\u4E2D\u663E\u793A\u641C\u7D22\u6846(\u4EC5\u5728\u5355\u9009\u6A21\u5F0F\u4E0B\u751F\u6548)"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u9009\u62E9\u6846\u5927\u5C0F\uFF0C\u53EF\u9009 large small"
          },
          "status": {
            "type": "attr",
            "values": ["'error'", "'warning'"],
            "description": "\u8BBE\u7F6E\u6821\u9A8C\u72B6\u6001"
          },
          "suffixIcon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u7684\u9009\u62E9\u6846\u540E\u7F00\u56FE\u6807"
          },
          "tagRender": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49 tag \u5185\u5BB9\uFF0C\u591A\u9009\u65F6\u751F\u6548"
          },
          "title": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u6811\u8282\u70B9\u663E\u793A\u7684\u5185\u5BB9"
          },
          "treeCheckable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u663E\u793A checkbox"
          },
          "treeCheckStrictly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "checkable \u72B6\u6001\u4E0B\u8282\u70B9\u9009\u62E9\u5B8C\u5168\u53D7\u63A7\uFF08\u7236\u5B50\u8282\u70B9\u9009\u4E2D\u72B6\u6001\u4E0D\u518D\u5173\u8054\uFF09\uFF0C\u4F1A\u4F7F\u5F97 labelInValue \u5F3A\u5236\u4E3A true"
          },
          "treeData": {
            "type": "attr",
            "values": [],
            "description": "treeNodes \u6570\u636E\uFF0C\u5982\u679C\u8BBE\u7F6E\u5219\u4E0D\u9700\u8981\u624B\u52A8\u6784\u9020 TreeNode \u8282\u70B9\uFF08value \u5728\u6574\u4E2A\u6811\u8303\u56F4\u5185\u552F\u4E00\uFF09"
          },
          "treeDataSimpleMode": {
            "type": "attr",
            "values": [],
            "description": `\u4F7F\u7528\u7B80\u5355\u683C\u5F0F\u7684 treeData\uFF0C\u5177\u4F53\u8BBE\u7F6E\u53C2\u8003\u53EF\u8BBE\u7F6E\u7684\u7C7B\u578B (\u6B64\u65F6 treeData \u5E94\u53D8\u4E3A\u8FD9\u6837\u7684\u6570\u636E\u7ED3\u6784: [{id:1, pId:0, value:'1', label:"test1",...},...], pId \u662F\u7236\u8282\u70B9\u7684 id)`
          },
          "treeDefaultExpandAll": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9ED8\u8BA4\u5C55\u5F00\u6240\u6709\u6811\u8282\u70B9"
          },
          "treeDefaultExpandedKeys": {
            "type": "attr",
            "values": ["string[]", "number[]"],
            "description": "\u9ED8\u8BA4\u5C55\u5F00\u7684\u6811\u8282\u70B9"
          },
          "v-model:treeExpandedKeys": {
            "type": "attr",
            "values": ["string[]", "number[]"],
            "description": "\u8BBE\u7F6E\u5C55\u5F00\u7684\u6811\u8282\u70B9"
          },
          "treeIcon": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A TreeNode title \u524D\u7684\u56FE\u6807\uFF0C\u6CA1\u6709\u9ED8\u8BA4\u6837\u5F0F\uFF0C\u5982\u8BBE\u7F6E\u4E3A true\uFF0C\u9700\u8981\u81EA\u884C\u5B9A\u4E49\u56FE\u6807\u76F8\u5173\u6837\u5F0F"
          },
          "treeLine": {
            "type": "attr",
            "values": ["boolean", "object"],
            "description": "\u662F\u5426\u5C55\u793A\u7EBF\u6761\u6837\u5F0F\uFF0C\u8BF7\u53C2\u8003 Tree - showLine"
          },
          "treeLoadedKeys": {
            "type": "attr",
            "values": ["string[]"],
            "description": "\uFF08\u53D7\u63A7\uFF09\u5DF2\u7ECF\u52A0\u8F7D\u7684\u8282\u70B9\uFF0C\u9700\u8981\u914D\u5408 loadData \u4F7F\u7528"
          },
          "treeNodeFilterProp": {
            "type": "attr",
            "values": [],
            "description": "\u8F93\u5165\u9879\u8FC7\u6EE4\u5BF9\u5E94\u7684 treeNode \u5C5E\u6027"
          },
          "treeNodeLabelProp": {
            "type": "attr",
            "values": [],
            "description": "\u4F5C\u4E3A\u663E\u793A\u7684 prop \u8BBE\u7F6E"
          },
          "v-model:value": {
            "type": "attr",
            "values": ["string/string[]"],
            "description": "\u6307\u5B9A\u5F53\u524D\u9009\u4E2D\u7684\u6761\u76EE"
          },
          "virtual": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E false \u65F6\u5173\u95ED\u865A\u62DF\u6EDA\u52A8"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u9009\u4E2D\u6811\u8282\u70B9\u6216\u8F93\u5165\u503C\u53D1\u751F\u53D8\u5316\u65F6\u8C03\u7528\u6B64\u51FD\u6570"
          },
          "dropdownVisibleChange": {
            "type": "event",
            "values": [],
            "description": "\u5C55\u5F00\u4E0B\u62C9\u83DC\u5355\u7684\u56DE\u8C03"
          },
          "search": {
            "type": "event",
            "values": [],
            "description": "\u6587\u672C\u6846\u503C\u53D8\u5316\u65F6\u56DE\u8C03"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u6811\u8282\u70B9\u88AB\u9009\u4E2D\u65F6\u8C03\u7528"
          },
          "treeExpand": {
            "type": "event",
            "values": [],
            "description": "\u5C55\u5F00\u6811\u8282\u70B9\u65F6\u8C03\u7528"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": "\u79FB\u9664\u7126\u70B9"
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": "\u83B7\u53D6\u7126\u70B9"
          },
          "checkable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u6811\u4E3A checkable \u65F6\uFF0C\u8BBE\u7F6E\u72EC\u7ACB\u8282\u70B9\u662F\u5426\u5C55\u793A Checkbox"
          },
          "disableCheckbox": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u7981\u6389 checkbox"
          },
          "isLeaf": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u662F\u53F6\u5B50\u8282\u70B9"
          },
          "key": {
            "type": "attr",
            "values": ["string", "number"],
            "description": "\u6B64\u9879\u5FC5\u987B\u8BBE\u7F6E\uFF08\u5176\u503C\u5728\u6574\u4E2A\u6811\u8303\u56F4\u5185\u552F\u4E00\uFF09"
          },
          "selectable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u9009"
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": "\u9ED8\u8BA4\u6839\u636E\u6B64\u5C5E\u6027\u503C\u8FDB\u884C\u7B5B\u9009\uFF08\u5176\u503C\u5728\u6574\u4E2A\u6811\u8303\u56F4\u5185\u552F\u4E00\uFF09"
          }
        },
        "a-upload": {
          "_html": {
            "": '<a-upload\nv-model:file-list="fileList"\naction=""\n@change="handleChange"\n>\n<a-button>\n<upload-outlined></upload-outlined>\nclick to upload\n</a-button>\n</a-upload>',
            ":avatar": '<a-upload\nv-model:file-list="fileList"\nlist-type="picture-card"\n:show-upload-list="false"\naction=""\n:before-upload="beforeUpload"\n@change="handleChange"\n>\n<img v-if="imageUrl" :src="imageUrl" alt="avatar" />\n<div v-else>\n<loading-outlined v-if="loading"></loading-outlined>\n<plus-outlined v-else></plus-outlined>\n<div class="ant-upload-text">Upload</div>\n</div>\n</a-upload>',
            ":drag": '<a-upload-dragger\nv-model:fileList="fileList"\n:multiple="true"\naction=""\n@change="handleChange"\n@drop="handleDrop"\n>\n<p class="ant-upload-drag-icon">\n<inbox-outlined></inbox-outlined>\n</p>\n<p class="ant-upload-text">Click or drag file to this area to upload</p>\n</a-upload-dragger>',
            ":directory": '<a-upload action="" directory>\n<a-button>\n<upload-outlined></upload-outlined>\nUpload Directory\n</a-button>\n</a-upload>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/upload-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C|  |\n| :--- | :--- | :--- | :--- | :--- | :--- |\n| accept| \u63A5\u53D7\u4E0A\u4F20\u7684\u6587\u4EF6\u7C7B\u578B, \u8BE6\u89C1 input accept Attribute| string| \u65E0| |  |\n| action| \u4E0A\u4F20\u7684\u5730\u5740| string|(file) => Promise| \u65E0| |  |\n| beforeUpload| \u4E0A\u4F20\u6587\u4EF6\u4E4B\u524D\u7684\u94A9\u5B50\uFF0C\u53C2\u6570\u4E3A\u4E0A\u4F20\u7684\u6587\u4EF6\uFF0C\u82E5\u8FD4\u56DE false \u5219\u505C\u6B62\u4E0A\u4F20\u3002\u652F\u6301\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0CPromise \u5BF9\u8C61 reject \u65F6\u5219\u505C\u6B62\u4E0A\u4F20\uFF0Cresolve \u65F6\u5F00\u59CB\u4E0A\u4F20\uFF08 resolve \u4F20\u5165 File \u6216 Blob \u5BF9\u8C61\u5219\u4E0A\u4F20 resolve \u4F20\u5165\u5BF9\u8C61\uFF09\u3002| (file, fileList) => boolean | Promise| \u65E0| |  |\n| customRequest| \u901A\u8FC7\u8986\u76D6\u9ED8\u8BA4\u7684\u4E0A\u4F20\u884C\u4E3A\uFF0C\u53EF\u4EE5\u81EA\u5B9A\u4E49\u81EA\u5DF1\u7684\u4E0A\u4F20\u5B9E\u73B0| function| \u65E0| |  |\n| data| \u4E0A\u4F20\u6240\u9700\u53C2\u6570\u6216\u8FD4\u56DE\u4E0A\u4F20\u53C2\u6570\u7684\u65B9\u6CD5| object|(file) => object| \u65E0| |  |\n| directory| \u652F\u6301\u4E0A\u4F20\u6587\u4EF6\u5939\uFF08caniuse\uFF09| boolean| false| 3.0|  |\n| disabled| \u662F\u5426\u7981\u7528| boolean| -| |  |\n| downloadIcon| \u81EA\u5B9A\u4E49\u4E0B\u8F7D icon| v-slot:iconRender="{file: UploadFile}"| -| 3.0|  |\n| fileList| \u5DF2\u7ECF\u4E0A\u4F20\u7684\u6587\u4EF6\u5217\u8868\uFF08\u53D7\u63A7\uFF09| object[]| \u65E0| |  |\n| headers| \u8BBE\u7F6E\u4E0A\u4F20\u7684\u8BF7\u6C42\u5934\u90E8\uFF0CIE10 \u4EE5\u4E0A\u6709\u6548| object| \u65E0| |  |\n| iconRender| \u81EA\u5B9A\u4E49\u663E\u793A icon| v-slot:iconRender="{file: UploadFile, listType?: UploadListType}"| -| 3.0|  |\n| isImageUrl| \u81EA\u5B9A\u4E49\u7F29\u7565\u56FE\u662F\u5426\u4F7F\u7528 <img /> \u6807\u7B7E\u8FDB\u884C\u663E\u793A| (file: UploadFile) => boolean| -| 3.0|  |\n| itemRender| \u81EA\u5B9A\u4E49\u4E0A\u4F20\u5217\u8868\u9879| v-slot:itemRender="{originNode: VNode, file: UploadFile, fileList: object[], actions: { download: function, preview: function, remove: function }"| -| 3.0|  |\n| listType| \u4E0A\u4F20\u5217\u8868\u7684\u5185\u5EFA\u6837\u5F0F\uFF0C\u652F\u6301\u4E09\u79CD\u57FA\u672C\u6837\u5F0F text, picture \u548C picture-card| string| text| |  |\n| maxCount| \u9650\u5236\u4E0A\u4F20\u6570\u91CF\u3002\u5F53\u4E3A 1 \u65F6\uFF0C\u59CB\u7EC8\u7528\u6700\u65B0\u4E0A\u4F20\u7684\u6587\u4EF6\u4EE3\u66FF\u5F53\u524D\u6587\u4EF6| number| -| 3.0|  |\n| method| \u4E0A\u4F20\u8BF7\u6C42\u7684 http method| string| post| 1.5.0|  |\n| multiple| \u662F\u5426\u652F\u6301\u591A\u9009\u6587\u4EF6\uFF0Cie10+ \u652F\u6301\u3002\u5F00\u542F\u540E\u6309\u4F4F ctrl \u53EF\u9009\u62E9\u591A\u4E2A\u6587\u4EF6\u3002| boolean| false| |  |\n| name| \u53D1\u5230\u540E\u53F0\u7684\u6587\u4EF6\u53C2\u6570\u540D| string| file| |  |\n| openFileDialogOnClick| \u70B9\u51FB\u6253\u5F00\u6587\u4EF6\u5BF9\u8BDD\u6846| boolean| true| 3.0|  |\n| previewFile| \u81EA\u5B9A\u4E49\u6587\u4EF6\u9884\u89C8\u903B\u8F91| (file: File | Blob) => Promise<dataURL: string>| \u65E0| 1.5.0|  |\n| previewIcon| \u81EA\u5B9A\u4E49\u9884\u89C8 icon| v-slot:iconRender="{file: UploadFile}"| -| 3.0|  |\n| progress| \u81EA\u5B9A\u4E49\u8FDB\u5EA6\u6761\u6837\u5F0F| ProgressProps\uFF08\u4EC5\u652F\u6301 type="line"\uFF09| { strokeWidth: 2, showInfo: false }| 3.0|  |\n| removeIcon| \u81EA\u5B9A\u4E49\u5220\u9664 icon| v-slot:iconRender="{file: UploadFile}"| -| 3.0|  |\n| showUploadList| \u662F\u5426\u5C55\u793A uploadList, \u53EF\u8BBE\u4E3A\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u7528\u4E8E\u5355\u72EC\u8BBE\u5B9A showPreviewIcon, showRemoveIcon \u548C showDownloadIcon| boolean | { showPreviewIcon?: boolean, showRemoveIcon?: boolean, showDownloadIcon?: boolean }| true| showDownloadIcon(3.0)|  |\n| supportServerRender| \u670D\u52A1\u7AEF\u6E32\u67D3\u65F6\u9700\u8981\u6253\u5F00\u8FD9\u4E2A| boolean| false| |  |\n| withCredentials| \u4E0A\u4F20\u8BF7\u6C42\u65F6\u662F\u5426\u643A\u5E26 cookie| boolean| false| |  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C|  |\n| :--- | :--- | :--- | :--- | :--- |\n| change| \u4E0A\u4F20\u6587\u4EF6\u6539\u53D8\u65F6\u7684\u72B6\u6001\uFF0C\u8BE6\u89C1 change| function| \u65E0|  |\n| download| \u70B9\u51FB\u4E0B\u8F7D\u6587\u4EF6\u65F6\u7684\u56DE\u8C03\uFF0C\u5982\u679C\u6CA1\u6709\u6307\u5B9A\uFF0C\u5219\u9ED8\u8BA4\u8DF3\u8F6C\u5230\u6587\u4EF6 url \u5BF9\u5E94\u7684\u6807\u7B7E\u9875\u3002| function(file): void| \u8DF3\u8F6C\u65B0\u6807\u7B7E\u9875| 1.5.0 |\n| drop| \u5F53\u6587\u4EF6\u88AB\u62D6\u5165\u4E0A\u4F20\u533A\u57DF\u65F6\u6267\u884C\u7684\u56DE\u8C03\u529F\u80FD| (event: DragEvent) => void| -| 3.0 |\n| preview| \u70B9\u51FB\u6587\u4EF6\u94FE\u63A5\u6216\u9884\u89C8\u56FE\u6807\u65F6\u7684\u56DE\u8C03| function(file)| \u65E0|  |\n| reject| \u62D6\u62FD\u6587\u4EF6\u4E0D\u7B26\u5408 accept \u7C7B\u578B\u65F6\u7684\u56DE\u8C03| function(fileList)| \u65E0|  |\n| remove| \u70B9\u51FB\u79FB\u9664\u6587\u4EF6\u65F6\u7684\u56DE\u8C03\uFF0C\u8FD4\u56DE\u503C\u4E3A false \u65F6\u4E0D\u79FB\u9664\u3002\u652F\u6301\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0CPromise \u5BF9\u8C61 resolve(false) \u6216 reject \u65F6\u4E0D\u79FB\u9664| function(file): boolean | Promise| -| 3.0 |\n',
          "accept": {
            "type": "attr",
            "values": [],
            "description": "\u63A5\u53D7\u4E0A\u4F20\u7684\u6587\u4EF6\u7C7B\u578B, \u8BE6\u89C1 input accept Attribute"
          },
          "action": {
            "type": "attr",
            "values": ["string|(file) => Promise"],
            "description": "\u4E0A\u4F20\u7684\u5730\u5740"
          },
          "beforeUpload": {
            "type": "attr",
            "values": ["(file, fileList) => boolean", "Promise"],
            "description": "\u4E0A\u4F20\u6587\u4EF6\u4E4B\u524D\u7684\u94A9\u5B50\uFF0C\u53C2\u6570\u4E3A\u4E0A\u4F20\u7684\u6587\u4EF6\uFF0C\u82E5\u8FD4\u56DE false \u5219\u505C\u6B62\u4E0A\u4F20\u3002\u652F\u6301\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0CPromise \u5BF9\u8C61 reject \u65F6\u5219\u505C\u6B62\u4E0A\u4F20\uFF0Cresolve \u65F6\u5F00\u59CB\u4E0A\u4F20\uFF08 resolve \u4F20\u5165 File \u6216 Blob \u5BF9\u8C61\u5219\u4E0A\u4F20 resolve \u4F20\u5165\u5BF9\u8C61\uFF09\u3002"
          },
          "customRequest": {
            "type": "attr",
            "values": ["function"],
            "description": "\u901A\u8FC7\u8986\u76D6\u9ED8\u8BA4\u7684\u4E0A\u4F20\u884C\u4E3A\uFF0C\u53EF\u4EE5\u81EA\u5B9A\u4E49\u81EA\u5DF1\u7684\u4E0A\u4F20\u5B9E\u73B0"
          },
          "data": {
            "type": "attr",
            "values": ["object|(file) => object"],
            "description": "\u4E0A\u4F20\u6240\u9700\u53C2\u6570\u6216\u8FD4\u56DE\u4E0A\u4F20\u53C2\u6570\u7684\u65B9\u6CD5"
          },
          "directory": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u652F\u6301\u4E0A\u4F20\u6587\u4EF6\u5939\uFF08caniuse\uFF09"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "downloadIcon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u4E0B\u8F7D icon"
          },
          "fileList": {
            "type": "attr",
            "values": ["object[]"],
            "description": "\u5DF2\u7ECF\u4E0A\u4F20\u7684\u6587\u4EF6\u5217\u8868\uFF08\u53D7\u63A7\uFF09"
          },
          "headers": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8BBE\u7F6E\u4E0A\u4F20\u7684\u8BF7\u6C42\u5934\u90E8\uFF0CIE10 \u4EE5\u4E0A\u6709\u6548"
          },
          "iconRender": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u663E\u793A icon"
          },
          "isImageUrl": {
            "type": "attr",
            "values": ["(file: UploadFile) => boolean"],
            "description": "\u81EA\u5B9A\u4E49\u7F29\u7565\u56FE\u662F\u5426\u4F7F\u7528 <img /> \u6807\u7B7E\u8FDB\u884C\u663E\u793A"
          },
          "itemRender": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u4E0A\u4F20\u5217\u8868\u9879"
          },
          "listType": {
            "type": "attr",
            "values": [],
            "description": "\u4E0A\u4F20\u5217\u8868\u7684\u5185\u5EFA\u6837\u5F0F\uFF0C\u652F\u6301\u4E09\u79CD\u57FA\u672C\u6837\u5F0F text, picture \u548C picture-card"
          },
          "maxCount": {
            "type": "attr",
            "values": ["number"],
            "description": "\u9650\u5236\u4E0A\u4F20\u6570\u91CF\u3002\u5F53\u4E3A 1 \u65F6\uFF0C\u59CB\u7EC8\u7528\u6700\u65B0\u4E0A\u4F20\u7684\u6587\u4EF6\u4EE3\u66FF\u5F53\u524D\u6587\u4EF6"
          },
          "method": {
            "type": "attr",
            "values": [],
            "description": "\u4E0A\u4F20\u8BF7\u6C42\u7684 http method"
          },
          "multiple": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u652F\u6301\u591A\u9009\u6587\u4EF6\uFF0Cie10+ \u652F\u6301\u3002\u5F00\u542F\u540E\u6309\u4F4F ctrl \u53EF\u9009\u62E9\u591A\u4E2A\u6587\u4EF6\u3002"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "\u53D1\u5230\u540E\u53F0\u7684\u6587\u4EF6\u53C2\u6570\u540D"
          },
          "openFileDialogOnClick": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u70B9\u51FB\u6253\u5F00\u6587\u4EF6\u5BF9\u8BDD\u6846"
          },
          "previewFile": {
            "type": "attr",
            "values": ["(file: File", "Blob) => Promise<dataURL: string>"],
            "description": "\u81EA\u5B9A\u4E49\u6587\u4EF6\u9884\u89C8\u903B\u8F91"
          },
          "previewIcon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u9884\u89C8 icon"
          },
          "progress": {
            "type": "attr",
            "values": ['ProgressProps\uFF08\u4EC5\u652F\u6301 type="line"\uFF09'],
            "description": "\u81EA\u5B9A\u4E49\u8FDB\u5EA6\u6761\u6837\u5F0F"
          },
          "removeIcon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u5220\u9664 icon"
          },
          "showUploadList": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A uploadList, \u53EF\u8BBE\u4E3A\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u7528\u4E8E\u5355\u72EC\u8BBE\u5B9A showPreviewIcon, showRemoveIcon \u548C showDownloadIcon"
          },
          "supportServerRender": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u670D\u52A1\u7AEF\u6E32\u67D3\u65F6\u9700\u8981\u6253\u5F00\u8FD9\u4E2A"
          },
          "withCredentials": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E0A\u4F20\u8BF7\u6C42\u65F6\u662F\u5426\u643A\u5E26 cookie"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u4E0A\u4F20\u6587\u4EF6\u6539\u53D8\u65F6\u7684\u72B6\u6001\uFF0C\u8BE6\u89C1 change"
          },
          "download": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u4E0B\u8F7D\u6587\u4EF6\u65F6\u7684\u56DE\u8C03\uFF0C\u5982\u679C\u6CA1\u6709\u6307\u5B9A\uFF0C\u5219\u9ED8\u8BA4\u8DF3\u8F6C\u5230\u6587\u4EF6 url \u5BF9\u5E94\u7684\u6807\u7B7E\u9875\u3002"
          },
          "drop": {
            "type": "event",
            "values": [],
            "description": "\u5F53\u6587\u4EF6\u88AB\u62D6\u5165\u4E0A\u4F20\u533A\u57DF\u65F6\u6267\u884C\u7684\u56DE\u8C03\u529F\u80FD"
          },
          "preview": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u6587\u4EF6\u94FE\u63A5\u6216\u9884\u89C8\u56FE\u6807\u65F6\u7684\u56DE\u8C03"
          },
          "reject": {
            "type": "event",
            "values": [],
            "description": "\u62D6\u62FD\u6587\u4EF6\u4E0D\u7B26\u5408 accept \u7C7B\u578B\u65F6\u7684\u56DE\u8C03"
          },
          "remove": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u79FB\u9664\u6587\u4EF6\u65F6\u7684\u56DE\u8C03\uFF0C\u8FD4\u56DE\u503C\u4E3A false \u65F6\u4E0D\u79FB\u9664\u3002\u652F\u6301\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0CPromise \u5BF9\u8C61 resolve(false) \u6216 reject \u65F6\u4E0D\u79FB\u9664"
          }
        },
        "a-avatar": {
          "_html": {
            "": '<a-avatar :size="${1:64}">\n$2\n</a-avatar>',
            ":square": '<a-avatar shape="square" :size="${1:64}">\n$2\n</a-avatar>',
            ":icon[slot]": "<template #icon>\n<UserOutlined />\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/avatar-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| alt| \u56FE\u50CF\u65E0\u6CD5\u663E\u793A\u65F6\u7684\u66FF\u4EE3\u6587\u672C| string| -|  |\n| crossOrigin| cors \u5C5E\u6027\u8BBE\u7F6E| 'anonymous' | 'use-credentials' | ''| -| 3.0 |\n| draggable| \u56FE\u7247\u662F\u5426\u5141\u8BB8\u62D6\u52A8| boolean | 'true' | 'false'| -| 2.2.0 |\n| gap| \u5B57\u7B26\u7C7B\u578B\u8DDD\u79BB\u5DE6\u53F3\u4E24\u4FA7\u8FB9\u754C\u5355\u4F4D\u50CF\u7D20| number| 4| 2.2.0 |\n| icon| \u8BBE\u7F6E\u5934\u50CF\u7684\u56FE\u6807\u7C7B\u578B\uFF0C\u53EF\u8BBE\u4E3A Icon \u7684 type \u6216 VNode| VNode | slot| -|  |\n| loadError| \u56FE\u7247\u52A0\u8F7D\u5931\u8D25\u7684\u4E8B\u4EF6\uFF0C\u8FD4\u56DE false \u4F1A\u5173\u95ED\u7EC4\u4EF6\u9ED8\u8BA4\u7684 fallback \u884C\u4E3A| () => boolean| -|  |\n| shape| \u6307\u5B9A\u5934\u50CF\u7684\u5F62\u72B6| circle | square| circle|  |\n| size| \u8BBE\u7F6E\u5934\u50CF\u7684\u5927\u5C0F| number | large | small | default | { xs: number, sm: number, ...}| default| 2.2.0 |\n| src| \u56FE\u7247\u7C7B\u5934\u50CF\u7684\u8D44\u6E90\u5730\u5740| string| -|  |\n| srcset| \u8BBE\u7F6E\u56FE\u7247\u7C7B\u5934\u50CF\u54CD\u5E94\u5F0F\u8D44\u6E90\u5730\u5740| string| -|  |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| maxCount| \u663E\u793A\u7684\u6700\u5927\u5934\u50CF\u4E2A\u6570| number| -|  |\n| maxPopoverPlacement| \u591A\u4F59\u5934\u50CF\u6C14\u6CE1\u5F39\u51FA\u4F4D\u7F6E| top | bottom| top|  |\n| maxPopoverTrigger| \u8BBE\u7F6E\u591A\u4F59\u5934\u50CF Popover \u7684\u89E6\u53D1\u65B9\u5F0F| hover | focus | click| hover| 3.0 |\n| maxStyle| \u591A\u4F59\u5934\u50CF\u6837\u5F0F| CSSProperties| -|  |\n| size| \u8BBE\u7F6E\u5934\u50CF\u7684\u5927\u5C0F| number | large | small | default | { xs: number, sm: number, ...}| default|  |\n| shape| \u8BBE\u7F6E\u5934\u50CF\u7684\u5F62\u72B6| circle | square| circle| 4.0 |\n",
          "alt": {
            "type": "attr",
            "values": [],
            "description": "\u56FE\u50CF\u65E0\u6CD5\u663E\u793A\u65F6\u7684\u66FF\u4EE3\u6587\u672C"
          },
          "crossOrigin": {
            "type": "attr",
            "values": ["'anonymous'", "'use-credentials'", "''"],
            "description": "cors \u5C5E\u6027\u8BBE\u7F6E"
          },
          "draggable": {
            "type": "attr",
            "values": ["boolean", "'true'", "'false'"],
            "description": "\u56FE\u7247\u662F\u5426\u5141\u8BB8\u62D6\u52A8"
          },
          "gap": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5B57\u7B26\u7C7B\u578B\u8DDD\u79BB\u5DE6\u53F3\u4E24\u4FA7\u8FB9\u754C\u5355\u4F4D\u50CF\u7D20"
          },
          "icon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u8BBE\u7F6E\u5934\u50CF\u7684\u56FE\u6807\u7C7B\u578B\uFF0C\u53EF\u8BBE\u4E3A Icon \u7684 type \u6216 VNode"
          },
          "loadError": {
            "type": "attr",
            "values": ["() => boolean"],
            "description": "\u56FE\u7247\u52A0\u8F7D\u5931\u8D25\u7684\u4E8B\u4EF6\uFF0C\u8FD4\u56DE false \u4F1A\u5173\u95ED\u7EC4\u4EF6\u9ED8\u8BA4\u7684 fallback \u884C\u4E3A"
          },
          "shape": {
            "type": "attr",
            "values": ["circle", "square"],
            "description": "\u6307\u5B9A\u5934\u50CF\u7684\u5F62\u72B6"
          },
          "size": {
            "type": "attr",
            "values": ["number", "large", "small", "default"],
            "description": "\u8BBE\u7F6E\u5934\u50CF\u7684\u5927\u5C0F"
          },
          "src": {
            "type": "attr",
            "values": [],
            "description": "\u56FE\u7247\u7C7B\u5934\u50CF\u7684\u8D44\u6E90\u5730\u5740"
          },
          "srcset": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u56FE\u7247\u7C7B\u5934\u50CF\u54CD\u5E94\u5F0F\u8D44\u6E90\u5730\u5740"
          }
        },
        "a-avatar-group": {
          "_html": {
            "": "<a-avatar-group>$1</a-avatar-group>"
          }
        },
        "a-badge": {
          "_html": {
            "": '<a-badge count="${1:5}">$2</a-badge>',
            ":count[slot]": "<template #count>\n$1\n</template>",
            ":overflow-count": '<a-badge :count="${1:99}" :overflow-count="${2:10}">$3</a-badge>',
            ":dot": "<a-badge dot>$1</a-badge>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/badge-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| color| \u81EA\u5B9A\u4E49\u5C0F\u5706\u70B9\u7684\u989C\u8272| string| -| 1.5.0 |\n| count| \u5C55\u793A\u7684\u6570\u5B57\uFF0C\u5927\u4E8E overflowCount \u65F6\u663E\u793A\u4E3A {overflowCount}+\uFF0C\u4E3A 0 \u65F6\u9690\u85CF| number | string | slot| |  |\n| dot| \u4E0D\u5C55\u793A\u6570\u5B57\uFF0C\u53EA\u6709\u4E00\u4E2A\u5C0F\u7EA2\u70B9| boolean| false|  |\n| numberStyle| \u8BBE\u7F6E\u72B6\u6001\u70B9\u7684\u6837\u5F0F| object| ''|  |\n| offset| \u8BBE\u7F6E\u72B6\u6001\u70B9\u7684\u4F4D\u7F6E\u504F\u79FB\uFF0C\u683C\u5F0F\u4E3A [x, y]| [number|string, number|string]| -|  |\n| overflowCount| \u5C55\u793A\u5C01\u9876\u7684\u6570\u5B57\u503C| number| 99|  |\n| showZero| \u5F53\u6570\u503C\u4E3A 0 \u65F6\uFF0C\u662F\u5426\u5C55\u793A Badge| boolean| false|  |\n| status| \u8BBE\u7F6E Badge \u4E3A\u72B6\u6001\u70B9| Enum{ 'success', 'processing, 'default', 'error', 'warning' }| ''|  |\n| text| \u5728\u8BBE\u7F6E\u4E86 status \u7684\u524D\u63D0\u4E0B\u6709\u6548\uFF0C\u8BBE\u7F6E\u72B6\u6001\u70B9\u7684\u6587\u672C| string| ''|  |\n| title| \u8BBE\u7F6E\u9F20\u6807\u653E\u5728\u72B6\u6001\u70B9\u4E0A\u65F6\u663E\u793A\u7684\u6587\u5B57| string| count|  |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| color| \u81EA\u5B9A\u4E49\u7F0E\u5E26\u7684\u989C\u8272| string| -|  |\n| placement| \u7F0E\u5E26\u7684\u4F4D\u7F6E\uFF0Cstart \u548C end \u968F\u6587\u5B57\u65B9\u5411\uFF08RTL \u6216 LTR\uFF09\u53D8\u52A8| start | end| end|  |\n| text| \u7F0E\u5E26\u4E2D\u586B\u5165\u7684\u5185\u5BB9| string | VNode | slot| -|  |\n",
          "color": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u5C0F\u5706\u70B9\u7684\u989C\u8272"
          },
          "count": {
            "type": "attr",
            "values": ["number", "string", "slot"],
            "description": "\u5C55\u793A\u7684\u6570\u5B57\uFF0C\u5927\u4E8E overflowCount \u65F6\u663E\u793A\u4E3A ${overflowCount}+\uFF0C\u4E3A 0 \u65F6\u9690\u85CF"
          },
          "dot": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E0D\u5C55\u793A\u6570\u5B57\uFF0C\u53EA\u6709\u4E00\u4E2A\u5C0F\u7EA2\u70B9"
          },
          "numberStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8BBE\u7F6E\u72B6\u6001\u70B9\u7684\u6837\u5F0F"
          },
          "offset": {
            "type": "attr",
            "values": ["[number|string, number|string]"],
            "description": "\u8BBE\u7F6E\u72B6\u6001\u70B9\u7684\u4F4D\u7F6E\u504F\u79FB\uFF0C\u683C\u5F0F\u4E3A [x, y]"
          },
          "overflowCount": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5C55\u793A\u5C01\u9876\u7684\u6570\u5B57\u503C"
          },
          "showZero": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u6570\u503C\u4E3A 0 \u65F6\uFF0C\u662F\u5426\u5C55\u793A Badge"
          },
          "status": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E Badge \u4E3A\u72B6\u6001\u70B9"
          },
          "text": {
            "type": "attr",
            "values": [],
            "description": "\u5728\u8BBE\u7F6E\u4E86 status \u7684\u524D\u63D0\u4E0B\u6709\u6548\uFF0C\u8BBE\u7F6E\u72B6\u6001\u70B9\u7684\u6587\u672C"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u9F20\u6807\u653E\u5728\u72B6\u6001\u70B9\u4E0A\u65F6\u663E\u793A\u7684\u6587\u5B57"
          }
        },
        "a-badge-ribbon": {
          "_html": {
            "": '<a-badge-ribbon text="$1">$2</a-badge-ribbon>'
          }
        },
        "a-calendar": {
          "_html": {
            "": '<a-calendar v-model:value="${1:value}" @panelChange="${2:onPanelChange}"></a-calendar>',
            ":card": '<a-calendar v-model:value="${1:value}" :fullscreen="false" @panelChange="${2:onPanelChange}"></a-calendar>',
            ":dateCellRender[slot]": '<template #dateCellRender="{ current }">\n$1\n</template>',
            ":monthCellRender[slot]": '<template #monthCellRender="{ current }">\n$1\n</template>',
            ":headerRender[slot]": '<template #headerRender="{ value: current, type, onChange, onTypeChange }">\n$1\n</template>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/calendar-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| dateCellRender| \u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u7528\u6765\u81EA\u5B9A\u4E49\u6E32\u67D3\u65E5\u671F\u5355\u5143\u683C\uFF0C\u8FD4\u56DE\u5185\u5BB9\u4F1A\u88AB\u8FFD\u52A0\u5230\u5355\u5143\u683C,| v-slot:dateCellRender="{current: dayjs}"| \u65E0|  |
| dateFullCellRender| \u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u6E32\u67D3\u65E5\u671F\u5355\u5143\u683C\uFF0C\u8FD4\u56DE\u5185\u5BB9\u8986\u76D6\u5355\u5143\u683C| v-slot:dateFullCellRender="{current: dayjs}"| \u65E0|  |
| disabledDate| \u4E0D\u53EF\u9009\u62E9\u7684\u65E5\u671F| (currentDate: dayjs) => boolean| \u65E0|  |
| fullscreen| \u662F\u5426\u5168\u5C4F\u663E\u793A| boolean| true|  |
| headerRender| \u81EA\u5B9A\u4E49\u5934\u90E8\u5185\u5BB9| v-slot:headerRender="{value: dayjs, type: string, onChange: f(), onTypeChange: f()}"| -|  |
| locale| \u56FD\u9645\u5316\u914D\u7F6E| object| \u9ED8\u8BA4\u914D\u7F6E|  |
| mode| \u521D\u59CB\u6A21\u5F0F\uFF0Cmonth/year| string| month|  |
| monthCellRender| \u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u6E32\u67D3\u6708\u5355\u5143\u683C\uFF0C\u8FD4\u56DE\u5185\u5BB9\u4F1A\u88AB\u8FFD\u52A0\u5230\u5355\u5143\u683C| v-slot:monthCellRender="{current: dayjs}"| \u65E0|  |
| monthFullCellRender| \u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u6E32\u67D3\u6708\u5355\u5143\u683C\uFF0C\u8FD4\u56DE\u5185\u5BB9\u8986\u76D6\u5355\u5143\u683C| v-slot:monthFullCellRender="{current: dayjs}"| \u65E0|  |
| validRange| \u8BBE\u7F6E\u53EF\u4EE5\u663E\u793A\u7684\u65E5\u671F| [dayjs, dayjs]| \u65E0|  |
| value(v-model)| \u5C55\u793A\u65E5\u671F| dayjs| \u5F53\u524D\u65E5\u671F|  |
| valueFormat| \u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\uFF0C\u5BF9 value\u3001defaultValue \u8D77\u4F5C\u7528\u3002\u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A dayjs \u5BF9\u8C61| string\uFF0C\u5177\u4F53\u683C\u5F0F| -|  |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570|  |
| :--- | :--- | :--- | :--- |
| change| \u65E5\u671F\u53D8\u5316\u65F6\u7684\u56DE\u8C03, \u9762\u677F\u53D8\u5316\u6709\u53EF\u80FD\u5BFC\u81F4\u65E5\u671F\u53D8\u5316| function(date: dayjs | string\uFF09| \u65E0 |
| panelChange| \u65E5\u671F\u9762\u677F\u53D8\u5316\u56DE\u8C03| function(date: dayjs | string, mode: string)| \u65E0 |
| select| \u9009\u62E9\u65E5\u671F\u56DE\u8C03\uFF0C\u5305\u542B\u6765\u6E90\u4FE1\u606F| function(date: Dayjs, info: { source: 'year' | 'month' | 'date' | 'customize' })| - |
`,
          "dateCellRender": {
            "type": "attr",
            "values": [],
            "description": "\u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u7528\u6765\u81EA\u5B9A\u4E49\u6E32\u67D3\u65E5\u671F\u5355\u5143\u683C\uFF0C\u8FD4\u56DE\u5185\u5BB9\u4F1A\u88AB\u8FFD\u52A0\u5230\u5355\u5143\u683C,"
          },
          "dateFullCellRender": {
            "type": "attr",
            "values": [],
            "description": "\u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u6E32\u67D3\u65E5\u671F\u5355\u5143\u683C\uFF0C\u8FD4\u56DE\u5185\u5BB9\u8986\u76D6\u5355\u5143\u683C"
          },
          "disabledDate": {
            "type": "attr",
            "values": ["(currentDate: dayjs) => boolean"],
            "description": "\u4E0D\u53EF\u9009\u62E9\u7684\u65E5\u671F"
          },
          "fullscreen": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5168\u5C4F\u663E\u793A"
          },
          "headerRender": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u5934\u90E8\u5185\u5BB9"
          },
          "locale": {
            "type": "attr",
            "values": ["object"],
            "description": "\u56FD\u9645\u5316\u914D\u7F6E"
          },
          "mode": {
            "type": "attr",
            "values": [],
            "description": "\u521D\u59CB\u6A21\u5F0F\uFF0Cmonth/year"
          },
          "monthCellRender": {
            "type": "attr",
            "values": [],
            "description": "\u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u6E32\u67D3\u6708\u5355\u5143\u683C\uFF0C\u8FD4\u56DE\u5185\u5BB9\u4F1A\u88AB\u8FFD\u52A0\u5230\u5355\u5143\u683C"
          },
          "monthFullCellRender": {
            "type": "attr",
            "values": [],
            "description": "\u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u81EA\u5B9A\u4E49\u6E32\u67D3\u6708\u5355\u5143\u683C\uFF0C\u8FD4\u56DE\u5185\u5BB9\u8986\u76D6\u5355\u5143\u683C"
          },
          "validRange": {
            "type": "attr",
            "values": ["[dayjs, dayjs]"],
            "description": "\u8BBE\u7F6E\u53EF\u4EE5\u663E\u793A\u7684\u65E5\u671F"
          },
          "v-model:value": {
            "type": "attr",
            "values": ["dayjs"],
            "description": "\u5C55\u793A\u65E5\u671F"
          },
          "valueFormat": {
            "type": "attr",
            "values": ["string\uFF0C\u5177\u4F53\u683C\u5F0F"],
            "description": "\u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\uFF0C\u5BF9 value\u3001defaultValue \u8D77\u4F5C\u7528\u3002\u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A dayjs \u5BF9\u8C61"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u65E5\u671F\u53D8\u5316\u65F6\u7684\u56DE\u8C03, \u9762\u677F\u53D8\u5316\u6709\u53EF\u80FD\u5BFC\u81F4\u65E5\u671F\u53D8\u5316"
          },
          "panelChange": {
            "type": "event",
            "values": [],
            "description": "\u65E5\u671F\u9762\u677F\u53D8\u5316\u56DE\u8C03"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u9009\u62E9\u65E5\u671F\u56DE\u8C03\uFF0C\u5305\u542B\u6765\u6E90\u4FE1\u606F"
          }
        },
        "a-card": {
          "_html": {
            "": '<a-card title="$1">$2</a-card>',
            ":extra[slot]": "<template #extra>\n$1\n</template>",
            ":cover[slot]": "<template #cover>\n$1\n</template>",
            ":actions[slot]": "<template #actions>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/card-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| activeTabKey| \u5F53\u524D\u6FC0\u6D3B\u9875\u7B7E\u7684 key| string| -|  |\n| bodyStyle| \u5185\u5BB9\u533A\u57DF\u81EA\u5B9A\u4E49\u6837\u5F0F| object| -|  |\n| bordered| \u662F\u5426\u6709\u8FB9\u6846| boolean| true|  |\n| defaultActiveTabKey| \u521D\u59CB\u5316\u9009\u4E2D\u9875\u7B7E\u7684 key\uFF0C\u5982\u679C\u6CA1\u6709\u8BBE\u7F6E activeTabKey| string| \u7B2C\u4E00\u4E2A\u9875\u7B7E|  |\n| extra| \u5361\u7247\u53F3\u4E0A\u89D2\u7684\u64CD\u4F5C\u533A\u57DF| string|slot| -|  |\n| headStyle| \u81EA\u5B9A\u4E49\u6807\u9898\u533A\u57DF\u6837\u5F0F| object| -|  |\n| hoverable| \u9F20\u6807\u79FB\u8FC7\u65F6\u53EF\u6D6E\u8D77| boolean| false|  |\n| loading| \u5F53\u5361\u7247\u5185\u5BB9\u8FD8\u5728\u52A0\u8F7D\u4E2D\u65F6\uFF0C\u53EF\u4EE5\u7528 loading \u5C55\u793A\u4E00\u4E2A\u5360\u4F4D| boolean| false|  |\n| size| card \u7684\u5C3A\u5BF8| default | small| default|  |\n| tabList| \u9875\u7B7E\u6807\u9898\u5217\u8868, \u53EF\u4EE5\u901A\u8FC7 customTab(v3.0) \u63D2\u69FD\u81EA\u5B9A\u4E49 tab| Array<{key: string, tab: any}>| -|  |\n| title| \u5361\u7247\u6807\u9898| string|slot| -|  |\n| type| \u5361\u7247\u7C7B\u578B\uFF0C\u53EF\u8BBE\u7F6E\u4E3A inner \u6216 \u4E0D\u8BBE\u7F6E| string| -|  |\n\n| \u63D2\u69FD\u540D\u79F0| \u8BF4\u660E| \u53C2\u6570|  |\n| :--- | :--- | :--- | :--- |\n| actions| \u5361\u7247\u64CD\u4F5C\u7EC4\uFF0C\u4F4D\u7F6E\u5728\u5361\u7247\u5E95\u90E8| -|  |\n| cover| \u5361\u7247\u5C01\u9762| -|  |\n| customTab| \u81EA\u5B9A\u4E49 tabList tab \u6807\u7B7E| { item: tabList[number] }|  |\n| extra| \u5361\u7247\u53F3\u4E0A\u89D2\u7684\u64CD\u4F5C\u533A\u57DF| -|  |\n| tabBarExtraContent| tab bar \u4E0A\u989D\u5916\u7684\u5143\u7D20| -|  |\n| title| \u5361\u7247\u6807\u9898| -|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C|  |\n| :--- | :--- | :--- | :--- | :--- |\n| tabChange| \u9875\u7B7E\u5207\u6362\u7684\u56DE\u8C03| (key) => void| -|  |\n",
          "activeTabKey": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u524D\u6FC0\u6D3B\u9875\u7B7E\u7684 key"
          },
          "bodyStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "\u5185\u5BB9\u533A\u57DF\u81EA\u5B9A\u4E49\u6837\u5F0F"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6709\u8FB9\u6846"
          },
          "defaultActiveTabKey": {
            "type": "attr",
            "values": [],
            "description": "\u521D\u59CB\u5316\u9009\u4E2D\u9875\u7B7E\u7684 key\uFF0C\u5982\u679C\u6CA1\u6709\u8BBE\u7F6E activeTabKey"
          },
          "extra": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5361\u7247\u53F3\u4E0A\u89D2\u7684\u64CD\u4F5C\u533A\u57DF"
          },
          "headStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "\u81EA\u5B9A\u4E49\u6807\u9898\u533A\u57DF\u6837\u5F0F"
          },
          "hoverable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9F20\u6807\u79FB\u8FC7\u65F6\u53EF\u6D6E\u8D77"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F53\u5361\u7247\u5185\u5BB9\u8FD8\u5728\u52A0\u8F7D\u4E2D\u65F6\uFF0C\u53EF\u4EE5\u7528 loading \u5C55\u793A\u4E00\u4E2A\u5360\u4F4D"
          },
          "size": {
            "type": "attr",
            "values": ["default", "small"],
            "description": "card \u7684\u5C3A\u5BF8"
          },
          "tabList": {
            "type": "attr",
            "values": [],
            "description": "\u9875\u7B7E\u6807\u9898\u5217\u8868, \u53EF\u4EE5\u901A\u8FC7 customTab(v3.0) \u63D2\u69FD\u81EA\u5B9A\u4E49 tab"
          },
          "title": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5361\u7247\u6807\u9898"
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": "\u5361\u7247\u7C7B\u578B\uFF0C\u53EF\u8BBE\u7F6E\u4E3A inner \u6216 \u4E0D\u8BBE\u7F6E"
          },
          "tabChange": {
            "type": "event",
            "values": [],
            "description": "\u9875\u7B7E\u5207\u6362\u7684\u56DE\u8C03"
          }
        },
        "a-card-grid": {
          "_html": {
            "": "<a-card-grid>$1</a-card-grid>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/card-cn)\n#### \u5C5E\u6027\n"
        },
        "a-card-meta": {
          "_html": {
            "": '<a-card-meta title="$1" description="$2">$3</a-card-meta>',
            ":avatar[slot]": "<template #avatar>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/card-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| avatar| \u5934\u50CF/\u56FE\u6807| slot| -|  |\n| description| \u63CF\u8FF0\u5185\u5BB9| string|slot| -|  |\n| title| \u6807\u9898\u5185\u5BB9| string|slot| -|  |\n",
          "avatar": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u5934\u50CF/\u56FE\u6807"
          },
          "description": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u63CF\u8FF0\u5185\u5BB9"
          },
          "title": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u6807\u9898\u5185\u5BB9"
          }
        },
        "a-carousel": {
          "_html": {
            "": '<a-carousel autoplay :after-change="onChange">$1</a-carousel>',
            ":effect": '<a-carousel effect="fade" autoplay :after-change="onChange">$1</a-carousel>',
            ":customPaging[slot]": '<template #customPaging="props">\n$1\n</template>',
            ":prevArrow[slot]": "<template #prevArrow>\n$1\n</template>",
            ":nextArrow[slot]": "<template #nextArrow>\n$1\n</template>",
            ":expandIcon[slot]": '<template #expandIcon="{ isActive }">\n$1\n</template>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/carousel-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| autoplay| \u662F\u5426\u81EA\u52A8\u5207\u6362| boolean| false|  |\n| dotPosition| \u9762\u677F\u6307\u793A\u70B9\u4F4D\u7F6E\uFF0C\u53EF\u9009 top bottom left right| string| bottom| 1.5.0 |\n| dots| \u662F\u5426\u663E\u793A\u9762\u677F\u6307\u793A\u70B9| boolean| true|  |\n| dotsClass| \u9762\u677F\u6307\u793A\u70B9\u7C7B\u540D| string| slick-dots|  |\n| easing| \u52A8\u753B\u6548\u679C| string| linear|  |\n| effect| \u52A8\u753B\u6548\u679C\u51FD\u6570| scrollx | fade| scrollx|  |\n| afterChange| \u5207\u6362\u9762\u677F\u7684\u56DE\u8C03| function(current)| -|  |\n| beforeChange| \u5207\u6362\u9762\u677F\u7684\u56DE\u8C03| function(from, to)| -|  |\n#### \u65B9\u6CD5\n\n| \u540D\u79F0| \u63CF\u8FF0| \u7248\u672C |\n| :--- | :--- | :--- |\n| goTo(slideNumber, dontAnimate)| \u5207\u6362\u5230\u6307\u5B9A\u9762\u677F, dontAnimate = true \u65F6\uFF0C\u4E0D\u4F7F\u7528\u52A8\u753B|  |\n| next()| \u5207\u6362\u5230\u4E0B\u4E00\u9762\u677F|  |\n| prev()| \u5207\u6362\u5230\u4E0A\u4E00\u9762\u677F|  |\n",
          "autoplay": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u81EA\u52A8\u5207\u6362"
          },
          "dotPosition": {
            "type": "attr",
            "values": [],
            "description": "\u9762\u677F\u6307\u793A\u70B9\u4F4D\u7F6E\uFF0C\u53EF\u9009 top bottom left right"
          },
          "dots": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u9762\u677F\u6307\u793A\u70B9"
          },
          "dotsClass": {
            "type": "attr",
            "values": [],
            "description": "\u9762\u677F\u6307\u793A\u70B9\u7C7B\u540D"
          },
          "easing": {
            "type": "attr",
            "values": [],
            "description": "\u52A8\u753B\u6548\u679C"
          },
          "effect": {
            "type": "attr",
            "values": ["scrollx", "fade"],
            "description": "\u52A8\u753B\u6548\u679C\u51FD\u6570"
          },
          "afterChange": {
            "type": "attr",
            "values": ["function(current)"],
            "description": "\u5207\u6362\u9762\u677F\u7684\u56DE\u8C03"
          },
          "beforeChange": {
            "type": "attr",
            "values": ["function(from, to)"],
            "description": "\u5207\u6362\u9762\u677F\u7684\u56DE\u8C03"
          },
          "goToslideNumber,dontAnimate": {
            "type": "event",
            "values": [],
            "description": "\u5207\u6362\u5230\u6307\u5B9A\u9762\u677F, dontAnimate = true \u65F6\uFF0C\u4E0D\u4F7F\u7528\u52A8\u753B"
          },
          "next": {
            "type": "event",
            "values": [],
            "description": "\u5207\u6362\u5230\u4E0B\u4E00\u9762\u677F"
          },
          "prev": {
            "type": "event",
            "values": [],
            "description": "\u5207\u6362\u5230\u4E0A\u4E00\u9762\u677F"
          }
        },
        "a-collapse": {
          "_html": {
            "": '<a-collapse v-model:activeKey="${1:activeKey}">\n$2\n</a-collapse>',
            ":accordion": '<a-collapse v-model:activeKey="${1:activeKey}" accordion>\n$2\n</a-collapse>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/collapse-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| accordion| \u624B\u98CE\u7434\u6A21\u5F0F| boolean| false|  |\n| activeKey(v-model)| \u5F53\u524D\u6FC0\u6D3B tab \u9762\u677F\u7684 key| string[] | string  number[] | number| \u9ED8\u8BA4\u65E0\uFF0Caccordion \u6A21\u5F0F\u4E0B\u9ED8\u8BA4\u7B2C\u4E00\u4E2A\u5143\u7D20|  |\n| bordered| \u5E26\u8FB9\u6846\u98CE\u683C\u7684\u6298\u53E0\u9762\u677F| boolean| true|  |\n| collapsible| \u6240\u6709\u5B50\u9762\u677F\u662F\u5426\u53EF\u6298\u53E0\u6216\u6307\u5B9A\u53EF\u6298\u53E0\u89E6\u53D1\u533A\u57DF| header | icon | disabled| -| 4.0 |\n| destroyInactivePanel| \u9500\u6BC1\u6298\u53E0\u9690\u85CF\u7684\u9762\u677F| boolean| false|  |\n| expandIcon| \u81EA\u5B9A\u4E49\u5207\u6362\u56FE\u6807| Function(props):VNode | slot="expandIcon" slot-scope="props"|#expandIcon="props"| |  |\n| expandIconPosition| \u8BBE\u7F6E\u56FE\u6807\u4F4D\u7F6E| start | end| -| 4.0 |\n| ghost| \u4F7F\u6298\u53E0\u9762\u677F\u900F\u660E\u4E14\u65E0\u8FB9\u6846| boolean| false| 3.0 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| change| \u5207\u6362\u9762\u677F\u7684\u56DE\u8C03| function(key)|  |\n',
          "accordion": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u624B\u98CE\u7434\u6A21\u5F0F\uFF0C\u59CB\u7EC8\u53EA\u6709\u4E00\u4E2A\u9762\u677F\u5904\u5728\u6FC0\u6D3B\u72B6\u6001"
          },
          "v-model:activeKey": {
            "type": "attr",
            "values": ["string[]", "string  number[]", "number"],
            "description": "\u5F53\u524D\u6FC0\u6D3B tab \u9762\u677F\u7684 key"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5E26\u8FB9\u6846\u98CE\u683C\u7684\u6298\u53E0\u9762\u677F"
          },
          "collapsible": {
            "type": "attr",
            "values": ["header", "icon", "disabled"],
            "description": "\u6240\u6709\u5B50\u9762\u677F\u662F\u5426\u53EF\u6298\u53E0\u6216\u6307\u5B9A\u53EF\u6298\u53E0\u89E6\u53D1\u533A\u57DF"
          },
          "destroyInactivePanel": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9500\u6BC1\u6298\u53E0\u9690\u85CF\u7684\u9762\u677F"
          },
          "expandIcon": {
            "type": "attr",
            "values": ["Function(props):VNode", 'slot="expandIcon" slot-scope="props"|#expandIcon="props"'],
            "description": "\u81EA\u5B9A\u4E49\u5207\u6362\u56FE\u6807"
          },
          "expandIconPosition": {
            "type": "attr",
            "values": ["start", "end"],
            "description": "\u8BBE\u7F6E\u56FE\u6807\u4F4D\u7F6E"
          },
          "ghost": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4F7F\u6298\u53E0\u9762\u677F\u900F\u660E\u4E14\u65E0\u8FB9\u6846"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5207\u6362\u9762\u677F\u7684\u56DE\u8C03"
          }
        },
        "a-collapse-panel": {
          "_html": {
            "": '<a-collapse-panel key="$1" header="$2">\n$3\n</a-collapse-panel>',
            ":extra[slot]": "<template #extra>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/collapse-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| collapsible| \u662F\u5426\u53EF\u6298\u53E0\u6216\u6307\u5B9A\u53EF\u6298\u53E0\u89E6\u53D1\u533A\u57DF| header | disabled| -| 3.0 |\n| extra| \u81EA\u5B9A\u4E49\u6E32\u67D3\u6BCF\u4E2A\u9762\u677F\u53F3\u4E0A\u89D2\u7684\u5185\u5BB9| VNode | slot| -| 1.5.0 |\n| forceRender| \u88AB\u9690\u85CF\u65F6\u662F\u5426\u6E32\u67D3 DOM \u7ED3\u6784| boolean| false|  |\n| header| \u9762\u677F\u5934\u5185\u5BB9| string|slot| \u65E0|  |\n| key| \u5BF9\u5E94 activeKey| string | number| \u65E0|  |\n| showArrow| \u662F\u5426\u5C55\u793A\u5F53\u524D\u9762\u677F\u4E0A\u7684\u7BAD\u5934| boolean| true|  |\n",
          "collapsible": {
            "type": "attr",
            "values": ["header", "disabled"],
            "description": "\u662F\u5426\u53EF\u6298\u53E0\u6216\u6307\u5B9A\u53EF\u6298\u53E0\u89E6\u53D1\u533A\u57DF"
          },
          "extra": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u6E32\u67D3\u6BCF\u4E2A\u9762\u677F\u53F3\u4E0A\u89D2\u7684\u5185\u5BB9"
          },
          "forceRender": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u88AB\u9690\u85CF\u65F6\u662F\u5426\u6E32\u67D3 DOM \u7ED3\u6784"
          },
          "header": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u9762\u677F\u5934\u5185\u5BB9"
          },
          "key": {
            "type": "attr",
            "values": ["string", "number"],
            "description": "\u5BF9\u5E94 activeKey"
          },
          "showArrow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u5F53\u524D\u9762\u677F\u4E0A\u7684\u7BAD\u5934"
          }
        },
        "a-comment": {
          "_html": {
            "": "<a-comment>$1</a-comment>",
            ":actions[slot]": "<template #actions>\n$1\n</template>",
            ":author[slot]": "<template #author>\n$1\n</template>",
            ":avatar[slot]": "<template #avatar>\n$1\n</template>",
            ":content[slot]": "<template #content>\n$1\n</template>",
            ":datetime[slot]": "<template #datetime>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/comment-cn)\n#### \u5C5E\u6027\n\n| Property| Description| Type| Default |\n| :--- | :--- | :--- | :--- |\n| actions| \u5728\u8BC4\u8BBA\u5185\u5BB9\u4E0B\u9762\u5448\u73B0\u7684\u64CD\u4F5C\u9879\u5217\u8868| Array|slot| - |\n| author| \u8981\u663E\u793A\u4E3A\u6CE8\u91CA\u4F5C\u8005\u7684\u5143\u7D20| string|slot| - |\n| avatar| \u8981\u663E\u793A\u4E3A\u8BC4\u8BBA\u5934\u50CF\u7684\u5143\u7D20 - \u901A\u5E38\u662F antd Avatar \u6216\u8005 src| string|slot| - |\n| content| \u8BC4\u8BBA\u7684\u4E3B\u8981\u5185\u5BB9| string|slot| - |\n| datetime| \u5C55\u793A\u65F6\u95F4\u63CF\u8FF0| string|slot| - |\n",
          "actions": {
            "type": "attr",
            "values": ["Array|slot"],
            "description": "\u5728\u8BC4\u8BBA\u5185\u5BB9\u4E0B\u9762\u5448\u73B0\u7684\u64CD\u4F5C\u9879\u5217\u8868"
          },
          "author": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u8981\u663E\u793A\u4E3A\u6CE8\u91CA\u4F5C\u8005\u7684\u5143\u7D20"
          },
          "avatar": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u8981\u663E\u793A\u4E3A\u8BC4\u8BBA\u5934\u50CF\u7684\u5143\u7D20 - \u901A\u5E38\u662F antd Avatar \u6216\u8005 src"
          },
          "content": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u8BC4\u8BBA\u7684\u4E3B\u8981\u5185\u5BB9"
          },
          "datetime": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5C55\u793A\u65F6\u95F4\u63CF\u8FF0"
          }
        },
        "a-descriptions": {
          "_html": {
            "": '<a-descriptions title="$1">\n$1\n</a-descriptions>',
            ":bordered": '<a-descriptions title="$1" bordered>\n$1\n</a-descriptions>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/descriptions-cn)\n#### \u5C5E\u6027\n#### [](https://www.antdv.com/components/descriptions-cn)#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C| |  |\n| :--- | :--- | :--- | :--- | :--- | :--- | :--- |\n| bordered| \u662F\u5426\u5C55\u793A\u8FB9\u6846| boolean| false| | |  |\n| colon| \u914D\u7F6E Descriptions.Item \u7684 colon \u7684\u9ED8\u8BA4\u503C| boolean| true| | |  |\n| column| \u4E00\u884C\u7684 DescriptionItems \u6570\u91CF\uFF0C\u53EF\u4EE5\u5199\u6210\u50CF\u7D20\u503C\u6216\u652F\u6301\u54CD\u5E94\u5F0F\u7684\u5BF9\u8C61\u5199\u6CD5 { xs: 8, sm: 16, md: 24}| number| 3| | |  |\n| contentStyle| \u81EA\u5B9A\u4E49\u5185\u5BB9\u6837\u5F0F| CSSProperties| -| 2.2.0| |  |\n| extra| \u63CF\u8FF0\u5217\u8868\u7684\u64CD\u4F5C\u533A\u57DF\uFF0C\u663E\u793A\u5728\u53F3\u4E0A\u65B9| string | VNode | slot| -| 2.0.0| |  |\n| labelStyle| \u81EA\u5B9A\u4E49\u6807\u7B7E\u6837\u5F0F| CSSProperties| -| 2.2.0| |  |\n| layout| \u63CF\u8FF0\u5E03\u5C40| horizontal | vertical| horizontal| | |  |\n| size| \u8BBE\u7F6E\u5217\u8868\u7684\u5927\u5C0F\u3002\u53EF\u4EE5\u8BBE\u7F6E\u4E3A middle \u3001small, \u6216\u4E0D\u586B\uFF08\u53EA\u6709\u8BBE\u7F6E bordered={true} \u751F\u6548\uFF09| default | middle | small| default| | |  |\n| title| \u63CF\u8FF0\u5217\u8868\u7684\u6807\u9898\uFF0C\u663E\u793A\u5728\u6700\u9876\u90E8| string | VNode | slot| -| | |  |\n#### [](https://www.antdv.com/components/descriptions-cn)#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| contentStyle| \u81EA\u5B9A\u4E49\u5185\u5BB9\u6837\u5F0F| CSSProperties| -| 2.2.0 |\n| label| \u5185\u5BB9\u7684\u63CF\u8FF0| string | VNode | slot| -|  |\n| labelStyle| \u81EA\u5B9A\u4E49\u6807\u7B7E\u6837\u5F0F| CSSProperties| -| 2.2.0 |\n| span| \u5305\u542B\u5217\u7684\u6570\u91CF| number| 1|  |\n",
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u8FB9\u6846"
          },
          "colon": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u914D\u7F6E Descriptions.Item \u7684 colon \u7684\u9ED8\u8BA4\u503C"
          },
          "column": {
            "type": "attr",
            "values": ["number"],
            "description": "\u4E00\u884C\u7684 DescriptionItems \u6570\u91CF\uFF0C\u53EF\u4EE5\u5199\u6210\u50CF\u7D20\u503C\u6216\u652F\u6301\u54CD\u5E94\u5F0F\u7684\u5BF9\u8C61\u5199\u6CD5 { xs: 8, sm: 16, md: 24}"
          },
          "contentStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u81EA\u5B9A\u4E49\u5185\u5BB9\u6837\u5F0F"
          },
          "extra": {
            "type": "attr",
            "values": ["string", "VNode", "slot"],
            "description": "\u63CF\u8FF0\u5217\u8868\u7684\u64CD\u4F5C\u533A\u57DF\uFF0C\u663E\u793A\u5728\u53F3\u4E0A\u65B9"
          },
          "labelStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u81EA\u5B9A\u4E49\u6807\u7B7E\u6837\u5F0F"
          },
          "layout": {
            "type": "attr",
            "values": ["horizontal", "vertical"],
            "description": "\u63CF\u8FF0\u5E03\u5C40"
          },
          "size": {
            "type": "attr",
            "values": ["default", "middle", "small"],
            "description": "\u8BBE\u7F6E\u5217\u8868\u7684\u5927\u5C0F\u3002\u53EF\u4EE5\u8BBE\u7F6E\u4E3A middle \u3001small, \u6216\u4E0D\u586B\uFF08\u53EA\u6709\u8BBE\u7F6E bordered={true} \u751F\u6548\uFF09"
          },
          "title": {
            "type": "attr",
            "values": ["string", "VNode", "slot"],
            "description": "\u63CF\u8FF0\u5217\u8868\u7684\u6807\u9898\uFF0C\u663E\u793A\u5728\u6700\u9876\u90E8"
          },
          "label": {
            "type": "attr",
            "values": ["string", "VNode", "slot"],
            "description": "\u5185\u5BB9\u7684\u63CF\u8FF0"
          },
          "span": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5305\u542B\u5217\u7684\u6570\u91CF"
          }
        },
        "a-descriptions-item": {
          "_html": {
            "": '<a-descriptions-item label="$1">$2</a-descriptions-item>'
          }
        },
        "a-empty": {
          "_html": {
            "": "<a-empty>$1</a-empty>",
            ":image": '<a-empty :image="$1">$2</a-empty>',
            ":description[slot]": "<template #description>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/empty-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| description| \u81EA\u5B9A\u4E49\u63CF\u8FF0\u5185\u5BB9| string | v-slot| -|  |\n| image| \u8BBE\u7F6E\u663E\u793A\u56FE\u7247\uFF0C\u4E3A string \u65F6\u8868\u793A\u81EA\u5B9A\u4E49\u56FE\u7247\u5730\u5740| string | v-slot| false|  |\n| imageStyle| \u56FE\u7247\u6837\u5F0F| CSSProperties| -|  |\n",
          "description": {
            "type": "attr",
            "values": ["string", "v-slot"],
            "description": "\u81EA\u5B9A\u4E49\u63CF\u8FF0\u5185\u5BB9"
          },
          "image": {
            "type": "attr",
            "values": ["string", "v-slot"],
            "description": "\u8BBE\u7F6E\u663E\u793A\u56FE\u7247\uFF0C\u4E3A string \u65F6\u8868\u793A\u81EA\u5B9A\u4E49\u56FE\u7247\u5730\u5740"
          },
          "imageStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u56FE\u7247\u6837\u5F0F"
          }
        },
        "a-image": {
          "_html": {
            "": '<a-image :width="${1:200}" src="$2">$3</a-image>',
            ":preview": '<a-image :width="${1:200}" src="$2" :preview="$3">$4</a-image>',
            ":fallback": '<a-image :width="${1:200}" src="$2" fallback="$3">$4</a-image>',
            ":placeholder[slot]": "<template #placeholder>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/image-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| alt| \u56FE\u50CF\u63CF\u8FF0| string| -| 2.0.0 |\n| fallback| \u52A0\u8F7D\u5931\u8D25\u5BB9\u9519\u5730\u5740| string| -| 2.0.0 |\n| height| \u56FE\u50CF\u9AD8\u5EA6| string | number| -| 2.0.0 |\n| placeholder| \u52A0\u8F7D\u5360\u4F4D, \u4E3A true \u65F6\u4F7F\u7528\u9ED8\u8BA4\u5360\u4F4D| boolean | slot| -| 2.0.0 |\n| preview| \u9884\u89C8\u53C2\u6570\uFF0C\u4E3A false \u65F6\u7981\u7528| boolean | previewType| true| 2.0.0 |\n| src| \u56FE\u7247\u5730\u5740| string| -| 2.0.0 |\n| previewMask| \u81EA\u5B9A\u4E49 mask| false | function | slot| -| 3.2.0 |\n| width| \u56FE\u50CF\u5BBD\u5EA6| string | number| -| 2.0.0 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| error| \u52A0\u8F7D\u9519\u8BEF\u56DE\u8C03| (event: Event) => void| 3.2.0 |\n",
          "alt": {
            "type": "attr",
            "values": [],
            "description": "\u56FE\u50CF\u63CF\u8FF0"
          },
          "fallback": {
            "type": "attr",
            "values": [],
            "description": "\u52A0\u8F7D\u5931\u8D25\u5BB9\u9519\u5730\u5740"
          },
          "height": {
            "type": "attr",
            "values": ["string", "number"],
            "description": "\u56FE\u50CF\u9AD8\u5EA6"
          },
          "placeholder": {
            "type": "attr",
            "values": ["boolean", "slot"],
            "description": "\u52A0\u8F7D\u5360\u4F4D, \u4E3A true \u65F6\u4F7F\u7528\u9ED8\u8BA4\u5360\u4F4D"
          },
          "preview": {
            "type": "attr",
            "values": ["boolean", "previewType"],
            "description": "\u9884\u89C8\u53C2\u6570\uFF0C\u4E3A false \u65F6\u7981\u7528"
          },
          "src": {
            "type": "attr",
            "values": [],
            "description": "\u56FE\u7247\u5730\u5740"
          },
          "previewMask": {
            "type": "attr",
            "values": ["false", "function", "slot"],
            "description": "\u81EA\u5B9A\u4E49 mask"
          },
          "width": {
            "type": "attr",
            "values": ["string", "number"],
            "description": "\u56FE\u50CF\u5BBD\u5EA6"
          },
          "error": {
            "type": "event",
            "values": [],
            "description": "\u52A0\u8F7D\u9519\u8BEF\u56DE\u8C03"
          }
        },
        "a-image-preview-group": {
          "_html": {
            "": "<a-image-preview-group>$1</a-image-preview-group>"
          }
        },
        "a-list": {
          "_html": {
            "": '<a-list item-layout="horizontal" :data-source="${1:data}">\n$2\n</a-list>',
            ":renderItem[slot]": '<template #renderItem="{ item }">\n$1\n</template>',
            ":loadMore[slot]": "<template #loadMore>\n$1\n</template>",
            ":footer[slot]": "<template #footer>\n$1\n</template>"
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/list-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C|  |
| :--- | :--- | :--- | :--- | :--- | :--- |
| bordered| \u662F\u5426\u5C55\u793A\u8FB9\u6846| boolean| false| |  |
| dataSource| \u5217\u8868\u6570\u636E\u6E90| any[]| -| 1.5.0|  |
| footer| \u5217\u8868\u5E95\u90E8| string|slot| -| |  |
| grid| \u5217\u8868\u6805\u683C\u914D\u7F6E| object| -| |  |
| header| \u5217\u8868\u5934\u90E8| string|slot| -| |  |
| itemLayout| \u8BBE\u7F6E List.Item \u5E03\u5C40, \u8BBE\u7F6E\u6210 vertical \u5219\u7AD6\u76F4\u6837\u5F0F\u663E\u793A, \u9ED8\u8BA4\u6A2A\u6392| string| -| |  |
| loading| \u5F53\u5361\u7247\u5185\u5BB9\u8FD8\u5728\u52A0\u8F7D\u4E2D\u65F6\uFF0C\u53EF\u4EE5\u7528 loading \u5C55\u793A\u4E00\u4E2A\u5360\u4F4D| boolean|object| false| |  |
| loadMore| \u52A0\u8F7D\u66F4\u591A| string|slot| -| |  |
| locale| \u9ED8\u8BA4\u6587\u6848\u8BBE\u7F6E\uFF0C\u76EE\u524D\u5305\u62EC\u7A7A\u6570\u636E\u6587\u6848| object| emptyText: '\u6682\u65E0\u6570\u636E'| |  |
| pagination| \u5BF9\u5E94\u7684 pagination \u914D\u7F6E, \u8BBE\u7F6E false \u4E0D\u663E\u793A| boolean|object| false| |  |
| renderItem| \u81EA\u5B9A\u4E49Item\u51FD\u6570\uFF0C\u4E5F\u53EF\u4F7F\u7528 #renderItem="{item, index}"| ({item, index}) => vNode| | -|  |
| rowKey| \u5404\u9879 key \u7684\u53D6\u503C\uFF0C\u53EF\u4EE5\u662F\u5B57\u7B26\u4E32\u6216\u4E00\u4E2A\u51FD\u6570| item => string|number| | |  |
| size| list \u7684\u5C3A\u5BF8| default | middle | small| default| |  |
| split| \u662F\u5426\u5C55\u793A\u5206\u5272\u7EBF| boolean| true| |  |
`,
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u8FB9\u6846"
          },
          "dataSource": {
            "type": "attr",
            "values": ["any[]"],
            "description": "\u5217\u8868\u6570\u636E\u6E90"
          },
          "footer": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5217\u8868\u5E95\u90E8"
          },
          "grid": {
            "type": "attr",
            "values": ["object"],
            "description": "\u5217\u8868\u6805\u683C\u914D\u7F6E"
          },
          "header": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5217\u8868\u5934\u90E8"
          },
          "itemLayout": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E List.Item \u5E03\u5C40, \u8BBE\u7F6E\u6210 vertical \u5219\u7AD6\u76F4\u6837\u5F0F\u663E\u793A, \u9ED8\u8BA4\u6A2A\u6392"
          },
          "loading": {
            "type": "attr",
            "values": ["boolean|object"],
            "description": "\u5F53\u5361\u7247\u5185\u5BB9\u8FD8\u5728\u52A0\u8F7D\u4E2D\u65F6\uFF0C\u53EF\u4EE5\u7528 loading \u5C55\u793A\u4E00\u4E2A\u5360\u4F4D"
          },
          "loadMore": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u52A0\u8F7D\u66F4\u591A"
          },
          "locale": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9ED8\u8BA4\u6587\u6848\u8BBE\u7F6E\uFF0C\u76EE\u524D\u5305\u62EC\u7A7A\u6570\u636E\u6587\u6848"
          },
          "pagination": {
            "type": "attr",
            "values": ["boolean|object"],
            "description": "\u5BF9\u5E94\u7684 pagination \u914D\u7F6E, \u8BBE\u7F6E false \u4E0D\u663E\u793A"
          },
          "renderItem": {
            "type": "attr",
            "values": [],
            "description": '\u81EA\u5B9A\u4E49Item\u51FD\u6570\uFF0C\u4E5F\u53EF\u4F7F\u7528 #renderItem="{item, index}"'
          },
          "rowKey": {
            "type": "attr",
            "values": ["item => string|number"],
            "description": "\u5404\u9879 key \u7684\u53D6\u503C\uFF0C\u53EF\u4EE5\u662F\u5B57\u7B26\u4E32\u6216\u4E00\u4E2A\u51FD\u6570"
          },
          "size": {
            "type": "attr",
            "values": ["default", "middle", "small"],
            "description": "list \u7684\u5C3A\u5BF8"
          },
          "split": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u5206\u5272\u7EBF"
          }
        },
        "a-list-item": {
          "_html": {
            "": "<a-list-item>$1</a-list-item>",
            ":actions[slot]": "<template #actions>\n$1\n</template>",
            ":extra[slot]": "<template #extra>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/list-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| actions| \u5217\u8868\u64CD\u4F5C\u7EC4\uFF0C\u6839\u636E itemLayout \u7684\u4E0D\u540C, \u4F4D\u7F6E\u5728\u5361\u7247\u5E95\u90E8\u6216\u8005\u6700\u53F3\u4FA7| vNode[] | slot| -|  |\n| extra| \u989D\u5916\u5185\u5BB9, \u901A\u5E38\u7528\u5728 itemLayout \u4E3A vertical \u7684\u60C5\u51B5\u4E0B, \u5C55\u793A\u53F3\u4FA7\u5185\u5BB9; horizontal \u5C55\u793A\u5728\u5217\u8868\u5143\u7D20\u6700\u53F3\u4FA7| string|slot| -|  |\n",
          "actions": {
            "type": "attr",
            "values": ["vNode[]", "slot"],
            "description": "\u5217\u8868\u64CD\u4F5C\u7EC4\uFF0C\u6839\u636E itemLayout \u7684\u4E0D\u540C, \u4F4D\u7F6E\u5728\u5361\u7247\u5E95\u90E8\u6216\u8005\u6700\u53F3\u4FA7"
          },
          "extra": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u989D\u5916\u5185\u5BB9, \u901A\u5E38\u7528\u5728 itemLayout \u4E3A vertical \u7684\u60C5\u51B5\u4E0B, \u5C55\u793A\u53F3\u4FA7\u5185\u5BB9; horizontal \u5C55\u793A\u5728\u5217\u8868\u5143\u7D20\u6700\u53F3\u4FA7"
          }
        },
        "a-list-item-meta": {
          "_html": {
            "": '<a-list-item-meta description="$1">$2</a-list-item-meta>',
            ":title[slot]": "<template #title>\n$1\n</template>",
            ":avatar[slot]": "<template #avatar>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/list-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| avatar| \u5217\u8868\u5143\u7D20\u7684\u56FE\u6807| slot| - |\n| description| \u5217\u8868\u5143\u7D20\u7684\u63CF\u8FF0\u5185\u5BB9| string|slot| - |\n| title| \u5217\u8868\u5143\u7D20\u7684\u6807\u9898| string|slot| - |\n",
          "avatar": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u5217\u8868\u5143\u7D20\u7684\u56FE\u6807"
          },
          "description": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5217\u8868\u5143\u7D20\u7684\u63CF\u8FF0\u5185\u5BB9"
          },
          "title": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5217\u8868\u5143\u7D20\u7684\u6807\u9898"
          }
        },
        "a-popover": {
          "_html": {
            "": '<a-popover placement="${1:topLeft}">\n$2\n</a-popover>',
            ":trigger": '<a-popover placement="${1:topLeft}" trigger="${2:hover}">\n$3\n</a-popover>',
            ":content[slot]": "<template #content>\n$1\n</template>",
            ":title[slot]": "<template #title>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/popover-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| content| \u5361\u7247\u5185\u5BB9| string|slot|VNode| -|  |\n| title| \u5361\u7247\u6807\u9898| string|slot|VNode| -|  |\n",
          "content": {
            "type": "attr",
            "values": ["string|slot|VNode"],
            "description": "\u5361\u7247\u5185\u5BB9"
          },
          "title": {
            "type": "attr",
            "values": ["string|slot|VNode"],
            "description": "\u5361\u7247\u6807\u9898"
          }
        },
        "a-qrcode": {
          "_html": {
            "": '<a-qrcode :value="${1:text}">$2</a-qrcode>',
            ":color": '<a-qrcode :value="${1:text}" :color="$2" :bg-color="$3">$4</a-qrcode>',
            ":expired": '<a-qrcode :value="${1:text}" status="expired" @refresh="${2:refresh}">$3</a-qrcode>',
            ":icon": '<a-qrcode :value="${1:text}" icon="$2">$3</a-qrcode>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/qrcode-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| version |
| :--- | :--- | :--- | :--- | :--- |
| value| \u626B\u63CF\u540E\u7684\u5730\u5740| string| -|  |
| type| \u6E32\u67D3\u7C7B\u578B| 'canvas' | 'svg'| canvas|  |
| icon| \u4E8C\u7EF4\u7801\u4E2D\u56FE\u7247\u7684\u5730\u5740\uFF08\u76EE\u524D\u53EA\u652F\u6301\u56FE\u7247\u5730\u5740\uFF09| string| -|  |
| size| \u4E8C\u7EF4\u7801\u5927\u5C0F| number| 160|  |
| iconSize| \u4E8C\u7EF4\u7801\u4E2D\u56FE\u7247\u7684\u5927\u5C0F| number| 40|  |
| color| \u4E8C\u7EF4\u7801\u989C\u8272| string| #000|  |
| bgColor| \u4E8C\u7EF4\u7801\u80CC\u666F\u989C\u8272| string| transparent|  |
| bordered| \u662F\u5426\u6709\u8FB9\u6846| boolean| true|  |
| errorLevel| \u4E8C\u7EF4\u7801\u7EA0\u9519\u7B49\u7EA7| 'L' | 'M' | 'Q' | 'H'| 'M'|  |
| status| \u4E8C\u7EF4\u7801\u72B6\u6001| active | expired | loading | scanned| active| scanned: 4.0.9 |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |
| :--- | :--- | :--- | :--- |
| refresh| \u70B9\u51FB"\u70B9\u51FB\u5237\u65B0"\u7684\u56DE\u8C03| () => void| - |
`,
          "value": {
            "type": "attr",
            "values": [],
            "description": "\u626B\u63CF\u540E\u7684\u5730\u5740"
          },
          "type": {
            "type": "attr",
            "values": ["'canvas'", "'svg'"],
            "description": "\u6E32\u67D3\u7C7B\u578B"
          },
          "icon": {
            "type": "attr",
            "values": [],
            "description": "\u4E8C\u7EF4\u7801\u4E2D\u56FE\u7247\u7684\u5730\u5740\uFF08\u76EE\u524D\u53EA\u652F\u6301\u56FE\u7247\u5730\u5740\uFF09"
          },
          "size": {
            "type": "attr",
            "values": ["number"],
            "description": "\u4E8C\u7EF4\u7801\u5927\u5C0F"
          },
          "iconSize": {
            "type": "attr",
            "values": ["number"],
            "description": "\u4E8C\u7EF4\u7801\u4E2D\u56FE\u7247\u7684\u5927\u5C0F"
          },
          "color": {
            "type": "attr",
            "values": [],
            "description": "\u4E8C\u7EF4\u7801\u989C\u8272"
          },
          "bgColor": {
            "type": "attr",
            "values": [],
            "description": "\u4E8C\u7EF4\u7801\u80CC\u666F\u989C\u8272"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6709\u8FB9\u6846"
          },
          "errorLevel": {
            "type": "attr",
            "values": ["'L'", "'M'", "'Q'", "'H'"],
            "description": "\u4E8C\u7EF4\u7801\u7EA0\u9519\u7B49\u7EA7"
          },
          "status": {
            "type": "attr",
            "values": ["active", "expired", "loading", "scanned"],
            "description": "\u4E8C\u7EF4\u7801\u72B6\u6001"
          },
          "refresh": {
            "type": "event",
            "values": [],
            "description": '\u70B9\u51FB"\u70B9\u51FB\u5237\u65B0"\u7684\u56DE\u8C03'
          }
        },
        "a-segmented": {
          "_html": {
            "": '<a-segmented v-model:value="${1:value}" :options="${2:data}">$3</a-segmented>',
            ":block": '<a-segmented v-model:value="${1:value}" :options="${2:data}" block>$3</a-segmented>',
            ":label[slot]": '<template #label="{ value: val, payload = {} }">\n$1\n</template>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/segmented-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| block| \u5C06\u5BBD\u5EA6\u8C03\u6574\u4E3A\u7236\u5143\u7D20\u5BBD\u5EA6\u7684\u9009\u9879| boolean| \u65E0|  |\n| disabled| \u662F\u5426\u7981\u7528| boolean| false|  |\n| options| \u6570\u636E\u5316\u914D\u7F6E\u9009\u9879\u5185\u5BB9| string[] | number[] | SegmentedOption[]| []|  |\n| size| \u63A7\u4EF6\u5C3A\u5BF8| large | middle | small| -|  |\n| value| \u5F53\u524D\u9009\u4E2D\u7684\u503C| string | number| |  |\n| label| \u4F7F\u7528\u63D2\u69FD\u81EA\u5B9A\u4E49 label| v-slot:label="SegmentedBaseOption"| |  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570|  |\n| :--- | :--- | :--- | :--- |\n| change| \u9009\u9879\u53D8\u5316\u65F6\u7684\u56DE\u8C03\u51FD\u6570| function(value: string | number)| - |\n',
          "block": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5C06\u5BBD\u5EA6\u8C03\u6574\u4E3A\u7236\u5143\u7D20\u5BBD\u5EA6\u7684\u9009\u9879"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7981\u7528"
          },
          "options": {
            "type": "attr",
            "values": ["string[]", "number[]", "SegmentedOption[]"],
            "description": "\u6570\u636E\u5316\u914D\u7F6E\u9009\u9879\u5185\u5BB9"
          },
          "size": {
            "type": "attr",
            "values": ["large", "middle", "small"],
            "description": "\u63A7\u4EF6\u5C3A\u5BF8"
          },
          "value": {
            "type": "attr",
            "values": ["string", "number"],
            "description": "\u5F53\u524D\u9009\u4E2D\u7684\u503C"
          },
          "label": {
            "type": "attr",
            "values": ['v-slot:label="SegmentedBaseOption"'],
            "description": "\u4F7F\u7528\u63D2\u69FD\u81EA\u5B9A\u4E49 label"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u9009\u9879\u53D8\u5316\u65F6\u7684\u56DE\u8C03\u51FD\u6570"
          }
        },
        "a-statistic": {
          "_html": {
            "": '<a-statistic title="$1" :value="$2">$3</a-statistic>',
            ":suffix[slot]": "<template #suffix>\n$1\n</template>",
            ":prefix[slot]": "<template #prefix>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/statistic-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| decimalSeparator| \u8BBE\u7F6E\u5C0F\u6570\u70B9| string| . |\n| formatter| \u81EA\u5B9A\u4E49\u6570\u503C\u5C55\u793A| v-slot | ({value}) => VNode| - |\n| groupSeparator| \u8BBE\u7F6E\u5343\u5206\u4F4D\u6807\u8BC6\u7B26| string| , |\n| precision| \u6570\u503C\u7CBE\u5EA6| number| - |\n| prefix| \u8BBE\u7F6E\u6570\u503C\u7684\u524D\u7F00| string | v-slot| - |\n| suffix| \u8BBE\u7F6E\u6570\u503C\u7684\u540E\u7F00| string | v-slot| - |\n| title| \u6570\u503C\u7684\u6807\u9898| string | v-slot| - |\n| value| \u6570\u503C\u5185\u5BB9| string | number| - |\n| valueStyle| \u8BBE\u7F6E\u6570\u503C\u7684\u6837\u5F0F| style| - |\n",
          "decimalSeparator": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u5C0F\u6570\u70B9"
          },
          "formatter": {
            "type": "attr",
            "values": ["v-slot"],
            "description": "\u81EA\u5B9A\u4E49\u6570\u503C\u5C55\u793A"
          },
          "groupSeparator": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u5343\u5206\u4F4D\u6807\u8BC6\u7B26"
          },
          "precision": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6570\u503C\u7CBE\u5EA6"
          },
          "prefix": {
            "type": "attr",
            "values": ["string", "v-slot"],
            "description": "\u8BBE\u7F6E\u6570\u503C\u7684\u524D\u7F00"
          },
          "suffix": {
            "type": "attr",
            "values": ["string", "v-slot"],
            "description": "\u8BBE\u7F6E\u6570\u503C\u7684\u540E\u7F00"
          },
          "title": {
            "type": "attr",
            "values": ["string", "v-slot"],
            "description": "\u6570\u503C\u7684\u6807\u9898"
          },
          "value": {
            "type": "attr",
            "values": ["string", "number"],
            "description": "\u6570\u503C\u5185\u5BB9"
          },
          "valueStyle": {
            "type": "attr",
            "values": ["style"],
            "description": "\u8BBE\u7F6E\u6570\u503C\u7684\u6837\u5F0F"
          }
        },
        "a-statistic-countdown": {
          "_html": {
            "": '<a-statistic-countdown title="$1" :value="$2" @finish="${3:onFinish}">$4</a-statistic-countdown>',
            ":format": '<a-statistic-countdown title="$1" :value="$2" format="D \u5929 H \u65F6 m \u5206 s \u79D2" @finish="${3:onFinish}">$4</a-statistic-countdown>',
            ":title[slot]": "<template #title>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/statistic-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| format| \u683C\u5F0F\u5316\u5012\u8BA1\u65F6\u5C55\u793A\uFF0C\u53C2\u8003 dayjs| string| 'HH:mm:ss' |\n| prefix| \u8BBE\u7F6E\u6570\u503C\u7684\u524D\u7F00| string | v-slot| - |\n| suffix| \u8BBE\u7F6E\u6570\u503C\u7684\u540E\u7F00| string | v-slot| - |\n| title| \u6570\u503C\u7684\u6807\u9898| string | v-slot| - |\n| value| \u6570\u503C\u5185\u5BB9| number | dayjs| - |\n| valueStyle| \u8BBE\u7F6E\u6570\u503C\u7684\u6837\u5F0F| style| - |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| finish| \u5012\u8BA1\u65F6\u5B8C\u6210\u65F6\u89E6\u53D1| () => void |\n",
          "format": {
            "type": "attr",
            "values": [],
            "description": "\u683C\u5F0F\u5316\u5012\u8BA1\u65F6\u5C55\u793A\uFF0C\u53C2\u8003 dayjs"
          },
          "prefix": {
            "type": "attr",
            "values": ["string", "v-slot"],
            "description": "\u8BBE\u7F6E\u6570\u503C\u7684\u524D\u7F00"
          },
          "suffix": {
            "type": "attr",
            "values": ["string", "v-slot"],
            "description": "\u8BBE\u7F6E\u6570\u503C\u7684\u540E\u7F00"
          },
          "title": {
            "type": "attr",
            "values": ["string", "v-slot"],
            "description": "\u6570\u503C\u7684\u6807\u9898"
          },
          "value": {
            "type": "attr",
            "values": ["number", "dayjs"],
            "description": "\u6570\u503C\u5185\u5BB9"
          },
          "valueStyle": {
            "type": "attr",
            "values": ["style"],
            "description": "\u8BBE\u7F6E\u6570\u503C\u7684\u6837\u5F0F"
          },
          "finish": {
            "type": "event",
            "values": [],
            "description": "\u5012\u8BA1\u65F6\u5B8C\u6210\u65F6\u89E6\u53D1"
          }
        },
        "a-table": {
          "_html": {
            "": '<a-table :columns="${1:columns}" :data-source="${2:data}">\n$3\n</a-table>',
            ":headerCell[slot]": '<template #headerCell="{ column }">\n$1\n</template>',
            ":bodyCell[slot]": '<template #bodyCell="{ text, record, index, column }">\n$1\n</template>',
            ":title[slot]": "<template #title>\n$1\n</template>",
            ":footer[slot]": "<template #footer>\n$1\n</template>",
            ":customFilterDropdown[slot]": '<template #customFilterDropdown="{ setSelectedKeys, selectedKeys, confirm, clearFilters, column }">\n$1\n</template>',
            ":customFilterIcon[slot]": "<template #customFilterIcon>\n$1\n</template>",
            ":summary[slot]": "<template #summary>\n$1\n</template>"
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/table-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |
| :--- | :--- | :--- | :--- | :--- |
| bodyCell| \u4E2A\u6027\u5316\u5355\u5143\u683C| v-slot:bodyCell="{text, record, index, column}"| -| 3.0 |
| bordered| \u662F\u5426\u5C55\u793A\u5916\u8FB9\u6846\u548C\u5217\u8FB9\u6846| boolean| false|  |
| childrenColumnName| \u6307\u5B9A\u6811\u5F62\u7ED3\u6784\u7684\u5217\u540D| string| children|  |
| columns| \u8868\u683C\u5217\u7684\u914D\u7F6E\u63CF\u8FF0\uFF0C\u5177\u4F53\u9879\u89C1\u4E0B\u8868| array| -|  |
| components| \u8986\u76D6\u9ED8\u8BA4\u7684 table \u5143\u7D20| object| -|  |
| customFilterDropdown| \u81EA\u5B9A\u4E49\u7B5B\u9009\u83DC\u5355\uFF0C\u9700\u8981\u914D\u5408 column.customFilterDropdown \u4F7F\u7528| v-slot:customFilterDropdown="FilterDropdownProps"| -| 3.0 |
| customFilterIcon| \u81EA\u5B9A\u4E49\u7B5B\u9009\u56FE\u6807| v-slot:customFilterIcon="{filtered, column}"| -| 3.0 |
| customHeaderRow| \u8BBE\u7F6E\u5934\u90E8\u884C\u5C5E\u6027| Function(columns, index)| -|  |
| customRow| \u8BBE\u7F6E\u884C\u5C5E\u6027| Function(record, index)| -|  |
| dataSource| \u6570\u636E\u6570\u7EC4| object[]| |  |
| defaultExpandAllRows| \u521D\u59CB\u65F6\uFF0C\u662F\u5426\u5C55\u5F00\u6240\u6709\u884C| boolean| false|  |
| defaultExpandedRowKeys| \u9ED8\u8BA4\u5C55\u5F00\u7684\u884C| string[]| -|  |
| emptyText| \u81EA\u5B9A\u4E49\u7A7A\u6570\u636E\u65F6\u7684\u663E\u793A\u5185\u5BB9| v-slot:emptyText| -| 3.0 |
| expandedRowKeys(v-model)| \u5C55\u5F00\u7684\u884C\uFF0C\u63A7\u5236\u5C5E\u6027| string[]| -|  |
| expandedRowRender| \u989D\u5916\u7684\u5C55\u5F00\u884C| Function(record, index, indent, expanded):VNode | v-slot:expandedRowRender="{record, index, indent, expanded}"| -|  |
| expandFixed| \u63A7\u5236\u5C55\u5F00\u56FE\u6807\u662F\u5426\u56FA\u5B9A\uFF0C\u53EF\u9009 true left right| boolean | string| false| 3.0 |
| expandColumnTitle| \u81EA\u5B9A\u4E49\u5C55\u5F00\u5217\u8868\u5934| v-slot| -| 4.0.0 |
| expandIcon| \u81EA\u5B9A\u4E49\u5C55\u5F00\u56FE\u6807| Function(props):VNode | v-slot:expandIcon="props"| -|  |
| expandRowByClick| \u901A\u8FC7\u70B9\u51FB\u884C\u6765\u5C55\u5F00\u5B50\u884C| boolean| false|  |
| footer| \u8868\u683C\u5C3E\u90E8| Function(currentPageData)|v-slot:footer="currentPageData"| |  |
| getPopupContainer| \u8BBE\u7F6E\u8868\u683C\u5185\u5404\u7C7B\u6D6E\u5C42\u7684\u6E32\u67D3\u8282\u70B9\uFF0C\u5982\u7B5B\u9009\u83DC\u5355| (triggerNode) => HTMLElement| () => TableHtmlElement| 1.5.0 |
| headerCell| \u4E2A\u6027\u5316\u5934\u90E8\u5355\u5143\u683C| v-slot:headerCell="{title, column}"| -| 3.0 |
| indentSize| \u5C55\u793A\u6811\u5F62\u6570\u636E\u65F6\uFF0C\u6BCF\u5C42\u7F29\u8FDB\u7684\u5BBD\u5EA6\uFF0C\u4EE5 px \u4E3A\u5355\u4F4D| number| 15|  |
| loading| \u9875\u9762\u662F\u5426\u52A0\u8F7D\u4E2D| boolean|object| false|  |
| locale| \u9ED8\u8BA4\u6587\u6848\u8BBE\u7F6E\uFF0C\u76EE\u524D\u5305\u62EC\u6392\u5E8F\u3001\u8FC7\u6EE4\u3001\u7A7A\u6570\u636E\u6587\u6848| object| filterConfirm: \u786E\u5B9A  filterReset: \u91CD\u7F6E  emptyText: \u6682\u65E0\u6570\u636E|  |
| pagination| \u5206\u9875\u5668\uFF0C\u53C2\u8003\u914D\u7F6E\u9879\u6216 pagination\u6587\u6863\uFF0C\u8BBE\u4E3A false \u65F6\u4E0D\u5C55\u793A\u548C\u8FDB\u884C\u5206\u9875| object | false| |  |
| rowClassName| \u8868\u683C\u884C\u7684\u7C7B\u540D| Function(record, index):string| -|  |
| rowExpandable| \u8BBE\u7F6E\u662F\u5426\u5141\u8BB8\u884C\u5C55\u5F00| (record) => boolean| -| 3.0 |
| rowKey| \u8868\u683C\u884C key \u7684\u53D6\u503C\uFF0C\u53EF\u4EE5\u662F\u5B57\u7B26\u4E32\u6216\u4E00\u4E2A\u51FD\u6570| string|Function(record):string| 'key'|  |
| rowSelection| \u5217\u8868\u9879\u662F\u5426\u53EF\u9009\u62E9\uFF0C\u914D\u7F6E\u9879| object| null|  |
| scroll| \u8868\u683C\u662F\u5426\u53EF\u6EDA\u52A8\uFF0C\u4E5F\u53EF\u4EE5\u6307\u5B9A\u6EDA\u52A8\u533A\u57DF\u7684\u5BBD\u3001\u9AD8\uFF0C\u914D\u7F6E\u9879| object| -|  |
| showExpandColumn| \u8BBE\u7F6E\u662F\u5426\u5C55\u793A\u884C\u5C55\u5F00\u5217| boolean| true| 3.0 |
| showHeader| \u662F\u5426\u663E\u793A\u8868\u5934| boolean| true|  |
| showSorterTooltip| \u8868\u5934\u662F\u5426\u663E\u793A\u4E0B\u4E00\u6B21\u6392\u5E8F\u7684 tooltip \u63D0\u793A\u3002\u5F53\u53C2\u6570\u7C7B\u578B\u4E3A\u5BF9\u8C61\u65F6\uFF0C\u5C06\u88AB\u8BBE\u7F6E\u4E3A Tooltip \u7684\u5C5E\u6027| boolean | Tooltip props| true| 3.0 |
| size| \u8868\u683C\u5927\u5C0F| large | middle | small| large|  |
| sortDirections| \u652F\u6301\u7684\u6392\u5E8F\u65B9\u5F0F\uFF0C\u53D6\u503C\u4E3A ascend descend| Array| [ascend, descend]|  |
| sticky| \u8BBE\u7F6E\u7C98\u6027\u5934\u90E8\u548C\u6EDA\u52A8\u6761| boolean | {offsetHeader?: number, offsetScroll?: number, getContainer?: () => HTMLElement}| -| 3.0 |
| summary| \u603B\u7ED3\u680F| v-slot:summary| -| 3.0 |
| tableLayout| \u8868\u683C\u5143\u7D20\u7684 table-layout \u5C5E\u6027\uFF0C\u8BBE\u4E3A fixed \u8868\u793A\u5185\u5BB9\u4E0D\u4F1A\u5F71\u54CD\u5217\u7684\u5E03\u5C40| - | 'auto' | 'fixed'| \u65E0\u56FA\u5B9A\u8868\u5934/\u5217\u6216\u4F7F\u7528\u4E86 column.ellipsis \u65F6\uFF0C\u9ED8\u8BA4\u503C\u4E3A fixed| 1.5.0 |
| title| \u8868\u683C\u6807\u9898| Function(currentPageData)|v-slot:title="currentPageData"| |  |
| transformCellText| \u6570\u636E\u6E32\u67D3\u524D\u53EF\u4EE5\u518D\u6B21\u6539\u53D8\uFF0C\u4E00\u822C\u7528\u4E8E\u7A7A\u6570\u636E\u7684\u9ED8\u8BA4\u914D\u7F6E\uFF0C\u53EF\u4EE5\u901A\u8FC7 ConfigProvider \u5168\u5C40\u7EDF\u4E00\u914D\u7F6E| Function({ text, column, record, index }) => any\uFF0C\u6B64\u5904\u7684 text \u662F\u7ECF\u8FC7\u5176\u5B83\u5B9A\u4E49\u5355\u5143\u683C api \u5904\u7406\u540E\u7684\u6570\u636E\uFF0C\u6709\u53EF\u80FD\u662F VNode | string | number \u7C7B\u578B| -| 1.5.4 |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |
| :--- | :--- | :--- |
| change| \u5206\u9875\u3001\u6392\u5E8F\u3001\u7B5B\u9009\u53D8\u5316\u65F6\u89E6\u53D1| Function(pagination, filters, sorter, { currentDataSource }) |
| expand| \u70B9\u51FB\u5C55\u5F00\u56FE\u6807\u65F6\u89E6\u53D1| Function(expanded, record) |
| expandedRowsChange| \u5C55\u5F00\u7684\u884C\u53D8\u5316\u65F6\u89E6\u53D1| Function(expandedRows) |
| resizeColumn| \u62D6\u52A8\u5217\u65F6\u89E6\u53D1| Function(width, column) |
`,
          "bodyCell": {
            "type": "attr",
            "values": [],
            "description": "\u4E2A\u6027\u5316\u5355\u5143\u683C"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u5916\u8FB9\u6846\u548C\u5217\u8FB9\u6846"
          },
          "childrenColumnName": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u5B9A\u6811\u5F62\u7ED3\u6784\u7684\u5217\u540D"
          },
          "columns": {
            "type": "attr",
            "values": ["array"],
            "description": "\u8868\u683C\u5217\u7684\u914D\u7F6E\u63CF\u8FF0\uFF0C\u5177\u4F53\u9879\u89C1\u4E0B\u8868"
          },
          "components": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8986\u76D6\u9ED8\u8BA4\u7684 table \u5143\u7D20"
          },
          "customFilterDropdown": {
            "type": "attr",
            "values": ['v-slot:customFilterDropdown="FilterDropdownProps"'],
            "description": "\u81EA\u5B9A\u4E49\u7B5B\u9009\u83DC\u5355\uFF0C\u9700\u8981\u914D\u5408 column.customFilterDropdown \u4F7F\u7528"
          },
          "customFilterIcon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u7B5B\u9009\u56FE\u6807"
          },
          "customHeaderRow": {
            "type": "attr",
            "values": ["Function(columns, index)"],
            "description": "\u8BBE\u7F6E\u5934\u90E8\u884C\u5C5E\u6027"
          },
          "customRow": {
            "type": "attr",
            "values": ["Function(record, index)"],
            "description": "\u8BBE\u7F6E\u884C\u5C5E\u6027"
          },
          "dataSource": {
            "type": "attr",
            "values": ["object[]"],
            "description": "\u6570\u636E\u6570\u7EC4"
          },
          "defaultExpandAllRows": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u521D\u59CB\u65F6\uFF0C\u662F\u5426\u5C55\u5F00\u6240\u6709\u884C"
          },
          "defaultExpandedRowKeys": {
            "type": "attr",
            "values": ["string[]"],
            "description": "\u9ED8\u8BA4\u5C55\u5F00\u7684\u884C"
          },
          "emptyText": {
            "type": "attr",
            "values": ["v-slot:emptyText"],
            "description": "\u81EA\u5B9A\u4E49\u7A7A\u6570\u636E\u65F6\u7684\u663E\u793A\u5185\u5BB9"
          },
          "v-model:expandedRowKeys": {
            "type": "attr",
            "values": ["string[]"],
            "description": "\u5C55\u5F00\u7684\u884C\uFF0C\u63A7\u5236\u5C5E\u6027"
          },
          "expandedRowRender": {
            "type": "attr",
            "values": ["Function(record, index, indent, expanded):VNode"],
            "description": "\u989D\u5916\u7684\u5C55\u5F00\u884C"
          },
          "expandFixed": {
            "type": "attr",
            "values": ["boolean", "string"],
            "description": "\u63A7\u5236\u5C55\u5F00\u56FE\u6807\u662F\u5426\u56FA\u5B9A\uFF0C\u53EF\u9009 true left right"
          },
          "expandColumnTitle": {
            "type": "attr",
            "values": ["v-slot"],
            "description": "\u81EA\u5B9A\u4E49\u5C55\u5F00\u5217\u8868\u5934"
          },
          "expandIcon": {
            "type": "attr",
            "values": ["Function(props):VNode", 'v-slot:expandIcon="props"'],
            "description": "\u81EA\u5B9A\u4E49\u5C55\u5F00\u56FE\u6807"
          },
          "expandRowByClick": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u901A\u8FC7\u70B9\u51FB\u884C\u6765\u5C55\u5F00\u5B50\u884C"
          },
          "footer": {
            "type": "attr",
            "values": ['Function(currentPageData)|v-slot:footer="currentPageData"'],
            "description": "\u8868\u683C\u5C3E\u90E8"
          },
          "getPopupContainer": {
            "type": "attr",
            "values": ["(triggerNode) => HTMLElement"],
            "description": "\u8BBE\u7F6E\u8868\u683C\u5185\u5404\u7C7B\u6D6E\u5C42\u7684\u6E32\u67D3\u8282\u70B9\uFF0C\u5982\u7B5B\u9009\u83DC\u5355"
          },
          "headerCell": {
            "type": "attr",
            "values": [],
            "description": "\u4E2A\u6027\u5316\u5934\u90E8\u5355\u5143\u683C"
          },
          "indentSize": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5C55\u793A\u6811\u5F62\u6570\u636E\u65F6\uFF0C\u6BCF\u5C42\u7F29\u8FDB\u7684\u5BBD\u5EA6\uFF0C\u4EE5 px \u4E3A\u5355\u4F4D"
          },
          "loading": {
            "type": "attr",
            "values": ["boolean|object"],
            "description": "\u9875\u9762\u662F\u5426\u52A0\u8F7D\u4E2D"
          },
          "locale": {
            "type": "attr",
            "values": ["object"],
            "description": "\u9ED8\u8BA4\u6587\u6848\u8BBE\u7F6E\uFF0C\u76EE\u524D\u5305\u62EC\u6392\u5E8F\u3001\u8FC7\u6EE4\u3001\u7A7A\u6570\u636E\u6587\u6848"
          },
          "pagination": {
            "type": "attr",
            "values": ["object", "false"],
            "description": "\u5206\u9875\u5668\uFF0C\u53C2\u8003\u914D\u7F6E\u9879\u6216 pagination\u6587\u6863\uFF0C\u8BBE\u4E3A false \u65F6\u4E0D\u5C55\u793A\u548C\u8FDB\u884C\u5206\u9875"
          },
          "rowClassName": {
            "type": "attr",
            "values": ["Function(record, index):string"],
            "description": "\u8868\u683C\u884C\u7684\u7C7B\u540D"
          },
          "rowExpandable": {
            "type": "attr",
            "values": ["(record) => boolean"],
            "description": "\u8BBE\u7F6E\u662F\u5426\u5141\u8BB8\u884C\u5C55\u5F00"
          },
          "rowKey": {
            "type": "attr",
            "values": ["string|Function(record):string"],
            "description": "\u8868\u683C\u884C key \u7684\u53D6\u503C\uFF0C\u53EF\u4EE5\u662F\u5B57\u7B26\u4E32\u6216\u4E00\u4E2A\u51FD\u6570"
          },
          "rowSelection": {
            "type": "attr",
            "values": ["object"],
            "description": "\u5217\u8868\u9879\u662F\u5426\u53EF\u9009\u62E9\uFF0C\u914D\u7F6E\u9879"
          },
          "scroll": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8868\u683C\u662F\u5426\u53EF\u6EDA\u52A8\uFF0C\u4E5F\u53EF\u4EE5\u6307\u5B9A\u6EDA\u52A8\u533A\u57DF\u7684\u5BBD\u3001\u9AD8\uFF0C\u914D\u7F6E\u9879"
          },
          "showExpandColumn": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u662F\u5426\u5C55\u793A\u884C\u5C55\u5F00\u5217"
          },
          "showHeader": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u8868\u5934"
          },
          "showSorterTooltip": {
            "type": "attr",
            "values": ["boolean", "Tooltip props"],
            "description": "\u8868\u5934\u662F\u5426\u663E\u793A\u4E0B\u4E00\u6B21\u6392\u5E8F\u7684 tooltip \u63D0\u793A\u3002\u5F53\u53C2\u6570\u7C7B\u578B\u4E3A\u5BF9\u8C61\u65F6\uFF0C\u5C06\u88AB\u8BBE\u7F6E\u4E3A Tooltip \u7684\u5C5E\u6027"
          },
          "size": {
            "type": "attr",
            "values": ["large", "middle", "small"],
            "description": "\u8868\u683C\u5927\u5C0F"
          },
          "sortDirections": {
            "type": "attr",
            "values": ["Array"],
            "description": "\u652F\u6301\u7684\u6392\u5E8F\u65B9\u5F0F\uFF0C\u53D6\u503C\u4E3A ascend descend"
          },
          "sticky": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u7C98\u6027\u5934\u90E8\u548C\u6EDA\u52A8\u6761"
          },
          "summary": {
            "type": "attr",
            "values": ["v-slot:summary"],
            "description": "\u603B\u7ED3\u680F"
          },
          "tableLayout": {
            "type": "attr",
            "values": ["'auto'", "'fixed'"],
            "description": "\u8868\u683C\u5143\u7D20\u7684 table-layout \u5C5E\u6027\uFF0C\u8BBE\u4E3A fixed \u8868\u793A\u5185\u5BB9\u4E0D\u4F1A\u5F71\u54CD\u5217\u7684\u5E03\u5C40"
          },
          "title": {
            "type": "attr",
            "values": ['Function(currentPageData)|v-slot:title="currentPageData"'],
            "description": "\u8868\u683C\u6807\u9898"
          },
          "transformCellText": {
            "type": "attr",
            "values": ["string", "number \u7C7B\u578B"],
            "description": "\u6570\u636E\u6E32\u67D3\u524D\u53EF\u4EE5\u518D\u6B21\u6539\u53D8\uFF0C\u4E00\u822C\u7528\u4E8E\u7A7A\u6570\u636E\u7684\u9ED8\u8BA4\u914D\u7F6E\uFF0C\u53EF\u4EE5\u901A\u8FC7 ConfigProvider \u5168\u5C40\u7EDF\u4E00\u914D\u7F6E"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5206\u9875\u3001\u6392\u5E8F\u3001\u7B5B\u9009\u53D8\u5316\u65F6\u89E6\u53D1"
          },
          "expand": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u5C55\u5F00\u56FE\u6807\u65F6\u89E6\u53D1"
          },
          "expandedRowsChange": {
            "type": "event",
            "values": [],
            "description": "\u5C55\u5F00\u7684\u884C\u53D8\u5316\u65F6\u89E6\u53D1"
          },
          "resizeColumn": {
            "type": "event",
            "values": [],
            "description": "\u62D6\u52A8\u5217\u65F6\u89E6\u53D1"
          }
        },
        "a-table-summary": {
          "_html": {
            "": "<a-table-summary>$1</a-table-summary>"
          }
        },
        "a-table-summary-row": {
          "_html": {
            "": "<a-table-summary-row>$1</a-table-summary-row>"
          }
        },
        "a-table-summary-cell": {
          "_html": {
            "": "<a-table-summary-cell>$1</a-table-summary-cell>"
          }
        },
        "a-table-column-group": {
          "_html": {
            "": "<a-table-column-group>$1</a-table-column-group>"
          }
        },
        "a-table-column": {
          "_html": {
            "": '<a-table-column key="$1" data-index="$2">$3</a-table-column>',
            ":default[slot]": '<template #default="{ text: tags }">\n$1\n</template>'
          }
        },
        "a-tabs": {
          "_html": {
            "": '<a-tabs v-model:activeKey="${1:activeKey}">\n$2\n</a-tabs>',
            ":leftExtra[slot]": "<template #leftExtra>\n$1\n</template>",
            ":rightExtra[slot]": "<template #rightExtra>\n$1\n</template>",
            ":renderTabBar[slot]": '<template #renderTabBar="{ DefaultTabBar, ...props }">\n$1\n</template>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/tabs-cn)
#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C|  |
| :--- | :--- | :--- | :--- | :--- | :--- |
| activeKey(v-model)| \u5F53\u524D\u6FC0\u6D3B tab \u9762\u677F\u7684 key| string| \u65E0| |  |
| animated| \u662F\u5426\u4F7F\u7528\u52A8\u753B\u5207\u6362 Tabs\uFF0C\u5728 tabPosition="top" | "bottom" \u65F6\u6709\u6548| boolean | {inkBar:boolean, tabPane:boolean}| true, \u5F53 type="card" \u65F6\u4E3A false| |  |
| centered| \u6807\u7B7E\u5C45\u4E2D\u5C55\u793A| boolean| false| 3.0|  |
| destroyInactiveTabPane| \u88AB\u9690\u85CF\u65F6\u662F\u5426\u9500\u6BC1 DOM \u7ED3\u6784| boolean| false| |  |
| hideAdd| \u662F\u5426\u9690\u85CF\u52A0\u53F7\u56FE\u6807\uFF0C\u5728 type="editable-card" \u65F6\u6709\u6548| boolean| false| |  |
| size| \u5927\u5C0F\uFF0C\u63D0\u4F9B large middle \u548C small \u4E09\u79CD\u5927\u5C0F| string| middle| |  |
| tabBarGutter| tabs \u4E4B\u95F4\u7684\u95F4\u9699| number| \u65E0| |  |
| tabBarStyle| tab bar \u7684\u6837\u5F0F\u5BF9\u8C61| CSSProperties| -| |  |
| tabPosition| \u9875\u7B7E\u4F4D\u7F6E\uFF0C\u53EF\u9009\u503C\u6709 top right bottom left| string| top| |  |
| type| \u9875\u7B7E\u7684\u57FA\u672C\u6837\u5F0F\uFF0C\u53EF\u9009 line\u3001card editable-card \u7C7B\u578B| string| line| |  |

| \u63D2\u69FD\u540D\u79F0| \u8BF4\u660E| \u53C2\u6570|  |
| :--- | :--- | :--- | :--- |
| addIcon| \u81EA\u5B9A\u4E49\u6DFB\u52A0\u6309\u94AE| -| - |
| leftExtra| tab bar \u4E0A\u5DE6\u4FA7\u989D\u5916\u7684\u5143\u7D20| -| - |
| moreIcon| \u81EA\u5B9A\u4E49\u6298\u53E0 icon| -| - |
| renderTabBar| \u66FF\u6362 TabBar\uFF0C\u7528\u4E8E\u4E8C\u6B21\u5C01\u88C5\u6807\u7B7E\u5934| { DefaultTabBar }|  |
| rightExtra| tab bar \u4E0A\u53F3\u4FA7\u989D\u5916\u7684\u5143\u7D20| -| - |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |
| :--- | :--- | :--- |
| change| \u5207\u6362\u9762\u677F\u7684\u56DE\u8C03| Function(activeKey) {} |
| edit| \u65B0\u589E\u548C\u5220\u9664\u9875\u7B7E\u7684\u56DE\u8C03\uFF0C\u5728 type="editable-card" \u65F6\u6709\u6548| (action === 'add' ? event : targetKey, action): void |
| tabClick| tab \u88AB\u70B9\u51FB\u7684\u56DE\u8C03| Function |
| tabScroll| \u6EDA\u52A8 TabBar \u65F6\u89E6\u53D1| { direction: 'left' | 'right' | 'top' | 'bottom' } |
`,
          "v-model:activeKey": {
            "type": "attr",
            "values": [],
            "description": "\u5F53\u524D\u6FC0\u6D3B tab \u9762\u677F\u7684 key"
          },
          "animated": {
            "type": "attr",
            "values": ["true", "false"],
            "description": '\u662F\u5426\u4F7F\u7528\u52A8\u753B\u5207\u6362 Tabs\uFF0C\u5728 tabPosition="top" | "bottom" \u65F6\u6709\u6548'
          },
          "centered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6807\u7B7E\u5C45\u4E2D\u5C55\u793A"
          },
          "destroyInactiveTabPane": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u88AB\u9690\u85CF\u65F6\u662F\u5426\u9500\u6BC1 DOM \u7ED3\u6784"
          },
          "hideAdd": {
            "type": "attr",
            "values": ["true", "false"],
            "description": '\u662F\u5426\u9690\u85CF\u52A0\u53F7\u56FE\u6807\uFF0C\u5728 type="editable-card" \u65F6\u6709\u6548'
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u5927\u5C0F\uFF0C\u63D0\u4F9B large middle \u548C small \u4E09\u79CD\u5927\u5C0F"
          },
          "tabBarGutter": {
            "type": "attr",
            "values": ["number"],
            "description": "tabs \u4E4B\u95F4\u7684\u95F4\u9699"
          },
          "tabBarStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "tab bar \u7684\u6837\u5F0F\u5BF9\u8C61"
          },
          "tabPosition": {
            "type": "attr",
            "values": [],
            "description": "\u9875\u7B7E\u4F4D\u7F6E\uFF0C\u53EF\u9009\u503C\u6709 top right bottom left"
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": "\u9875\u7B7E\u7684\u57FA\u672C\u6837\u5F0F\uFF0C\u53EF\u9009 line\u3001card editable-card \u7C7B\u578B"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u5207\u6362\u9762\u677F\u7684\u56DE\u8C03"
          },
          "edit": {
            "type": "event",
            "values": [],
            "description": '\u65B0\u589E\u548C\u5220\u9664\u9875\u7B7E\u7684\u56DE\u8C03\uFF0C\u5728 type="editable-card" \u65F6\u6709\u6548'
          },
          "tabClick": {
            "type": "event",
            "values": [],
            "description": "tab \u88AB\u70B9\u51FB\u7684\u56DE\u8C03"
          },
          "tabScroll": {
            "type": "event",
            "values": [],
            "description": "\u6EDA\u52A8 TabBar \u65F6\u89E6\u53D1"
          }
        },
        "a-tab-pane": {
          "_html": {
            "": '<a-tab-pane key="$1" tab="$2">$3</a-tab-pane>',
            ":tab[slot]": "<template #tab>\n$1\n</template>"
          }
        },
        "a-tag": {
          "_html": {
            "": "<a-tag>$1</a-tag>",
            ":closable": '<a-tag closable @close="${1:log}">$2</a-tag>',
            ":color": '<a-tag color="$1">$2</a-tag>',
            ":icon[slot]": "<template #icon>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/tag-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| closable| \u6807\u7B7E\u662F\u5426\u53EF\u4EE5\u5173\u95ED| boolean| false|  |\n| closeIcon| \u81EA\u5B9A\u4E49\u5173\u95ED\u6309\u94AE| VNode | slot| -| 2.0.0 |\n| color| \u6807\u7B7E\u8272| string| -|  |\n| icon| \u8BBE\u7F6E\u56FE\u6807| VNode | slot| -| 2.0.0 |\n| bordered| \u662F\u5426\u6709\u8FB9\u6846| boolean| true| 4.x |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| close| \u5173\u95ED\u65F6\u7684\u56DE\u8C03| (e) => void |\n",
          "closable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6807\u7B7E\u662F\u5426\u53EF\u4EE5\u5173\u95ED"
          },
          "closeIcon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u5173\u95ED\u6309\u94AE"
          },
          "color": {
            "type": "attr",
            "values": [],
            "description": "\u6807\u7B7E\u8272"
          },
          "icon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u8BBE\u7F6E\u56FE\u6807"
          },
          "bordered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u6709\u8FB9\u6846"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "\u5173\u95ED\u65F6\u7684\u56DE\u8C03"
          }
        },
        "a-checkable-tag": {
          "_html": {
            "": '<a-checkable-tag v-model:checked="$1" @change="$2">\n$3\n</a-checkable-tag>'
          }
        },
        "a-timeline": {
          "_html": {
            "": "<a-timeline>$1</a-timeline>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/timeline-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| mode| \u901A\u8FC7\u8BBE\u7F6E mode \u53EF\u4EE5\u6539\u53D8\u65F6\u95F4\u8F74\u548C\u5185\u5BB9\u7684\u76F8\u5BF9\u4F4D\u7F6E| left | alternate | right|  |\n| pending| \u6307\u5B9A\u6700\u540E\u4E00\u4E2A\u5E7D\u7075\u8282\u70B9\u662F\u5426\u5B58\u5728\u6216\u5185\u5BB9| boolean|string|slot| false |\n| pendingDot| \u5F53\u6700\u540E\u4E00\u4E2A\u5E7D\u7075\u8282\u70B9\u5B58\u5728\u6642\uFF0C\u6307\u5B9A\u5176\u65F6\u95F4\u56FE\u70B9| string|slot| <LoadingOutlined /> |\n| reverse| \u8282\u70B9\u6392\u5E8F| boolean| false |\n",
          "mode": {
            "type": "attr",
            "values": ["left", "alternate", "right"],
            "description": "\u901A\u8FC7\u8BBE\u7F6E mode \u53EF\u4EE5\u6539\u53D8\u65F6\u95F4\u8F74\u548C\u5185\u5BB9\u7684\u76F8\u5BF9\u4F4D\u7F6E"
          },
          "pending": {
            "type": "attr",
            "values": ["boolean|string|slot"],
            "description": "\u6307\u5B9A\u6700\u540E\u4E00\u4E2A\u5E7D\u7075\u8282\u70B9\u662F\u5426\u5B58\u5728\u6216\u5185\u5BB9"
          },
          "pendingDot": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u5F53\u6700\u540E\u4E00\u4E2A\u5E7D\u7075\u8282\u70B9\u5B58\u5728\u6642\uFF0C\u6307\u5B9A\u5176\u65F6\u95F4\u56FE\u70B9"
          },
          "reverse": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8282\u70B9\u6392\u5E8F"
          }
        },
        "a-timeline-item": {
          "_html": {
            "": "<a-timeline-item>$1</a-timeline-item>",
            ":color": '<a-timeline-item color="$1">$2</a-timeline-item>',
            ":dot[slot]": "<template #dot>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/timeline-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| color| \u6307\u5B9A\u5706\u5708\u989C\u8272 blue, red, green\uFF0C\u6216\u81EA\u5B9A\u4E49\u7684\u8272\u503C| string| blue|  |\n| dot| \u81EA\u5B9A\u4E49\u65F6\u95F4\u8F74\u70B9| string|slot| -|  |\n| label| \u8BBE\u7F6E\u6807\u7B7E| string | slot| -| 3.0 |\n| position| \u81EA\u5B9A\u4E49\u8282\u70B9\u4F4D\u7F6E| left | right| -|  |\n",
          "color": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u5B9A\u5706\u5708\u989C\u8272 blue, red, green\uFF0C\u6216\u81EA\u5B9A\u4E49\u7684\u8272\u503C"
          },
          "dot": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u81EA\u5B9A\u4E49\u65F6\u95F4\u8F74\u70B9"
          },
          "label": {
            "type": "attr",
            "values": ["string", "slot"],
            "description": "\u8BBE\u7F6E\u6807\u7B7E"
          },
          "position": {
            "type": "attr",
            "values": ["left", "right"],
            "description": "\u81EA\u5B9A\u4E49\u8282\u70B9\u4F4D\u7F6E"
          }
        },
        "a-tooltip": {
          "_html": {
            "": '<a-tooltip title="$1">$2</a-tooltip>',
            ":title[slot]": "<template #title>\n$1\n</template>",
            ":color": '<a-tooltip title="$1" color="$2">$3</a-tooltip>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/tooltip-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| title| \u63D0\u793A\u6587\u5B57| string|slot| \u65E0 |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| align| \u8BE5\u503C\u5C06\u5408\u5E76\u5230 placement \u7684\u914D\u7F6E\u4E2D\uFF0C\u8BBE\u7F6E\u53C2\u8003 dom-align| Object| \u65E0|  |\n| arrowPointAtCenter| \u7BAD\u5934\u662F\u5426\u6307\u5411\u76EE\u6807\u5143\u7D20\u4E2D\u5FC3| boolean| false|  |\n| autoAdjustOverflow| \u6C14\u6CE1\u88AB\u906E\u6321\u65F6\u81EA\u52A8\u8C03\u6574\u4F4D\u7F6E| boolean| true|  |\n| color| \u80CC\u666F\u989C\u8272| string| \u65E0|  |\n| destroyTooltipOnHide| \u9690\u85CF\u540E\u662F\u5426\u9500\u6BC1 tooltip| boolean| false|  |\n| getPopupContainer| \u6D6E\u5C42\u6E32\u67D3\u7236\u8282\u70B9\uFF0C\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A| (triggerNode: HTMLElement) => HTMLElement| () => document.body|  |\n| mouseEnterDelay| \u9F20\u6807\u79FB\u5165\u540E\u5EF6\u65F6\u591A\u5C11\u624D\u663E\u793A Tooltip\uFF0C\u5355\u4F4D\uFF1A\u79D2| number| 0.1|  |\n| mouseLeaveDelay| \u9F20\u6807\u79FB\u51FA\u540E\u5EF6\u65F6\u591A\u5C11\u624D\u9690\u85CF Tooltip\uFF0C\u5355\u4F4D\uFF1A\u79D2| number| 0.1|  |\n| overlayClassName| \u5361\u7247\u7C7B\u540D| string| \u65E0|  |\n| overlayStyle| \u5361\u7247\u6837\u5F0F| object| \u65E0|  |\n| overlayInnerStyle| \u5361\u7247\u5185\u5BB9\u533A\u57DF\u6837\u5F0F| object| \u65E0| 4.0 |\n| placement| \u6C14\u6CE1\u6846\u4F4D\u7F6E\uFF0C\u53EF\u9009 top left right bottom topLeft topRight bottomLeft bottomRight leftTop leftBottom rightTop rightBottom| string| top|  |\n| trigger| \u89E6\u53D1\u884C\u4E3A\uFF0C\u53EF\u9009 hover/focus/click/contextmenu| string| hover|  |\n| open(v-model)| \u7528\u4E8E\u624B\u52A8\u63A7\u5236\u6D6E\u5C42\u663E\u9690, \u5C0F\u4E8E 4.0.0 \u4F7F\u7528 visible| boolean| false| 4.0 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| openChange| \u663E\u793A\u9690\u85CF\u7684\u56DE\u8C03| (visible) => void| 4.0 |\n",
          "title": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u63D0\u793A\u6587\u5B57"
          },
          "openChange": {
            "type": "event",
            "values": [],
            "description": "\u663E\u793A\u9690\u85CF\u7684\u56DE\u8C03"
          }
        },
        "a-tour": {
          "_html": {
            "": '<a-tour v-model:current="${1:current}" :open="${2:open}" :steps="${3:steps}" @close="${4:handleOpen(false)}">$5</a-tour>',
            ":mask": '<a-tour v-model:current="${1:current}" :mask="false" type="primary" :open="${2:open}" :steps="${3:steps}" @close="${4:handleOpen(false)}">$5</a-tour>',
            ":indicatorsRender[slot]": '<template #indicatorsRender="{ current, total }">\n$1\n</template>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/tour-cn)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| arrow| \u662F\u5426\u663E\u793A\u7BAD\u5934\uFF0C\u5305\u542B\u662F\u5426\u6307\u5411\u5143\u7D20\u4E2D\u5FC3\u7684\u914D\u7F6E| boolean | { pointAtCenter: boolean}| true|  |\n| placement| \u5F15\u5BFC\u5361\u7247\u76F8\u5BF9\u4E8E\u76EE\u6807\u5143\u7D20\u7684\u4F4D\u7F6E| left leftTop leftBottom right rightTop rightBottom top topLeft topRight bottom bottomLeft bottomRight| bottom|  |\n| mask| \u662F\u5426\u542F\u7528\u8499\u5C42\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6539\u53D8\u8499\u5C42\u6837\u5F0F\u548C\u586B\u5145\u8272| boolean | { style?: CSSProperties; color?: string; }| true|  |\n| type| \u7C7B\u578B\uFF0C\u5F71\u54CD\u5E95\u8272\u4E0E\u6587\u5B57\u989C\u8272| default | primary| default|  |\n| open| \u6253\u5F00\u5F15\u5BFC| boolean| -|  |\n| current(v-model)| \u5F53\u524D\u5904\u4E8E\u54EA\u4E00\u6B65| number| -|  |\n| scrollIntoViewOptions| \u662F\u5426\u652F\u6301\u5F53\u524D\u5143\u7D20\u6EDA\u52A8\u5230\u89C6\u7A97\u5185\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6307\u5B9A\u6EDA\u52A8\u89C6\u7A97\u7684\u76F8\u5173\u53C2\u6570| boolean | ScrollIntoViewOptions| true|  |\n| indicatorsRender| \u81EA\u5B9A\u4E49\u6307\u793A\u5668| v-slot:indicatorsRender="{current, total}"| -|  |\n| zIndex| Tour \u7684\u5C42\u7EA7| number| 1001|  |\n\n#### \u5C5E\u6027\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| close| \u5173\u95ED\u5F15\u5BFC\u65F6\u7684\u56DE\u8C03\u51FD\u6570| Function| - |\n| finish| \u5F15\u5BFC\u5B8C\u6210\u65F6\u7684\u56DE\u8C03| Function| - |\n| change| \u6B65\u9AA4\u6539\u53D8\u65F6\u7684\u56DE\u8C03\uFF0Ccurrent \u4E3A\u5F53\u524D\u524D\u7684\u6B65\u9AA4| (current: number) => void| - |\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| target| \u83B7\u53D6\u5F15\u5BFC\u5361\u7247\u6307\u5411\u7684\u5143\u7D20\uFF0C\u4E3A\u7A7A\u65F6\u5C45\u4E2D\u4E8E\u5C4F\u5E55| () => HTMLElement | HTMLElement| -|  |\n| arrow| \u662F\u5426\u663E\u793A\u7BAD\u5934\uFF0C\u5305\u542B\u662F\u5426\u6307\u5411\u5143\u7D20\u4E2D\u5FC3\u7684\u914D\u7F6E| boolean | { pointAtCenter: boolean}| true|  |\n| cover| \u5C55\u793A\u7684\u56FE\u7247\u6216\u8005\u89C6\u9891| VueNode| -|  |\n| title| \u6807\u9898| VueNode| -|  |\n| description| \u4E3B\u8981\u63CF\u8FF0\u90E8\u5206| VueNode| -|  |\n| placement| \u5F15\u5BFC\u5361\u7247\u76F8\u5BF9\u4E8E\u76EE\u6807\u5143\u7D20\u7684\u4F4D\u7F6E| left leftTop leftBottom right rightTop rightBottom top topLeft topRight bottom bottomLeft bottomRight bottom| |  |\n| mask| \u662F\u5426\u542F\u7528\u8499\u5C42\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6539\u53D8\u8499\u5C42\u6837\u5F0F\u548C\u586B\u5145\u8272\uFF0C\u9ED8\u8BA4\u8DDF\u968F Tour \u7684 mask \u5C5E\u6027| boolean | { style?: CSSProperties; color?: string; }| true|  |\n| type| \u7C7B\u578B\uFF0C\u5F71\u54CD\u5E95\u8272\u4E0E\u6587\u5B57\u989C\u8272| default | primary| default|  |\n| nextButtonProps| \u4E0B\u4E00\u6B65\u6309\u94AE\u7684\u5C5E\u6027| { children: VueNode; onClick: Function }| -|  |\n| prevButtonProps| \u4E0A\u4E00\u6B65\u6309\u94AE\u7684\u5C5E\u6027| { children: VueNode; onClick: Function }| -|  |\n| scrollIntoViewOptions| \u662F\u5426\u652F\u6301\u5F53\u524D\u5143\u7D20\u6EDA\u52A8\u5230\u89C6\u7A97\u5185\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6307\u5B9A\u6EDA\u52A8\u89C6\u7A97\u7684\u76F8\u5173\u53C2\u6570\uFF0C\u9ED8\u8BA4\u8DDF\u968F Tour \u7684 scrollIntoViewOptions \u5C5E\u6027| boolean | ScrollIntoViewOptions| true|  |\n',
          "arrow": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u7BAD\u5934\uFF0C\u5305\u542B\u662F\u5426\u6307\u5411\u5143\u7D20\u4E2D\u5FC3\u7684\u914D\u7F6E"
          },
          "placement": {
            "type": "attr",
            "values": ["left leftTop leftBottom right rightTop rightBottom top topLeft topRight bottom bottomLeft bottomRight"],
            "description": "\u5F15\u5BFC\u5361\u7247\u76F8\u5BF9\u4E8E\u76EE\u6807\u5143\u7D20\u7684\u4F4D\u7F6E"
          },
          "mask": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u542F\u7528\u8499\u5C42\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6539\u53D8\u8499\u5C42\u6837\u5F0F\u548C\u586B\u5145\u8272"
          },
          "type": {
            "type": "attr",
            "values": ["default", "primary"],
            "description": "\u7C7B\u578B\uFF0C\u5F71\u54CD\u5E95\u8272\u4E0E\u6587\u5B57\u989C\u8272"
          },
          "open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u6253\u5F00\u5F15\u5BFC"
          },
          "v-model:current": {
            "type": "attr",
            "values": ["number"],
            "description": "\u5F53\u524D\u5904\u4E8E\u54EA\u4E00\u6B65"
          },
          "scrollIntoViewOptions": {
            "type": "attr",
            "values": ["boolean", "ScrollIntoViewOptions"],
            "description": "\u662F\u5426\u652F\u6301\u5F53\u524D\u5143\u7D20\u6EDA\u52A8\u5230\u89C6\u7A97\u5185\uFF0C\u4E5F\u53EF\u4F20\u5165\u914D\u7F6E\u6307\u5B9A\u6EDA\u52A8\u89C6\u7A97\u7684\u76F8\u5173\u53C2\u6570"
          },
          "indicatorsRender": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u6307\u793A\u5668"
          },
          "zIndex": {
            "type": "attr",
            "values": ["number"],
            "description": "Tour \u7684\u5C42\u7EA7"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "\u5173\u95ED\u5F15\u5BFC\u65F6\u7684\u56DE\u8C03\u51FD\u6570"
          },
          "finish": {
            "type": "event",
            "values": [],
            "description": "\u5F15\u5BFC\u5B8C\u6210\u65F6\u7684\u56DE\u8C03"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u6B65\u9AA4\u6539\u53D8\u65F6\u7684\u56DE\u8C03\uFF0Ccurrent \u4E3A\u5F53\u524D\u524D\u7684\u6B65\u9AA4"
          }
        },
        "a-tree": {
          "_html": {
            "": '<a-tree\nv-model:expandedKeys="expandedKeys"\nv-model:selectedKeys="selectedKeys"\nv-model:checkedKeys="checkedKeys"\ncheckable\n:tree-data="treeData"\n>\n$1\n</a-tree>',
            ":title[slot]": '<template #title="{ title, key }">\n$1\n</template>',
            ":dragggable": '<a-tree\ndraggable\nblock-node\n:tree-data="gData"\n@dragenter="onDragEnter"\n@drop="onDrop"\n>\n$1\n</a-tree>',
            ":load-data": '<a-tree\nv-model:expandedKeys="expandedKeys"\nv-model:selectedKeys="selectedKeys"\n:load-data="onLoadData"\n:tree-data="treeData"\n>\n$1\n</a-tree>',
            ":switcherIcon[slot]": '<template #switcherIcon="{ switcherCls }">\n$1\n</template>',
            ":icon[slot]": '<template #icon="{ key, selected }">\n$1\n</template>'
          },
          "_doc": `#### [\u8BBF\u95EE](https://www.antdv.com/components/tree-cn)
#### \u5C5E\u6027
#### [](https://www.antdv.com/components/tree-cn)#### \u5C5E\u6027

| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C|  |
| :--- | :--- | :--- | :--- | :--- | :--- |
| allowDrop| \u662F\u5426\u5141\u8BB8\u62D6\u62FD\u65F6\u653E\u7F6E\u5728\u8BE5\u8282\u70B9| ({ dropNode, dropPosition }) => boolean| -| |  |
| autoExpandParent| \u662F\u5426\u81EA\u52A8\u5C55\u5F00\u7236\u8282\u70B9| boolean| false| |  |
| blockNode| \u662F\u5426\u8282\u70B9\u5360\u636E\u4E00\u884C| boolean| false| |  |
| checkable| \u8282\u70B9\u524D\u6DFB\u52A0 Checkbox \u590D\u9009\u6846| boolean| false| |  |
| checkedKeys(v-model)| \uFF08\u53D7\u63A7\uFF09\u9009\u4E2D\u590D\u9009\u6846\u7684\u6811\u8282\u70B9\uFF08\u6CE8\u610F\uFF1A\u7236\u5B50\u8282\u70B9\u6709\u5173\u8054\uFF0C\u5982\u679C\u4F20\u5165\u7236\u8282\u70B9 key\uFF0C\u5219\u5B50\u8282\u70B9\u81EA\u52A8\u9009\u4E2D\uFF1B\u76F8\u5E94\u5F53\u5B50\u8282\u70B9 key \u90FD\u4F20\u5165\uFF0C\u7236\u8282\u70B9\u4E5F\u81EA\u52A8\u9009\u4E2D\u3002\u5F53\u8BBE\u7F6Echeckable\u548CcheckStrictly\uFF0C\u5B83\u662F\u4E00\u4E2A\u6709checked\u548ChalfChecked\u5C5E\u6027\u7684\u5BF9\u8C61\uFF0C\u5E76\u4E14\u7236\u5B50\u8282\u70B9\u7684\u9009\u4E2D\u4E0E\u5426\u4E0D\u518D\u5173\u8054| string[] | number[] | {checked: string[] | number[], halfChecked: string[] | number[]}| []| |  |
| checkStrictly| checkable \u72B6\u6001\u4E0B\u8282\u70B9\u9009\u62E9\u5B8C\u5168\u53D7\u63A7\uFF08\u7236\u5B50\u8282\u70B9\u9009\u4E2D\u72B6\u6001\u4E0D\u518D\u5173\u8054\uFF09| boolean| false| |  |
| defaultExpandAll| \u9ED8\u8BA4\u5C55\u5F00\u6240\u6709\u6811\u8282\u70B9, \u5982\u679C\u662F\u5F02\u6B65\u6570\u636E\uFF0C\u9700\u8981\u5728\u6570\u636E\u8FD4\u56DE\u540E\u518D\u5B9E\u4F8B\u5316\uFF0C\u5EFA\u8BAE\u7528 v-if="data.length"\uFF1B\u5F53\u6709 expandedKeys \u65F6\uFF0CdefaultExpandAll \u5C06\u5931\u6548| boolean| false| |  |
| disabled| \u5C06\u6811\u7981\u7528| bool| false| |  |
| draggable| \u8BBE\u7F6E\u8282\u70B9\u53EF\u62D6\u62FD| boolean| false| |  |
| expandedKeys(v-model)| \uFF08\u53D7\u63A7\uFF09\u5C55\u5F00\u6307\u5B9A\u7684\u6811\u8282\u70B9| string[] | number[]| []| |  |
| fieldNames| \u66FF\u6362 treeNode \u4E2D title,key,children \u5B57\u6BB5\u4E3A treeData \u4E2D\u5BF9\u5E94\u7684\u5B57\u6BB5| object| {children:'children', title:'title', key:'key' }| 3.0.0|  |
| filterTreeNode| \u6309\u9700\u7B5B\u9009\u6811\u8282\u70B9\uFF08\u9AD8\u4EAE\uFF09\uFF0C\u8FD4\u56DE true| function(node)| -| |  |
| height| \u8BBE\u7F6E\u865A\u62DF\u6EDA\u52A8\u5BB9\u5668\u9AD8\u5EA6\uFF0C\u8BBE\u7F6E\u540E\u5185\u90E8\u8282\u70B9\u4E0D\u518D\u652F\u6301\u6A2A\u5411\u6EDA\u52A8| number| -| |  |
| loadData| \u5F02\u6B65\u52A0\u8F7D\u6570\u636E| function(node)| -| |  |
| loadedKeys| \uFF08\u53D7\u63A7\uFF09\u5DF2\u7ECF\u52A0\u8F7D\u7684\u8282\u70B9\uFF0C\u9700\u8981\u914D\u5408 loadData \u4F7F\u7528| string[] | number[]| []| |  |
| multiple| \u652F\u6301\u70B9\u9009\u591A\u4E2A\u8282\u70B9\uFF08\u8282\u70B9\u672C\u8EAB\uFF09| boolean| false| |  |
| selectable| \u662F\u5426\u53EF\u9009\u4E2D| boolean| true| |  |
| selectedKeys(v-model)| \uFF08\u53D7\u63A7\uFF09\u8BBE\u7F6E\u9009\u4E2D\u7684\u6811\u8282\u70B9| string[] | number[]| -| |  |
| showIcon| \u662F\u5426\u5C55\u793A TreeNode title \u524D\u7684\u56FE\u6807\uFF0C\u6CA1\u6709\u9ED8\u8BA4\u6837\u5F0F\uFF0C\u5982\u8BBE\u7F6E\u4E3A true\uFF0C\u9700\u8981\u81EA\u884C\u5B9A\u4E49\u56FE\u6807\u76F8\u5173\u6837\u5F0F| boolean| false| |  |
| showLine| \u662F\u5426\u5C55\u793A\u8FDE\u63A5\u7EBF| boolean | {showLeafIcon: boolean}(3.0+)| false| |  |
| switcherIcon| \u81EA\u5B9A\u4E49\u6811\u8282\u70B9\u7684\u5C55\u5F00/\u6298\u53E0\u56FE\u6807| v-slot:switcherIcon="{active, checked, expanded, loading, selected, halfChecked, title, key, children, dataRef, data, defaultIcon, switcherCls}"| -| |  |
| title| \u81EA\u5B9A\u4E49\u6807\u9898| slot| | 2.0.0|  |
| treeData| treeNodes \u6570\u636E\uFF0C\u5982\u679C\u8BBE\u7F6E\u5219\u4E0D\u9700\u8981\u624B\u52A8\u6784\u9020 TreeNode \u8282\u70B9\uFF08key \u5728\u6574\u4E2A\u6811\u8303\u56F4\u5185\u552F\u4E00\uFF09| TreeNode[]| --| |  |
| virtual| \u8BBE\u7F6E false \u65F6\u5173\u95ED\u865A\u62DF\u6EDA\u52A8| boolean| true| 3.0|  |
#### \u4E8B\u4EF6

| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |
| :--- | :--- | :--- |
| check| \u70B9\u51FB\u590D\u9009\u6846\u89E6\u53D1| function(checkedKeys, e:{checked: bool, checkedNodes, node, event}) |
| dragend| dragend \u89E6\u53D1\u65F6\u8C03\u7528| function({event, node}) |
| dragenter| dragenter \u89E6\u53D1\u65F6\u8C03\u7528| function({event, node, expandedKeys}) |
| dragleave| dragleave \u89E6\u53D1\u65F6\u8C03\u7528| function({event, node}) |
| dragover| dragover \u89E6\u53D1\u65F6\u8C03\u7528| function({event, node}) |
| dragstart| \u5F00\u59CB\u62D6\u62FD\u65F6\u8C03\u7528| function({event, node}) |
| drop| drop \u89E6\u53D1\u65F6\u8C03\u7528| function({event, node, dragNode, dragNodesKeys}) |
| expand| \u5C55\u5F00/\u6536\u8D77\u8282\u70B9\u65F6\u89E6\u53D1| function(expandedKeys, {expanded: bool, node}) |
| load| \u8282\u70B9\u52A0\u8F7D\u5B8C\u6BD5\u65F6\u89E6\u53D1| function(loadedKeys, {event, node}) |
| rightClick| \u54CD\u5E94\u53F3\u952E\u70B9\u51FB| function({event, node}) |
| select| \u70B9\u51FB\u6811\u8282\u70B9\u89E6\u53D1| function(selectedKeys, e:{selected: bool, selectedNodes, node, event}) |
#### \u65B9\u6CD5

| \u540D\u79F0| \u8BF4\u660E |
| :--- | :--- |
| scrollTo({ key: string | number; align?: 'top' | 'bottom' | 'auto'; offset?: number })| \u865A\u62DF\u6EDA\u52A8\u4E0B\uFF0C\u6EDA\u52A8\u5230\u6307\u5B9A key \u6761\u76EE |
`,
          "allowDrop": {
            "type": "attr",
            "values": [],
            "description": "\u662F\u5426\u5141\u8BB8\u62D6\u62FD\u65F6\u653E\u7F6E\u5728\u8BE5\u8282\u70B9"
          },
          "autoExpandParent": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u81EA\u52A8\u5C55\u5F00\u7236\u8282\u70B9"
          },
          "blockNode": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u8282\u70B9\u5360\u636E\u4E00\u884C"
          },
          "checkable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8282\u70B9\u524D\u6DFB\u52A0 Checkbox \u590D\u9009\u6846"
          },
          "v-model:checkedKeys": {
            "type": "attr",
            "values": ["string[]", "number[]", "number[], halfChecked: string[]", "number[]}"],
            "description": "\uFF08\u53D7\u63A7\uFF09\u9009\u4E2D\u590D\u9009\u6846\u7684\u6811\u8282\u70B9\uFF08\u6CE8\u610F\uFF1A\u7236\u5B50\u8282\u70B9\u6709\u5173\u8054\uFF0C\u5982\u679C\u4F20\u5165\u7236\u8282\u70B9 key\uFF0C\u5219\u5B50\u8282\u70B9\u81EA\u52A8\u9009\u4E2D\uFF1B\u76F8\u5E94\u5F53\u5B50\u8282\u70B9 key \u90FD\u4F20\u5165\uFF0C\u7236\u8282\u70B9\u4E5F\u81EA\u52A8\u9009\u4E2D\u3002\u5F53\u8BBE\u7F6Echeckable\u548CcheckStrictly\uFF0C\u5B83\u662F\u4E00\u4E2A\u6709checked\u548ChalfChecked\u5C5E\u6027\u7684\u5BF9\u8C61\uFF0C\u5E76\u4E14\u7236\u5B50\u8282\u70B9\u7684\u9009\u4E2D\u4E0E\u5426\u4E0D\u518D\u5173\u8054"
          },
          "checkStrictly": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "checkable \u72B6\u6001\u4E0B\u8282\u70B9\u9009\u62E9\u5B8C\u5168\u53D7\u63A7\uFF08\u7236\u5B50\u8282\u70B9\u9009\u4E2D\u72B6\u6001\u4E0D\u518D\u5173\u8054\uFF09"
          },
          "defaultExpandAll": {
            "type": "attr",
            "values": ["true", "false"],
            "description": '\u9ED8\u8BA4\u5C55\u5F00\u6240\u6709\u6811\u8282\u70B9, \u5982\u679C\u662F\u5F02\u6B65\u6570\u636E\uFF0C\u9700\u8981\u5728\u6570\u636E\u8FD4\u56DE\u540E\u518D\u5B9E\u4F8B\u5316\uFF0C\u5EFA\u8BAE\u7528 v-if="data.length"\uFF1B\u5F53\u6709 expandedKeys \u65F6\uFF0CdefaultExpandAll \u5C06\u5931\u6548'
          },
          "disabled": {
            "type": "attr",
            "values": ["bool"],
            "description": "\u5C06\u6811\u7981\u7528"
          },
          "draggable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u8282\u70B9\u53EF\u62D6\u62FD"
          },
          "v-model:expandedKeys": {
            "type": "attr",
            "values": ["string[]", "number[]"],
            "description": "\uFF08\u53D7\u63A7\uFF09\u5C55\u5F00\u6307\u5B9A\u7684\u6811\u8282\u70B9"
          },
          "fieldNames": {
            "type": "attr",
            "values": ["object"],
            "description": "\u66FF\u6362 treeNode \u4E2D title,key,children \u5B57\u6BB5\u4E3A treeData \u4E2D\u5BF9\u5E94\u7684\u5B57\u6BB5"
          },
          "filterTreeNode": {
            "type": "attr",
            "values": ["function(node)"],
            "description": "\u6309\u9700\u7B5B\u9009\u6811\u8282\u70B9\uFF08\u9AD8\u4EAE\uFF09\uFF0C\u8FD4\u56DE true"
          },
          "height": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E\u865A\u62DF\u6EDA\u52A8\u5BB9\u5668\u9AD8\u5EA6\uFF0C\u8BBE\u7F6E\u540E\u5185\u90E8\u8282\u70B9\u4E0D\u518D\u652F\u6301\u6A2A\u5411\u6EDA\u52A8"
          },
          "loadData": {
            "type": "attr",
            "values": ["function(node)"],
            "description": "\u5F02\u6B65\u52A0\u8F7D\u6570\u636E"
          },
          "loadedKeys": {
            "type": "attr",
            "values": ["string[]", "number[]"],
            "description": "\uFF08\u53D7\u63A7\uFF09\u5DF2\u7ECF\u52A0\u8F7D\u7684\u8282\u70B9\uFF0C\u9700\u8981\u914D\u5408 loadData \u4F7F\u7528"
          },
          "multiple": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u652F\u6301\u70B9\u9009\u591A\u4E2A\u8282\u70B9\uFF08\u8282\u70B9\u672C\u8EAB\uFF09"
          },
          "selectable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u53EF\u9009\u4E2D"
          },
          "v-model:selectedKeys": {
            "type": "attr",
            "values": ["string[]", "number[]"],
            "description": "\uFF08\u53D7\u63A7\uFF09\u8BBE\u7F6E\u9009\u4E2D\u7684\u6811\u8282\u70B9"
          },
          "showIcon": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A TreeNode title \u524D\u7684\u56FE\u6807\uFF0C\u6CA1\u6709\u9ED8\u8BA4\u6837\u5F0F\uFF0C\u5982\u8BBE\u7F6E\u4E3A true\uFF0C\u9700\u8981\u81EA\u884C\u5B9A\u4E49\u56FE\u6807\u76F8\u5173\u6837\u5F0F"
          },
          "showLine": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u8FDE\u63A5\u7EBF"
          },
          "switcherIcon": {
            "type": "attr",
            "values": [],
            "description": "\u81EA\u5B9A\u4E49\u6811\u8282\u70B9\u7684\u5C55\u5F00/\u6298\u53E0\u56FE\u6807"
          },
          "title": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49\u6807\u9898"
          },
          "treeData": {
            "type": "attr",
            "values": ["TreeNode[]"],
            "description": "treeNodes \u6570\u636E\uFF0C\u5982\u679C\u8BBE\u7F6E\u5219\u4E0D\u9700\u8981\u624B\u52A8\u6784\u9020 TreeNode \u8282\u70B9\uFF08key \u5728\u6574\u4E2A\u6811\u8303\u56F4\u5185\u552F\u4E00\uFF09"
          },
          "virtual": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E false \u65F6\u5173\u95ED\u865A\u62DF\u6EDA\u52A8"
          },
          "check": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u590D\u9009\u6846\u89E6\u53D1"
          },
          "dragend": {
            "type": "event",
            "values": [],
            "description": "dragend \u89E6\u53D1\u65F6\u8C03\u7528"
          },
          "dragenter": {
            "type": "event",
            "values": [],
            "description": "dragenter \u89E6\u53D1\u65F6\u8C03\u7528"
          },
          "dragleave": {
            "type": "event",
            "values": [],
            "description": "dragleave \u89E6\u53D1\u65F6\u8C03\u7528"
          },
          "dragover": {
            "type": "event",
            "values": [],
            "description": "dragover \u89E6\u53D1\u65F6\u8C03\u7528"
          },
          "dragstart": {
            "type": "event",
            "values": [],
            "description": "\u5F00\u59CB\u62D6\u62FD\u65F6\u8C03\u7528"
          },
          "drop": {
            "type": "event",
            "values": [],
            "description": "drop \u89E6\u53D1\u65F6\u8C03\u7528"
          },
          "expand": {
            "type": "event",
            "values": [],
            "description": "\u5C55\u5F00/\u6536\u8D77\u8282\u70B9\u65F6\u89E6\u53D1"
          },
          "load": {
            "type": "event",
            "values": [],
            "description": "\u8282\u70B9\u52A0\u8F7D\u5B8C\u6BD5\u65F6\u89E6\u53D1"
          },
          "rightClick": {
            "type": "event",
            "values": [],
            "description": "\u54CD\u5E94\u53F3\u952E\u70B9\u51FB"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u6811\u8282\u70B9\u89E6\u53D1"
          },
          "scrollTo{key:string|number;align?:'top'|'bottom'|'auto';offset?:number}": {
            "type": "event",
            "values": [],
            "description": "\u865A\u62DF\u6EDA\u52A8\u4E0B\uFF0C\u6EDA\u52A8\u5230\u6307\u5B9A key \u6761\u76EE"
          }
        },
        "a-alert": {
          "_html": {
            "": '<a-alert message="$1" type="success">$2</a-alert>',
            ":show-icon": '<a-alert message="$1" type="success" show-icon>$2</a-alert>',
            ":closable": '<a-alert message="$1" type="warning" closable @close="onClose">$2</a-alert>',
            ":description[slot]": "<template #description>\n$1\n</template>",
            ":icon[slot]": "<template #icon>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/alert-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| action| \u81EA\u5B9A\u4E49\u64CD\u4F5C\u9879| slot| -| 4.0.0 |\n| afterClose| \u5173\u95ED\u52A8\u753B\u7ED3\u675F\u540E\u89E6\u53D1\u7684\u56DE\u8C03\u51FD\u6570| () => void| -|  |\n| banner| \u662F\u5426\u7528\u4F5C\u9876\u90E8\u516C\u544A| boolean| false|  |\n| closable| \u9ED8\u8BA4\u4E0D\u663E\u793A\u5173\u95ED\u6309\u94AE| boolean| \u65E0|  |\n| closeIcon| \u81EA\u5B9A\u4E49\u5173\u95ED Icon| slot| <CloseOutlined />| 3.0 |\n| closeText| \u81EA\u5B9A\u4E49\u5173\u95ED\u6309\u94AE| string|slot| \u65E0|  |\n| description| \u8B66\u544A\u63D0\u793A\u7684\u8F85\u52A9\u6027\u6587\u5B57\u4ECB\u7ECD| string|slot| \u65E0|  |\n| icon| \u81EA\u5B9A\u4E49\u56FE\u6807\uFF0CshowIcon \u4E3A true \u65F6\u6709\u6548| vnode|slot| -|  |\n| message| \u8B66\u544A\u63D0\u793A\u5185\u5BB9| string|slot| \u65E0|  |\n| showIcon| \u662F\u5426\u663E\u793A\u8F85\u52A9\u56FE\u6807| boolean| false,banner \u6A21\u5F0F\u4E0B\u9ED8\u8BA4\u503C\u4E3A true|  |\n| type| \u6307\u5B9A\u8B66\u544A\u63D0\u793A\u7684\u6837\u5F0F\uFF0C\u6709\u56DB\u79CD\u9009\u62E9 success\u3001info\u3001warning\u3001error| string| info,banner \u6A21\u5F0F\u4E0B\u9ED8\u8BA4\u503C\u4E3A warning|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| close| \u5173\u95ED\u65F6\u89E6\u53D1\u7684\u56DE\u8C03\u51FD\u6570| (e: MouseEvent) => void| - |\n",
          "action": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49\u64CD\u4F5C\u9879"
          },
          "afterClose": {
            "type": "attr",
            "values": ["() => void"],
            "description": "\u5173\u95ED\u52A8\u753B\u7ED3\u675F\u540E\u89E6\u53D1\u7684\u56DE\u8C03\u51FD\u6570"
          },
          "banner": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u7528\u4F5C\u9876\u90E8\u516C\u544A"
          },
          "closable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9ED8\u8BA4\u4E0D\u663E\u793A\u5173\u95ED\u6309\u94AE"
          },
          "closeIcon": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49\u5173\u95ED Icon"
          },
          "closeText": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u81EA\u5B9A\u4E49\u5173\u95ED\u6309\u94AE"
          },
          "description": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u8B66\u544A\u63D0\u793A\u7684\u8F85\u52A9\u6027\u6587\u5B57\u4ECB\u7ECD"
          },
          "icon": {
            "type": "attr",
            "values": ["vnode|slot"],
            "description": "\u81EA\u5B9A\u4E49\u56FE\u6807\uFF0CshowIcon \u4E3A true \u65F6\u6709\u6548"
          },
          "message": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u8B66\u544A\u63D0\u793A\u5185\u5BB9"
          },
          "showIcon": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u8F85\u52A9\u56FE\u6807"
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": "\u6307\u5B9A\u8B66\u544A\u63D0\u793A\u7684\u6837\u5F0F\uFF0C\u6709\u56DB\u79CD\u9009\u62E9 success\u3001info\u3001warning\u3001error"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "\u5173\u95ED\u65F6\u89E6\u53D1\u7684\u56DE\u8C03\u51FD\u6570"
          }
        },
        "a-drawer": {
          "_html": {
            "": '<a-drawer\nv-model:open="open"\ntitle="$1"\nplacement="right"\n@after-open-change="afterOpenChange"\n>\n$2\n</a-drawer>',
            ":extra[slot]": "<template #extra>\n$1\n</template>",
            ":footer[slot]": "<template #footer>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/drawer-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| autofocus| \u62BD\u5C49\u5C55\u5F00\u540E\u662F\u5426\u5C06\u7126\u70B9\u5207\u6362\u81F3\u5176 Dom \u8282\u70B9| boolean| true| 3.0.0 |\n| bodyStyle| \u53EF\u7528\u4E8E\u8BBE\u7F6E Drawer \u5185\u5BB9\u90E8\u5206\u7684\u6837\u5F0F| CSSProperties| -|  |\n| class| Drawer \u5BB9\u5668\u5916\u5C42 className \u8BBE\u7F6E\uFF0C\u5982\u679C\u9700\u8981\u8BBE\u7F6E\u6700\u5916\u5C42\uFF0C\u8BF7\u4F7F\u7528 rootClassName| string| -|  |\n| closable| \u662F\u5426\u663E\u793A\u5DE6\u4E0A\u89D2\u7684\u5173\u95ED\u6309\u94AE| boolean| true|  |\n| closeIcon| \u81EA\u5B9A\u4E49\u5173\u95ED\u56FE\u6807| VNode | slot| <CloseOutlined />| 3.0.0 |\n| contentWrapperStyle| \u53EF\u7528\u4E8E\u8BBE\u7F6E Drawer \u5305\u88F9\u5185\u5BB9\u90E8\u5206\u7684\u6837\u5F0F| CSSProperties| -| 3.0.0 |\n| destroyOnClose| \u5173\u95ED\u65F6\u9500\u6BC1 Drawer \u91CC\u7684\u5B50\u5143\u7D20| boolean| false|  |\n| extra| \u62BD\u5C49\u53F3\u4E0A\u89D2\u7684\u64CD\u4F5C\u533A\u57DF| VNode | slot| -| 3.0.0 |\n| footer| \u62BD\u5C49\u7684\u9875\u811A| VNode | slot| -| 3.0.0 |\n| footerStyle| \u62BD\u5C49\u9875\u811A\u90E8\u4EF6\u7684\u6837\u5F0F| CSSProperties| -| 3.0.0 |\n| forceRender| \u9884\u6E32\u67D3 Drawer \u5185\u5143\u7D20| boolean| false| 3.0.0 |\n| getContainer| \u6307\u5B9A Drawer \u6302\u8F7D\u7684\u8282\u70B9\uFF0C\u5E76\u5728\u5BB9\u5668\u5185\u5C55\u73B0 | () => HTMLElement | Selectors| 'body'| |  |\n| headerStyle| \u7528\u4E8E\u8BBE\u7F6E Drawer \u5934\u90E8\u7684\u6837\u5F0F| CSSProperties| -| 3.0.0 |\n| height| \u9AD8\u5EA6, \u5728 placement \u4E3A top \u6216 bottom \u65F6\u4F7F\u7528| string | number| 378|  |\n| keyboard| \u662F\u5426\u652F\u6301\u952E\u76D8 esc \u5173\u95ED| boolean| true|  |\n| mask| \u662F\u5426\u5C55\u793A\u906E\u7F69| Boolean| true|  |\n| maskClosable| \u70B9\u51FB\u8499\u5C42\u662F\u5426\u5141\u8BB8\u5173\u95ED| boolean| true|  |\n| maskStyle| \u906E\u7F69\u6837\u5F0F| CSSProperties| {}|  |\n| placement| \u62BD\u5C49\u7684\u65B9\u5411| 'top' | 'right' | 'bottom' | 'left'| 'right'|  |\n| push| \u7528\u4E8E\u8BBE\u7F6E\u591A\u5C42 Drawer \u7684\u63A8\u52A8\u884C\u4E3A| boolean | {distance: string | number}| { distance: 180 }| 3.0.0 |\n| rootClassName| \u5BF9\u8BDD\u6846\u5916\u5C42\u5BB9\u5668\u7684\u7C7B\u540D| string| -| 4.0 |\n| rootStyle| \u53EF\u7528\u4E8E\u8BBE\u7F6E Drawer \u6700\u5916\u5C42\u5BB9\u5668\u7684\u6837\u5F0F\uFF0C\u548C style \u7684\u533A\u522B\u662F\u4F5C\u7528\u8282\u70B9\u5305\u62EC mask| CSSProperties| -| 4.0 |\n| size| \u9884\u8BBE\u62BD\u5C49\u5BBD\u5EA6\uFF08\u6216\u9AD8\u5EA6\uFF09\uFF0Cdefault 378px \u548C large 736px| default | large| default| 3.0.0 |\n| style| \u8BBE\u8BA1 Drawer \u5BB9\u5668\u6837\u5F0F\uFF0C\u5982\u679C\u4F60\u53EA\u9700\u8981\u8BBE\u7F6E\u5185\u5BB9\u90E8\u5206\u8BF7\u4F7F\u7528 bodyStyle| CSSProperties| -|  |\n| title| \u6807\u9898| string | slot| -|  |\n| open(v-model)| Drawer \u662F\u5426\u53EF\u89C1| boolean| -| 4.0 |\n| width| \u5BBD\u5EA6| string | number| 378|  |\n| zIndex| \u8BBE\u7F6E Drawer \u7684 z-index| Number| 1000|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u63CF\u8FF0| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| afterOpenChange| \u5207\u6362\u62BD\u5C49\u65F6\u52A8\u753B\u7ED3\u675F\u540E\u7684\u56DE\u8C03| function(open)| \u65E0| 4.0 |\n| close| \u70B9\u51FB\u906E\u7F69\u5C42\u6216\u5DE6\u4E0A\u89D2\u53C9\u6216\u53D6\u6D88\u6309\u94AE\u7684\u56DE\u8C03| function(e)| \u65E0|  |\n",
          "autofocus": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u62BD\u5C49\u5C55\u5F00\u540E\u662F\u5426\u5C06\u7126\u70B9\u5207\u6362\u81F3\u5176 Dom \u8282\u70B9"
          },
          "bodyStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u53EF\u7528\u4E8E\u8BBE\u7F6E Drawer \u5185\u5BB9\u90E8\u5206\u7684\u6837\u5F0F"
          },
          "class": {
            "type": "attr",
            "values": [],
            "description": "Drawer \u5BB9\u5668\u5916\u5C42 className \u8BBE\u7F6E\uFF0C\u5982\u679C\u9700\u8981\u8BBE\u7F6E\u6700\u5916\u5C42\uFF0C\u8BF7\u4F7F\u7528 rootClassName"
          },
          "closable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u5DE6\u4E0A\u89D2\u7684\u5173\u95ED\u6309\u94AE"
          },
          "closeIcon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u5173\u95ED\u56FE\u6807"
          },
          "contentWrapperStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u53EF\u7528\u4E8E\u8BBE\u7F6E Drawer \u5305\u88F9\u5185\u5BB9\u90E8\u5206\u7684\u6837\u5F0F"
          },
          "destroyOnClose": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5173\u95ED\u65F6\u9500\u6BC1 Drawer \u91CC\u7684\u5B50\u5143\u7D20"
          },
          "extra": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u62BD\u5C49\u53F3\u4E0A\u89D2\u7684\u64CD\u4F5C\u533A\u57DF"
          },
          "footer": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u62BD\u5C49\u7684\u9875\u811A"
          },
          "footerStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u62BD\u5C49\u9875\u811A\u90E8\u4EF6\u7684\u6837\u5F0F"
          },
          "forceRender": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u9884\u6E32\u67D3 Drawer \u5185\u5143\u7D20"
          },
          "getContainer": {
            "type": "attr",
            "values": ["'body'"],
            "description": "\u6307\u5B9A Drawer \u6302\u8F7D\u7684\u8282\u70B9\uFF0C\u5E76\u5728\u5BB9\u5668\u5185\u5C55\u73B0 | () => HTMLElement | Selectors"
          },
          "headerStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u7528\u4E8E\u8BBE\u7F6E Drawer \u5934\u90E8\u7684\u6837\u5F0F"
          },
          "height": {
            "type": "attr",
            "values": ["string", "number"],
            "description": "\u9AD8\u5EA6, \u5728 placement \u4E3A top \u6216 bottom \u65F6\u4F7F\u7528"
          },
          "keyboard": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u652F\u6301\u952E\u76D8 esc \u5173\u95ED"
          },
          "mask": {
            "type": "attr",
            "values": ["Boolean"],
            "description": "\u662F\u5426\u5C55\u793A\u906E\u7F69"
          },
          "maskClosable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u70B9\u51FB\u8499\u5C42\u662F\u5426\u5141\u8BB8\u5173\u95ED"
          },
          "maskStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u906E\u7F69\u6837\u5F0F"
          },
          "placement": {
            "type": "attr",
            "values": ["'top'", "'right'", "'bottom'", "'left'"],
            "description": "\u62BD\u5C49\u7684\u65B9\u5411"
          },
          "push": {
            "type": "attr",
            "values": ["boolean", "number}"],
            "description": "\u7528\u4E8E\u8BBE\u7F6E\u591A\u5C42 Drawer \u7684\u63A8\u52A8\u884C\u4E3A"
          },
          "rootClassName": {
            "type": "attr",
            "values": [],
            "description": "\u5BF9\u8BDD\u6846\u5916\u5C42\u5BB9\u5668\u7684\u7C7B\u540D"
          },
          "rootStyle": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u53EF\u7528\u4E8E\u8BBE\u7F6E Drawer \u6700\u5916\u5C42\u5BB9\u5668\u7684\u6837\u5F0F\uFF0C\u548C style \u7684\u533A\u522B\u662F\u4F5C\u7528\u8282\u70B9\u5305\u62EC mask"
          },
          "size": {
            "type": "attr",
            "values": ["default", "large"],
            "description": "\u9884\u8BBE\u62BD\u5C49\u5BBD\u5EA6\uFF08\u6216\u9AD8\u5EA6\uFF09\uFF0Cdefault 378px \u548C large 736px"
          },
          "style": {
            "type": "attr",
            "values": ["CSSProperties"],
            "description": "\u8BBE\u8BA1 Drawer \u5BB9\u5668\u6837\u5F0F\uFF0C\u5982\u679C\u4F60\u53EA\u9700\u8981\u8BBE\u7F6E\u5185\u5BB9\u90E8\u5206\u8BF7\u4F7F\u7528 bodyStyle"
          },
          "title": {
            "type": "attr",
            "values": ["string", "slot"],
            "description": "\u6807\u9898"
          },
          "v-model:open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "Drawer \u662F\u5426\u53EF\u89C1"
          },
          "width": {
            "type": "attr",
            "values": ["string", "number"],
            "description": "\u5BBD\u5EA6"
          },
          "zIndex": {
            "type": "attr",
            "values": ["Number"],
            "description": "\u8BBE\u7F6E Drawer \u7684 z-index"
          },
          "afterOpenChange": {
            "type": "event",
            "values": [],
            "description": "\u5207\u6362\u62BD\u5C49\u65F6\u52A8\u753B\u7ED3\u675F\u540E\u7684\u56DE\u8C03"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u906E\u7F69\u5C42\u6216\u5DE6\u4E0A\u89D2\u53C9\u6216\u53D6\u6D88\u6309\u94AE\u7684\u56DE\u8C03"
          }
        },
        "a-modal": {
          "_html": {
            "": '<a-modal v-model:open="${1:open}" title="$2" :confirm-loading="${3:confirmLoading}" @ok="${4:handleOk}">\n$5\n</a-modal>',
            ":footer[slot]": "<template #footer>\n$1\n</template>",
            ":modalRender[slot]": '<template #modalRender="{ originVNode }">\n$1\n</template>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/modal-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| afterClose| Modal \u5B8C\u5168\u5173\u95ED\u540E\u7684\u56DE\u8C03| function| \u65E0|  |\n| bodyStyle| Modal body \u6837\u5F0F| object| {}|  |\n| cancelButtonProps| cancel \u6309\u94AE props| ButtonProps| -|  |\n| cancelText| \u53D6\u6D88\u6309\u94AE\u6587\u5B57| string| slot| \u53D6\u6D88|  |\n| centered| \u5782\u76F4\u5C45\u4E2D\u5C55\u793A Modal| boolean| false|  |\n| closable| \u662F\u5426\u663E\u793A\u53F3\u4E0A\u89D2\u7684\u5173\u95ED\u6309\u94AE| boolean| true|  |\n| closeIcon| \u81EA\u5B9A\u4E49\u5173\u95ED\u56FE\u6807| VNode | slot| -|  |\n| confirmLoading| \u786E\u5B9A\u6309\u94AE loading| boolean| \u65E0|  |\n| destroyOnClose| \u5173\u95ED\u65F6\u9500\u6BC1 Modal \u91CC\u7684\u5B50\u5143\u7D20| boolean| false|  |\n| footer| \u5E95\u90E8\u5185\u5BB9\uFF0C\u5F53\u4E0D\u9700\u8981\u9ED8\u8BA4\u5E95\u90E8\u6309\u94AE\u65F6\uFF0C\u53EF\u4EE5\u8BBE\u4E3A :footer="null"| string|slot| \u786E\u5B9A\u53D6\u6D88\u6309\u94AE|  |\n| forceRender| \u5F3A\u5236\u6E32\u67D3 Modal| boolean| false|  |\n| getContainer| \u6307\u5B9A Modal \u6302\u8F7D\u7684 HTML \u8282\u70B9| (instance): HTMLElement| () => document.body|  |\n| keyboard| \u662F\u5426\u652F\u6301\u952E\u76D8 esc \u5173\u95ED| boolean| true|  |\n| mask| \u662F\u5426\u5C55\u793A\u906E\u7F69| boolean| true|  |\n| maskClosable| \u70B9\u51FB\u8499\u5C42\u662F\u5426\u5141\u8BB8\u5173\u95ED| boolean| true|  |\n| maskStyle| \u906E\u7F69\u6837\u5F0F| object| {}|  |\n| okButtonProps| ok \u6309\u94AE props| ButtonProps| -|  |\n| okText| \u786E\u8BA4\u6309\u94AE\u6587\u5B57| string|slot| \u786E\u5B9A|  |\n| okType| \u786E\u8BA4\u6309\u94AE\u7C7B\u578B| string| primary|  |\n| title| \u6807\u9898| string|slot| \u65E0|  |\n| open(v-model)| \u5BF9\u8BDD\u6846\u662F\u5426\u53EF\u89C1| boolean| \u65E0|  |\n| width| \u5BBD\u5EA6| string|number| 520|  |\n| wrapClassName| \u5BF9\u8BDD\u6846\u5916\u5C42\u5BB9\u5668\u7684\u7C7B\u540D| string| -|  |\n| zIndex| \u8BBE\u7F6E Modal \u7684 z-index| number| 1000|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| cancel| \u70B9\u51FB\u906E\u7F69\u5C42\u6216\u53F3\u4E0A\u89D2\u53C9\u6216\u53D6\u6D88\u6309\u94AE\u7684\u56DE\u8C03| function(e) |\n| ok| \u70B9\u51FB\u786E\u5B9A\u56DE\u8C03| function(e) |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| appContext| \u5F39\u7A97\u7684\u4E0A\u4E0B\u6587\uFF0C\u4E00\u822C\u7528\u4E8E\u83B7\u53D6\u5168\u5C40\u6CE8\u518C\u7EC4\u4EF6\u3001vuex \u7B49\u5185\u5BB9| -| -|  |\n| autoFocusButton| \u6307\u5B9A\u81EA\u52A8\u83B7\u5F97\u7126\u70B9\u7684\u6309\u94AE| null | ok | cancel| ok|  |\n| cancelButtonProps| cancel \u6309\u94AE props| ButtonProps| -|  |\n| cancelText| \u53D6\u6D88\u6309\u94AE\u6587\u5B57| string| \u53D6\u6D88|  |\n| centered| \u5782\u76F4\u5C45\u4E2D\u5C55\u793A Modal| boolean| false|  |\n| class| \u5BB9\u5668\u7C7B\u540D| string| -|  |\n| closable| \u662F\u5426\u663E\u793A\u53F3\u4E0A\u89D2\u7684\u5173\u95ED\u6309\u94AE| boolean| false|  |\n| content| \u5185\u5BB9| string |VNode |function()| \u65E0|  |\n| footer| \u5E95\u90E8\u5185\u5BB9\uFF0C\u5F53\u4E0D\u9700\u8981\u9ED8\u8BA4\u5E95\u90E8\u6309\u94AE\u65F6\uFF0C\u53EF\u4EE5\u8BBE\u4E3A footer: null| string |VNode |function()| -| 4.0.0 |\n| icon| \u81EA\u5B9A\u4E49\u56FE\u6807\uFF081.14.0 \u65B0\u589E\uFF09| VNode | ()=>VNode| -|  |\n| keyboard| \u662F\u5426\u652F\u6301\u952E\u76D8 esc \u5173\u95ED| boolean| true|  |\n| mask| \u662F\u5426\u5C55\u793A\u906E\u7F69| boolean| true|  |\n| maskClosable| \u70B9\u51FB\u8499\u5C42\u662F\u5426\u5141\u8BB8\u5173\u95ED| boolean| false|  |\n| okButtonProps| ok \u6309\u94AE props| ButtonProps| -|  |\n| okText| \u786E\u8BA4\u6309\u94AE\u6587\u5B57| string| \u786E\u5B9A|  |\n| okType| \u786E\u8BA4\u6309\u94AE\u7C7B\u578B| string| primary|  |\n| title| \u6807\u9898| string|VNode |function()| \u65E0|  |\n| width| \u5BBD\u5EA6| string|number| 416|  |\n| wrapClassName| \u5BF9\u8BDD\u6846\u5916\u5C42\u5BB9\u5668\u7684\u7C7B\u540D| string| -| 3.2.3 |\n| zIndex| \u8BBE\u7F6E Modal \u7684 z-index| number| 1000|  |\n| onCancel| \u53D6\u6D88\u56DE\u8C03\uFF0C\u53C2\u6570\u4E3A\u5173\u95ED\u51FD\u6570\uFF0C\u8FD4\u56DE promise \u65F6 resolve \u540E\u81EA\u52A8\u5173\u95ED| function| \u65E0|  |\n| onOk| \u70B9\u51FB\u786E\u5B9A\u56DE\u8C03\uFF0C\u53C2\u6570\u4E3A\u5173\u95ED\u51FD\u6570\uFF0C\u8FD4\u56DE promise \u65F6 resolve \u540E\u81EA\u52A8\u5173\u95ED| function| \u65E0|  |\n#### \u65B9\u6CD5\n',
          "afterClose": {
            "type": "attr",
            "values": ["function"],
            "description": "Modal \u5B8C\u5168\u5173\u95ED\u540E\u7684\u56DE\u8C03"
          },
          "bodyStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "Modal body \u6837\u5F0F"
          },
          "cancelButtonProps": {
            "type": "attr",
            "values": ["ButtonProps"],
            "description": "cancel \u6309\u94AE props"
          },
          "cancelText": {
            "type": "attr",
            "values": ["string| slot"],
            "description": "\u53D6\u6D88\u6309\u94AE\u6587\u5B57"
          },
          "centered": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5782\u76F4\u5C45\u4E2D\u5C55\u793A Modal"
          },
          "closable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u53F3\u4E0A\u89D2\u7684\u5173\u95ED\u6309\u94AE"
          },
          "closeIcon": {
            "type": "attr",
            "values": ["VNode", "slot"],
            "description": "\u81EA\u5B9A\u4E49\u5173\u95ED\u56FE\u6807"
          },
          "confirmLoading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u786E\u5B9A\u6309\u94AE loading"
          },
          "destroyOnClose": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5173\u95ED\u65F6\u9500\u6BC1 Modal \u91CC\u7684\u5B50\u5143\u7D20"
          },
          "footer": {
            "type": "attr",
            "values": ["string|slot"],
            "description": '\u5E95\u90E8\u5185\u5BB9\uFF0C\u5F53\u4E0D\u9700\u8981\u9ED8\u8BA4\u5E95\u90E8\u6309\u94AE\u65F6\uFF0C\u53EF\u4EE5\u8BBE\u4E3A :footer="null"'
          },
          "forceRender": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5F3A\u5236\u6E32\u67D3 Modal"
          },
          "getContainer": {
            "type": "attr",
            "values": ["(instance): HTMLElement"],
            "description": "\u6307\u5B9A Modal \u6302\u8F7D\u7684 HTML \u8282\u70B9"
          },
          "keyboard": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u652F\u6301\u952E\u76D8 esc \u5173\u95ED"
          },
          "mask": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u906E\u7F69"
          },
          "maskClosable": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u70B9\u51FB\u8499\u5C42\u662F\u5426\u5141\u8BB8\u5173\u95ED"
          },
          "maskStyle": {
            "type": "attr",
            "values": ["object"],
            "description": "\u906E\u7F69\u6837\u5F0F"
          },
          "okButtonProps": {
            "type": "attr",
            "values": ["ButtonProps"],
            "description": "ok \u6309\u94AE props"
          },
          "okText": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u786E\u8BA4\u6309\u94AE\u6587\u5B57"
          },
          "okType": {
            "type": "attr",
            "values": [],
            "description": "\u786E\u8BA4\u6309\u94AE\u7C7B\u578B"
          },
          "title": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u6807\u9898"
          },
          "v-model:open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u5BF9\u8BDD\u6846\u662F\u5426\u53EF\u89C1"
          },
          "width": {
            "type": "attr",
            "values": ["string|number"],
            "description": "\u5BBD\u5EA6"
          },
          "wrapClassName": {
            "type": "attr",
            "values": [],
            "description": "\u5BF9\u8BDD\u6846\u5916\u5C42\u5BB9\u5668\u7684\u7C7B\u540D"
          },
          "zIndex": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E Modal \u7684 z-index"
          },
          "cancel": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u906E\u7F69\u5C42\u6216\u53F3\u4E0A\u89D2\u53C9\u6216\u53D6\u6D88\u6309\u94AE\u7684\u56DE\u8C03"
          },
          "ok": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u786E\u5B9A\u56DE\u8C03"
          }
        },
        "a-popconfirm": {
          "_html": {
            "": '<a-popconfirm\ntitle="$1"\nok-text="Yes"\ncancel-text="No"\n@confirm="${2:confirm}"\n@cancel="${3:cancel}"\n>\n$4\n</a-popconfirm>',
            ":icon[slot]": "<template #icon>\n$1\n</template>",
            ":title[slot]": "<template #title>\n$1\n</template>"
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/popconfirm-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| cancelButton| \u5B8C\u5168\u81EA\u5B9A\u4E49\u53D6\u6D88\u6309\u94AE| slot| -| 3.0 |\n| cancelButtonProps| cancel \u6309\u94AE props| ButtonProps| -|  |\n| cancelText| \u53D6\u6D88\u6309\u94AE\u6587\u5B57| string|slot| \u53D6\u6D88|  |\n| disabled| \u70B9\u51FB Popconfirm \u5B50\u5143\u7D20\u662F\u5426\u5F39\u51FA\u6C14\u6CE1\u786E\u8BA4\u6846| boolean| false|  |\n| icon| \u81EA\u5B9A\u4E49\u5F39\u51FA\u6C14\u6CE1 Icon \u56FE\u6807| vNode| <Icon type="exclamation-circle" />|  |\n| okButton| \u5B8C\u5168\u81EA\u5B9A\u4E49\u786E\u8BA4\u6309\u94AE| slot| -| 3.0 |\n| okButtonProps| ok \u6309\u94AE props| ButtonProps| -|  |\n| okText| \u786E\u8BA4\u6309\u94AE\u6587\u5B57| string|slot| \u786E\u5B9A|  |\n| okType| \u786E\u8BA4\u6309\u94AE\u7C7B\u578B| string| primary|  |\n| showCancel| \u662F\u5426\u663E\u793A\u53D6\u6D88\u6309\u94AE| boolean| true| 3.0 |\n| title| \u786E\u8BA4\u6846\u7684\u63CF\u8FF0| string|slot| \u65E0|  |\n| description| \u786E\u8BA4\u5185\u5BB9\u7684\u8BE6\u7EC6\u63CF\u8FF0| string|slot| -| 4.0 |\n| open (v-model)| \u662F\u5426\u663E\u793A| boolean| -| 4.0 |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| cancel| \u70B9\u51FB\u53D6\u6D88\u7684\u56DE\u8C03| function(e)|  |\n| confirm| \u70B9\u51FB\u786E\u8BA4\u7684\u56DE\u8C03| function(e)|  |\n| openChange| \u663E\u793A\u9690\u85CF\u7684\u56DE\u8C03| function(open)| 4.0 |\n',
          "cancelButton": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u5B8C\u5168\u81EA\u5B9A\u4E49\u53D6\u6D88\u6309\u94AE"
          },
          "cancelButtonProps": {
            "type": "attr",
            "values": ["ButtonProps"],
            "description": "cancel \u6309\u94AE props"
          },
          "cancelText": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u53D6\u6D88\u6309\u94AE\u6587\u5B57"
          },
          "disabled": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u70B9\u51FB Popconfirm \u5B50\u5143\u7D20\u662F\u5426\u5F39\u51FA\u6C14\u6CE1\u786E\u8BA4\u6846"
          },
          "icon": {
            "type": "attr",
            "values": ["vNode"],
            "description": "\u81EA\u5B9A\u4E49\u5F39\u51FA\u6C14\u6CE1 Icon \u56FE\u6807"
          },
          "okButton": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u5B8C\u5168\u81EA\u5B9A\u4E49\u786E\u8BA4\u6309\u94AE"
          },
          "okButtonProps": {
            "type": "attr",
            "values": ["ButtonProps"],
            "description": "ok \u6309\u94AE props"
          },
          "okText": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u786E\u8BA4\u6309\u94AE\u6587\u5B57"
          },
          "okType": {
            "type": "attr",
            "values": [],
            "description": "\u786E\u8BA4\u6309\u94AE\u7C7B\u578B"
          },
          "showCancel": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u53D6\u6D88\u6309\u94AE"
          },
          "title": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u786E\u8BA4\u6846\u7684\u63CF\u8FF0"
          },
          "description": {
            "type": "attr",
            "values": ["string|slot"],
            "description": "\u786E\u8BA4\u5185\u5BB9\u7684\u8BE6\u7EC6\u63CF\u8FF0"
          },
          "v-model:open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A"
          },
          "cancel": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u53D6\u6D88\u7684\u56DE\u8C03"
          },
          "confirm": {
            "type": "event",
            "values": [],
            "description": "\u70B9\u51FB\u786E\u8BA4\u7684\u56DE\u8C03"
          },
          "openChange": {
            "type": "event",
            "values": [],
            "description": "\u663E\u793A\u9690\u85CF\u7684\u56DE\u8C03"
          }
        },
        "a-progress": {
          "_html": {
            "": '<a-progress :percent="30">$1</a-progress>',
            ":circle": '<a-progress type="circle" :percent="30">$1</a-progress>',
            ":format[slot]": '<template #format="percent">\n$1\n</template>',
            ":steps": '<a-progress :percent="30" :steps="3">$1</a-progress>'
          },
          "_doc": '#### [\u8BBF\u95EE](https://www.antdv.com/components/progress-cn)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| format| \u5185\u5BB9\u7684\u6A21\u677F\u51FD\u6570| function(percent, successPercent)| (percent) => percent + %|  |\n| percent| \u767E\u5206\u6BD4| number| 0|  |\n| showInfo| \u662F\u5426\u663E\u793A\u8FDB\u5EA6\u6570\u503C\u6216\u72B6\u6001\u56FE\u6807| boolean| true|  |\n| status| \u72B6\u6001\uFF0C\u53EF\u9009\uFF1Asuccess exception normal active(\u4EC5\u9650 line)| string| -|  |\n| strokeColor| \u8FDB\u5EA6\u6761\u7684\u8272\u5F69| string| -|  |\n| strokeLinecap| \u8FDB\u5EA6\u6761\u7684\u6837\u5F0F| round | butt | square\uFF0C\u533A\u522B\u8BE6\u89C1 stroke-linecap| round| - |\n| success| \u6210\u529F\u8FDB\u5EA6\u6761\u76F8\u5173\u914D\u7F6E| { percent: number, strokeColor: string }| -|  |\n| title| html \u6807\u7B7E title| string| -| 3.0 |\n| trailColor| \u672A\u5B8C\u6210\u7684\u5206\u6BB5\u7684\u989C\u8272| string| -|  |\n| type| \u7C7B\u578B\uFF0C\u53EF\u9009 line circle dashboard| string| line|  |\n| size| \u8FDB\u5EA6\u6761\u7684\u5C3A\u5BF8| number | [number, number] | "small" | "default"| "default"|  |\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| steps| \u8FDB\u5EA6\u6761\u603B\u5171\u6B65\u6570| number| -| - |\n| strokeColor| \u8FDB\u5EA6\u6761\u7684\u8272\u5F69\uFF0C\u4F20\u5165 object \u65F6\u4E3A\u6E10\u53D8\u3002\u5F53\u6709 steps \u65F6\u652F\u6301\u4F20\u5165\u4E00\u4E2A\u6570\u7EC4\u3002| string | string[] | { from: string; to: string; direction: string }| -| - |\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| strokeColor| \u5706\u5F62\u8FDB\u5EA6\u6761\u7EBF\u7684\u8272\u5F69\uFF0C\u4F20\u5165 object \u65F6\u4E3A\u6E10\u53D8| string | object| -| - |\n| strokeWidth| \u5706\u5F62\u8FDB\u5EA6\u6761\u7EBF\u7684\u5BBD\u5EA6\uFF0C\u5355\u4F4D\u662F\u8FDB\u5EA6\u6761\u753B\u5E03\u5BBD\u5EA6\u7684\u767E\u5206\u6BD4| number| 6| - |\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| gapDegree| \u4EEA\u8868\u76D8\u8FDB\u5EA6\u6761\u7F3A\u53E3\u89D2\u5EA6\uFF0C\u53EF\u53D6\u503C 0 ~ 295| number| 75| - |\n| gapPosition| \u4EEA\u8868\u76D8\u8FDB\u5EA6\u6761\u7F3A\u53E3\u4F4D\u7F6E| top | bottom | left | right| bottom| - |\n| strokeWidth| \u4EEA\u8868\u76D8\u8FDB\u5EA6\u6761\u7EBF\u7684\u5BBD\u5EA6\uFF0C\u5355\u4F4D\u662F\u8FDB\u5EA6\u6761\u753B\u5E03\u5BBD\u5EA6\u7684\u767E\u5206\u6BD4| number| 6| - |\n',
          "format": {
            "type": "attr",
            "values": ["function(percent, successPercent)"],
            "description": "\u5185\u5BB9\u7684\u6A21\u677F\u51FD\u6570"
          },
          "percent": {
            "type": "attr",
            "values": ["number"],
            "description": "\u767E\u5206\u6BD4"
          },
          "showInfo": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u663E\u793A\u8FDB\u5EA6\u6570\u503C\u6216\u72B6\u6001\u56FE\u6807"
          },
          "status": {
            "type": "attr",
            "values": [],
            "description": "\u72B6\u6001\uFF0C\u53EF\u9009\uFF1Asuccess exception normal active(\u4EC5\u9650 line)"
          },
          "strokeColor": {
            "type": "attr",
            "values": [],
            "description": "\u8FDB\u5EA6\u6761\u7684\u8272\u5F69"
          },
          "strokeLinecap": {
            "type": "attr",
            "values": ["round", "butt", "square\uFF0C\u533A\u522B\u8BE6\u89C1 stroke-linecap"],
            "description": "\u8FDB\u5EA6\u6761\u7684\u6837\u5F0F"
          },
          "success": {
            "type": "attr",
            "values": [],
            "description": "\u6210\u529F\u8FDB\u5EA6\u6761\u76F8\u5173\u914D\u7F6E"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": "html \u6807\u7B7E title"
          },
          "trailColor": {
            "type": "attr",
            "values": [],
            "description": "\u672A\u5B8C\u6210\u7684\u5206\u6BB5\u7684\u989C\u8272"
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": "\u7C7B\u578B\uFF0C\u53EF\u9009 line circle dashboard"
          },
          "size": {
            "type": "attr",
            "values": ["number", "[number, number]", '"small"', '"default"'],
            "description": "\u8FDB\u5EA6\u6761\u7684\u5C3A\u5BF8"
          }
        },
        "a-result": {
          "_html": {
            "": '<a-result\nstatus="success"\ntitle="$1"\nsub-title="$2"\n>\n$3\n</a-result>',
            ":extra[slot]": "<template #extra>\n$1\n</template>",
            ":icon[slot]": "<template #icon>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/result-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| | | | | |  |\n| :--- | :--- | :--- | :--- | :--- | :--- | :--- | :--- | :--- | :--- |\n| extra| \u64CD\u4F5C\u533A| slot| -| | | | | |  |\n| icon| \u81EA\u5B9A\u4E49 icon| slot| -| | | | | |  |\n| status| \u7ED3\u679C\u7684\u72B6\u6001,\u51B3\u5B9A\u56FE\u6807\u548C\u989C\u8272| success | error | info | warning | 404 | 403 | 500| 'info'| | | | | |  |\n| subTitle| subTitle \u6587\u5B57| string | VNode | slot| -| | | | | |  |\n| title| title \u6587\u5B57| string | VNode | slot| -| | | | | |  |\n",
          "extra": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u64CD\u4F5C\u533A"
          },
          "icon": {
            "type": "attr",
            "values": ["slot"],
            "description": "\u81EA\u5B9A\u4E49 icon"
          },
          "status": {
            "type": "attr",
            "values": ["success", "error", "info", "warning", "404", "403", "500"],
            "description": "\u7ED3\u679C\u7684\u72B6\u6001,\u51B3\u5B9A\u56FE\u6807\u548C\u989C\u8272"
          },
          "subTitle": {
            "type": "attr",
            "values": ["string", "VNode", "slot"],
            "description": "subTitle \u6587\u5B57"
          },
          "title": {
            "type": "attr",
            "values": ["string", "VNode", "slot"],
            "description": "title \u6587\u5B57"
          }
        },
        "a-skeleton": {
          "_html": {
            "": "<a-skeleton>$1</a-skeleton>",
            ":active": "<a-skeleton active>$1</a-skeleton>",
            ":avatar": '<a-skeleton avatar :paragraph="{ rows: 4 }">$1</a-skeleton>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/skeleton-cn)\n#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| active| \u662F\u5426\u5C55\u793A\u52A8\u753B\u6548\u679C| boolean| false |\n| avatar| \u662F\u5426\u663E\u793A\u5934\u50CF\u5360\u4F4D\u56FE| boolean | SkeletonAvatarProps| false |\n| loading| \u4E3A true \u65F6\uFF0C\u663E\u793A\u5360\u4F4D\u56FE\u3002\u53CD\u4E4B\u5219\u76F4\u63A5\u5C55\u793A\u5B50\u7EC4\u4EF6| boolean| - |\n| paragraph| \u662F\u5426\u663E\u793A\u6BB5\u843D\u5360\u4F4D\u56FE| boolean | SkeletonParagraphProps| true |\n| title| \u662F\u5426\u663E\u793A\u6807\u9898\u5360\u4F4D\u56FE| boolean | SkeletonTitleProps| true |\n#### [](https://www.antdv.com/components/skeleton-cn)#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| shape| \u6307\u5B9A\u5934\u50CF\u7684\u5F62\u72B6| circle | square| - |\n| size| \u8BBE\u7F6E\u5934\u50CF\u5360\u4F4D\u56FE\u7684\u5927\u5C0F| number | large | small | default| - |\n#### [](https://www.antdv.com/components/skeleton-cn)#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| width| \u8BBE\u7F6E\u6807\u9898\u5360\u4F4D\u56FE\u7684\u5BBD\u5EA6| number | string| - |\n#### [](https://www.antdv.com/components/skeleton-cn)#### \u5C5E\u6027\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| rows| \u8BBE\u7F6E\u6BB5\u843D\u5360\u4F4D\u56FE\u7684\u884C\u6570| number| - |\n| width| \u8BBE\u7F6E\u6BB5\u843D\u5360\u4F4D\u56FE\u7684\u5BBD\u5EA6\uFF0C\u82E5\u4E3A\u6570\u7EC4\u65F6\u5219\u4E3A\u5BF9\u5E94\u7684\u6BCF\u884C\u5BBD\u5EA6\uFF0C\u53CD\u4E4B\u5219\u662F\u6700\u540E\u4E00\u884C\u7684\u5BBD\u5EA6| number | string | Array<number | string>| - |\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| active| \u662F\u5426\u5C55\u793A\u52A8\u753B\u6548\u679C| boolean| false|  |\n| block| \u5C06\u6309\u94AE\u5BBD\u5EA6\u8C03\u6574\u4E3A\u5176\u7236\u5BBD\u5EA6\u7684\u9009\u9879| boolean| false|  |\n| shape| \u6307\u5B9A\u6309\u94AE\u7684\u5F62\u72B6| circle | round | default| -|  |\n| size| \u8BBE\u7F6E\u6309\u94AE\u7684\u5927\u5C0F| large | small | default| -|  |\n\n| \u5C5E\u6027| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- |\n| active| \u662F\u5426\u5C55\u793A\u52A8\u753B\u6548\u679C| boolean| false |\n| size| \u8BBE\u7F6E\u8F93\u5165\u6846\u7684\u5927\u5C0F| large | small | default| - |\n",
          "active": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u5C55\u793A\u52A8\u753B\u6548\u679C"
          },
          "avatar": {
            "type": "attr",
            "values": ["boolean", "SkeletonAvatarProps"],
            "description": "\u662F\u5426\u663E\u793A\u5934\u50CF\u5360\u4F4D\u56FE"
          },
          "loading": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u4E3A true \u65F6\uFF0C\u663E\u793A\u5360\u4F4D\u56FE\u3002\u53CD\u4E4B\u5219\u76F4\u63A5\u5C55\u793A\u5B50\u7EC4\u4EF6"
          },
          "paragraph": {
            "type": "attr",
            "values": ["boolean", "SkeletonParagraphProps"],
            "description": "\u662F\u5426\u663E\u793A\u6BB5\u843D\u5360\u4F4D\u56FE"
          },
          "title": {
            "type": "attr",
            "values": ["boolean", "SkeletonTitleProps"],
            "description": "\u662F\u5426\u663E\u793A\u6807\u9898\u5360\u4F4D\u56FE"
          },
          "shape": {
            "type": "attr",
            "values": ["circle", "square"],
            "description": "\u6307\u5B9A\u5934\u50CF\u7684\u5F62\u72B6"
          },
          "size": {
            "type": "attr",
            "values": ["number", "large", "small", "default"],
            "description": "\u8BBE\u7F6E\u5934\u50CF\u5360\u4F4D\u56FE\u7684\u5927\u5C0F"
          },
          "width": {
            "type": "attr",
            "values": ["number", "string", "Array<number", "string>"],
            "description": "\u8BBE\u7F6E\u6BB5\u843D\u5360\u4F4D\u56FE\u7684\u5BBD\u5EA6\uFF0C\u82E5\u4E3A\u6570\u7EC4\u65F6\u5219\u4E3A\u5BF9\u5E94\u7684\u6BCF\u884C\u5BBD\u5EA6\uFF0C\u53CD\u4E4B\u5219\u662F\u6700\u540E\u4E00\u884C\u7684\u5BBD\u5EA6"
          },
          "rows": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8BBE\u7F6E\u6BB5\u843D\u5360\u4F4D\u56FE\u7684\u884C\u6570"
          }
        },
        "a-skeleton-button": {
          "_html": {
            "": '<a-skeleton-button :active="$1" :shape="$2" :block="$3">$4</a-skeleton-button>'
          }
        },
        "a-skeleton-avatar": {
          "_html": {
            "": '<a-skeleton-avatar :active="$1" :shape="$2" :block="$3">$4</a-skeleton-avatar>'
          }
        },
        "a-skeleton-input": {
          "_html": {
            "": '<a-skeleton-input :active="$1">$4</a-skeleton-input>'
          }
        },
        "a-skeleton-image": {
          "_html": {
            "": "<a-skeleton-image>$1</a-skeleton-image>"
          }
        },
        "a-spin": {
          "_html": {
            "": "<a-spin>$1</a-spin>",
            ":delay": '<a-spin :spinning="$1" :delay="$2">$3</a-spin>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/spin-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| delay| \u5EF6\u8FDF\u663E\u793A\u52A0\u8F7D\u6548\u679C\u7684\u65F6\u95F4\uFF08\u9632\u6B62\u95EA\u70C1\uFF09| number (\u6BEB\u79D2)| -|  |\n| indicator| \u52A0\u8F7D\u6307\u793A\u7B26| vNode | slot| -|  |\n| size| \u7EC4\u4EF6\u5927\u5C0F\uFF0C\u53EF\u9009\u503C\u4E3A small default large| string| default|  |\n| spinning| \u662F\u5426\u4E3A\u52A0\u8F7D\u4E2D\u72B6\u6001| boolean| true|  |\n| tip| \u5F53\u4F5C\u4E3A\u5305\u88F9\u5143\u7D20\u65F6\uFF0C\u53EF\u4EE5\u81EA\u5B9A\u4E49\u63CF\u8FF0\u6587\u6848| string | slot| -| slot 3.0 |\n| wrapperClassName| \u5305\u88C5\u5668\u7684\u7C7B\u5C5E\u6027| string| -|  |\n#### \u65B9\u6CD5\n",
          "delay": {
            "type": "attr",
            "values": ["number (\u6BEB\u79D2)"],
            "description": "\u5EF6\u8FDF\u663E\u793A\u52A0\u8F7D\u6548\u679C\u7684\u65F6\u95F4\uFF08\u9632\u6B62\u95EA\u70C1\uFF09"
          },
          "indicator": {
            "type": "attr",
            "values": ["vNode", "slot"],
            "description": "\u52A0\u8F7D\u6307\u793A\u7B26"
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": "\u7EC4\u4EF6\u5927\u5C0F\uFF0C\u53EF\u9009\u503C\u4E3A small default large"
          },
          "spinning": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u662F\u5426\u4E3A\u52A0\u8F7D\u4E2D\u72B6\u6001"
          },
          "tip": {
            "type": "attr",
            "values": ["string", "slot"],
            "description": "\u5F53\u4F5C\u4E3A\u5305\u88F9\u5143\u7D20\u65F6\uFF0C\u53EF\u4EE5\u81EA\u5B9A\u4E49\u63CF\u8FF0\u6587\u6848"
          },
          "wrapperClassName": {
            "type": "attr",
            "values": [],
            "description": "\u5305\u88C5\u5668\u7684\u7C7B\u5C5E\u6027"
          }
        },
        "a-affix": {
          "_html": {
            "": '<a-affix :offset-top="top">\n$1\n</a-affix>',
            ":target": '<a-affix :target="$1">\n$2\n</a-affix>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/affix-cn)\n#### \u5C5E\u6027\n\n| \u6210\u5458| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| offsetBottom| \u8DDD\u79BB\u7A97\u53E3\u5E95\u90E8\u8FBE\u5230\u6307\u5B9A\u504F\u79FB\u91CF\u540E\u89E6\u53D1| number| |  |\n| offsetTop| \u8DDD\u79BB\u7A97\u53E3\u9876\u90E8\u8FBE\u5230\u6307\u5B9A\u504F\u79FB\u91CF\u540E\u89E6\u53D1| number| 0|  |\n| target| \u8BBE\u7F6E Affix \u9700\u8981\u76D1\u542C\u5176\u6EDA\u52A8\u4E8B\u4EF6\u7684\u5143\u7D20\uFF0C\u503C\u4E3A\u4E00\u4E2A\u8FD4\u56DE\u5BF9\u5E94 DOM \u5143\u7D20\u7684\u51FD\u6570| () => HTMLElement| () => window|  |\n#### \u4E8B\u4EF6\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C|  |\n| :--- | :--- | :--- | :--- | :--- |\n| change| \u56FA\u5B9A\u72B6\u6001\u6539\u53D8\u65F6\u89E6\u53D1\u7684\u56DE\u8C03\u51FD\u6570| (affixed?: boolean) => void| -|  |\n",
          "offsetBottom": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8DDD\u79BB\u7A97\u53E3\u5E95\u90E8\u8FBE\u5230\u6307\u5B9A\u504F\u79FB\u91CF\u540E\u89E6\u53D1"
          },
          "offsetTop": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8DDD\u79BB\u7A97\u53E3\u9876\u90E8\u8FBE\u5230\u6307\u5B9A\u504F\u79FB\u91CF\u540E\u89E6\u53D1"
          },
          "target": {
            "type": "attr",
            "values": ["() => HTMLElement"],
            "description": "\u8BBE\u7F6E Affix \u9700\u8981\u76D1\u542C\u5176\u6EDA\u52A8\u4E8B\u4EF6\u7684\u5143\u7D20\uFF0C\u503C\u4E3A\u4E00\u4E2A\u8FD4\u56DE\u5BF9\u5E94 DOM \u5143\u7D20\u7684\u51FD\u6570"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": "\u56FA\u5B9A\u72B6\u6001\u6539\u53D8\u65F6\u89E6\u53D1\u7684\u56DE\u8C03\u51FD\u6570"
          }
        },
        "a-config-provider": {
          "_html": {
            "": "<a-config-provider>$1</a-config-provider>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/config-provider-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| autoInsertSpaceInButton| \u8BBE\u7F6E\u4E3A false \u65F6\uFF0C\u79FB\u9664\u6309\u94AE\u4E2D 2 \u4E2A\u6C49\u5B57\u4E4B\u95F4\u7684\u7A7A\u683C| boolean| true|  |\n| componentSize| \u8BBE\u7F6E antd \u7EC4\u4EF6\u5927\u5C0F| small | middle | large| -| 3.0 |\n| csp| \u8BBE\u7F6E Content Security Policy \u914D\u7F6E| { nonce: string }| -|  |\n| direction| \u8BBE\u7F6E\u6587\u672C\u5C55\u793A\u65B9\u5411\u3002 \u793A\u4F8B| ltr | rtl| ltr| 3.0 |\n| dropdownMatchSelectWidth| \u4E0B\u62C9\u83DC\u5355\u548C\u9009\u62E9\u5668\u540C\u5BBD\u3002\u9ED8\u8BA4\u5C06\u8BBE\u7F6E min-width\uFF0C\u5F53\u503C\u5C0F\u4E8E\u9009\u62E9\u6846\u5BBD\u5EA6\u65F6\u4F1A\u88AB\u5FFD\u7565\u3002false \u65F6\u4F1A\u5173\u95ED\u865A\u62DF\u6EDA\u52A8| boolean | number| -|  |\n| form| \u8BBE\u7F6E Form \u7EC4\u4EF6\u7684\u901A\u7528\u5C5E\u6027| { validateMessages?: ValidateMessages, requiredMark?: boolean | optional, colon?: boolean}| -| 3.0 |\n| getPopupContainer| \u5F39\u51FA\u6846\uFF08Select, Tooltip, Menu \u7B49\u7B49\uFF09\u6E32\u67D3\u7236\u8282\u70B9\uFF0C\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\u3002| Function(triggerNode, dialogContext)| () => document.body|  |\n| getTargetContainer| \u914D\u7F6E Affix\u3001Anchor \u6EDA\u52A8\u76D1\u542C\u5BB9\u5668\u3002| () => HTMLElement| () => window| 3.0 |\n| input| \u8BBE\u7F6E Input \u7EC4\u4EF6\u7684\u901A\u7528\u5C5E\u6027| { autocomplete?: string }| -| 3.0 |\n| locale| \u8BED\u8A00\u5305\u914D\u7F6E\uFF0C\u8BED\u8A00\u5305\u53EF\u5230 ant-design-vue/es/locale \u76EE\u5F55\u4E0B\u5BFB\u627E| object| -| 1.5.0 |\n| pageHeader| \u7EDF\u4E00\u8BBE\u7F6E pageHeader \u7684 ghost\uFF0C\u53C2\u8003 pageHeader| { ghost: boolean }| 'true'| 1.5.0 |\n| prefixCls| \u8BBE\u7F6E\u7EDF\u4E00\u6837\u5F0F\u524D\u7F00\u3002\u6CE8\u610F\uFF1A\u9700\u8981\u914D\u5408 less \u53D8\u91CF @ant-prefix \u4F7F\u7528| string| ant|  |\n| renderEmpty| \u81EA\u5B9A\u4E49\u7EC4\u4EF6\u7A7A\u72B6\u6001\u3002\u53C2\u8003 \u7A7A\u72B6\u6001| slot | Function(componentName: string): VNode| -|  |\n| space| \u8BBE\u7F6E Space \u7684 size\uFF0C\u53C2\u8003 Space| { size: small | middle | large | number }| -| 3.0 |\n| transformCellText| Table \u6570\u636E\u6E32\u67D3\u524D\u53EF\u4EE5\u518D\u6B21\u6539\u53D8\uFF0C\u4E00\u822C\u7528\u6237\u7A7A\u6570\u636E\u7684\u9ED8\u8BA4\u914D\u7F6E| Function({ text, column, record, index }) => any| -| 1.5.4 |\n| virtual| \u8BBE\u7F6E false \u65F6\u5173\u95ED\u865A\u62DF\u6EDA\u52A8| boolean| -| 3.0 |\n| wave| \u8BBE\u7F6E\u6C34\u6CE2\u7EB9\u7279\u6548| { disabled?: boolean }| -| 4.0.7 |\n#### \u65B9\u6CD5\n",
          "autoInsertSpaceInButton": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E\u4E3A false \u65F6\uFF0C\u79FB\u9664\u6309\u94AE\u4E2D 2 \u4E2A\u6C49\u5B57\u4E4B\u95F4\u7684\u7A7A\u683C"
          },
          "componentSize": {
            "type": "attr",
            "values": ["small", "middle", "large"],
            "description": "\u8BBE\u7F6E antd \u7EC4\u4EF6\u5927\u5C0F"
          },
          "csp": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E Content Security Policy \u914D\u7F6E"
          },
          "direction": {
            "type": "attr",
            "values": ["ltr", "rtl"],
            "description": "\u8BBE\u7F6E\u6587\u672C\u5C55\u793A\u65B9\u5411\u3002 \u793A\u4F8B"
          },
          "dropdownMatchSelectWidth": {
            "type": "attr",
            "values": ["boolean", "number"],
            "description": "\u4E0B\u62C9\u83DC\u5355\u548C\u9009\u62E9\u5668\u540C\u5BBD\u3002\u9ED8\u8BA4\u5C06\u8BBE\u7F6E min-width\uFF0C\u5F53\u503C\u5C0F\u4E8E\u9009\u62E9\u6846\u5BBD\u5EA6\u65F6\u4F1A\u88AB\u5FFD\u7565\u3002false \u65F6\u4F1A\u5173\u95ED\u865A\u62DF\u6EDA\u52A8"
          },
          "form": {
            "type": "attr",
            "values": ["optional, colon?: boolean}"],
            "description": "\u8BBE\u7F6E Form \u7EC4\u4EF6\u7684\u901A\u7528\u5C5E\u6027"
          },
          "getPopupContainer": {
            "type": "attr",
            "values": ["Function(triggerNode, dialogContext)"],
            "description": "\u5F39\u51FA\u6846\uFF08Select, Tooltip, Menu \u7B49\u7B49\uFF09\u6E32\u67D3\u7236\u8282\u70B9\uFF0C\u9ED8\u8BA4\u6E32\u67D3\u5230 body \u4E0A\u3002"
          },
          "getTargetContainer": {
            "type": "attr",
            "values": ["() => HTMLElement"],
            "description": "\u914D\u7F6E Affix\u3001Anchor \u6EDA\u52A8\u76D1\u542C\u5BB9\u5668\u3002"
          },
          "input": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E Input \u7EC4\u4EF6\u7684\u901A\u7528\u5C5E\u6027"
          },
          "locale": {
            "type": "attr",
            "values": ["object"],
            "description": "\u8BED\u8A00\u5305\u914D\u7F6E\uFF0C\u8BED\u8A00\u5305\u53EF\u5230 ant-design-vue/es/locale \u76EE\u5F55\u4E0B\u5BFB\u627E"
          },
          "pageHeader": {
            "type": "attr",
            "values": [],
            "description": "\u7EDF\u4E00\u8BBE\u7F6E pageHeader \u7684 ghost\uFF0C\u53C2\u8003 pageHeader"
          },
          "prefixCls": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u7EDF\u4E00\u6837\u5F0F\u524D\u7F00\u3002\u6CE8\u610F\uFF1A\u9700\u8981\u914D\u5408 less \u53D8\u91CF @ant-prefix \u4F7F\u7528"
          },
          "renderEmpty": {
            "type": "attr",
            "values": ["slot", "Function(componentName: string): VNode"],
            "description": "\u81EA\u5B9A\u4E49\u7EC4\u4EF6\u7A7A\u72B6\u6001\u3002\u53C2\u8003 \u7A7A\u72B6\u6001"
          },
          "space": {
            "type": "attr",
            "values": ["middle", "large", "number }"],
            "description": "\u8BBE\u7F6E Space \u7684 size\uFF0C\u53C2\u8003 Space"
          },
          "transformCellText": {
            "type": "attr",
            "values": [],
            "description": "Table \u6570\u636E\u6E32\u67D3\u524D\u53EF\u4EE5\u518D\u6B21\u6539\u53D8\uFF0C\u4E00\u822C\u7528\u6237\u7A7A\u6570\u636E\u7684\u9ED8\u8BA4\u914D\u7F6E"
          },
          "virtual": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u8BBE\u7F6E false \u65F6\u5173\u95ED\u865A\u62DF\u6EDA\u52A8"
          },
          "wave": {
            "type": "attr",
            "values": [],
            "description": "\u8BBE\u7F6E\u6C34\u6CE2\u7EB9\u7279\u6548"
          }
        },
        "a-float-button": {
          "_html": {
            "": '<a-float-button @click="handleClick">$1</a-float-button>',
            ":icon[slot]": "<template #icon>\n$1\n</template>",
            ":tooltip[slot]": "<template #tooltip>\n$1\n</template>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/float-button-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| icon| \u81EA\u5B9A\u4E49\u56FE\u6807| slot| -|  |\n| description| \u6587\u5B57\u53CA\u5176\u5B83\u5185\u5BB9| string | slot| -|  |\n| tooltip| \u6C14\u6CE1\u5361\u7247\u7684\u5185\u5BB9| string | slot| -|  |\n| type| \u8BBE\u7F6E\u6309\u94AE\u7C7B\u578B| default | primary| default|  |\n| shape| \u8BBE\u7F6E\u6309\u94AE\u5F62\u72B6| circle | square| circle|  |\n| onClick| \u70B9\u51FB\u6309\u94AE\u65F6\u7684\u56DE\u8C03| (event) => void| -|  |\n| href| \u70B9\u51FB\u8DF3\u8F6C\u7684\u5730\u5740\uFF0C\u6307\u5B9A\u6B64\u5C5E\u6027 button \u7684\u884C\u4E3A\u548C a \u94FE\u63A5\u4E00\u81F4| string| -|  |\n| target| \u76F8\u5F53\u4E8E a \u6807\u7B7E\u7684 target \u5C5E\u6027\uFF0Chref \u5B58\u5728\u65F6\u751F\u6548| string| -|  |\n| badge| \u5E26\u5FBD\u6807\u6570\u5B57\u7684\u60AC\u6D6E\u6309\u94AE\uFF08\u4E0D\u652F\u6301 status \u4EE5\u53CA\u76F8\u5173\u5C5E\u6027\uFF09| BadgeProps| -|  |\n",
          "click": {
            "type": "event",
            "values": [],
            "description": "Set the handler to handle click event"
          }
        },
        "a-float-button-group": {
          "_html": {
            "": "<a-float-button-group>$1</a-float-button-group>"
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/float-button-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| shape| \u8BBE\u7F6E\u5305\u542B\u7684 FloatButton \u6309\u94AE\u5F62\u72B6| circle | square| circle|  |\n| trigger| \u89E6\u53D1\u65B9\u5F0F\uFF08\u6709\u89E6\u53D1\u65B9\u5F0F\u4E3A\u83DC\u5355\u6A21\u5F0F\uFF09| click | hover| -|  |\n| open(v-model)| \u53D7\u63A7\u5C55\u5F00| boolean| -|  |\n\n#### \u5C5E\u6027\n\n| \u4E8B\u4EF6\u540D\u79F0| \u8BF4\u660E| \u56DE\u8C03\u53C2\u6570| \u7248\u672C |\n| :--- | :--- | :--- | :--- |\n| openChange| \u5C55\u5F00\u6536\u8D77\u65F6\u7684\u56DE\u8C03| (open: boolean) => void| - |\n",
          "shape": {
            "type": "attr",
            "values": ["circle", "square"],
            "description": "\u8BBE\u7F6E\u5305\u542B\u7684 FloatButton \u6309\u94AE\u5F62\u72B6"
          },
          "trigger": {
            "type": "attr",
            "values": ["click", "hover"],
            "description": "\u89E6\u53D1\u65B9\u5F0F\uFF08\u6709\u89E6\u53D1\u65B9\u5F0F\u4E3A\u83DC\u5355\u6A21\u5F0F\uFF09"
          },
          "v-model:open": {
            "type": "attr",
            "values": ["true", "false"],
            "description": "\u53D7\u63A7\u5C55\u5F00"
          },
          "openChange": {
            "type": "event",
            "values": [],
            "description": "\u5C55\u5F00\u6536\u8D77\u65F6\u7684\u56DE\u8C03"
          }
        },
        "a-back-top": {
          "_html": {
            "": '<a-back-top :visibility-height="0">$1</a-back-top>'
          }
        },
        "a-watermark": {
          "_html": {
            "": '<a-watermark content="$1">\n$2\n</a-watermark>',
            ":image": '<a-watermark image="$1">\n$2\n</a-watermark>'
          },
          "_doc": "#### [\u8BBF\u95EE](https://www.antdv.com/components/watermark-cn)\n#### \u5C5E\u6027\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| width| \u6C34\u5370\u7684\u5BBD\u5EA6\uFF0Ccontent \u7684\u9ED8\u8BA4\u503C\u4E3A\u81EA\u8EAB\u7684\u5BBD\u5EA6| number| 120|  |\n| height| \u6C34\u5370\u7684\u9AD8\u5EA6\uFF0Ccontent \u7684\u9ED8\u8BA4\u503C\u4E3A\u81EA\u8EAB\u7684\u9AD8\u5EA6| number| 64|  |\n| rotate| \u6C34\u5370\u7ED8\u5236\u65F6\uFF0C\u65CB\u8F6C\u7684\u89D2\u5EA6\uFF0C\u5355\u4F4D \xB0| number| -22|  |\n| zIndex| \u8FFD\u52A0\u7684\u6C34\u5370\u5143\u7D20\u7684 z-index| number| 9|  |\n| image| \u56FE\u7247\u6E90\uFF0C\u5EFA\u8BAE\u5BFC\u51FA 2 \u500D\u6216 3 \u500D\u56FE\uFF0C\u4F18\u5148\u7EA7\u9AD8| string| -|  |\n| content| \u6C34\u5370\u6587\u5B57\u5185\u5BB9| string | string[]| -|  |\n| font| \u6587\u5B57\u6837\u5F0F| Font| Font|  |\n| gap| \u6C34\u5370\u4E4B\u95F4\u7684\u95F4\u8DDD| [number, number]| [100, 100]|  |\n| offset| \u6C34\u5370\u8DDD\u79BB\u5BB9\u5668\u5DE6\u4E0A\u89D2\u7684\u504F\u79FB\u91CF\uFF0C\u9ED8\u8BA4\u4E3A gap/2| [number, number]| [gap[0]/2, gap[1]/2]|  |\n\n| \u53C2\u6570| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C| \u7248\u672C |\n| :--- | :--- | :--- | :--- | :--- |\n| color| \u5B57\u4F53\u989C\u8272| string| rgba(0,0,0,.15)|  |\n| fontSize| \u5B57\u4F53\u5927\u5C0F| number| 16|  |\n| fontWeight| \u5B57\u4F53\u7C97\u7EC6| normal | light | weight | number| normal|  |\n| fontFamily| \u5B57\u4F53\u7C7B\u578B| string| sans-serif|  |\n| fontStyle| \u5B57\u4F53\u6837\u5F0F| none | normal | italic | oblique| normal|  |\n",
          "width": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6C34\u5370\u7684\u5BBD\u5EA6\uFF0Ccontent \u7684\u9ED8\u8BA4\u503C\u4E3A\u81EA\u8EAB\u7684\u5BBD\u5EA6"
          },
          "height": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6C34\u5370\u7684\u9AD8\u5EA6\uFF0Ccontent \u7684\u9ED8\u8BA4\u503C\u4E3A\u81EA\u8EAB\u7684\u9AD8\u5EA6"
          },
          "rotate": {
            "type": "attr",
            "values": ["number"],
            "description": "\u6C34\u5370\u7ED8\u5236\u65F6\uFF0C\u65CB\u8F6C\u7684\u89D2\u5EA6\uFF0C\u5355\u4F4D \xB0"
          },
          "zIndex": {
            "type": "attr",
            "values": ["number"],
            "description": "\u8FFD\u52A0\u7684\u6C34\u5370\u5143\u7D20\u7684 z-index"
          },
          "image": {
            "type": "attr",
            "values": [],
            "description": "\u56FE\u7247\u6E90\uFF0C\u5EFA\u8BAE\u5BFC\u51FA 2 \u500D\u6216 3 \u500D\u56FE\uFF0C\u4F18\u5148\u7EA7\u9AD8"
          },
          "content": {
            "type": "attr",
            "values": ["string", "string[]"],
            "description": "\u6C34\u5370\u6587\u5B57\u5185\u5BB9"
          },
          "font": {
            "type": "attr",
            "values": ["Font"],
            "description": "\u6587\u5B57\u6837\u5F0F"
          },
          "gap": {
            "type": "attr",
            "values": ["[number, number]"],
            "description": "\u6C34\u5370\u4E4B\u95F4\u7684\u95F4\u8DDD"
          },
          "offset": {
            "type": "attr",
            "values": ["[number, number]"],
            "description": "\u6C34\u5370\u8DDD\u79BB\u5BB9\u5668\u5DE6\u4E0A\u89D2\u7684\u504F\u79FB\u91CF\uFF0C\u9ED8\u8BA4\u4E3A gap/2"
          }
        },
        "a-app": {
          "_html": {
            "": "<a-app>$1</a-app>"
          }
        }
      },
      "script": {
        "a-rules": {
          "_html": {
            ":required": "{ required: true, message: '$1', trigger: 'change' }",
            ":max": "{ min: 3, max: 5, message: '$1', trigger: 'blur' }"
          }
        },
        "a-form": {
          "_html": {
            ":resetForm": "const resetForm = () => {\nformRef.value.resetFields();\n};",
            ":submit": "const onSubmit = () => {\nformRef.value\n.validate()\n.then(() => {\nconsole.log('values', formState, toRaw(formState));\n})\n.catch(error => {\nconsole.log('error', error);\n});\n};"
          }
        },
        "a-message": {
          "_html": {
            ":info": "message.info('$1')",
            ":success": "message.success('$1')",
            ":error": "message.error('$1')",
            ":warning": "message.warning('$1')"
          }
        },
        "a-notification": {
          "_html": {
            ":success": "notification.success({\nmessage: '$1',\ndescription: '$2',\n})",
            ":info": "notification.info({\nmessage: '$1',\ndescription: '$2',\n})",
            ":error": "notification.error({\nmessage: '$1',\ndescription: '$2',\n})",
            ":warning": "notification.warning({\nmessage: '$1',\ndescription: '$2',\n})"
          }
        }
      },
      "templateGlobalAttribute": {}
    };
  }
});

// out/frameworks/element-ui.js
var require_element_ui = __commonJS({
  "out/frameworks/element-ui.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.default = {
      "template": {
        "el-col": {
          "_html": {
            "": '<el-col :span="$1">$2</el-col>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/layout](http://element.eleme.io/#/zh-CN/component/layout) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| span | \u6805\u683C\u5360\u636E\u7684\u5217\u6570 | number | \u2014 | 24 |\n| offset | \u6805\u683C\u5DE6\u4FA7\u7684\u95F4\u9694\u683C\u6570 | number | \u2014 | 0 |\n| push | \u6805\u683C\u5411\u53F3\u79FB\u52A8\u683C\u6570 | number | \u2014 | 0 |\n| pull | \u6805\u683C\u5411\u5DE6\u79FB\u52A8\u683C\u6570 | number | \u2014 | 0 |\n| xs | <768px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61 | number/object (\u4F8B\u5982\uFF1A {span: 4, offset: 4}) | \u2014 | \u2014 |\n| sm | \u2265768px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61 | number/object (\u4F8B\u5982\uFF1A {span: 4, offset: 4}) | \u2014 | \u2014 |\n| md | \u2265992px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61 | number/object (\u4F8B\u5982\uFF1A {span: 4, offset: 4}) | \u2014 | \u2014 |\n| lg | \u22651200px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61 | number/object (\u4F8B\u5982\uFF1A {span: 4, offset: 4}) | \u2014 | \u2014 |\n| xl | \u22651920px \u54CD\u5E94\u5F0F\u6805\u683C\u6570\u6216\u8005\u6805\u683C\u5C5E\u6027\u5BF9\u8C61 | number/object (\u4F8B\u5982\uFF1A {span: 4, offset: 4}) | \u2014 | \u2014 |\n| tag | \u81EA\u5B9A\u4E49\u5143\u7D20\u6807\u7B7E | string | * | div |",
          "span": {
            "type": "attr",
            "values": [],
            "description": "number of column the grid spans"
          },
          "offset": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "push": {
            "type": "attr",
            "values": [],
            "description": "number of columns that grid moves to the right"
          },
          "pull": {
            "type": "attr",
            "values": [],
            "description": "number of columns that grid moves to the left"
          },
          "xs": {
            "type": "attr",
            "values": [],
            "description": "<768px Responsive columns or column props object"
          },
          "sm": {
            "type": "attr",
            "values": [],
            "description": "\u2265768px Responsive columns or column props object"
          },
          "md": {
            "type": "attr",
            "values": [],
            "description": "\u2265992 Responsive columns or column props object"
          },
          "lg": {
            "type": "attr",
            "values": [],
            "description": "\u22651200 Responsive columns or column props object"
          },
          "xl": {
            "type": "attr",
            "values": [],
            "description": "\u22651200px Responsive columns or column props object, version >= 2"
          },
          "tag": {
            "type": "attr",
            "values": [],
            "description": "custom element tag"
          }
        },
        "el-checkbox": {
          "_html": {
            "": '<el-checkbox label="$1">$2</el-checkbox>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/checkbox](http://element.eleme.io/#/zh-CN/component/checkbox) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| label | \u9009\u4E2D\u72B6\u6001\u7684\u503C\uFF08\u53EA\u6709\u5728checkbox-group\u6216\u8005\u7ED1\u5B9A\u5BF9\u8C61\u7C7B\u578B\u4E3Aarray\u65F6\u6709\u6548\uFF09 | string / number / boolean | \u2014 | \u2014 |\n| true-label | \u9009\u4E2D\u65F6\u7684\u503C | string / number | \u2014 | \u2014 |\n| false-label | \u6CA1\u6709\u9009\u4E2D\u65F6\u7684\u503C | string / number | \u2014 | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| border | \u662F\u5426\u663E\u793A\u8FB9\u6846 | boolean | \u2014 | false |\n| size | Checkbox \u7684\u5C3A\u5BF8\uFF0C\u4EC5\u5728 border \u4E3A\u771F\u65F6\u6709\u6548 | string | medium / small / mini | \u2014 |\n| name | \u539F\u751F name \u5C5E\u6027 | string | \u2014 | \u2014 |\n| checked | \u5F53\u524D\u662F\u5426\u52FE\u9009 | boolean | \u2014 | false |\n| indeterminate | \u8BBE\u7F6E indeterminate \u72B6\u6001\uFF0C\u53EA\u8D1F\u8D23\u6837\u5F0F\u63A7\u5236 | boolean | \u2014 | false | \n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6 | \u66F4\u65B0\u540E\u7684\u503C |",
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "true-label": {
            "type": "attr",
            "values": [],
            "description": "value of the checkbox if it's checked"
          },
          "false-label": {
            "type": "attr",
            "values": [],
            "description": "value of the checkbox if it's not checked"
          },
          "border": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "native 'name' attribute"
          },
          "checked": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "indeterminate": {
            "type": "attr",
            "values": [],
            "description": "same as indeterminate in native checkbox"
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-checkbox-group": {
          "_html": {
            "": '<el-checkbox-group v-model="$1">\n<el-checkbox label="$2">$3</el-checkbox>\n</el-checkbox-group>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/checkbox](http://element.eleme.io/#/zh-CN/component/checkbox) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| size | \u591A\u9009\u6846\u7EC4\u5C3A\u5BF8\uFF0C\u4EC5\u5BF9\u6309\u94AE\u5F62\u5F0F\u7684 Checkbox \u6216\u5E26\u6709\u8FB9\u6846\u7684 Checkbox \u6709\u6548 | string | medium / small / mini | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| min | \u53EF\u88AB\u52FE\u9009\u7684 checkbox \u7684\u6700\u5C0F\u6570\u91CF | number | \u2014 | \u2014 |\n| max | \u53EF\u88AB\u52FE\u9009\u7684 checkbox \u7684\u6700\u5927\u6570\u91CF | number | \u2014 | \u2014 |\n| text-color | \u6309\u94AE\u5F62\u5F0F\u7684 Checkbox \u6FC0\u6D3B\u65F6\u7684\u6587\u672C\u989C\u8272 | string | \u2014 | #ffffff |\n| fill | \u6309\u94AE\u5F62\u5F0F\u7684 Checkbox \u6FC0\u6D3B\u65F6\u7684\u586B\u5145\u8272\u548C\u8FB9\u6846\u8272 | string | \u2014 | #409EFF |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6 | \u66F4\u65B0\u540E\u7684\u503C |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "fill": {
            "type": "attr",
            "values": [],
            "description": "border and background color when button is active"
          },
          "text-color": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "min": {
            "type": "attr",
            "values": [],
            "description": "minimum number of checkbox checked"
          },
          "max": {
            "type": "attr",
            "values": [],
            "description": "maximum number of checkbox checked"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-checkbox-button": {
          "_html": {
            "": '<el-checkbox-button label="$1">$2</el-checkbox-button>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/checkbox](http://element.eleme.io/#/zh-CN/component/checkbox) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| label | \u9009\u4E2D\u72B6\u6001\u7684\u503C\uFF08\u53EA\u6709\u5728checkbox-group\u6216\u8005\u7ED1\u5B9A\u5BF9\u8C61\u7C7B\u578B\u4E3Aarray\u65F6\u6709\u6548\uFF09 | string / number / boolean | \u2014 | \u2014 |\n| true-label | \u9009\u4E2D\u65F6\u7684\u503C | string / number | \u2014 | \u2014 |\n| false-label | \u6CA1\u6709\u9009\u4E2D\u65F6\u7684\u503C | string / number | \u2014 | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| name | \u539F\u751F name \u5C5E\u6027 | string | \u2014 | \u2014 |\n| checked | \u5F53\u524D\u662F\u5426\u52FE\u9009 | boolean | \u2014 | false |",
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-input": {
          "_html": {
            "": '<el-input v-model="$1" placeholder="$2">$3</el-input>',
            ":textarea": '<el-input type="textarea" v-model="$1" placeholder="$2"></el-input>'
          },
          "_doc": '[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/input](http://element.eleme.io/#/zh-CN/component/input) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| type | \u7C7B\u578B | string | text\uFF0Ctextarea \u548C\u5176\u4ED6 \u539F\u751F input \u7684 type \u503C | text |\n| value | \u7ED1\u5B9A\u503C | string / number | \u2014 | \u2014 |\n| maxlength | \u539F\u751F\u5C5E\u6027\uFF0C\u6700\u5927\u8F93\u5165\u957F\u5EA6 | number | \u2014 | \u2014 |\n| minlength | \u539F\u751F\u5C5E\u6027\uFF0C\u6700\u5C0F\u8F93\u5165\u957F\u5EA6 | number | \u2014 | \u2014 |\n| placeholder | \u8F93\u5165\u6846\u5360\u4F4D\u6587\u672C | string | \u2014 | \u2014 |\n| clearable | \u662F\u5426\u53EF\u6E05\u7A7A | boolean | \u2014 | false |\n| disabled | \u7981\u7528 | boolean | \u2014 | false |\n| size | \u8F93\u5165\u6846\u5C3A\u5BF8\uFF0C\u53EA\u5728 type!="textarea" \u65F6\u6709\u6548 | string | medium / small / mini | \u2014 |\n| prefix-icon | \u8F93\u5165\u6846\u5934\u90E8\u56FE\u6807 | string | \u2014 | \u2014 |\n| suffix-icon | \u8F93\u5165\u6846\u5C3E\u90E8\u56FE\u6807 | string | \u2014 | \u2014 |\n| rows | \u8F93\u5165\u6846\u884C\u6570\uFF0C\u53EA\u5BF9 type="textarea" \u6709\u6548 | number | \u2014 | 2 |\n| autosize | \u81EA\u9002\u5E94\u5185\u5BB9\u9AD8\u5EA6\uFF0C\u53EA\u5BF9 type="textarea" \u6709\u6548\uFF0C\u53EF\u4F20\u5165\u5BF9\u8C61\uFF0C\u5982\uFF0C{ minRows: 2, maxRows: 6 } | boolean / object | \u2014 | false |\n| autocomplete | \u539F\u751F\u5C5E\u6027\uFF0C\u81EA\u52A8\u8865\u5168 | string | on, off | off |\n| auto-complete | \u4E0B\u4E2A\u4E3B\u7248\u672C\u5F03\u7528 | string | on, off | off |\n| name | \u539F\u751F\u5C5E\u6027 | string | \u2014 | \u2014 |\n| readonly | \u539F\u751F\u5C5E\u6027\uFF0C\u662F\u5426\u53EA\u8BFB | boolean | \u2014 | false |\n| max | \u539F\u751F\u5C5E\u6027\uFF0C\u8BBE\u7F6E\u6700\u5927\u503C | \u2014 | \u2014 | \u2014 |\n| min | \u539F\u751F\u5C5E\u6027\uFF0C\u8BBE\u7F6E\u6700\u5C0F\u503C | \u2014 | \u2014 | \u2014 |\n| step | \u539F\u751F\u5C5E\u6027\uFF0C\u8BBE\u7F6E\u8F93\u5165\u5B57\u6BB5\u7684\u5408\u6CD5\u6570\u5B57\u95F4\u9694 | \u2014 | \u2014 | \u2014 |\n| resize | \u63A7\u5236\u662F\u5426\u80FD\u88AB\u7528\u6237\u7F29\u653E | string | none, both, horizontal, vertical | \u2014 |\n| autofocus | \u539F\u751F\u5C5E\u6027\uFF0C\u81EA\u52A8\u83B7\u53D6\u7126\u70B9 | boolean | true, false | false |\n| form | \u539F\u751F\u5C5E\u6027 | string | \u2014 | \u2014 |\n| label | \u8F93\u5165\u6846\u5173\u8054\u7684label\u6587\u5B57 | string | \u2014 | \u2014 |\n| tabindex | \u8F93\u5165\u6846\u7684tabindex | string | - | - |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| prefix | \u8F93\u5165\u6846\u5934\u90E8\u5185\u5BB9\uFF0C\u53EA\u5BF9 type="text" \u6709\u6548 |\n| suffix | \u8F93\u5165\u6846\u5C3E\u90E8\u5185\u5BB9\uFF0C\u53EA\u5BF9 type="text" \u6709\u6548 |\n| prepend | \u8F93\u5165\u6846\u524D\u7F6E\u5185\u5BB9\uFF0C\u53EA\u5BF9 type="text" \u6709\u6548 |\n| append | \u8F93\u5165\u6846\u540E\u7F6E\u5185\u5BB9\uFF0C\u53EA\u5BF9 type="text" \u6709\u6548 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| blur | \u5728 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1 | (event: Event) |\n| focus | \u5728 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1 | (event: Event) |\n| change | \u5728 Input \u503C\u6539\u53D8\u65F6\u89E6\u53D1 | (value: string | number) |\n| clear | \u5728\u70B9\u51FB\u7531 clearable \u5C5E\u6027\u751F\u6210\u7684\u6E05\u7A7A\u6309\u94AE\u65F6\u89E6\u53D1 | \u2014 |\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| focus | \u4F7F input \u83B7\u53D6\u7126\u70B9 | \u2014 |\n| blur | \u4F7F input \u5931\u53BB\u7126\u70B9 | \u2014 |\n| select | \u9009\u4E2D input \u4E2D\u7684\u6587\u5B57 | \u2014 |',
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": "Same as the 'type' attribute of native input, except that it can be 'textarea'"
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "maxlength": {
            "type": "attr",
            "values": [],
            "description": "maximum Input text length"
          },
          "minlength": {
            "type": "attr",
            "values": [],
            "description": "minimum Input text length"
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "icon": {
            "type": "attr",
            "values": [],
            "description": "icon name"
          },
          "prefix-icon": {
            "type": "attr",
            "values": [],
            "description": "prefix icon class"
          },
          "suffix-icon": {
            "type": "attr",
            "values": [],
            "description": "suffix icon class"
          },
          "rows": {
            "type": "attr",
            "values": [],
            "description": "number of rows of textarea, only works when type is 'textarea'"
          },
          "autosize": {
            "type": "attr",
            "values": [],
            "description": "whether textarea has an adaptive height, only works when type is 'textarea'. Can accept an object, e.g. { minRows: 2, maxRows: 6 }"
          },
          "auto-complete": {
            "type": "attr",
            "values": ["one", "off"],
            "description": ""
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "native 'name' attribute"
          },
          "readonly": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "max": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "min": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "step": {
            "type": "attr",
            "values": [],
            "description": "same as step in native input"
          },
          "resize": {
            "type": "attr",
            "values": ["none", "both", "horizontal", "vertical"],
            "description": "control the resizability"
          },
          "autofocus": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "form": {
            "type": "attr",
            "values": [],
            "description": "same as 'form' in native input"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "tabindex": {
            "type": "attr",
            "values": [],
            "description": "input tabindex"
          },
          "clearable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "on-icon-click": {
            "type": "attr",
            "values": [],
            "description": "hook function when clicking on the input icon"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "clear": {
            "type": "event",
            "values": [],
            "description": "triggers when the Input is cleared by the button which generated by the 'clearable' attribute"
          }
        },
        "el-option": {
          "_html": {
            "": '<el-option :label="$1" :value="$2">$3</el-option>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/select](http://element.eleme.io/#/zh-CN/component/select) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| value | \u9009\u9879\u7684\u503C | string/number/object | \u2014 | \u2014 |\n| label | \u9009\u9879\u7684\u6807\u7B7E\uFF0C\u82E5\u4E0D\u8BBE\u7F6E\u5219\u9ED8\u8BA4\u4E0E value \u76F8\u540C | string/number | \u2014 | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528\u8BE5\u9009\u9879 | boolean | \u2014 | false |",
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-option-group": {
          "_html": {
            "": '<el-option-group v-for="$1" :key="$2">\n<el-option :label="$3" :value="$4"></el-option>$5\n</el-option-group>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/select](http://element.eleme.io/#/zh-CN/component/select) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| label | \u5206\u7EC4\u7684\u7EC4\u540D | string | \u2014 | \u2014 |\n| disabled | \u662F\u5426\u5C06\u8BE5\u5206\u7EC4\u4E0B\u6240\u6709\u9009\u9879\u7F6E\u4E3A\u7981\u7528 | boolean | \u2014 | false |",
          "v-for": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "key": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-cascader": {
          "_html": {
            "": '<el-cascader :options="$1" v-model="$2">$3</el-cascader>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/cascader](http://element.eleme.io/#/zh-CN/component/cascader) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| options | \u53EF\u9009\u9879\u6570\u636E\u6E90\uFF0C\u952E\u540D\u53EF\u901A\u8FC7 props \u5C5E\u6027\u914D\u7F6E | array | \u2014 | \u2014 |\n| props | \u914D\u7F6E\u9009\u9879\uFF0C\u5177\u4F53\u89C1\u4E0B\u8868 | object | \u2014 | \u2014 |\n| value | \u9009\u4E2D\u9879\u7ED1\u5B9A\u503C | array | \u2014 | \u2014 |\n| separator | \u9009\u9879\u5206\u9694\u7B26 | string | \u2014 | \u659C\u6760'/' |\n| popper-class | \u81EA\u5B9A\u4E49\u6D6E\u5C42\u7C7B\u540D | string | \u2014 | \u2014 |\n| placeholder | \u8F93\u5165\u6846\u5360\u4F4D\u6587\u672C | string | \u2014 | \u8BF7\u9009\u62E9 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| clearable | \u662F\u5426\u652F\u6301\u6E05\u7A7A\u9009\u9879 | boolean | \u2014 | false |\n| expand-trigger | \u6B21\u7EA7\u83DC\u5355\u7684\u5C55\u5F00\u65B9\u5F0F | string | click / hover | click |\n| show-all-levels | \u8F93\u5165\u6846\u4E2D\u662F\u5426\u663E\u793A\u9009\u4E2D\u503C\u7684\u5B8C\u6574\u8DEF\u5F84 | boolean | \u2014 | true |\n| filterable | \u662F\u5426\u53EF\u641C\u7D22\u9009\u9879 | boolean | \u2014 | \u2014 |\n| debounce | \u641C\u7D22\u5173\u952E\u8BCD\u8F93\u5165\u7684\u53BB\u6296\u5EF6\u8FDF\uFF0C\u6BEB\u79D2 | number | \u2014 | 300 |\n| change-on-select | \u662F\u5426\u5141\u8BB8\u9009\u62E9\u4EFB\u610F\u4E00\u7EA7\u7684\u9009\u9879 | boolean | \u2014 | false |\n| size | \u5C3A\u5BF8 | string | medium / small / mini | \u2014 |\n| before-filter | \u7B5B\u9009\u4E4B\u524D\u7684\u94A9\u5B50\uFF0C\u53C2\u6570\u4E3A\u8F93\u5165\u7684\u503C\uFF0C\u82E5\u8FD4\u56DE false \u6216\u8005\u8FD4\u56DE Promise \u4E14\u88AB reject\uFF0C\u5219\u505C\u6B62\u7B5B\u9009 | function(value) | \u2014 | \u2014 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6 | \u5F53\u524D\u503C |\n| active-item-change | \u5F53\u7236\u7EA7\u9009\u9879\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6\uFF0C\u4EC5\u5728 change-on-select \u4E3A false \u65F6\u53EF\u7528 | \u5404\u7236\u7EA7\u9009\u9879\u7EC4\u6210\u7684\u6570\u7EC4 |\n| blur | \u5728 Cascader \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1 | (event: Event) |\n| focus | \u5728 Cascader \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1 | (event: Event) |",
          "options": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "props": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "separator": {
            "type": "attr",
            "values": [],
            "description": "separator character, default: '/'"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "clearable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "expand-trigger": {
            "type": "attr",
            "values": ["click", "hover"],
            "description": "trigger mode of expanding current item"
          },
          "show-all-levels": {
            "type": "attr",
            "values": [],
            "description": "whether to display all levels of the selected value in the input"
          },
          "filterable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "debounce": {
            "type": "attr",
            "values": [],
            "description": "debounce delay when typing, in millisecond"
          },
          "change-on-select": {
            "type": "attr",
            "values": [],
            "description": "whether selecting an option of any level is permitted"
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "active-item-change": {
            "type": "event",
            "values": [],
            "description": "triggers when active option changes, only works when 'change-on-select' is 'false'"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-color-picker": {
          "_html": {
            "": '<el-color-picker v-model="$1">$2</el-color-picker>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/color-picker](http://element.eleme.io/#/zh-CN/component/color-picker) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| size | \u5C3A\u5BF8 | string | \u2014 | medium / small / mini |\n| show-alpha | \u662F\u5426\u652F\u6301\u900F\u660E\u5EA6\u9009\u62E9 | boolean | \u2014 | false |\n| color-format | \u5199\u5165 v-model \u7684\u989C\u8272\u7684\u683C\u5F0F | string | hsl / hsv / hex / rgb | hex\uFF08show-alpha \u4E3A false\uFF09/ rgb\uFF08show-alpha \u4E3A true\uFF09 |\n| popper-class | ColorPicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D | string | \u2014 | \u2014 |\n| predefine | \u9884\u5B9A\u4E49\u989C\u8272 | array | \u2014 | \u2014 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u5F53\u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1 | \u5F53\u524D\u503C |\n| active-change | \u9762\u677F\u4E2D\u5F53\u524D\u663E\u793A\u7684\u989C\u8272\u53D1\u751F\u6539\u53D8\u65F6\u89E6\u53D1 | \u5F53\u524D\u663E\u793A\u7684\u989C\u8272\u503C |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "show-alpha": {
            "type": "attr",
            "values": [],
            "description": "whether to display the alpha slider"
          },
          "color-format": {
            "type": "attr",
            "values": ["hsl", "hsv", "hex", "rgb"],
            "description": "color format of v-model, default: hex(when show-alpha is false)/rgb(when show-alpha is true)"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "predefine": {
            "type": "attr",
            "values": [],
            "description": "predefined color options, type: array"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "active-change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-form-item": {
          "_html": {
            "": '<el-form-item label="$1">$2</el-form-item>',
            ":input": '<el-form-item label="${1:label}">\n<el-input v-model="${2:model}"></el-input>\n</el-form-item>',
            ":checkbox": '<el-form-item label="${1:label}">\n<el-checkbox-group v-model="${2:model}">\n<el-checkbox label="${3:label}" name="${4:name}"></el-checkbox>\n</el-checkbox-group>\n</el-form-item>',
            ":radio": '<el-form-item label="${1:label}">\n<el-radio-group v-model="${2:model}">\n<el-radio label="${3:label}"></el-radio>\n</el-radio-group>\n</el-form-item>',
            ":select": '<el-form-item label="${1:label}">\n<el-select v-model="${2:model}" placeholder="${3:placeholder}">\n<el-option label="${4:label}" value="${5:value}"></el-option>\n</el-select>\n</el-form-item>',
            ":switch": '<el-form-item label="${1:label}">\n<el-switch v-model="${2:model}"></el-switch>\n</el-form-item>',
            ":textarea": '<el-form-item label="${1:label}">\n<el-input type="textarea" v-model="${2:model}"></el-input>\n</el-form-item>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/form](http://element.eleme.io/#/zh-CN/component/form) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| prop | \u8868\u5355\u57DF model \u5B57\u6BB5\uFF0C\u5728\u4F7F\u7528 validate\u3001resetFields \u65B9\u6CD5\u7684\u60C5\u51B5\u4E0B\uFF0C\u8BE5\u5C5E\u6027\u662F\u5FC5\u586B\u7684 | string | \u4F20\u5165 Form \u7EC4\u4EF6\u7684 model \u4E2D\u7684\u5B57\u6BB5 | \u2014 |\n| label | \u6807\u7B7E\u6587\u672C | string | \u2014 | \u2014 |\n| label-width | \u8868\u5355\u57DF\u6807\u7B7E\u7684\u7684\u5BBD\u5EA6\uFF0C\u4F8B\u5982 '50px' | string | \u2014 | \u2014 |\n| required | \u662F\u5426\u5FC5\u586B\uFF0C\u5982\u4E0D\u8BBE\u7F6E\uFF0C\u5219\u4F1A\u6839\u636E\u6821\u9A8C\u89C4\u5219\u81EA\u52A8\u751F\u6210 | boolean | \u2014 | false |\n| rules | \u8868\u5355\u9A8C\u8BC1\u89C4\u5219 | object | \u2014 | \u2014 |\n| error | \u8868\u5355\u57DF\u9A8C\u8BC1\u9519\u8BEF\u4FE1\u606F, \u8BBE\u7F6E\u8BE5\u503C\u4F1A\u4F7F\u8868\u5355\u9A8C\u8BC1\u72B6\u6001\u53D8\u4E3Aerror\uFF0C\u5E76\u663E\u793A\u8BE5\u9519\u8BEF\u4FE1\u606F | string | \u2014 | \u2014 |\n| show-message | \u662F\u5426\u663E\u793A\u6821\u9A8C\u9519\u8BEF\u4FE1\u606F | boolean | \u2014 | true |\n| inline-message | \u4EE5\u884C\u5185\u5F62\u5F0F\u5C55\u793A\u6821\u9A8C\u4FE1\u606F | boolean | \u2014 | false |\n| size | \u7528\u4E8E\u63A7\u5236\u8BE5\u8868\u5355\u57DF\u4E0B\u7EC4\u4EF6\u7684\u5C3A\u5BF8 | string | medium / small / mini | - |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| \u2014 | Form Item \u7684\u5185\u5BB9 |\n| label | \u6807\u7B7E\u6587\u672C\u7684\u5185\u5BB9 |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| error | \u81EA\u5B9A\u4E49\u8868\u5355\u6821\u9A8C\u4FE1\u606F\u7684\u663E\u793A\u65B9\u5F0F\uFF0C\u53C2\u6570\u4E3A { error } |\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| resetField | \u5BF9\u8BE5\u8868\u5355\u9879\u8FDB\u884C\u91CD\u7F6E\uFF0C\u5C06\u5176\u503C\u91CD\u7F6E\u4E3A\u521D\u59CB\u503C\u5E76\u79FB\u9664\u6821\u9A8C\u7ED3\u679C | - |\n| clearValidate | \u79FB\u9664\u8BE5\u8868\u5355\u9879\u7684\u6821\u9A8C\u7ED3\u679C | - |",
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "prop": {
            "type": "attr",
            "values": [],
            "description": "a key of model. In the use of validate and resetFields method, the attribute is required"
          },
          "label-width": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "required": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "rules": {
            "type": "attr",
            "values": [],
            "description": "validation rules of form"
          },
          "error": {
            "type": "attr",
            "values": [],
            "description": "field error message, set its value and the field will validate error and show this message immediately"
          },
          "show-message": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "inline-message": {
            "type": "attr",
            "values": [],
            "description": "inline style validate message"
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          }
        },
        "el-alert": {
          "_html": {
            "": '<el-alert type="$1" title="$2">$3</el-alert>',
            ":icon": '<el-alert\ntitle="success"\ntype="success"\nshow-icon>\n</el-alert>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/alert](http://element.eleme.io/#/zh-CN/component/alert) \n\n  | \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n  | :--- | :--- | :--- | :--- | :--- |\n  | title | \u6807\u9898\uFF0C\u5FC5\u9009\u53C2\u6570 | string | \u2014 | \u2014 |\n  | type | \u4E3B\u9898 | string | success/warning/info/error | info |\n  | description | \u8F85\u52A9\u6027\u6587\u5B57\u3002\u4E5F\u53EF\u901A\u8FC7\u9ED8\u8BA4 slot \u4F20\u5165 | string | \u2014 | \u2014 |\n  | closable | \u662F\u5426\u53EF\u5173\u95ED | boolean | \u2014 | true |\n  | center | \u6587\u5B57\u662F\u5426\u5C45\u4E2D | boolean | \u2014 | true |\n  | close-text | \u5173\u95ED\u6309\u94AE\u81EA\u5B9A\u4E49\u6587\u672C | string | \u2014 | \u2014 |\n  | show-icon | \u662F\u5426\u663E\u793A\u56FE\u6807 | boolean | \u2014 | false |\n\n  | \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n  | :--- | :--- | :--- |\n  | close | \u5173\u95EDalert\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6 | \u2014 |",
          "type": {
            "type": "attr",
            "values": ["success", "warning", "info", "danger"],
            "description": "component type"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "description": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "closable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "center": {
            "type": "attr",
            "values": [],
            "description": "whether to center the text"
          },
          "close-text": {
            "type": "attr",
            "values": [],
            "description": "customized close button text"
          },
          "show-icon": {
            "type": "attr",
            "values": [],
            "description": "if a type icon is displayed"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-submenu": {
          "_html": {
            "": '<el-submenu index="$1">\n<el-menu-item index="$2">$3</el-menu-item>$4\n</el-submenu>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/menu](http://element.eleme.io/#/zh-CN/component/menu) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| index | \u552F\u4E00\u6807\u5FD7 | string | \u2014 | \u2014 |\n| popper-class | \u5F39\u51FA\u83DC\u5355\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D | string | \u2014 | \u2014 |\n| show-timeout | \u5C55\u5F00 sub-menu \u7684\u5EF6\u65F6 | number | \u2014 | 300 |\n| hide-timeout | \u6536\u8D77 sub-menu \u7684\u5EF6\u65F6 | number | \u2014 | 300 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| popper-append-to-body | \u662F\u5426\u5C06\u5F39\u51FA\u83DC\u5355\u63D2\u5165\u81F3 body \u5143\u7D20\u3002\u5728\u83DC\u5355\u7684\u5B9A\u4F4D\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u53EF\u5C1D\u8BD5\u4FEE\u6539\u8BE5\u5C5E\u6027 | boolean | \u2014 | \u4E00\u7EA7\u5B50\u83DC\u5355\uFF1Atrue / \u975E\u4E00\u7EA7\u5B50\u83DC\u5355\uFF1Afalse |"
        },
        "el-menu-item-group": {
          "_html": {
            "": '<el-menu-item-group>\n<el-menu-item index="$1">$2</el-menu-item>$3\n</el-menu-item-group>'
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-menu-item": {
          "_html": {
            "": '<el-menu-item index=""></el-menu-item>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/menu](http://element.eleme.io/#/zh-CN/component/menu) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| index | \u552F\u4E00\u6807\u5FD7 | string | \u2014 | \u2014 |\n| route | Vue Router \u8DEF\u5F84\u5BF9\u8C61 | Object | \u2014 | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |",
          "index": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "route": {
            "type": "attr",
            "values": [],
            "description": "Vue Router object"
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-tab-pane": {
          "_html": {
            "": "<el-tab-pane>$1</el-tab-pane>"
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/tabs](http://element.eleme.io/#/zh-CN/component/tabs) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| label | \u9009\u9879\u5361\u6807\u9898 | string | \u2014 | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| name | \u4E0E\u9009\u9879\u5361 activeName \u5BF9\u5E94\u7684\u6807\u8BC6\u7B26\uFF0C\u8868\u793A\u9009\u9879\u5361\u522B\u540D | string | \u2014 | \u8BE5\u9009\u9879\u5361\u5728\u9009\u9879\u5361\u5217\u8868\u4E2D\u7684\u987A\u5E8F\u503C\uFF0C\u5982\u7B2C\u4E00\u4E2A\u9009\u9879\u5361\u5219\u4E3A'1' |\n| closable | \u6807\u7B7E\u662F\u5426\u53EF\u5173\u95ED | boolean | \u2014 | false |\n| lazy | \u6807\u7B7E\u662F\u5426\u5EF6\u8FDF\u6E32\u67D3 | boolean | \u2014 | false |",
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "native 'name' attribute"
          },
          "closable": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-breadcrumb-item": {
          "_html": {
            "": "<el-breadcrumb-item></el-breadcrumb-item>"
          },
          "to": {
            "type": "attr",
            "values": [],
            "description": "target route of the link, same as to of vue-router"
          },
          "replace": {
            "type": "attr",
            "values": [],
            "description": "if 'true', the navigation will not leave a history record, default: false"
          }
        },
        "el-dropdown-menu": {
          "_html": {
            "": "<el-dropdown-menu></el-dropdown-menu>"
          },
          "command": {
            "type": "attr",
            "values": [],
            "description": "a command to be dispatched to Dropdown's 'command' callback"
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "divided": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-step": {
          "_html": {
            "": '<el-step title="$1">$2</el-step>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/steps](http://element.eleme.io/#/zh-CN/component/steps) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| title | \u6807\u9898 | string | \u2014 | \u2014 |\n| description | \u63CF\u8FF0\u6027\u6587\u5B57 | string | \u2014 | \u2014 |\n| icon | \u56FE\u6807 | \u4F20\u5165 icon \u7684 class \u5168\u540D\u6765\u81EA\u5B9A\u4E49 icon\uFF0C\u4E5F\u652F\u6301 slot \u65B9\u5F0F\u5199\u5165 | string | \u2014 |\n| status | \u8BBE\u7F6E\u5F53\u524D\u6B65\u9AA4\u7684\u72B6\u6001\uFF0C\u4E0D\u8BBE\u7F6E\u5219\u6839\u636E steps \u786E\u5B9A\u72B6\u6001 | wait / process / finish / error / success | - | - |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| icon | \u56FE\u6807 |\n| title | \u6807\u9898 |\n| description | \u63CF\u8FF0\u6027\u6587\u5B57 |",
          "title": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "description": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "icon": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "status": {
            "type": "attr",
            "values": ["wait", "process", "finish", "error", "success"],
            "description": "current status. It will be automatically set by Steps if not configured."
          }
        },
        "el-carousel": {
          "_html": {
            "": "<el-carousel>\n<el-carousel-item>$1</el-carousel-item>\n</el-carousel>",
            ":card": '<el-carousel type="card" height="150px">\n<el-carousel-item>\n$1\n</el-carousel-item>\n</el-carousel>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/carousel](http://element.eleme.io/#/zh-CN/component/carousel) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| height | \u8D70\u9A6C\u706F\u7684\u9AD8\u5EA6 | string | \u2014 | \u2014 |\n| initial-index | \u521D\u59CB\u72B6\u6001\u6FC0\u6D3B\u7684\u5E7B\u706F\u7247\u7684\u7D22\u5F15\uFF0C\u4ECE 0 \u5F00\u59CB | number | \u2014 | 0 |\n| trigger | \u6307\u793A\u5668\u7684\u89E6\u53D1\u65B9\u5F0F | string | click | \u2014 |\n| autoplay | \u662F\u5426\u81EA\u52A8\u5207\u6362 | boolean | \u2014 | true |\n| interval | \u81EA\u52A8\u5207\u6362\u7684\u65F6\u95F4\u95F4\u9694\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2 | number | \u2014 | 3000 |\n| indicator-position | \u6307\u793A\u5668\u7684\u4F4D\u7F6E | string | outside/none | \u2014 |\n| arrow | \u5207\u6362\u7BAD\u5934\u7684\u663E\u793A\u65F6\u673A | string | always/hover/never | hover |\n| type | \u8D70\u9A6C\u706F\u7684\u7C7B\u578B | string | card | \u2014 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u5E7B\u706F\u7247\u5207\u6362\u65F6\u89E6\u53D1 | \u76EE\u524D\u6FC0\u6D3B\u7684\u5E7B\u706F\u7247\u7684\u7D22\u5F15\uFF0C\u539F\u5E7B\u706F\u7247\u7684\u7D22\u5F15 |\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| setActiveItem | \u624B\u52A8\u5207\u6362\u5E7B\u706F\u7247 | \u9700\u8981\u5207\u6362\u7684\u5E7B\u706F\u7247\u7684\u7D22\u5F15\uFF0C\u4ECE 0 \u5F00\u59CB\uFF1B\u6216\u76F8\u5E94 el-carousel-item \u7684 name \u5C5E\u6027\u503C |\n| prev | \u5207\u6362\u81F3\u4E0A\u4E00\u5F20\u5E7B\u706F\u7247 | \u2014 |\n| next | \u5207\u6362\u81F3\u4E0B\u4E00\u5F20\u5E7B\u706F\u7247 | \u2014 |",
          "height": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "initial-index": {
            "type": "attr",
            "values": [],
            "description": "index of the initially active slide (starting from 0), default: 0"
          },
          "trigger": {
            "type": "attr",
            "values": ["hover", "click"],
            "description": "default: hover"
          },
          "autoplay": {
            "type": "attr",
            "values": [],
            "description": "whether automatically loop the slides, default: true"
          },
          "interval": {
            "type": "attr",
            "values": [],
            "description": "interval of the auto loop, in milliseconds, default: 30000"
          },
          "indicator-position": {
            "type": "attr",
            "values": ["outside", "none"],
            "description": "position of the indicators"
          },
          "arrow": {
            "type": "attr",
            "values": ["always", "hover", "nerver"],
            "description": "when arrows are shown, default: hover"
          },
          "type": {
            "type": "attr",
            "values": ["card"],
            "description": "type of the Carousel"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-carousel-item": {
          "_html": {
            "": "<el-carousel-item>$1</el-carousel-item>"
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/carousel](http://element.eleme.io/#/zh-CN/component/carousel) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| name | \u5E7B\u706F\u7247\u7684\u540D\u5B57\uFF0C\u53EF\u7528\u4F5C setActiveItem \u7684\u53C2\u6570 | string | \u2014 | \u2014 |\n| label | \u8BE5\u5E7B\u706F\u7247\u6240\u5BF9\u5E94\u6307\u793A\u5668\u7684\u6587\u672C | string | \u2014 | \u2014 |",
          "name": {
            "type": "attr",
            "values": [],
            "description": "name of the item, can be used in 'setActiveItem'"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-collapse-item": {
          "_html": {
            "": '<el-collapse-item name="$1" title="$2">$3</el-collapse-item>'
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "native 'name' attribute"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-timeline-item": {
          "_html": {
            "": "<el-timeline-item>$1</el-timeline-item>"
          },
          "_doc": "[element:https://element.eleme.cn/#/zh-CN/component/timeline](https://element.eleme.cn/#/zh-CN/component/timeline) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| timestamp | \u65F6\u95F4\u6233 | string | \u2014 | - |\n| hide-timestamp | \u662F\u5426\u9690\u85CF\u65F6\u95F4\u6233 | boolean | \u2014 | false |\n| placement | \u65F6\u95F4\u6233\u4F4D\u7F6E | string | top / bottom | bottom |\n| type | \u8282\u70B9\u7C7B\u578B | string | primary / success / warning / danger / info | - |\n| color | \u8282\u70B9\u989C\u8272 | string | hsl / hsv / hex / rgb | - |\n| size | \u8282\u70B9\u5C3A\u5BF8 | string | normal / large | - |\n| icon | \u8282\u70B9\u56FE\u6807 | string | \u2014 | - |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| - | Timeline-Item \u7684\u5185\u5BB9 |\n| dot | \u81EA\u5B9A\u4E49\u8282\u70B9 |",
          "timestamp": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "hide-timestamp": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "placement": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "type": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "color": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "icon": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-divider": {
          "_html": {
            "": "<el-divider>$1</el-divider>"
          },
          "_doc": "[element\uFF1Ahttps://element.eleme.cn/#/zh-CN/component/divider](https://element.eleme.cn/#/zh-CN/component/divider) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| direction | \u8BBE\u7F6E\u5206\u5272\u7EBF\u65B9\u5411 | string | horizontal / vertical | horizontal |\n| content-position | \u8BBE\u7F6E\u5206\u5272\u7EBF\u6587\u6848\u7684\u4F4D\u7F6E | string | left / right / center | center |",
          "direction": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "content-position": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-autocomplete": {
          "_html": {
            "": '<el-autocomplete v-model="$1" placeholder="" :fetch-suggestions="fetchSuggestions" @select="handleSelect">\n</el-autocomplete>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/input](http://element.eleme.io/#/zh-CN/component/input) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| placeholder | \u8F93\u5165\u6846\u5360\u4F4D\u6587\u672C | string | \u2014 | \u2014 |\n| disabled | \u7981\u7528 | boolean | \u2014 | false |\n| value-key | \u8F93\u5165\u5EFA\u8BAE\u5BF9\u8C61\u4E2D\u7528\u4E8E\u663E\u793A\u7684\u952E\u540D | string | \u2014 | value |\n| value | \u5FC5\u586B\u503C\uFF0C\u8F93\u5165\u7ED1\u5B9A\u503C | string | \u2014 | \u2014 |\n| debounce | \u83B7\u53D6\u8F93\u5165\u5EFA\u8BAE\u7684\u53BB\u6296\u5EF6\u65F6 | number | \u2014 | 300 |\n| placement | \u83DC\u5355\u5F39\u51FA\u4F4D\u7F6E | string | top / top-start / top-end / bottom / bottom-start / bottom-end | bottom-start |\n| fetch-suggestions | \u8FD4\u56DE\u8F93\u5165\u5EFA\u8BAE\u7684\u65B9\u6CD5\uFF0C\u4EC5\u5F53\u4F60\u7684\u8F93\u5165\u5EFA\u8BAE\u6570\u636E resolve \u65F6\uFF0C\u901A\u8FC7\u8C03\u7528 callback(data:[]) \u6765\u8FD4\u56DE\u5B83 | Function(queryString, callback) | \u2014 | \u2014 |\n| popper-class | Autocomplete \u4E0B\u62C9\u5217\u8868\u7684\u7C7B\u540D | string | \u2014 | \u2014 |\n| trigger-on-focus | \u662F\u5426\u5728\u8F93\u5165\u6846 focus \u65F6\u663E\u793A\u5EFA\u8BAE\u5217\u8868 | boolean | \u2014 | true |\n| name | \u539F\u751F\u5C5E\u6027 | string | \u2014 | \u2014 |\n| select-when-unmatched | \u5728\u8F93\u5165\u6CA1\u6709\u4EFB\u4F55\u5339\u914D\u5EFA\u8BAE\u7684\u60C5\u51B5\u4E0B\uFF0C\u6309\u4E0B\u56DE\u8F66\u662F\u5426\u89E6\u53D1 select \u4E8B\u4EF6 | boolean | \u2014 | false |\n| label | \u8F93\u5165\u6846\u5173\u8054\u7684label\u6587\u5B57 | string | \u2014 | \u2014 |\n| prefix-icon | \u8F93\u5165\u6846\u5934\u90E8\u56FE\u6807 | string | \u2014 | \u2014 |\n| suffix-icon | \u8F93\u5165\u6846\u5C3E\u90E8\u56FE\u6807 | string | \u2014 | \u2014 |\n| hide-loading | \u662F\u5426\u9690\u85CF\u8FDC\u7A0B\u52A0\u8F7D\u65F6\u7684\u52A0\u8F7D\u56FE\u6807 | boolean | \u2014 | false |\n| popper-append-to-body | \u662F\u5426\u5C06\u4E0B\u62C9\u5217\u8868\u63D2\u5165\u81F3 body \u5143\u7D20\u3002\u5728\u4E0B\u62C9\u5217\u8868\u7684\u5B9A\u4F4D\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u53EF\u5C06\u8BE5\u5C5E\u6027\u8BBE\u7F6E\u4E3A false | boolean | - | true |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| prefix | \u8F93\u5165\u6846\u5934\u90E8\u5185\u5BB9 |\n| suffix | \u8F93\u5165\u6846\u5C3E\u90E8\u5185\u5BB9 |\n| prepend | \u8F93\u5165\u6846\u524D\u7F6E\u5185\u5BB9 |\n| append | \u8F93\u5165\u6846\u540E\u7F6E\u5185\u5BB9 |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| \u2014 | \u81EA\u5B9A\u4E49\u8F93\u5165\u5EFA\u8BAE\uFF0C\u53C2\u6570\u4E3A { item } |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| select | \u70B9\u51FB\u9009\u4E2D\u5EFA\u8BAE\u9879\u65F6\u89E6\u53D1 | \u9009\u4E2D\u5EFA\u8BAE\u9879 |\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| focus | \u4F7F input \u83B7\u53D6\u7126\u70B9 | - |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "debounce": {
            "type": "attr",
            "values": [],
            "description": "debounce delay when typing, in milliseconds, default: 300"
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "props": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "custom-item": {
            "type": "attr",
            "values": [],
            "description": "component name of your customized suggestion list item"
          },
          "icon": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "fetch-suggestions": {
            "type": "attr",
            "values": [],
            "description": "a method to fetch input suggestions. When suggestions are ready, invoke callback(data:[]) to return them to Autocomplete"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "trigger-on-focus": {
            "type": "attr",
            "values": [],
            "description": "whether show suggestions when input focus"
          },
          "on-icon-click": {
            "type": "attr",
            "values": [],
            "description": "hook function when clicking on the input icon"
          },
          "select-when-unmatched": {
            "type": "attr",
            "values": [],
            "description": "whether to emit a 'select' event on enter when there is no autocomplete match"
          },
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "prefix-icon": {
            "type": "attr",
            "values": [],
            "description": "prefix icon class"
          },
          "suffix-icon": {
            "type": "attr",
            "values": [],
            "description": "suffix icon class"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-badge": {
          "_html": {
            "": '<el-badge :value="$1"/>',
            ":button": '<el-badge :value="$1">\n<el-button size="small">$2</el-button>\n</el-badge>',
            ":dot": "<el-badge is-dot>$1</el-badge>"
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/badge](http://element.eleme.io/#/zh-CN/component/badge) \n\n  | \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n  | value | \u663E\u793A\u503C | string, number | \u2014 | \u2014 |\n  | max | \u6700\u5927\u503C\uFF0C\u8D85\u8FC7\u6700\u5927\u503C\u4F1A\u663E\u793A '{max}+'\uFF0C\u8981\u6C42 value \u662F Number \u7C7B\u578B | number | \u2014 | \u2014 |\n  | is-dot | \u5C0F\u5706\u70B9 | boolean | \u2014 | false |\n  | hidden | \u9690\u85CF badge | boolean | \u2014 | false |\n  | type |	\u7C7B\u578B | string |	primary / success / warning / danger / info |	\u2014 ",
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "max": {
            "type": "attr",
            "values": [],
            "description": "maximum value, shows '{max}+' when exceeded. Only works if 'value' is a Number"
          },
          "is-dot": {
            "type": "attr",
            "values": [],
            "description": "a little dot is displayed"
          },
          "hidden": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info"],
            "description": "type"
          }
        },
        "el-breadcrumb": {
          "_html": {
            "": `<el-breadcrumb separator="/">
<el-breadcrumb-item :to="{ path: '/' }"></el-breadcrumb-item>
<el-breadcrumb-item></el-breadcrumb-item>
</el-breadcrumb>`
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/breadcrumb](http://element.eleme.io/#/zh-CN/component/breadcrumb) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| separator | \u5206\u9694\u7B26 | string | \u2014 | \u659C\u6760'/' |\n| separator-class | \u56FE\u6807\u5206\u9694\u7B26 class | string | \u2014 | - |\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| to | \u8DEF\u7531\u8DF3\u8F6C\u5BF9\u8C61\uFF0C\u540C vue-router \u7684 to | string/object | \u2014 | \u2014 |\n| replace | \u5728\u4F7F\u7528 to \u8FDB\u884C\u8DEF\u7531\u8DF3\u8F6C\u65F6\uFF0C\u542F\u7528 replace \u5C06\u4E0D\u4F1A\u5411 history \u6DFB\u52A0\u65B0\u8BB0\u5F55 | boolean | \u2014 | false |",
          "separator": {
            "type": "attr",
            "values": [],
            "description": "separator character, default: '/'"
          },
          "separator-class": {
            "type": "attr",
            "values": [],
            "description": "iconfont-separator's class"
          }
        },
        "el-button": {
          "_html": {
            "": '<el-button type="primary">$1</el-button>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/button](http://element.eleme.io/#/zh-CN/component/button) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| size | \u5C3A\u5BF8 | string | medium / small / mini | \u2014 |\n| type | \u7C7B\u578B | string | primary / success / warning / danger / info / text | \u2014 |\n| plain | \u662F\u5426\u6734\u7D20\u6309\u94AE | boolean | \u2014 | false |\n| round | \u662F\u5426\u5706\u89D2\u6309\u94AE | boolean | \u2014 | false |\n| circle | \u662F\u5426\u5706\u5F62\u6309\u94AE | boolean | \u2014 | false |\n| loading | \u662F\u5426\u52A0\u8F7D\u4E2D\u72B6\u6001 | boolean | \u2014 | false |\n| disabled | \u662F\u5426\u7981\u7528\u72B6\u6001 | boolean | \u2014 | false |\n| icon | \u56FE\u6807\u7C7B\u540D | string | \u2014 | \u2014 |\n| autofocus | \u662F\u5426\u9ED8\u8BA4\u805A\u7126 | boolean | \u2014 | false |\n| native-type | \u539F\u751F type \u5C5E\u6027 | string | button / submit / reset | button |\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| click | \u70B9\u51FB\u65F6\u89E6\u53D1\u4E8B\u4EF6 | event |",
          "type": {
            "type": "attr",
            "values": ["primary", "success", "warning", "danger", "info", "text"],
            "description": "button type"
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "plain": {
            "type": "attr",
            "values": [],
            "description": "determine whether it's a plain button"
          },
          "loading": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "icon": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "autofocus": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "native-type": {
            "type": "attr",
            "values": ["button", "submit", "reset"],
            "description": "same as native button's type"
          },
          "round": {
            "type": "attr",
            "values": [],
            "description": "determine whether it's a round button, default: false"
          },
          "circle": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-button-group": {
          "_html": {
            "": '<el-button-group>\n<el-button type="primary">$1</el-button>\n<el-button type="primary">$2</el-button>\n</el-button-group>'
          }
        },
        "el-card": {
          "_html": {
            "": '<el-card>\n<div slot="header">$1</div>\n<div></div>\n</el-card>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/card](http://element.eleme.io/#/zh-CN/component/card) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| header | \u8BBE\u7F6E header\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 slot#header \u4F20\u5165 DOM | string | \u2014 | \u2014 |\n| body-style | \u8BBE\u7F6E body \u7684\u6837\u5F0F | object | \u2014 | { padding: '20px' } |\n| shadow | \u8BBE\u7F6E\u9634\u5F71\u663E\u793A\u65F6\u673A | string | always / hover / never | always |",
          "header": {
            "type": "attr",
            "values": [],
            "description": "Title of the card. Also accepts a DOM passed by slot#header"
          },
          "body-style": {
            "type": "attr",
            "values": [],
            "description": "CSS style of body,type: object, default: {padding: '20px'}"
          }
        },
        "el-cascadar": {
          "_html": {
            "": '<el-cascader\n:options="$1"\nv-model="$2"\n@change="$3">\n</el-cascader>'
          }
        },
        "el-collapse": {
          "_html": {
            "": '<el-collapse v-model="${1:activeName}" @change="${2:collapseChange}">\n<el-collapse-item title="${3:title}" name="${4:name}">\n<div>$5</div>\n</el-collapse-item>\n</el-collapse>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/collapse](http://element.eleme.io/#/zh-CN/component/collapse) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| accordion | \u662F\u5426\u624B\u98CE\u7434\u6A21\u5F0F | boolean | \u2014 | false |\n| value | \u5F53\u524D\u6FC0\u6D3B\u7684\u9762\u677F(\u5982\u679C\u662F\u624B\u98CE\u7434\u6A21\u5F0F\uFF0C\u7ED1\u5B9A\u503C\u7C7B\u578B\u9700\u8981\u4E3Astring\uFF0C\u5426\u5219\u4E3Aarray) | string/array | \u2014 | \u2014 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u5F53\u524D\u6FC0\u6D3B\u9762\u677F\u6539\u53D8\u65F6\u89E6\u53D1(\u5982\u679C\u662F\u624B\u98CE\u7434\u6A21\u5F0F\uFF0C\u53C2\u6570 activeNames \u7C7B\u578B\u4E3Astring\uFF0C\u5426\u5219\u4E3Aarray) | (activeNames: array|string) |\n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| name | \u552F\u4E00\u6807\u5FD7\u7B26 | string/number | \u2014 | \u2014 |\n| title | \u9762\u677F\u6807\u9898 | string | \u2014 | \u2014 |",
          "accordion": {
            "type": "attr",
            "values": [],
            "description": "whether to activate accordion mode, default: false"
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-date-picker": {
          "_html": {
            "": '<el-date-picker v-model="$1" type="date" placeholder="${2:date}"></el-date-picker>',
            ":datetime": '<el-date-picker v-model="$1" type="datetime" placeholder="${2:datetime}"></el-date-picker>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/date-picker](http://element.eleme.io/#/zh-CN/component/date-picker) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| readonly | \u5B8C\u5168\u53EA\u8BFB | boolean | \u2014 | false |\n| disabled | \u7981\u7528 | boolean | \u2014 | false |\n| editable | \u6587\u672C\u6846\u53EF\u8F93\u5165 | boolean | \u2014 | true |\n| clearable | \u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE | boolean | \u2014 | true |\n| size | \u8F93\u5165\u6846\u5C3A\u5BF8 | string | large, small, mini | \u2014 |\n| placeholder | \u975E\u8303\u56F4\u9009\u62E9\u65F6\u7684\u5360\u4F4D\u5185\u5BB9 | string | \u2014 | \u2014 |\n| start-placeholder | \u8303\u56F4\u9009\u62E9\u65F6\u5F00\u59CB\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9 | string | \u2014 | \u2014 |\n| end-placeholder | \u8303\u56F4\u9009\u62E9\u65F6\u7ED3\u675F\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9 | string | \u2014 | \u2014 |\n| type | \u663E\u793A\u7C7B\u578B | string | year/month/date/dates/ week/datetime/datetimerange/daterange | date |\n| format | \u663E\u793A\u5728\u8F93\u5165\u6846\u4E2D\u7684\u683C\u5F0F | string | \u89C1\u65E5\u671F\u683C\u5F0F | yyyy-MM-dd |\n| align | \u5BF9\u9F50\u65B9\u5F0F | string | left, center, right | left |\n| popper-class | DatePicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D | string | \u2014 | \u2014 |\n| picker-options | \u5F53\u524D\u65F6\u95F4\u65E5\u671F\u9009\u62E9\u5668\u7279\u6709\u7684\u9009\u9879\u53C2\u8003\u4E0B\u8868 | object | \u2014 | {} |\n| range-separator | \u9009\u62E9\u8303\u56F4\u65F6\u7684\u5206\u9694\u7B26 | string | \u2014 | '-' |\n| default-value | \u53EF\u9009\uFF0C\u9009\u62E9\u5668\u6253\u5F00\u65F6\u9ED8\u8BA4\u663E\u793A\u7684\u65F6\u95F4 | Date | \u53EF\u88ABnew Date()\u89E3\u6790 | \u2014 |\n| default-time | \u8303\u56F4\u9009\u62E9\u65F6\u9009\u4E2D\u65E5\u671F\u6240\u4F7F\u7528\u7684\u5F53\u65E5\u5185\u5177\u4F53\u65F6\u523B | string[] | \u6570\u7EC4\uFF0C\u957F\u5EA6\u4E3A 2\uFF0C\u6BCF\u9879\u503C\u4E3A\u5B57\u7B26\u4E32\uFF0C\u5F62\u598212:00:00\uFF0C\u7B2C\u4E00\u9879\u6307\u5B9A\u5F00\u59CB\u65E5\u671F\u7684\u65F6\u523B\uFF0C\u7B2C\u4E8C\u9879\u6307\u5B9A\u7ED3\u675F\u65E5\u671F\u7684\u65F6\u523B\uFF0C\u4E0D\u6307\u5B9A\u4F1A\u4F7F\u7528\u65F6\u523B 00:00:00 | \u2014 |\n| value-format | \u53EF\u9009\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\u3002\u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A Date \u5BF9\u8C61 | string | \u89C1\u65E5\u671F\u683C\u5F0F | \u2014 |\n| name | \u539F\u751F\u5C5E\u6027 | string | \u2014 | \u2014 |\n| unlink-panels | \u5728\u8303\u56F4\u9009\u62E9\u5668\u91CC\u53D6\u6D88\u4E24\u4E2A\u65E5\u671F\u9762\u677F\u4E4B\u95F4\u7684\u8054\u52A8 | boolean | \u2014 | false |\n| prefix-icon | \u81EA\u5B9A\u4E49\u5934\u90E8\u56FE\u6807\u7684\u7C7B\u540D | string | \u2014 | el-icon-date |\n| clear-icon | \u81EA\u5B9A\u4E49\u6E05\u7A7A\u56FE\u6807\u7684\u7C7B\u540D | string | \u2014 | el-icon-circle-close |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u7528\u6237\u786E\u8BA4\u9009\u5B9A\u7684\u503C\u65F6\u89E6\u53D1 | \u7EC4\u4EF6\u7ED1\u5B9A\u503C\u3002\u683C\u5F0F\u4E0E\u7ED1\u5B9A\u503C\u4E00\u81F4\uFF0C\u53EF\u53D7 value-format \u63A7\u5236 |\n| blur | \u5F53 input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1 | \u7EC4\u4EF6\u5B9E\u4F8B |\n| focus | \u5F53 input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1 | \u7EC4\u4EF6\u5B9E\u4F8B |\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| focus | \u4F7F input \u83B7\u53D6\u7126\u70B9 | \u2014 |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "readonly": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "editable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "clearable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "start-placeholder": {
            "type": "attr",
            "values": [],
            "description": "placeholder for the start time in range mode"
          },
          "end-placeholder": {
            "type": "attr",
            "values": [],
            "description": "placeholder for the end time in range mode"
          },
          "time-arrow-control": {
            "type": "attr",
            "values": [],
            "description": "whether to pick time using arrow buttons"
          },
          "type": {
            "type": "attr",
            "values": ["year", "month", "date", "week", "datetime", "datetimerange", "daterange"],
            "description": "type of the picker, default: date"
          },
          "format": {
            "type": "attr",
            "values": [],
            "description": "year yyyy month MM day dd, hour HH, minute mm, second ss, default: yyyy-MM-dd"
          },
          "align": {
            "type": "attr",
            "values": ["left", "center", "right"],
            "description": ""
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "picker-options": {
            "type": "attr",
            "values": ["shortcuts", "disabledDate", "firstDayOfWeek", "onPick"],
            "description": "additional options, type is object"
          },
          "range-separator": {
            "type": "attr",
            "values": [],
            "description": "default: '-'"
          },
          "default-value": {
            "type": "attr",
            "values": [],
            "description": "optional default time of the picker, type: Date"
          },
          "default-time": {
            "type": "attr",
            "values": [],
            "description": "The time value to use when selecting date range, type: string[]"
          },
          "value-format": {
            "type": "attr",
            "values": [],
            "description": "optional, format of binding value. If not specified, the binding value will be a Date object"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "native 'name' attribute"
          },
          "unlink-panels": {
            "type": "attr",
            "values": [],
            "description": "unlink two date-panels in range-picker"
          },
          "prefix-icon": {
            "type": "attr",
            "values": [],
            "description": "Custom prefix icon class, default: 'el-icon-date"
          },
          "clear-icon": {
            "type": "attr",
            "values": [],
            "description": "Custom clear icon class, default: 'el-icon-circle-close"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-dialog": {
          "_html": {
            "": '<el-dialog\ntitle=""\n:visible.sync="${1:dialogVisible}"\nwidth="${2:width}"\n:before-close="${3:dialogBeforeClose}">\n<div>$4</div>\n<div slot="footer">\n<el-button @click="dialogVisible = false">\u53D6 \u6D88</el-button>\n<el-button type="primary" @click="dialogVisible = false">\u786E \u5B9A</el-button>\n</div>\n</el-dialog>',
            ":form": '<el-dialog\ntitle=""\n:visible.sync="${1:dialogVisible}"\nwidth="${2:width}"\n:before-close="${3:dialogBeforeClose}">\n<el-form :model="form">\n<el-form-item label="" :label-width="">\n<el-input v-model=""></el-input>\n</el-form-item>\n</el-form>\n<div slot="footer">\n<el-button @click="dialogVisible = false">\u53D6 \u6D88</el-button>\n<el-button type="primary" @click="dialogVisible = false">\u786E \u5B9A</el-button>\n</div>\n</el-dialog>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/dialog](http://element.eleme.io/#/zh-CN/component/dialog) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| visible | \u662F\u5426\u663E\u793A Dialog\uFF0C\u652F\u6301 .sync \u4FEE\u9970\u7B26 | boolean | \u2014 | false |\n| title | Dialog \u7684\u6807\u9898\uFF0C\u4E5F\u53EF\u901A\u8FC7\u5177\u540D slot \uFF08\u89C1\u4E0B\u8868\uFF09\u4F20\u5165 | string | \u2014 | \u2014 |\n| width | Dialog \u7684\u5BBD\u5EA6 | string | \u2014 | 50% |\n| fullscreen | \u662F\u5426\u4E3A\u5168\u5C4F Dialog | boolean | \u2014 | false |\n| top | Dialog CSS \u4E2D\u7684 margin-top \u503C | string | \u2014 | 15vh |\n| modal | \u662F\u5426\u9700\u8981\u906E\u7F69\u5C42 | boolean | \u2014 | true |\n| modal-append-to-body | \u906E\u7F69\u5C42\u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\uFF0C\u82E5\u4E3A false\uFF0C\u5219\u906E\u7F69\u5C42\u4F1A\u63D2\u5165\u81F3 Dialog \u7684\u7236\u5143\u7D20\u4E0A | boolean | \u2014 | true |\n| append-to-body | Dialog \u81EA\u8EAB\u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\u3002\u5D4C\u5957\u7684 Dialog \u5FC5\u987B\u6307\u5B9A\u8BE5\u5C5E\u6027\u5E76\u8D4B\u503C\u4E3A true | boolean | \u2014 | false |\n| lock-scroll | \u662F\u5426\u5728 Dialog \u51FA\u73B0\u65F6\u5C06 body \u6EDA\u52A8\u9501\u5B9A | boolean | \u2014 | true |\n| custom-class | Dialog \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D | string | \u2014 | \u2014 |\n| close-on-click-modal | \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u70B9\u51FB modal \u5173\u95ED Dialog | boolean | \u2014 | true |\n| close-on-press-escape | \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED Dialog | boolean | \u2014 | true |\n| show-close | \u662F\u5426\u663E\u793A\u5173\u95ED\u6309\u94AE | boolean | \u2014 | true |\n| before-close | \u5173\u95ED\u524D\u7684\u56DE\u8C03\uFF0C\u4F1A\u6682\u505C Dialog \u7684\u5173\u95ED | function(done)\uFF0Cdone \u7528\u4E8E\u5173\u95ED Dialog | \u2014 | \u2014 |\n| center | \u662F\u5426\u5BF9\u5934\u90E8\u548C\u5E95\u90E8\u91C7\u7528\u5C45\u4E2D\u5E03\u5C40 | boolean | \u2014 | false |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| \u2014 | Dialog \u7684\u5185\u5BB9 |\n| title | Dialog \u6807\u9898\u533A\u7684\u5185\u5BB9 |\n| footer | Dialog \u6309\u94AE\u64CD\u4F5C\u533A\u7684\u5185\u5BB9 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| open | Dialog \u6253\u5F00\u7684\u56DE\u8C03 | \u2014 |\n| opened | Dialog \u6253\u5F00\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03 | \u2014 |\n| close | Dialog \u5173\u95ED\u7684\u56DE\u8C03 | \u2014 |\n| closed | Dialog \u5173\u95ED\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03 | \u2014 |",
          "title": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "top": {
            "type": "attr",
            "values": [],
            "description": "value for top of Dialog CSS, works when size is not full, default: 15%"
          },
          "visible": {
            "type": "attr",
            "values": [],
            "description": "visibility of Dialog, supports the '.sync' modifier, default: false"
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "fullscreen": {
            "type": "attr",
            "values": [],
            "description": "whether the Dialog takes up full screen, default: false"
          },
          "modal": {
            "type": "attr",
            "values": [],
            "description": "whether a mask is displayed, default: true"
          },
          "modal-append-to-body": {
            "type": "attr",
            "values": [],
            "description": "whether to append modal to body element. If false, the modal will be appended to Dialog's parent element, default: true"
          },
          "append-to-body": {
            "type": "attr",
            "values": [],
            "description": "whether to append Dialog itself to body. A nested Dialog should have this attribute set to 'true', default: false"
          },
          "lock-scroll": {
            "type": "attr",
            "values": [],
            "description": "whether scroll of body is disabled while Dialog is displayed, default: true"
          },
          "custom-class": {
            "type": "attr",
            "values": [],
            "description": "custom class names for Dialog"
          },
          "close-on-click-modal": {
            "type": "attr",
            "values": [],
            "description": "whether the Dialog can be closed by clicking the mask, default: true"
          },
          "show-close": {
            "type": "attr",
            "values": [],
            "description": "whether to show a close button, default: true"
          },
          "before-close": {
            "type": "attr",
            "values": [],
            "description": "callback before Dialog closes, and it will prevent Dialog from closing"
          },
          "center": {
            "type": "attr",
            "values": [],
            "description": "whether to align the header and footer in center"
          },
          "close": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "open": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-dropdown": {
          "_html": {
            "": '<el-dropdown>\n<el-button type="primary">\n\u4E0B\u62C9\u83DC\u5355<i class="el-icon-arrow-down el-icon--right"></i>\n</el-button>\n<el-dropdown-menu slot="dropdown">\n<el-dropdown-item>\u9EC4\u91D1\u7CD5</el-dropdown-item>\n</el-dropdown-menu>\n</el-dropdown>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/dropdown](http://element.eleme.io/#/zh-CN/component/dropdown) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| type | \u83DC\u5355\u6309\u94AE\u7C7B\u578B\uFF0C\u540C Button \u7EC4\u4EF6(\u53EA\u5728split-button\u4E3A true \u7684\u60C5\u51B5\u4E0B\u6709\u6548) | string | \u2014 | \u2014 |\n| size | \u83DC\u5355\u5C3A\u5BF8\uFF0C\u5728split-button\u4E3A true \u7684\u60C5\u51B5\u4E0B\u4E5F\u5BF9\u89E6\u53D1\u6309\u94AE\u751F\u6548 | string | medium / small / mini | \u2014 |\n| split-button | \u4E0B\u62C9\u89E6\u53D1\u5143\u7D20\u5448\u73B0\u4E3A\u6309\u94AE\u7EC4 | boolean | \u2014 | false |\n| placement | \u83DC\u5355\u5F39\u51FA\u4F4D\u7F6E | string | top/top-start/top-end/bottom/bottom-start/bottom-end | bottom-end |\n| trigger | \u89E6\u53D1\u4E0B\u62C9\u7684\u884C\u4E3A | string | hover, click | hover |\n| hide-on-click | \u662F\u5426\u5728\u70B9\u51FB\u83DC\u5355\u9879\u540E\u9690\u85CF\u83DC\u5355 | boolean | \u2014 | true |\n| show-timeout | \u5C55\u5F00\u4E0B\u62C9\u83DC\u5355\u7684\u5EF6\u65F6\uFF08\u4EC5\u5728 trigger \u4E3A hover \u65F6\u6709\u6548\uFF09 | number | \u2014 | 250 |\n| hide-timeout | \u6536\u8D77\u4E0B\u62C9\u83DC\u5355\u7684\u5EF6\u65F6\uFF08\u4EC5\u5728 trigger \u4E3A hover \u65F6\u6709\u6548\uFF09 | number | \u2014 | 150 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| click | split-button \u4E3A true \u65F6\uFF0C\u70B9\u51FB\u5DE6\u4FA7\u6309\u94AE\u7684\u56DE\u8C03 | \u2014 |\n| command | \u70B9\u51FB\u83DC\u5355\u9879\u89E6\u53D1\u7684\u4E8B\u4EF6\u56DE\u8C03 | dropdown-item \u7684\u6307\u4EE4 |\n| visible-change | \u4E0B\u62C9\u6846\u51FA\u73B0/\u9690\u85CF\u65F6\u89E6\u53D1 | \u51FA\u73B0\u5219\u4E3A true\uFF0C\u9690\u85CF\u5219\u4E3A false |\n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| command | \u6307\u4EE4 | string/number/object | \u2014 | \u2014 |\n| disabled | \u7981\u7528 | boolean | \u2014 | false |\n| divided | \u663E\u793A\u5206\u5272\u7EBF | boolean | \u2014 | false |",
          "type": {
            "type": "attr",
            "values": [],
            "description": "menu button type, refer to Button Component, only works when 'split-button' is true"
          },
          "szie": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "split-button": {
            "type": "attr",
            "values": [],
            "description": "whether a button group is displayed"
          },
          "placement": {
            "type": "attr",
            "values": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"],
            "description": "default: bottom"
          },
          "trigger": {
            "type": "attr",
            "values": ["hover", "click"],
            "description": "default: hover"
          },
          "hide-on-click": {
            "type": "attr",
            "values": [],
            "description": "whether to hide menu after clicking menu-item"
          },
          "show-timeout": {
            "type": "attr",
            "values": [],
            "description": "Delay time before show a dropdown, default: 250"
          },
          "hide-timeout": {
            "type": "attr",
            "values": [],
            "description": "Delay time before hide a dropdown, default: 150"
          },
          "click": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "command": {
            "type": "event",
            "values": [],
            "description": "triggers when a dropdown item is clicked"
          },
          "visible-change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-form": {
          "_html": {
            "": '<el-form ref="${1:form}" :model="${2:form}" label-width="${3:80px}">\n$4\n</el-form>',
            ":inline": '<el-form :inline="true" ref="${1:form}" :model="${2:form}" label-width="${3:80px}">\n$4\n</el-form>'
          },
          "_doc": "element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/form](http://element.eleme.io/#/zh-CN/component/form) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| model | \u8868\u5355\u6570\u636E\u5BF9\u8C61 | object | \u2014 | \u2014 |\n| rules | \u8868\u5355\u9A8C\u8BC1\u89C4\u5219 | object | \u2014 | \u2014 |\n| inline | \u884C\u5185\u8868\u5355\u6A21\u5F0F | boolean | \u2014 | false |\n| label-position | \u8868\u5355\u57DF\u6807\u7B7E\u7684\u4F4D\u7F6E\uFF0C\u5982\u679C\u503C\u4E3A left \u6216\u8005 right \u65F6\uFF0C\u5219\u9700\u8981\u8BBE\u7F6E label-width | string | right/left/top | right |\n| label-width | \u8868\u5355\u57DF\u6807\u7B7E\u7684\u5BBD\u5EA6\uFF0C\u4F5C\u4E3A Form \u76F4\u63A5\u5B50\u5143\u7D20\u7684 form-item \u4F1A\u7EE7\u627F\u8BE5\u503C | string | \u2014 | \u2014 |\n| label-suffix | \u8868\u5355\u57DF\u6807\u7B7E\u7684\u540E\u7F00 | string | \u2014 | \u2014 |\n| hide-required-asterisk | \u662F\u5426\u663E\u793A\u5FC5\u586B\u5B57\u6BB5\u7684\u6807\u7B7E\u65C1\u8FB9\u7684\u7EA2\u8272\u661F\u53F7 | boolean | \u2014 | false |\n| show-message | \u662F\u5426\u663E\u793A\u6821\u9A8C\u9519\u8BEF\u4FE1\u606F | boolean | \u2014 | true |\n| inline-message | \u662F\u5426\u4EE5\u884C\u5185\u5F62\u5F0F\u5C55\u793A\u6821\u9A8C\u4FE1\u606F | boolean | \u2014 | false |\n| status-icon | \u662F\u5426\u5728\u8F93\u5165\u6846\u4E2D\u663E\u793A\u6821\u9A8C\u7ED3\u679C\u53CD\u9988\u56FE\u6807 | boolean | \u2014 | false |\n| validate-on-rule-change | \u662F\u5426\u5728 rules \u5C5E\u6027\u6539\u53D8\u540E\u7ACB\u5373\u89E6\u53D1\u4E00\u6B21\u9A8C\u8BC1 | boolean | \u2014 | true |\n| size | \u7528\u4E8E\u63A7\u5236\u8BE5\u8868\u5355\u5185\u7EC4\u4EF6\u7684\u5C3A\u5BF8 | string | medium / small / mini | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528\u8BE5\u8868\u5355\u5185\u7684\u6240\u6709\u7EC4\u4EF6\u3002\u82E5\u8BBE\u7F6E\u4E3A true\uFF0C\u5219\u8868\u5355\u5185\u7EC4\u4EF6\u4E0A\u7684 disabled \u5C5E\u6027\u4E0D\u518D\u751F\u6548 | boolean | \u2014 | false |\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| validate | \u5BF9\u6574\u4E2A\u8868\u5355\u8FDB\u884C\u6821\u9A8C\u7684\u65B9\u6CD5\uFF0C\u53C2\u6570\u4E3A\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u3002\u8BE5\u56DE\u8C03\u51FD\u6570\u4F1A\u5728\u6821\u9A8C\u7ED3\u675F\u540E\u88AB\u8C03\u7528\uFF0C\u5E76\u4F20\u5165\u4E24\u4E2A\u53C2\u6570\uFF1A\u662F\u5426\u6821\u9A8C\u6210\u529F\u548C\u672A\u901A\u8FC7\u6821\u9A8C\u7684\u5B57\u6BB5\u3002\u82E5\u4E0D\u4F20\u5165\u56DE\u8C03\u51FD\u6570\uFF0C\u5219\u4F1A\u8FD4\u56DE\u4E00\u4E2A promise | Function(callback: Function(boolean, object)) |\n| validateField | \u5BF9\u90E8\u5206\u8868\u5355\u5B57\u6BB5\u8FDB\u884C\u6821\u9A8C\u7684\u65B9\u6CD5 | Function(prop: string, callback: Function(errorMessage: string)) |\n| resetFields | \u5BF9\u6574\u4E2A\u8868\u5355\u8FDB\u884C\u91CD\u7F6E\uFF0C\u5C06\u6240\u6709\u5B57\u6BB5\u503C\u91CD\u7F6E\u4E3A\u521D\u59CB\u503C\u5E76\u79FB\u9664\u6821\u9A8C\u7ED3\u679C | \u2014 |\n| clearValidate | \u79FB\u9664\u8868\u5355\u9879\u7684\u6821\u9A8C\u7ED3\u679C\u3002\u4F20\u5165\u5F85\u79FB\u9664\u7684\u8868\u5355\u9879\u7684 prop \u5C5E\u6027\u7EC4\u6210\u7684\u6570\u7EC4\uFF0C\u5982\u4E0D\u4F20\u5219\u79FB\u9664\u6574\u4E2A\u8868\u5355\u7684\u6821\u9A8C\u7ED3\u679C | Function(props: array) |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| validate | \u4EFB\u4E00\u8868\u5355\u9879\u88AB\u6821\u9A8C\u540E\u89E6\u53D1 | \u88AB\u6821\u9A8C\u7684\u8868\u5355\u9879 prop \u503C\uFF0C\u6821\u9A8C\u662F\u5426\u901A\u8FC7\uFF0C\u9519\u8BEF\u6D88\u606F\uFF08\u5982\u679C\u5B58\u5728\uFF09 |",
          "model": {
            "type": "attr",
            "values": [],
            "description": "data of form component, type: object"
          },
          "rules": {
            "type": "attr",
            "values": [],
            "description": "validation rules of form"
          },
          "inline": {
            "type": "attr",
            "values": [],
            "description": "whether the form is inline"
          },
          "label-position": {
            "type": "attr",
            "values": ["left", "right", "top"],
            "description": "position of label, default: 'right'"
          },
          "label-width": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "label-suffix": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "show-message": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "inline-message": {
            "type": "attr",
            "values": [],
            "description": "whether to display the error message inline with the form item"
          },
          "status-icon": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "validate-on-rule-change": {
            "type": "attr",
            "values": [],
            "description": "whether to trigger validation when the 'rules' prop is changed, default: true"
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "validate": {
            "type": "event",
            "values": [],
            "description": "triggers after a form item is validated"
          }
        },
        "el-input-number": {
          "_html": {
            "": '<el-input-number v-model="$1" @change="${2:inputChange}" :min="${3:1}" :max="${4:10}" label="${5:label}"></el-input-number>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/input-number](http://element.eleme.io/#/zh-CN/component/input-number) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| value | \u7ED1\u5B9A\u503C | number | \u2014 | \u2014 |\n| min | \u8BBE\u7F6E\u8BA1\u6570\u5668\u5141\u8BB8\u7684\u6700\u5C0F\u503C | number | \u2014 | -Infinity |\n| max | \u8BBE\u7F6E\u8BA1\u6570\u5668\u5141\u8BB8\u7684\u6700\u5927\u503C | number | \u2014 | Infinity |\n| step | \u8BA1\u6570\u5668\u6B65\u957F | number | \u2014 | 1 |\n| precision | \u6570\u503C\u7CBE\u5EA6 | number | \u2014 | \u2014 |\n| size | \u8BA1\u6570\u5668\u5C3A\u5BF8 | string | large, small | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528\u8BA1\u6570\u5668 | boolean | \u2014 | false |\n| controls | \u662F\u5426\u4F7F\u7528\u63A7\u5236\u6309\u94AE | boolean | \u2014 | true |\n| controls-position | \u63A7\u5236\u6309\u94AE\u4F4D\u7F6E | string | right | - |\n| name | \u539F\u751F\u5C5E\u6027 | string | \u2014 | \u2014 |\n| label | \u8F93\u5165\u6846\u5173\u8054\u7684label\u6587\u5B57 | string | \u2014 | \u2014 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u7ED1\u5B9A\u503C\u88AB\u6539\u53D8\u65F6\u89E6\u53D1 | \u6700\u540E\u53D8\u66F4\u7684\u503C |\n| blur | \u5728\u7EC4\u4EF6 Input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1 | (event: Event) |\n| focus | \u5728\u7EC4\u4EF6 Input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1 | (event: Event)\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| focus | \u4F7F input \u83B7\u53D6\u7126\u70B9 | - |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "min": {
            "type": "attr",
            "values": [],
            "description": "the minimum allowed value"
          },
          "max": {
            "type": "attr",
            "values": [],
            "description": "the maximum allowed value"
          },
          "step": {
            "type": "attr",
            "values": [],
            "description": "incremental step"
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "controls-position": {
            "type": "attr",
            "values": ["right"],
            "description": "position of the control buttons"
          },
          "controls": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "debounce": {
            "type": "attr",
            "values": [],
            "description": "debounce delay when typing, in millisecond"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-menu": {
          "_html": {
            "": '<el-menu :default-active="${1:activeIndex}" mode="horizontal" @select="${2:menuSelect}">\n<el-menu-item index="${3:index}">$4</el-menu-item>\n</el-menu>',
            ":submenu": '<el-menu :default-active="${1:activeIndex}" mode="horizontal" @select="handleSelect">\n<el-menu-item index="1"></el-menu-item>\n<el-submenu index="2">\n<template slot="title"></template>\n<el-menu-item index="2-1"></el-menu-item>\n</el-submenu>\n</el-menu>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/menu](http://element.eleme.io/#/zh-CN/component/menu) \n\n  | \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n  | :--- | :--- | :--- | :--- | :--- |\n  | mode | \u6A21\u5F0F | string | horizontal / vertical | vertical |\n  | collapse | \u662F\u5426\u6C34\u5E73\u6298\u53E0\u6536\u8D77\u83DC\u5355\uFF08\u4EC5\u5728 mode \u4E3A vertical \u65F6\u53EF\u7528\uFF09 | boolean | \u2014 | false |\n  | background-color | \u83DC\u5355\u7684\u80CC\u666F\u8272\uFF08\u4EC5\u652F\u6301 hex \u683C\u5F0F\uFF09 | string | \u2014 | #ffffff |\n  | text-color | \u83DC\u5355\u7684\u6587\u5B57\u989C\u8272\uFF08\u4EC5\u652F\u6301 hex \u683C\u5F0F\uFF09 | string | \u2014 | #303133 |\n  | active-text-color | \u5F53\u524D\u6FC0\u6D3B\u83DC\u5355\u7684\u6587\u5B57\u989C\u8272\uFF08\u4EC5\u652F\u6301 hex \u683C\u5F0F\uFF09 | string | \u2014 | #409EFF |\n  | default-active | \u5F53\u524D\u6FC0\u6D3B\u83DC\u5355\u7684 index | string | \u2014 | \u2014 |\n  | default-openeds | \u5F53\u524D\u6253\u5F00\u7684 sub-menu \u7684 index \u7684\u6570\u7EC4 | Array | \u2014 | \u2014 |\n  | unique-opened | \u662F\u5426\u53EA\u4FDD\u6301\u4E00\u4E2A\u5B50\u83DC\u5355\u7684\u5C55\u5F00 | boolean | \u2014 | false |\n  | menu-trigger | \u5B50\u83DC\u5355\u6253\u5F00\u7684\u89E6\u53D1\u65B9\u5F0F(\u53EA\u5728 mode \u4E3A horizontal \u65F6\u6709\u6548) | string | hover / click | hover |\n  | router | \u662F\u5426\u4F7F\u7528 vue-router \u7684\u6A21\u5F0F\uFF0C\u542F\u7528\u8BE5\u6A21\u5F0F\u4F1A\u5728\u6FC0\u6D3B\u5BFC\u822A\u65F6\u4EE5 index \u4F5C\u4E3A path \u8FDB\u884C\u8DEF\u7531\u8DF3\u8F6C | boolean | \u2014 | false |\n  | collapse-transition | \u662F\u5426\u5F00\u542F\u6298\u53E0\u52A8\u753B | boolean | \u2014 | true |\n\n  | \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u53C2\u6570 |\n  | :--- | :--- | :--- |\n  | open | \u5C55\u5F00\u6307\u5B9A\u7684 sub-menu | index: \u9700\u8981\u6253\u5F00\u7684 sub-menu \u7684 index |\n  | close | \u6536\u8D77\u6307\u5B9A\u7684 sub-menu | index: \u9700\u8981\u6536\u8D77\u7684 sub-menu \u7684 index |\n\n  | \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n  | :--- | :--- | :--- |\n  | select | \u83DC\u5355\u6FC0\u6D3B\u56DE\u8C03 | index: \u9009\u4E2D\u83DC\u5355\u9879\u7684 index, indexPath: \u9009\u4E2D\u83DC\u5355\u9879\u7684 index path |\n  | open | sub-menu \u5C55\u5F00\u7684\u56DE\u8C03 | index: \u6253\u5F00\u7684 sub-menu \u7684 index\uFF0C indexPath: \u6253\u5F00\u7684 sub-menu \u7684 index path |\n  | close | sub-menu \u6536\u8D77\u7684\u56DE\u8C03 | index: \u6536\u8D77\u7684 sub-menu \u7684 index\uFF0C indexPath: \u6536\u8D77\u7684 sub-menu \u7684 index path |",
          "default-active": {
            "type": "attr",
            "values": [],
            "description": "index of currently active menu"
          },
          "mode": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "collapse": {
            "type": "attr",
            "values": [],
            "description": "whether the menu is collapsed (available only in vertical mode)"
          },
          "background-color": {
            "type": "attr",
            "values": [],
            "description": "background color of Menu (hex format), default: #ffffff"
          },
          "text-color": {
            "type": "attr",
            "values": [],
            "description": "text color of Menu (hex format), default: #2d2f33"
          },
          "active-text-color": {
            "type": "attr",
            "values": [],
            "description": "text color of currently active menu item (hex format), default: #409EFF"
          },
          "theme": {
            "type": "attr",
            "values": ["light", "dark"],
            "description": "theme color, default: light"
          },
          "default-openeds": {
            "type": "attr",
            "values": [],
            "description": "array that contains keys of currently active sub-menus"
          },
          "unique-opened": {
            "type": "attr",
            "values": [],
            "description": "whether only one sub-menu can be active"
          },
          "menu-trigger": {
            "type": "attr",
            "values": [],
            "description": "how sub-menus are triggered, only works when mode is 'horizontal', default: hover"
          },
          "router": {
            "type": "attr",
            "values": [],
            "description": "whether vue-router mode is activated. If true, index will be used as 'path' to activate the route action"
          },
          "collapse-transition": {
            "type": "attr",
            "values": [],
            "description": "whether to enable the collapse transition, default: true"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "open": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "close": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-pagination": {
          "_html": {
            "": '<el-pagination\nlayout="prev, pager, next"\n:total="50">\n</el-pagination>',
            ":full": '<el-pagination\n@size-change="handleSizeChange"\n@current-change="handleCurrentChange"\n:current-page="pageNum"\n:page-sizes="[10, 20, 50]"\n:page-size="pageSize"\nlayout="total, sizes, prev, pager, next, jumper"\n:total="totalCount">\n</el-pagination>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/pagination](http://element.eleme.io/#/zh-CN/component/pagination) \n\n  | \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n  | :--- | :--- | :--- | :--- | :--- |\n  | small | \u662F\u5426\u4F7F\u7528\u5C0F\u578B\u5206\u9875\u6837\u5F0F | boolean | \u2014 | false |\n  | background | \u662F\u5426\u4E3A\u5206\u9875\u6309\u94AE\u6DFB\u52A0\u80CC\u666F\u8272 | boolean | \u2014 | false |\n  | page-size | \u6BCF\u9875\u663E\u793A\u6761\u76EE\u4E2A\u6570\uFF0C\u652F\u6301 .sync \u4FEE\u9970\u7B26 | number | \u2014 | 10 |\n  | total | \u603B\u6761\u76EE\u6570 | number | \u2014 | \u2014 |\n  | page-count | \u603B\u9875\u6570\uFF0Ctotal \u548C page-count \u8BBE\u7F6E\u4EFB\u610F\u4E00\u4E2A\u5C31\u53EF\u4EE5\u8FBE\u5230\u663E\u793A\u9875\u7801\u7684\u529F\u80FD\uFF1B\u5982\u679C\u8981\u652F\u6301 page-sizes \u7684\u66F4\u6539\uFF0C\u5219\u9700\u8981\u4F7F\u7528 total \u5C5E\u6027 | Number | \u2014 | \u2014 |\n  | pager-count | \u9875\u7801\u6309\u94AE\u7684\u6570\u91CF\uFF0C\u5F53\u603B\u9875\u6570\u8D85\u8FC7\u8BE5\u503C\u65F6\u4F1A\u6298\u53E0 | number | \u5927\u4E8E\u7B49\u4E8E 5 \u4E14\u5C0F\u4E8E\u7B49\u4E8E 21 \u7684\u5947\u6570 | 7 |\n  | current-page | \u5F53\u524D\u9875\u6570\uFF0C\u652F\u6301 .sync \u4FEE\u9970\u7B26 | number | \u2014 | 1 |\n  | layout | \u7EC4\u4EF6\u5E03\u5C40\uFF0C\u5B50\u7EC4\u4EF6\u540D\u7528\u9017\u53F7\u5206\u9694 | String | sizes, prev, pager, next, jumper, ->, total, slot | 'prev, pager, next, jumper, ->, total' |\n  | page-sizes | \u6BCF\u9875\u663E\u793A\u4E2A\u6570\u9009\u62E9\u5668\u7684\u9009\u9879\u8BBE\u7F6E | number[] | \u2014 | [10, 20, 30, 40, 50, 100] |\n  | popper-class | \u6BCF\u9875\u663E\u793A\u4E2A\u6570\u9009\u62E9\u5668\u7684\u4E0B\u62C9\u6846\u7C7B\u540D | string | \u2014 | \u2014 |\n  | prev-text | \u66FF\u4EE3\u56FE\u6807\u663E\u793A\u7684\u4E0A\u4E00\u9875\u6587\u5B57 | string | \u2014 | \u2014 |\n  | next-text | \u66FF\u4EE3\u56FE\u6807\u663E\u793A\u7684\u4E0B\u4E00\u9875\u6587\u5B57 | string | \u2014 | \u2014 |\n  | disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |",
          "total": {
            "type": "attr",
            "values": [],
            "description": "total item count"
          },
          "current-page": {
            "type": "attr",
            "values": [],
            "description": "current page number, supports the .sync modifier, default: 1"
          },
          "page-size": {
            "type": "attr",
            "values": [],
            "description": "item count of each page, default: 10"
          },
          "current-change": {
            "type": "event",
            "values": [],
            "description": "triggers when 'current-page' changes"
          },
          "layout": {
            "type": "attr",
            "values": ["sizes", "prev", "pager", "next", "jumper", "->", "total", "slot"],
            "description": "layout of Pagination, elements separated with a comma"
          },
          "small": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "background": {
            "type": "attr",
            "values": [],
            "description": "whether the buttons have a background color"
          },
          "page-count": {
            "type": "attr",
            "values": [],
            "description": "total page count. Set either 'total' or 'page-count' and pages will be displayed; if you need 'page-sizes', total is required"
          },
          "page-sizes": {
            "type": "attr",
            "values": [],
            "description": "options of item count per page, example: [10, 20]"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "prev-text": {
            "type": "attr",
            "values": [],
            "description": "text for the prev button"
          },
          "next-text": {
            "type": "attr",
            "values": [],
            "description": "text for the next button"
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size-change": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-popover": {
          "_html": {
            "": '<el-popover\nref="popover1"\nplacement="top-start"\ntitle="\u6807\u9898"\nwidth="200"\ntrigger="hover"\ncontent="\u8FD9\u662F\u4E00\u6BB5\u5185\u5BB9">\n</el-popover>',
            ":insert": '<el-popover\nref="popover4"\nplacement="right"\nwidth="400"\ntrigger="click">\n<div></div>\n</el-popover>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/popover](http://element.eleme.io/#/zh-CN/component/popover) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| trigger | \u89E6\u53D1\u65B9\u5F0F | String | click/focus/hover/manual | click |\n| title | \u6807\u9898 | String | \u2014 | \u2014 |\n| content | \u663E\u793A\u7684\u5185\u5BB9\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 slot \u4F20\u5165 DOM | String | \u2014 | \u2014 |\n| width | \u5BBD\u5EA6 | String, Number | \u2014 | \u6700\u5C0F\u5BBD\u5EA6 150px |\n| placement | \u51FA\u73B0\u4F4D\u7F6E | String | top/top-start/top-end/bottom/bottom-start/bottom-end/left/left-start/left-end/right/right-start/right-end | bottom |\n| disabled | Popover \u662F\u5426\u53EF\u7528 | Boolean | \u2014 | false |\n| value(v-model) | \u72B6\u6001\u662F\u5426\u53EF\u89C1 | Boolean | \u2014 | false |\n| offset | \u51FA\u73B0\u4F4D\u7F6E\u7684\u504F\u79FB\u91CF | Number | \u2014 | 0 |\n| transition | \u5B9A\u4E49\u6E10\u53D8\u52A8\u753B | String | \u2014 | fade-in-linear |\n| visible-arrow | \u662F\u5426\u663E\u793A Tooltip \u7BAD\u5934\uFF0C\u66F4\u591A\u53C2\u6570\u53EF\u89C1Vue-popper | Boolean | \u2014 | true |\n| popper-options | popper.js \u7684\u53C2\u6570 | Object | \u53C2\u8003 popper.js \u6587\u6863 | { boundariesElement: 'body', gpuAcceleration: false } |\n| popper-class | \u4E3A popper \u6DFB\u52A0\u7C7B\u540D | String | \u2014 | \u2014 |\n| open-delay | \u89E6\u53D1\u65B9\u5F0F\u4E3A hover \u65F6\u7684\u663E\u793A\u5EF6\u8FDF\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2 | Number | \u2014 | \u2014 | \n\n| \u53C2\u6570 | \u8BF4\u660E |\n| :--- | :--- |\n| \u2014 | Popover \u5185\u5D4C HTML \u6587\u672C |\n| reference | \u89E6\u53D1 Popover \u663E\u793A\u7684 HTML \u5143\u7D20 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| show | \u663E\u793A\u65F6\u89E6\u53D1 | \u2014 |\n| after-enter | \u663E\u793A\u52A8\u753B\u64AD\u653E\u5B8C\u6BD5\u540E\u89E6\u53D1 | \u2014 |\n| hide | \u9690\u85CF\u65F6\u89E6\u53D1 | \u2014 |\n| after-leave | \u9690\u85CF\u52A8\u753B\u64AD\u653E\u5B8C\u6BD5\u540E\u89E6\u53D1 | \u2014 |",
          "placement": {
            "type": "attr",
            "values": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"],
            "description": "default: bottom"
          },
          "trigger": {
            "type": "attr",
            "values": ["click", "focus", "hover", "manual"],
            "description": "how the popover is triggered, default: click"
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "content": {
            "type": "attr",
            "values": [],
            "description": "popover content, can be replaced with a default slot"
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "offset": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "transition": {
            "type": "attr",
            "values": [],
            "description": "animation name, default: 'el-fade-in-linear'"
          },
          "visible-arrow": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "popper-options": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "open-delay": {
            "type": "attr",
            "values": [],
            "description": "delay of appearance when trigger is hover, in milliseconds"
          },
          "show": {
            "type": "event",
            "values": [],
            "description": "triggers when popover shows"
          },
          "hide": {
            "type": "event",
            "values": [],
            "description": "triggers when popover hides"
          },
          "after-enter": {
            "type": "event",
            "values": [],
            "description": "triggers when the entering transition ends"
          },
          "after-leave": {
            "type": "event",
            "values": [],
            "description": "triggers when the leaving transition ends"
          }
        },
        "el-progress": {
          "_html": {
            "": '<el-progress :percentage="${1:30}"></el-progress>',
            ":circle": '<el-progress type="circle" :percentage="${1:30}"></el-progress>',
            ":inside": '<el-progress :text-inside="true" :stroke-width="18" :percentage="70"></el-progress>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/progress](http://element.eleme.io/#/zh-CN/component/progress) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| percentage | \u767E\u5206\u6BD4\uFF08\u5FC5\u586B\uFF09 | number | 0-100 | 0 |\n| type | \u8FDB\u5EA6\u6761\u7C7B\u578B | string | line/circle | line |\n| stroke-width | \u8FDB\u5EA6\u6761\u7684\u5BBD\u5EA6\uFF0C\u5355\u4F4D px | number | \u2014 | 6 |\n| text-inside | \u8FDB\u5EA6\u6761\u663E\u793A\u6587\u5B57\u5185\u7F6E\u5728\u8FDB\u5EA6\u6761\u5185\uFF08\u53EA\u5728 type=line \u65F6\u53EF\u7528\uFF09 | boolean | \u2014 | false |\n| status | \u8FDB\u5EA6\u6761\u5F53\u524D\u72B6\u6001 | string | success/exception | \u2014 |\n| color | \u8FDB\u5EA6\u6761\u80CC\u666F\u8272\uFF08\u4F1A\u8986\u76D6 status \u72B6\u6001\u989C\u8272\uFF09 | string | \u2014 | \u2014 |\n| width | \u73AF\u5F62\u8FDB\u5EA6\u6761\u753B\u5E03\u5BBD\u5EA6\uFF08\u53EA\u5728 type=circle \u65F6\u53EF\u7528\uFF09 | number | | 126 |\n| show-text | \u662F\u5426\u663E\u793A\u8FDB\u5EA6\u6761\u6587\u5B57\u5185\u5BB9 | boolean | \u2014 | true |",
          "percentage": {
            "type": "attr",
            "values": [],
            "description": "percentage, required, default: 0"
          },
          "type": {
            "type": "attr",
            "values": ["line", "circle"],
            "description": "the type of progress bar, default: line"
          },
          "stroke-width": {
            "type": "attr",
            "values": [],
            "description": "the width of progress bar, default: 6"
          },
          "text-inside": {
            "type": "attr",
            "values": [],
            "description": "whether to place the percentage inside progress bar, only works when type is 'line'"
          },
          "status": {
            "type": "attr",
            "values": ["success", "exception"],
            "description": "the current status of progress bar"
          },
          "color": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "show-text": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-radio": {
          "_html": {
            "": '<el-radio v-model="radio" label="${1:label}">$2</el-radio>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/radio](http://element.eleme.io/#/zh-CN/component/radio) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| label | Radio \u7684 value | string / number / boolean | \u2014 | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| border | \u662F\u5426\u663E\u793A\u8FB9\u6846 | boolean | \u2014 | false |\n| size | Radio \u7684\u5C3A\u5BF8\uFF0C\u4EC5\u5728 border \u4E3A\u771F\u65F6\u6709\u6548 | string | medium / small / mini | \u2014 |\n| name | \u539F\u751F name \u5C5E\u6027 | string | \u2014 | \u2014 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6 | \u9009\u4E2D\u7684 Radio label \u503C |",
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "border": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "native 'name' attribute"
          }
        },
        "el-radio-button": {
          "_html": {
            "": '<el-radio-button label="${1:label}"></el-radio-button>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/radio](http://element.eleme.io/#/zh-CN/component/radio) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| label | Radio \u7684 value | string / number | \u2014 | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| name | \u539F\u751F name \u5C5E\u6027 | string | \u2014 | \u2014 |",
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-radio-group": {
          "_html": {
            "": '<el-radio-group v-model="${1:model}">\n<el-radio :label="${2:label}">$3</el-radio>\n</el-radio-group>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/radio](http://element.eleme.io/#/zh-CN/component/radio) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| size | \u5355\u9009\u6846\u7EC4\u5C3A\u5BF8\uFF0C\u4EC5\u5BF9\u6309\u94AE\u5F62\u5F0F\u7684 Radio \u6216\u5E26\u6709\u8FB9\u6846\u7684 Radio \u6709\u6548 | string | medium / small / mini | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| text-color | \u6309\u94AE\u5F62\u5F0F\u7684 Radio \u6FC0\u6D3B\u65F6\u7684\u6587\u672C\u989C\u8272 | string | \u2014 | #ffffff |\n| fill | \u6309\u94AE\u5F62\u5F0F\u7684 Radio \u6FC0\u6D3B\u65F6\u7684\u586B\u5145\u8272\u548C\u8FB9\u6846\u8272 | string | \u2014 | #409EFF | \n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u7ED1\u5B9A\u503C\u53D8\u5316\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6 | \u9009\u4E2D\u7684 Radio label \u503C |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "fill": {
            "type": "attr",
            "values": [],
            "description": "border and background color when button is active"
          },
          "text-color": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-rate": {
          "_html": {
            "": '<el-rate v-model="$1"></el-rate>',
            ":color": `<el-rate
v-model="\${1:model}"
:colors="['#99A9BF', '#F7BA2A', '#FF9900']">
</el-rate>`,
            ":half": '<el-rate\nv-model="3.7"\ndisabled\nshow-score\ntext-color="#ff9900"\nscore-template="{value}">\n</el-rate>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/rate](http://element.eleme.io/#/zh-CN/component/rate) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| max | \u6700\u5927\u5206\u503C | number | \u2014 | 5 |\n| disabled | \u662F\u5426\u4E3A\u53EA\u8BFB | boolean | \u2014 | false |\n| allow-half | \u662F\u5426\u5141\u8BB8\u534A\u9009 | boolean | \u2014 | false |\n| low-threshold | \u4F4E\u5206\u548C\u4E2D\u7B49\u5206\u6570\u7684\u754C\u9650\u503C\uFF0C\u503C\u672C\u8EAB\u88AB\u5212\u5206\u5728\u4F4E\u5206\u4E2D | number | \u2014 | 2 |\n| high-threshold | \u9AD8\u5206\u548C\u4E2D\u7B49\u5206\u6570\u7684\u754C\u9650\u503C\uFF0C\u503C\u672C\u8EAB\u88AB\u5212\u5206\u5728\u9AD8\u5206\u4E2D | number | \u2014 | 4 |\n| colors | icon \u7684\u989C\u8272\u6570\u7EC4\uFF0C\u5171\u6709 3 \u4E2A\u5143\u7D20\uFF0C\u4E3A 3 \u4E2A\u5206\u6BB5\u6240\u5BF9\u5E94\u7684\u989C\u8272 | array | \u2014 | ['#F7BA2A', '#F7BA2A', '#F7BA2A'] |\n| void-color | \u672A\u9009\u4E2D icon \u7684\u989C\u8272 | string | \u2014 | #C6D1DE |\n| disabled-void-color | \u53EA\u8BFB\u65F6\u672A\u9009\u4E2D icon \u7684\u989C\u8272 | string | \u2014 | #EFF2F7 |\n| icon-classes | icon \u7684\u7C7B\u540D\u6570\u7EC4\uFF0C\u5171\u6709 3 \u4E2A\u5143\u7D20\uFF0C\u4E3A 3 \u4E2A\u5206\u6BB5\u6240\u5BF9\u5E94\u7684\u7C7B\u540D | array | \u2014 | ['el-icon-star-on', 'el-icon-star-on','el-icon-star-on'] |\n| void-icon-class | \u672A\u9009\u4E2D icon \u7684\u7C7B\u540D | string | \u2014 | el-icon-star-off |\n| disabled-void-icon-class | \u53EA\u8BFB\u65F6\u672A\u9009\u4E2D icon \u7684\u7C7B\u540D | string | \u2014 | el-icon-star-on |\n| show-text | \u662F\u5426\u663E\u793A\u8F85\u52A9\u6587\u5B57\uFF0C\u82E5\u4E3A\u771F\uFF0C\u5219\u4F1A\u4ECE texts \u6570\u7EC4\u4E2D\u9009\u53D6\u5F53\u524D\u5206\u6570\u5BF9\u5E94\u7684\u6587\u5B57\u5185\u5BB9 | boolean | \u2014 | false |\n| show-score | \u662F\u5426\u663E\u793A\u5F53\u524D\u5206\u6570\uFF0Cshow-score \u548C show-text \u4E0D\u80FD\u540C\u65F6\u4E3A\u771F | boolean | \u2014 | false |\n| text-color | \u8F85\u52A9\u6587\u5B57\u7684\u989C\u8272 | string | \u2014 | #1F2D3D |\n| texts | \u8F85\u52A9\u6587\u5B57\u6570\u7EC4 | array | \u2014 | ['\u6781\u5DEE', '\u5931\u671B', '\u4E00\u822C', '\u6EE1\u610F', '\u60CA\u559C'] |\n| score-template | \u5206\u6570\u663E\u793A\u6A21\u677F | string | \u2014 | {value} |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u5206\u503C\u6539\u53D8\u65F6\u89E6\u53D1 | \u6539\u53D8\u540E\u7684\u5206\u503C |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "max": {
            "type": "attr",
            "values": [],
            "description": "max rating score, default: 5"
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "allow-half": {
            "type": "attr",
            "values": [],
            "description": "whether picking half start is allowed"
          },
          "low-threshold": {
            "type": "attr",
            "values": [],
            "description": "hreshold value between low and medium level. The value itself will be included in low level, default: 2"
          },
          "high-threshold": {
            "type": "attr",
            "values": [],
            "description": "threshold value between medium and high level. The value itself will be included in high level, default: 4"
          },
          "colors": {
            "type": "attr",
            "values": [],
            "description": "color array for icons. It should have 3 elements, each of which corresponds with a score level, default: ['#F7BA2A', '#F7BA2A', '#F7BA2A']"
          },
          "void-color": {
            "type": "attr",
            "values": [],
            "description": "color of unselected icons, default: #C6D1DE"
          },
          "disabled-void-color": {
            "type": "attr",
            "values": [],
            "description": "color of unselected read-only icons, default: #EFF2F7"
          },
          "icon-classes": {
            "type": "attr",
            "values": [],
            "description": "array of class names of icons. It should have 3 elements, each of which corresponds with a score level, default: ['el-icon-star-on', 'el-icon-star-on','el-icon-star-on']"
          },
          "void-icon-class": {
            "type": "attr",
            "values": [],
            "description": "class name of unselected icons, default: el-icon-star-off"
          },
          "disabled-void-icon-class": {
            "type": "attr",
            "values": [],
            "description": "class name of unselected read-only icons, default: el-icon-star-on"
          },
          "show-text": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "show-score": {
            "type": "attr",
            "values": [],
            "description": "whether to display current score. show-score and show-text cannot be true at the same time"
          },
          "text-color": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "texts": {
            "type": "attr",
            "values": [],
            "description": "text array"
          },
          "score-template": {
            "type": "attr",
            "values": [],
            "description": "score template, default: {value}"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-row": {
          "_html": {
            "": '<el-row :gutter="${1:10}">\n<el-col :span="${2:6}">$3</el-col>\n</el-row>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/layout](http://element.eleme.io/#/zh-CN/component/layout) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| gutter | \u6805\u683C\u95F4\u9694 | number | \u2014 | 0 |\n| type | \u5E03\u5C40\u6A21\u5F0F\uFF0C\u53EF\u9009 flex\uFF0C\u73B0\u4EE3\u6D4F\u89C8\u5668\u4E0B\u6709\u6548 | string | \u2014 | \u2014 |\n| justify | flex \u5E03\u5C40\u4E0B\u7684\u6C34\u5E73\u6392\u5217\u65B9\u5F0F | string | start/end/center/space-around/space-between | start |\n| align | flex \u5E03\u5C40\u4E0B\u7684\u5782\u76F4\u6392\u5217\u65B9\u5F0F | string | top/middle/bottom | top |\n| tag | \u81EA\u5B9A\u4E49\u5143\u7D20\u6807\u7B7E | string | * | div |",
          "gutter": {
            "type": "attr",
            "values": [],
            "description": "grid spacing"
          },
          "type": {
            "type": "attr",
            "values": ["flex"],
            "description": "layout mode, you can use 'flex', works in modern browsers"
          },
          "justify": {
            "type": "attr",
            "values": ["start", "end", "center", "space-around", "space-between"],
            "description": "horizontal alignment of flex layout"
          },
          "align": {
            "type": "attr",
            "values": ["top", "middle", "bottom"],
            "description": "vertical alignment of flex layout"
          },
          "tag": {
            "type": "attr",
            "values": [],
            "description": "custom element tag"
          }
        },
        "el-select": {
          "_html": {
            "": '<el-select v-model="model" placeholder="">\n<el-option\nv-for="item in options"\n:key="item.value"\n:label="item.label"\n:value="item.value">\n</el-option>\n</el-select>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/select](http://element.eleme.io/#/zh-CN/component/select) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| multiple | \u662F\u5426\u591A\u9009 | boolean | \u2014 | false |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| value-key | \u4F5C\u4E3A value \u552F\u4E00\u6807\u8BC6\u7684\u952E\u540D\uFF0C\u7ED1\u5B9A\u503C\u4E3A\u5BF9\u8C61\u7C7B\u578B\u65F6\u5FC5\u586B | string | \u2014 | value |\n| size | \u8F93\u5165\u6846\u5C3A\u5BF8 | string | medium/small/mini | \u2014 |\n| clearable | \u5355\u9009\u65F6\u662F\u5426\u53EF\u4EE5\u6E05\u7A7A\u9009\u9879 | boolean | \u2014 | false |\n| collapse-tags | \u591A\u9009\u65F6\u662F\u5426\u5C06\u9009\u4E2D\u503C\u6309\u6587\u5B57\u7684\u5F62\u5F0F\u5C55\u793A | boolean | \u2014 | false |\n| multiple-limit | \u591A\u9009\u65F6\u7528\u6237\u6700\u591A\u53EF\u4EE5\u9009\u62E9\u7684\u9879\u76EE\u6570\uFF0C\u4E3A 0 \u5219\u4E0D\u9650\u5236 | number | \u2014 | 0 |\n| name | select input \u7684 name \u5C5E\u6027 | string | \u2014 | \u2014 |\n| autocomplete | select input \u7684 autocomplete \u5C5E\u6027 | string | \u2014 | off |\n| auto-complete | \u4E0B\u4E2A\u4E3B\u7248\u672C\u5F03\u7528 | string | \u2014 | off |\n| placeholder | \u5360\u4F4D\u7B26 | string | \u2014 | \u8BF7\u9009\u62E9 |\n| filterable | \u662F\u5426\u53EF\u641C\u7D22 | boolean | \u2014 | false |\n| allow-create | \u662F\u5426\u5141\u8BB8\u7528\u6237\u521B\u5EFA\u65B0\u6761\u76EE\uFF0C\u9700\u914D\u5408 filterable \u4F7F\u7528 | boolean | \u2014 | false |\n| filter-method | \u81EA\u5B9A\u4E49\u641C\u7D22\u65B9\u6CD5 | function | \u2014 | \u2014 |\n| remote | \u662F\u5426\u4E3A\u8FDC\u7A0B\u641C\u7D22 | boolean | \u2014 | false |\n| remote-method | \u8FDC\u7A0B\u641C\u7D22\u65B9\u6CD5 | function | \u2014 | \u2014 |\n| loading | \u662F\u5426\u6B63\u5728\u4ECE\u8FDC\u7A0B\u83B7\u53D6\u6570\u636E | boolean | \u2014 | false |\n| loading-text | \u8FDC\u7A0B\u52A0\u8F7D\u65F6\u663E\u793A\u7684\u6587\u5B57 | string | \u2014 | \u52A0\u8F7D\u4E2D |\n| no-match-text | \u641C\u7D22\u6761\u4EF6\u65E0\u5339\u914D\u65F6\u663E\u793A\u7684\u6587\u5B57 | string | \u2014 | \u65E0\u5339\u914D\u6570\u636E |\n| no-data-text | \u9009\u9879\u4E3A\u7A7A\u65F6\u663E\u793A\u7684\u6587\u5B57 | string | \u2014 | \u65E0\u6570\u636E |\n| popper-class | Select \u4E0B\u62C9\u6846\u7684\u7C7B\u540D | string | \u2014 | \u2014 |\n| reserve-keyword | \u591A\u9009\u4E14\u53EF\u641C\u7D22\u65F6\uFF0C\u662F\u5426\u5728\u9009\u4E2D\u4E00\u4E2A\u9009\u9879\u540E\u4FDD\u7559\u5F53\u524D\u7684\u641C\u7D22\u5173\u952E\u8BCD | boolean | \u2014 | false |\n| default-first-option | \u5728\u8F93\u5165\u6846\u6309\u4E0B\u56DE\u8F66\uFF0C\u9009\u62E9\u7B2C\u4E00\u4E2A\u5339\u914D\u9879\u3002\u9700\u914D\u5408 filterable \u6216 remote \u4F7F\u7528 | boolean | - | false |\n| popper-append-to-body | \u662F\u5426\u5C06\u5F39\u51FA\u6846\u63D2\u5165\u81F3 body \u5143\u7D20\u3002\u5728\u5F39\u51FA\u6846\u7684\u5B9A\u4F4D\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u53EF\u5C06\u8BE5\u5C5E\u6027\u8BBE\u7F6E\u4E3A false | boolean | - | true |\n| automatic-dropdown | \u5BF9\u4E8E\u4E0D\u53EF\u641C\u7D22\u7684 Select\uFF0C\u662F\u5426\u5728\u8F93\u5165\u6846\u83B7\u5F97\u7126\u70B9\u540E\u81EA\u52A8\u5F39\u51FA\u9009\u9879\u83DC\u5355 | boolean | - | false |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u9009\u4E2D\u503C\u53D1\u751F\u53D8\u5316\u65F6\u89E6\u53D1 | \u76EE\u524D\u7684\u9009\u4E2D\u503C |\n| visible-change | \u4E0B\u62C9\u6846\u51FA\u73B0/\u9690\u85CF\u65F6\u89E6\u53D1 | \u51FA\u73B0\u5219\u4E3A true\uFF0C\u9690\u85CF\u5219\u4E3A false |\n| remove-tag | \u591A\u9009\u6A21\u5F0F\u4E0B\u79FB\u9664tag\u65F6\u89E6\u53D1 | \u79FB\u9664\u7684tag\u503C |\n| clear | \u53EF\u6E05\u7A7A\u7684\u5355\u9009\u6A21\u5F0F\u4E0B\u7528\u6237\u70B9\u51FB\u6E05\u7A7A\u6309\u94AE\u65F6\u89E6\u53D1 | \u2014 |\n| blur | \u5F53 input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1 | (event: Event) |\n| focus | \u5F53 input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1 | (event: Event) |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| \u2014 | Option \u7EC4\u4EF6\u5217\u8868 |\n| prefix | Select \u7EC4\u4EF6\u5934\u90E8\u5185\u5BB9 |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "multiple": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "value-key": {
            "type": "attr",
            "values": [],
            "description": "unique identity key name for value, required when value is an object"
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "clearable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "collapse-tags": {
            "type": "attr",
            "values": [],
            "description": "whether to collapse tags to a text when multiple selecting"
          },
          "multiple-limit": {
            "type": "attr",
            "values": [],
            "description": "maximum number of options user can select when multiple is true. No limit when set to 0"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "native 'name' attribute"
          },
          "auto-complete": {
            "type": "attr",
            "values": ["one", "off"],
            "description": ""
          },
          "filterable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "allow-create": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "filter-method": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "remote": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "remote-method": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "loading": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "loading-text": {
            "type": "attr",
            "values": [],
            "description": "displayed text while loading data from server"
          },
          "no-match-text": {
            "type": "attr",
            "values": [],
            "description": "displayed text when no data matches the filtering query"
          },
          "no-data-text": {
            "type": "attr",
            "values": [],
            "description": "displayed text when there is no options"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "reserve-keyword": {
            "type": "attr",
            "values": [],
            "description": "when 'multiple' and 'filter' is true, whether to reserve current keyword after selecting an option"
          },
          "default-first-option": {
            "type": "attr",
            "values": [],
            "description": "select first matching option on enter key. Use with 'filterable' or 'remote'"
          },
          "popper-append-to-body": {
            "type": "attr",
            "values": [],
            "description": "whether to append the popper menu to body. If the positioning of the popper is wrong, you can try to set this prop to false, default: true"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "visible-change": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "remote-tag": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "clear": {
            "type": "event",
            "values": [],
            "description": "triggers when the clear icon is clicked in a clearable Select"
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-slider": {
          "_html": {
            "": '<el-slider v-model="${1:30}"></el-slider>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/slider](http://element.eleme.io/#/zh-CN/component/slider) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| min | \u6700\u5C0F\u503C | number | \u2014 | 0 |\n| max | \u6700\u5927\u503C | number | \u2014 | 100 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| step | \u6B65\u957F | number | \u2014 | 1 |\n| show-input | \u662F\u5426\u663E\u793A\u8F93\u5165\u6846\uFF0C\u4EC5\u5728\u975E\u8303\u56F4\u9009\u62E9\u65F6\u6709\u6548 | boolean | \u2014 | false |\n| show-input-controls | \u5728\u663E\u793A\u8F93\u5165\u6846\u7684\u60C5\u51B5\u4E0B\uFF0C\u662F\u5426\u663E\u793A\u8F93\u5165\u6846\u7684\u63A7\u5236\u6309\u94AE | boolean | \u2014 | true |\n| input-size | \u8F93\u5165\u6846\u7684\u5C3A\u5BF8 | string | large / medium / small / mini | small |\n| show-stops | \u662F\u5426\u663E\u793A\u95F4\u65AD\u70B9 | boolean | \u2014 | false |\n| show-tooltip | \u662F\u5426\u663E\u793A tooltip | boolean | \u2014 | true |\n| format-tooltip | \u683C\u5F0F\u5316 tooltip message | function(value) | \u2014 | \u2014 |\n| range | \u662F\u5426\u4E3A\u8303\u56F4\u9009\u62E9 | boolean | \u2014 | false |\n| vertical | \u662F\u5426\u7AD6\u5411\u6A21\u5F0F | boolean | \u2014 | false |\n| height | Slider \u9AD8\u5EA6\uFF0C\u7AD6\u5411\u6A21\u5F0F\u65F6\u5FC5\u586B | string | \u2014 | \u2014 |\n| label | \u5C4F\u5E55\u9605\u8BFB\u5668\u6807\u7B7E | string | \u2014 | \u2014 |\n| debounce | \u8F93\u5165\u65F6\u7684\u53BB\u6296\u5EF6\u8FDF\uFF0C\u6BEB\u79D2\uFF0C\u4EC5\u5728show-input\u7B49\u4E8Etrue\u65F6\u6709\u6548 | number | \u2014 | 300 |\n| tooltip-class | tooltip \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D | string | \u2014 | \u2014 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u503C\u6539\u53D8\u65F6\u89E6\u53D1\uFF08\u4F7F\u7528\u9F20\u6807\u62D6\u66F3\u65F6\uFF0C\u53EA\u5728\u677E\u5F00\u9F20\u6807\u540E\u89E6\u53D1\uFF09 | \u6539\u53D8\u540E\u7684\u503C |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "min": {
            "type": "attr",
            "values": [],
            "description": "minimum value, defalult: 0"
          },
          "max": {
            "type": "attr",
            "values": [],
            "description": "maximum value, defalult: 100"
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "step": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "show-input": {
            "type": "attr",
            "values": [],
            "description": "whether to display an input box, works when 'range' is false, default: false"
          },
          "show-input-controls": {
            "type": "attr",
            "values": [],
            "description": "whether to display control buttons when 'show-input' is true, default: true"
          },
          "input-size": {
            "type": "attr",
            "values": ["large", "medium", "small", "mini"],
            "description": "size of the input box, default: small"
          },
          "show-stops": {
            "type": "attr",
            "values": [],
            "description": "whether to display breakpoints, default: false"
          },
          "show-tooltip": {
            "type": "attr",
            "values": [],
            "description": "whether to display tooltip value, default: true"
          },
          "format-tooltip": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "range": {
            "type": "attr",
            "values": [],
            "description": "whether to select a range"
          },
          "vertical": {
            "type": "attr",
            "values": [],
            "description": "defaults: false"
          },
          "height": {
            "type": "attr",
            "values": [],
            "description": "Slider height, required in vertical mode"
          },
          "debounce": {
            "type": "attr",
            "values": [],
            "description": "debounce delay when typing, in millisecond, works when 'show-input' is true, default: 300"
          },
          "tooltip-class": {
            "type": "attr",
            "values": [],
            "description": "custom class name for the tooltip"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-steps": {
          "_html": {
            "": '<el-steps :active="active" finish-status="success">\n<el-step title="step1"></el-step>\n</el-steps>',
            ":simple": '<el-steps simple>\n<el-step title="step1"></el-step>\n</el-steps>',
            ":icon": '<el-steps :active="active" finish-status="success">\n<el-step title="step1" icon="el-icon-edit"></el-step>\n</el-steps>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/steps](http://element.eleme.io/#/zh-CN/component/steps) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| space | \u6BCF\u4E2A step \u7684\u95F4\u8DDD\uFF0C\u4E0D\u586B\u5199\u5C06\u81EA\u9002\u5E94\u95F4\u8DDD\u3002\u652F\u6301\u767E\u5206\u6BD4\u3002 | number / string | \u2014 | \u2014 |\n| direction | \u663E\u793A\u65B9\u5411 | string | vertical/horizontal | horizontal |\n| active | \u8BBE\u7F6E\u5F53\u524D\u6FC0\u6D3B\u6B65\u9AA4 | number | \u2014 | 0 |\n| process-status | \u8BBE\u7F6E\u5F53\u524D\u6B65\u9AA4\u7684\u72B6\u6001 | string | wait / process / finish / error / success | process |\n| finish-status | \u8BBE\u7F6E\u7ED3\u675F\u6B65\u9AA4\u7684\u72B6\u6001 | string | wait / process / finish / error / success | finish |\n| align-center | \u8FDB\u884C\u5C45\u4E2D\u5BF9\u9F50 | boolean | - | false |\n| simple | \u662F\u5426\u5E94\u7528\u7B80\u6D01\u98CE\u683C | boolean | - | false |",
          "space": {
            "type": "attr",
            "values": [],
            "description": "the spacing of each step, will be responsive if omitted. Support percentage."
          },
          "active": {
            "type": "attr",
            "values": [],
            "description": "current activation step"
          },
          "direction": {
            "type": "attr",
            "values": ["vertical", "horizontal"],
            "description": "display direction, default: horizontal"
          },
          "process-status": {
            "type": "attr",
            "values": ["wait", "process", "finish", "error", "success"],
            "description": "status of current step, default: process"
          },
          "finish-status": {
            "type": "attr",
            "values": ["wait", "process", "finish", "error", "success"],
            "description": "status of end step, default: finish"
          },
          "align-center": {
            "type": "attr",
            "values": [],
            "description": "whether step description is centered"
          },
          "center": {
            "type": "attr",
            "values": [],
            "description": "center whole Steps component"
          },
          "simple": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-switch": {
          "_html": {
            "": '<el-switch v-model="${1:model}" active-color="${2:#13ce66}" inactive-color="${3:#ff4949}"></el-switch>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/switch](http://element.eleme.io/#/zh-CN/component/switch) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| width | switch \u7684\u5BBD\u5EA6\uFF08\u50CF\u7D20\uFF09 | number | \u2014 | 40 |\n| active-icon-class | switch \u6253\u5F00\u65F6\u6240\u663E\u793A\u56FE\u6807\u7684\u7C7B\u540D\uFF0C\u8BBE\u7F6E\u6B64\u9879\u4F1A\u5FFD\u7565 active-text | string | \u2014 | \u2014 |\n| inactive-icon-class | switch \u5173\u95ED\u65F6\u6240\u663E\u793A\u56FE\u6807\u7684\u7C7B\u540D\uFF0C\u8BBE\u7F6E\u6B64\u9879\u4F1A\u5FFD\u7565 inactive-text | string | \u2014 | \u2014 |\n| active-text | switch \u6253\u5F00\u65F6\u7684\u6587\u5B57\u63CF\u8FF0 | string | \u2014 | \u2014 |\n| inactive-text | switch \u5173\u95ED\u65F6\u7684\u6587\u5B57\u63CF\u8FF0 | string | \u2014 | \u2014 |\n| active-value | switch \u6253\u5F00\u65F6\u7684\u503C | boolean / string / number | \u2014 | true |\n| inactive-value | switch \u5173\u95ED\u65F6\u7684\u503C | boolean / string / number | \u2014 | false |\n| active-color | switch \u6253\u5F00\u65F6\u7684\u80CC\u666F\u8272 | string | \u2014 | #409EFF |\n| inactive-color | switch \u5173\u95ED\u65F6\u7684\u80CC\u666F\u8272 | string | \u2014 | #C0CCDA |\n| name | switch \u5BF9\u5E94\u7684 name \u5C5E\u6027 | string | \u2014 | \u2014 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | switch \u72B6\u6001\u53D1\u751F\u53D8\u5316\u65F6\u7684\u56DE\u8C03\u51FD\u6570 | \u65B0\u72B6\u6001\u7684\u503C |\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| focus | \u4F7F Switch \u83B7\u53D6\u7126\u70B9 | - |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "active-icon-class": {
            "type": "attr",
            "values": [],
            "description": "class name of the icon displayed when in on state, overrides 'active-text', version >= 2"
          },
          "inactive-icon-class": {
            "type": "attr",
            "values": [],
            "description": "class name of the icon displayed when in off state, overrides 'inactive-text', version >= 2"
          },
          "active-text": {
            "type": "attr",
            "values": [],
            "description": "text displayed when in on state, version >= 2"
          },
          "inactive-text": {
            "type": "attr",
            "values": [],
            "description": "text displayed when in off state, version >= 2"
          },
          "active-value": {
            "type": "attr",
            "values": [],
            "description": "switch value when in on state, default: true, version >= 2"
          },
          "inactive-value": {
            "type": "attr",
            "values": [],
            "description": "switch value when in off state, default: false, version >= 2"
          },
          "active-color": {
            "type": "attr",
            "values": [],
            "description": "background color when in on state, default: #409EFF, version >= 2"
          },
          "inactive-color": {
            "type": "attr",
            "values": [],
            "description": "background color when in off state, default: #C0CCDA, version >= 2"
          },
          "on-icon-class": {
            "type": "attr",
            "values": [],
            "description": "class name of the icon displayed when in on state, overrides 'on-text', version < 2"
          },
          "off-icon-class": {
            "type": "attr",
            "values": [],
            "description": "class name of the icon displayed when in off state, overrides 'off-text', version < 2"
          },
          "on-text": {
            "type": "attr",
            "values": [],
            "description": "text displayed when in on state, version < 2"
          },
          "off-text": {
            "type": "attr",
            "values": [],
            "description": "text displayed when in off state, version < 2"
          },
          "on-value": {
            "type": "attr",
            "values": [],
            "description": "switch value when in on state, default: true, version < 2"
          },
          "off-value": {
            "type": "attr",
            "values": [],
            "description": "switch value when in off state, default: false, version < 2"
          },
          "on-color": {
            "type": "attr",
            "values": [],
            "description": "background color when in on state, default: #20A0FF, version < 2"
          },
          "off-color": {
            "type": "attr",
            "values": [],
            "description": "background color when in off state, default: #C0CCDA, version < 2"
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "input name of Switch"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-tabs": {
          "_html": {
            "": '<el-tabs v-model="${1:activeName}" @tab-click="${2:handleClick}">\n<el-tab-pane label="${3:label}" name="${4:name}">$5</el-tab-pane>\n</el-tabs>',
            ":card": '<el-tabs type="card" v-model="${1:activeName}" @tab-click="${2:handleClick}">\n<el-tab-pane label="${3:label}" name="${4:name}">$5</el-tab-pane>\n</el-tabs>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/tabs](http://element.eleme.io/#/zh-CN/component/tabs) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| type | \u98CE\u683C\u7C7B\u578B | string | card/border-card | \u2014 |\n| closable | \u6807\u7B7E\u662F\u5426\u53EF\u5173\u95ED | boolean | \u2014 | false |\n| addable | \u6807\u7B7E\u662F\u5426\u53EF\u589E\u52A0 | boolean | \u2014 | false |\n| editable | \u6807\u7B7E\u662F\u5426\u540C\u65F6\u53EF\u589E\u52A0\u548C\u5173\u95ED | boolean | \u2014 | false |\n| value | \u7ED1\u5B9A\u503C\uFF0C\u9009\u4E2D\u9009\u9879\u5361\u7684 name | string | \u2014 | \u7B2C\u4E00\u4E2A\u9009\u9879\u5361\u7684 name |\n| tab-position | \u9009\u9879\u5361\u6240\u5728\u4F4D\u7F6E | string | top/right/bottom/left | top |\n| stretch | \u6807\u7B7E\u7684\u5BBD\u5EA6\u662F\u5426\u81EA\u6491\u5F00 | boolean | - | false |\n| before-leave | \u5207\u6362\u6807\u7B7E\u4E4B\u524D\u7684\u94A9\u5B50\uFF0C\u82E5\u8FD4\u56DE false \u6216\u8005\u8FD4\u56DE Promise \u4E14\u88AB reject\uFF0C\u5219\u963B\u6B62\u5207\u6362\u3002 | Function(activeName, oldActiveName) | \u2014 | \u2014 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| tab-click | tab \u88AB\u9009\u4E2D\u65F6\u89E6\u53D1 | \u88AB\u9009\u4E2D\u7684\u6807\u7B7E tab \u5B9E\u4F8B |\n| tab-remove | \u70B9\u51FB tab \u79FB\u9664\u6309\u94AE\u540E\u89E6\u53D1 | \u88AB\u5220\u9664\u7684\u6807\u7B7E\u7684 name |\n| tab-add | \u70B9\u51FB tabs \u7684\u65B0\u589E\u6309\u94AE\u540E\u89E6\u53D1 | \u2014 |\n| edit | \u70B9\u51FB tabs \u7684\u65B0\u589E\u6309\u94AE\u6216 tab \u88AB\u5173\u95ED\u540E\u89E6\u53D1 | (targetName, action) |",
          "type": {
            "type": "attr",
            "values": ["card", "border-card"],
            "description": "type of Tab"
          },
          "closable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "addable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "editable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "activate-name": {
            "type": "attr",
            "values": [],
            "description": "name of the selected tab(deprecated)"
          },
          "tab-position": {
            "type": "attr",
            "values": ["top", "right", "bottom", "left"],
            "description": "position of tabs, default: top"
          },
          "tab-click": {
            "type": "event",
            "values": [],
            "description": "triggers when a tab is clicked"
          },
          "tab-remove": {
            "type": "event",
            "values": [],
            "description": "triggers when tab-remove button is clicked"
          },
          "tab-add": {
            "type": "event",
            "values": [],
            "description": "triggers when tab-add button is clicked"
          },
          "edit": {
            "type": "event",
            "values": [],
            "description": "triggers when tab-add button or tab-remove is clicked"
          }
        },
        "el-table": {
          "_html": {
            "": '<el-table\n:data="${1:data}"\nstyle="width: 100%">\n<el-table-column\nprop="${2:prop}"\nlabel="${3:label}"\nwidth="${4:width}">\n</el-table-column>\n</el-table>'
          },
          "_doc": '[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/table](http://element.eleme.io/#/zh-CN/component/table) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| data | \u663E\u793A\u7684\u6570\u636E | array | \u2014 | \u2014 |\n| height | Table \u7684\u9AD8\u5EA6\uFF0C\u9ED8\u8BA4\u4E3A\u81EA\u52A8\u9AD8\u5EA6\u3002\u5982\u679C height \u4E3A number \u7C7B\u578B\uFF0C\u5355\u4F4D px\uFF1B\u5982\u679C height \u4E3A string \u7C7B\u578B\uFF0C\u5219\u8FD9\u4E2A\u9AD8\u5EA6\u4F1A\u8BBE\u7F6E\u4E3A Table \u7684 style.height \u7684\u503C\uFF0CTable \u7684\u9AD8\u5EA6\u4F1A\u53D7\u63A7\u4E8E\u5916\u90E8\u6837\u5F0F\u3002 | string/number | \u2014 | \u2014 |\n| max-height | Table \u7684\u6700\u5927\u9AD8\u5EA6 | string/number | \u2014 | \u2014 |\n| stripe | \u662F\u5426\u4E3A\u6591\u9A6C\u7EB9 table | boolean | \u2014 | false |\n| border | \u662F\u5426\u5E26\u6709\u7EB5\u5411\u8FB9\u6846 | boolean | \u2014 | false |\n| size | Table \u7684\u5C3A\u5BF8 | string | medium / small / mini | \u2014 |\n| fit | \u5217\u7684\u5BBD\u5EA6\u662F\u5426\u81EA\u6491\u5F00 | boolean | \u2014 | true |\n| show-header | \u662F\u5426\u663E\u793A\u8868\u5934 | boolean | \u2014 | true |\n| highlight-current-row | \u662F\u5426\u8981\u9AD8\u4EAE\u5F53\u524D\u884C | boolean | \u2014 | false |\n| current-row-key | \u5F53\u524D\u884C\u7684 key\uFF0C\u53EA\u5199\u5C5E\u6027 | String,Number | \u2014 | \u2014 |\n| row-class-name | \u884C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u884C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002 | Function({row, rowIndex})/String | \u2014 | \u2014 |\n| row-style | \u884C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u884C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002 | Function({row, rowIndex})/Object | \u2014 | \u2014 |\n| cell-class-name | \u5355\u5143\u683C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002 | Function({row, column, rowIndex, columnIndex})/String | \u2014 | \u2014 |\n| cell-style | \u5355\u5143\u683C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002 | Function({row, column, rowIndex, columnIndex})/Object | \u2014 | \u2014 |\n| header-row-class-name | \u8868\u5934\u884C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u8868\u5934\u884C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002 | Function({row, rowIndex})/String | \u2014 | \u2014 |\n| header-row-style | \u8868\u5934\u884C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u8868\u5934\u884C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002 | Function({row, rowIndex})/Object | \u2014 | \u2014 |\n| header-cell-class-name | \u8868\u5934\u5355\u5143\u683C\u7684 className \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u4E3A\u6240\u6709\u8868\u5934\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u4E2A\u56FA\u5B9A\u7684 className\u3002 | Function({row, column, rowIndex, columnIndex})/String | \u2014 | \u2014 |\n| header-cell-style | \u8868\u5934\u5355\u5143\u683C\u7684 style \u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u7684 Object \u4E3A\u6240\u6709\u8868\u5934\u5355\u5143\u683C\u8BBE\u7F6E\u4E00\u6837\u7684 Style\u3002 | Function({row, column, rowIndex, columnIndex})/Object | \u2014 | \u2014 |\n| row-key | \u884C\u6570\u636E\u7684 Key\uFF0C\u7528\u6765\u4F18\u5316 Table \u7684\u6E32\u67D3\uFF1B\u5728\u4F7F\u7528 reserve-selection \u529F\u80FD\u7684\u60C5\u51B5\u4E0B\uFF0C\u8BE5\u5C5E\u6027\u662F\u5FC5\u586B\u7684\u3002\u7C7B\u578B\u4E3A String \u65F6\uFF0C\u652F\u6301\u591A\u5C42\u8BBF\u95EE\uFF1Auser.info.id\uFF0C\u4F46\u4E0D\u652F\u6301 user.info[0].id\uFF0C\u6B64\u79CD\u60C5\u51B5\u8BF7\u4F7F\u7528 Function\u3002 | Function(row)/String | \u2014 | \u2014 |\n| empty-text | \u7A7A\u6570\u636E\u65F6\u663E\u793A\u7684\u6587\u672C\u5185\u5BB9\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 slot="empty" \u8BBE\u7F6E | String | \u2014 | \u6682\u65E0\u6570\u636E |\n| default-expand-all | \u662F\u5426\u9ED8\u8BA4\u5C55\u5F00\u6240\u6709\u884C\uFF0C\u5F53 Table \u4E2D\u5B58\u5728 type="expand" \u7684 Column \u7684\u65F6\u5019\u6709\u6548 | Boolean | \u2014 | false |\n| expand-row-keys | \u53EF\u4EE5\u901A\u8FC7\u8BE5\u5C5E\u6027\u8BBE\u7F6E Table \u76EE\u524D\u7684\u5C55\u5F00\u884C\uFF0C\u9700\u8981\u8BBE\u7F6E row-key \u5C5E\u6027\u624D\u80FD\u4F7F\u7528\uFF0C\u8BE5\u5C5E\u6027\u4E3A\u5C55\u5F00\u884C\u7684 keys \u6570\u7EC4\u3002 | Array | \u2014 | |\n| default-sort | \u9ED8\u8BA4\u7684\u6392\u5E8F\u5217\u7684 prop \u548C\u987A\u5E8F\u3002\u5B83\u7684prop\u5C5E\u6027\u6307\u5B9A\u9ED8\u8BA4\u7684\u6392\u5E8F\u7684\u5217\uFF0Corder\u6307\u5B9A\u9ED8\u8BA4\u6392\u5E8F\u7684\u987A\u5E8F | Object | order: ascending, descending | \u5982\u679C\u53EA\u6307\u5B9A\u4E86prop, \u6CA1\u6709\u6307\u5B9Aorder, \u5219\u9ED8\u8BA4\u987A\u5E8F\u662Fascending |\n| tooltip-effect | tooltip effect \u5C5E\u6027 | String | dark/light | |\n| show-summary | \u662F\u5426\u5728\u8868\u5C3E\u663E\u793A\u5408\u8BA1\u884C | Boolean | \u2014 | false |\n| sum-text | \u5408\u8BA1\u884C\u7B2C\u4E00\u5217\u7684\u6587\u672C | String | \u2014 | \u5408\u8BA1 |\n| summary-method | \u81EA\u5B9A\u4E49\u7684\u5408\u8BA1\u8BA1\u7B97\u65B9\u6CD5 | Function({ columns, data }) | \u2014 | \u2014 |\n| span-method | \u5408\u5E76\u884C\u6216\u5217\u7684\u8BA1\u7B97\u65B9\u6CD5 | Function({ row, column, rowIndex, columnIndex }) | \u2014 | \u2014 |\n| select-on-indeterminate | \u5728\u591A\u9009\u8868\u683C\u4E2D\uFF0C\u5F53\u4EC5\u6709\u90E8\u5206\u884C\u88AB\u9009\u4E2D\u65F6\uFF0C\u70B9\u51FB\u8868\u5934\u7684\u591A\u9009\u6846\u65F6\u7684\u884C\u4E3A\u3002\u82E5\u4E3A true\uFF0C\u5219\u9009\u4E2D\u6240\u6709\u884C\uFF1B\u82E5\u4E3A false\uFF0C\u5219\u53D6\u6D88\u9009\u62E9\u6240\u6709\u884C | Boolean | \u2014 | true |\n\n| \u4E8B\u4EF6\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| select | \u5F53\u7528\u6237\u624B\u52A8\u52FE\u9009\u6570\u636E\u884C\u7684 Checkbox \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6 | selection, row |\n| select-all | \u5F53\u7528\u6237\u624B\u52A8\u52FE\u9009\u5168\u9009 Checkbox \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6 | selection |\n| selection-change | \u5F53\u9009\u62E9\u9879\u53D1\u751F\u53D8\u5316\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | selection |\n| cell-mouse-enter | \u5F53\u5355\u5143\u683C hover \u8FDB\u5165\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | row, column, cell, event |\n| cell-mouse-leave | \u5F53\u5355\u5143\u683C hover \u9000\u51FA\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | row, column, cell, event |\n| cell-click | \u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | row, column, cell, event |\n| cell-dblclick | \u5F53\u67D0\u4E2A\u5355\u5143\u683C\u88AB\u53CC\u51FB\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | row, column, cell, event |\n| row-click | \u5F53\u67D0\u4E00\u884C\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | row, event, column |\n| row-contextmenu | \u5F53\u67D0\u4E00\u884C\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | row, event |\n| row-dblclick | \u5F53\u67D0\u4E00\u884C\u88AB\u53CC\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | row, event |\n| header-click | \u5F53\u67D0\u4E00\u5217\u7684\u8868\u5934\u88AB\u70B9\u51FB\u65F6\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | column, event |\n| header-contextmenu | \u5F53\u67D0\u4E00\u5217\u7684\u8868\u5934\u88AB\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u65F6\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | column, event |\n| sort-change | \u5F53\u8868\u683C\u7684\u6392\u5E8F\u6761\u4EF6\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | { column, prop, order } |\n| filter-change | \u5F53\u8868\u683C\u7684\u7B5B\u9009\u6761\u4EF6\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6\uFF0C\u53C2\u6570\u7684\u503C\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u7684 key \u662F column \u7684 columnKey\uFF0C\u5BF9\u5E94\u7684 value \u4E3A\u7528\u6237\u9009\u62E9\u7684\u7B5B\u9009\u6761\u4EF6\u7684\u6570\u7EC4\u3002 | filters |\n| current-change | \u5F53\u8868\u683C\u7684\u5F53\u524D\u884C\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6\uFF0C\u5982\u679C\u8981\u9AD8\u4EAE\u5F53\u524D\u884C\uFF0C\u8BF7\u6253\u5F00\u8868\u683C\u7684 highlight-current-row \u5C5E\u6027 | currentRow, oldCurrentRow |\n| header-dragend | \u5F53\u62D6\u52A8\u8868\u5934\u6539\u53D8\u4E86\u5217\u7684\u5BBD\u5EA6\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | newWidth, oldWidth, column, event |\n| expand-change | \u5F53\u7528\u6237\u5BF9\u67D0\u4E00\u884C\u5C55\u5F00\u6216\u8005\u5173\u95ED\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u8BE5\u4E8B\u4EF6 | row, expandedRows |\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| clearSelection | \u7528\u4E8E\u591A\u9009\u8868\u683C\uFF0C\u6E05\u7A7A\u7528\u6237\u7684\u9009\u62E9 | \u2014 |\n| toggleRowSelection | \u7528\u4E8E\u591A\u9009\u8868\u683C\uFF0C\u5207\u6362\u67D0\u4E00\u884C\u7684\u9009\u4E2D\u72B6\u6001\uFF0C\u5982\u679C\u4F7F\u7528\u4E86\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u5219\u662F\u8BBE\u7F6E\u8FD9\u4E00\u884C\u9009\u4E2D\u4E0E\u5426\uFF08selected \u4E3A true \u5219\u9009\u4E2D\uFF09 | row, selected |\n| toggleAllSelection | \u7528\u4E8E\u591A\u9009\u8868\u683C\uFF0C\u5207\u6362\u6240\u6709\u884C\u7684\u9009\u4E2D\u72B6\u6001 | - |\n| toggleRowExpansion | \u7528\u4E8E\u53EF\u5C55\u5F00\u8868\u683C\uFF0C\u5207\u6362\u67D0\u4E00\u884C\u7684\u5C55\u5F00\u72B6\u6001\uFF0C\u5982\u679C\u4F7F\u7528\u4E86\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u5219\u662F\u8BBE\u7F6E\u8FD9\u4E00\u884C\u5C55\u5F00\u4E0E\u5426\uFF08expanded \u4E3A true \u5219\u5C55\u5F00\uFF09 | row, expanded |\n| setCurrentRow | \u7528\u4E8E\u5355\u9009\u8868\u683C\uFF0C\u8BBE\u5B9A\u67D0\u4E00\u884C\u4E3A\u9009\u4E2D\u884C\uFF0C\u5982\u679C\u8C03\u7528\u65F6\u4E0D\u52A0\u53C2\u6570\uFF0C\u5219\u4F1A\u53D6\u6D88\u76EE\u524D\u9AD8\u4EAE\u884C\u7684\u9009\u4E2D\u72B6\u6001\u3002 | row |\n| clearSort | \u7528\u4E8E\u6E05\u7A7A\u6392\u5E8F\u6761\u4EF6\uFF0C\u6570\u636E\u4F1A\u6062\u590D\u6210\u672A\u6392\u5E8F\u7684\u72B6\u6001 | \u2014 |\n| clearFilter | \u7528\u4E8E\u6E05\u7A7A\u8FC7\u6EE4\u6761\u4EF6\uFF0C\u6570\u636E\u4F1A\u6062\u590D\u6210\u672A\u8FC7\u6EE4\u7684\u72B6\u6001 | \u2014 |\n| doLayout | \u5BF9 Table \u8FDB\u884C\u91CD\u65B0\u5E03\u5C40\u3002\u5F53 Table \u6216\u5176\u7956\u5148\u5143\u7D20\u7531\u9690\u85CF\u5207\u6362\u4E3A\u663E\u793A\u65F6\uFF0C\u53EF\u80FD\u9700\u8981\u8C03\u7528\u6B64\u65B9\u6CD5 | \u2014 |\n| sort | \u624B\u52A8\u5BF9 Table \u8FDB\u884C\u6392\u5E8F\u3002\u53C2\u6570prop\u5C5E\u6027\u6307\u5B9A\u6392\u5E8F\u5217\uFF0Corder\u6307\u5B9A\u6392\u5E8F\u987A\u5E8F\u3002 | prop: string, order: string |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| append | \u63D2\u5165\u81F3\u8868\u683C\u6700\u540E\u4E00\u884C\u4E4B\u540E\u7684\u5185\u5BB9\uFF0C\u5982\u679C\u9700\u8981\u5BF9\u8868\u683C\u7684\u5185\u5BB9\u8FDB\u884C\u65E0\u9650\u6EDA\u52A8\u64CD\u4F5C\uFF0C\u53EF\u80FD\u9700\u8981\u7528\u5230\u8FD9\u4E2A slot\u3002\u82E5\u8868\u683C\u6709\u5408\u8BA1\u884C\uFF0C\u8BE5 slot \u4F1A\u4F4D\u4E8E\u5408\u8BA1\u884C\u4E4B\u4E0A\u3002 |',
          "data": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "height": {
            "type": "attr",
            "values": [],
            "description": "Table's height. By default it has an auto height. If its value is a number, the height is measured in pixels; if its value is a string, the height is affected by external styles"
          },
          "max-height": {
            "type": "attr",
            "values": [],
            "description": "Table's max-height. The height of the table starts from 'auto' until it reaches the maxHeight limit. The 'maxHeight' is measured in pixels, same as 'heigh't"
          },
          "stripe": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "border": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "fit": {
            "type": "attr",
            "values": [],
            "description": "whether width of column automatically fits its container"
          },
          "show-header": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "highlight-current-row": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "current-row-key": {
            "type": "attr",
            "values": [],
            "description": "key of current row, a set only prop"
          },
          "row-class-name": {
            "type": "attr",
            "values": [],
            "description": "function that returns custom class names for a row, or a string assigning class names for every row"
          },
          "cell-class-name": {
            "type": "attr",
            "values": [],
            "description": "function that returns custom class names for a cell, or a string assigning class names for every cell"
          },
          "cell-style": {
            "type": "attr",
            "values": [],
            "description": "function that returns custom style for a cell, or an object assigning custom style for every cell"
          },
          "header-row-class-name": {
            "type": "attr",
            "values": [],
            "description": "function that returns custom class names for a row in table header, or a string assigning class names for every row in table header"
          },
          "header-row-style": {
            "type": "attr",
            "values": [],
            "description": "function that returns custom style for a row in table header, or an object assigning custom style for every row in table header"
          },
          "header-cell-name": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "header-cell-style": {
            "type": "attr",
            "values": [],
            "description": "function that returns custom style for a cell in table header, or an object assigning custom style for every cell in table header"
          },
          "row-style": {
            "type": "attr",
            "values": [],
            "description": "function that returns custom style for a row, or a string assigning custom style for every row"
          },
          "row-key": {
            "type": "attr",
            "values": [],
            "description": "key of row data, used for optimizing rendering. Required if 'reserve-selection' is on"
          },
          "empty-text": {
            "type": "attr",
            "values": [],
            "description": "Displayed text when data is empty. You can customize this area with slot='empty'"
          },
          "default-expand-all": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "expand-row-keys": {
            "type": "attr",
            "values": [],
            "description": "set expanded rows by this prop, prop's value is the keys of expand rows, you should set row-key before using this prop, type: Array"
          },
          "default-sort": {
            "type": "attr",
            "values": [],
            "description": "set the default sort column and order. property prop is used to set default sort column, property order is used to set default sort order"
          },
          "tooltip-effect": {
            "type": "attr",
            "values": ["dark", "light"],
            "description": "tooltip 'effect' property"
          },
          "show-summary": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "sum-text": {
            "type": "attr",
            "values": [],
            "description": "displayed text for the first column of summary row, default: Sum"
          },
          "summary-method": {
            "type": "attr",
            "values": [],
            "description": "custom summary method"
          },
          "span-method": {
            "type": "attr",
            "values": [],
            "description": "method that returns rowspan and colspan"
          },
          "select-on-indeterminate": {
            "type": "attr",
            "values": [],
            "description": "controls the behavior of master checkbox in multi-select tables when only some rows are selected (but not all). If true, all rows will be selected, else deselected. default: true"
          },
          "select": {
            "type": "event",
            "values": [],
            "description": "triggers when user clicks the checkbox in a row, arg: selection, row"
          },
          "select-all": {
            "type": "event",
            "values": [],
            "description": "triggers when user clicks the checkbox in table header, arg: selection"
          },
          "selection-change": {
            "type": "event",
            "values": [],
            "description": "triggers when selection changes, arg: selection"
          },
          "cell-mouse-enter": {
            "type": "event",
            "values": [],
            "description": "triggers when hovering into a cell, arg: row, column, cell, event"
          },
          "cell-mouse-leave": {
            "type": "event",
            "values": [],
            "description": "triggers when hovering out of a cell, arg: row column, cell, event"
          },
          "cell-click": {
            "type": "event",
            "values": [],
            "description": "triggers when clicking a cell, arg: row, column, cell, event"
          },
          "cell-dbclick": {
            "type": "event",
            "values": [],
            "description": "triggers when double clicking a cell, arg: row, column, cell, event"
          },
          "row-click": {
            "type": "event",
            "values": [],
            "description": "triggers when clicking a row, arg: row, event, column"
          },
          "row-contextmenu": {
            "type": "event",
            "values": [],
            "description": "triggers when user right clicks on a row, arg: row, event"
          },
          "row-dbclick": {
            "type": "event",
            "values": [],
            "description": "triggers when double clicking a row, arg: row, event"
          },
          "header-click": {
            "type": "event",
            "values": [],
            "description": "triggers when clicking a column header, arg: column, event"
          },
          "sort-change": {
            "type": "event",
            "values": [],
            "description": "triggers when Table's sorting changes, arg: { column, prop, order }"
          },
          "filter-change": {
            "type": "event",
            "values": [],
            "description": "column's key. If you need to use the filter-change event, this attribute is mandatory to identify which column is being filtered, arg: filters"
          },
          "current-change": {
            "type": "event",
            "values": [],
            "description": "triggers when current row changes, arg: currentRow, oldCurrentRow"
          },
          "header-draggend": {
            "type": "event",
            "values": [],
            "description": "triggers when finish dragging header, arg: newWidth, oldWidth, column, event"
          },
          "expand": {
            "type": "event",
            "values": [],
            "description": "triggers when user expands or collapses a row, arg: row, expanded"
          },
          "expand-change": {
            "type": "event",
            "values": [],
            "description": "triggers when user expands or collapses a row, arg: row, expanded"
          }
        },
        "el-table-column": {
          "_html": {
            "": '<el-table-column\nheader-align="center"\nalign="center"\nprop="${1:prop}"\nlabel="${2:label}" >\n</el-table-column>',
            ":left": '<el-table-column\nheader-align="left"\nalign="left"\nprop="${1:prop}"\nlabel="${2:label}" >\n</el-table-column>',
            ":slot": '<template slot-scope="scope">\n{{scope.row.status}}\n</template>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/table](http://element.eleme.io/#/zh-CN/component/table) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| type | \u5BF9\u5E94\u5217\u7684\u7C7B\u578B\u3002 selection \u663E\u793A\u591A\u9009\u6846\uFF0Cindex \u663E\u793A\u8BE5\u884C\u7684\u7D22\u5F15, expand \u663E\u793A\u53EF\u5C55\u5F00\u7684\u6309\u94AE | string | selection/index/expand | - |\n| index | \u5982\u679C\u8BBE\u7F6E\u4E86 type=index\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4F20\u9012 index \u5C5E\u6027\u6765\u81EA\u5B9A\u4E49\u7D22\u5F15 | number, Function(index) | - | - |\n| column-key | column \u7684 key\uFF0C\u5982\u679C\u9700\u8981\u4F7F\u7528 filter-change \u4E8B\u4EF6\uFF0C\u5219\u9700\u8981\u6B64\u5C5E\u6027\u6807\u8BC6\u662F\u54EA\u4E2A column \u7684\u7B5B\u9009\u6761\u4EF6	| string | - | - |\n| label | \u663E\u793A\u7684\u6807\u9898 | string | - | - |\n| prop | \u5BF9\u5E94\u5217\u5185\u5BB9\u7684\u5B57\u6BB5\u540D\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 property \u5C5E\u6027 | string | - | - |\n| width | \u5BF9\u5E94\u5217\u7684\u5BBD\u5EA6 | string | - | - |\n| min-width | \u5BF9\u5E94\u5217\u7684\u6700\u5C0F\u5BBD\u5EA6 | string | - | - |\n| fixed | \u5217\u662F\u5426\u56FA\u5B9A\u5728\u5DE6\u4FA7\u6216\u8005\u53F3\u4FA7\uFF0Ctrue \u8868\u793A\u56FA\u5B9A\u5728\u5DE6\u4FA7 | string, boolean | true, left, right | - |\n| render-header | \u5217\u6807\u9898 Label \u533A\u57DF\u6E32\u67D3\u4F7F\u7528\u7684 Function | Function(h, { column, $index }) | - | - |\n| sortable | \u5BF9\u5E94\u5217\u662F\u5426\u6392\u5E8F\uFF0C'custom'\u4EE3\u8868\u5E0C\u671B\u8FDC\u7A0B\u6392\u5E8F\uFF0C\u9700\u76D1\u542CTable\u7684sort-change\u4E8B\u4EF6 | boolean, string | true, false, 'custom' | false |\n| sort-method | \u6392\u5E8F\u4F7F\u7528\u65B9\u6CD5\uFF0C\u4EC5sortable\u4E3Atrue\u65F6\u6709\u6548\uFF0C\u9700\u8FD4\u56DE\u4E00\u6570\u5B57 | Function(a, b) | - | - |\n| sort-by | \u6307\u5B9A\u6392\u5E8F\u5C5E\u6027\uFF0Csortable\u4E3Atrue\u4E14\u6CA1\u6709sort-method\u6709\u6548\u3002sort-by\u53EF\u4E3A\u6570\u7EC4 | String/Array/Function(row, index) | - | - |\n| sort-orders | \u8F6E\u8F6C\u987A\u5E8F\uFF0Csortable\u4E3Atrue\u6709\u6548\u3002\u9700\u4F20\u5165\u4E00\u4E2A\u6570\u7EC4 | array | ascending/descending/null | ['ascending', 'descending', null] |\n| resizable | \u5BF9\u5E94\u5217\u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u62D6\u52A8\u6539\u53D8\u5BBD\u5EA6\uFF08\u9700\u8981\u5728 el-table \u4E0A\u8BBE\u7F6E border \u5C5E\u6027\u4E3A\u771F\uFF09| boolean | - | true |\n| formatter | \u7528\u6765\u683C\u5F0F\u5316\u5185\u5BB9 | Function(row, column, cellValue, index) | - | - |\n| show-overflow-tooltip | \u5F53\u5185\u5BB9\u8FC7\u957F\u88AB\u9690\u85CF\u65F6\u663E\u793A tooltip | Boolean | - | false |\n| align | \u5BF9\u9F50\u65B9\u5F0F | String | left/center/right | left |\n| header-align | \u8868\u5934\u5BF9\u9F50\u65B9\u5F0F | String | left/center/right | - |\n| class-name | \u5217\u7684className | string | \u2014 | \u2014 |\n| label-class-name | \u5F53\u524D\u5217\u6807\u9898\u7684\u81EA\u5B9A\u4E49\u7C7B\u540D | string | \u2014 | - |\n| selectable | \u4EC5\u5BF9 type=selection \u7684\u5217\u6709\u6548\uFF0C\u7C7B\u578B\u4E3A Function | Function(row, index) | \u2014 | \u2014 |\n| reserve-selection | \u4EC5\u5BF9 type=selection \u7684\u5217\u6709\u6548\uFF0C\u7C7B\u578B\u4E3A Boolean | Boolean | \u2014 | false |\n| filters | \u6570\u636E\u8FC7\u6EE4\u7684\u9009\u9879\uFF0C\u5143\u7D20\u9700\u8981\u6709 text \u548C value \u5C5E\u6027 | Array[{ text, value }] |  | \u2014 |\n| filter-placement | \u8FC7\u6EE4\u5F39\u51FA\u6846\u7684\u5B9A\u4F4D | String | - | \u2014 |\n| filter-multiple | \u6570\u636E\u8FC7\u6EE4\u7684\u9009\u9879\u662F\u5426\u591A\u9009 | Boolean | \u2014 | true |\n| filter-method | \u6570\u636E\u8FC7\u6EE4\u4F7F\u7528\u7684\u65B9\u6CD5 | Function(value, row, column) | \u2014 | \u2014 |\n| filtered-value | \u9009\u4E2D\u7684\u6570\u636E\u8FC7\u6EE4\u9879 | Array | \u2014 | \u2014 |\n| slot name | \u8BF4\u660E |\n| :--- | :--- |\n| \u2014 | \u81EA\u5B9A\u4E49\u5217\u7684\u5185\u5BB9\uFF0C\u53C2\u6570\u4E3A { row, column, $index } |\n| header | \u81EA\u5B9A\u4E49\u8868\u5934\u7684\u5185\u5BB9. \u53C2\u6570\u4E3A { column, $index } |\n",
          "label": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "type": {
            "type": "attr",
            "values": ["selection", "index", "expand"],
            "description": "type of the column. If set to 'selection', the column will display checkbox. If set to 'index', the column will display index of the row (staring from 1). If set to 'expand', the column will display expand icon."
          },
          "column-key": {
            "type": "attr",
            "values": [],
            "description": "column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered"
          },
          "index": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "prop": {
            "type": "attr",
            "values": [],
            "description": "field name. You can also use its alias: property"
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "min-width": {
            "type": "attr",
            "values": [],
            "description": "column minimum width. Columns with width has a fixed width, while columns with min-width has a width that is distributed in proportion"
          },
          "fixed": {
            "type": "attr",
            "values": ["ture", "left", "right"],
            "description": "whether column is fixed at left/right. Will be fixed at left if 'true'"
          },
          "render-header": {
            "type": "attr",
            "values": [],
            "description": "render function for table header of this column"
          },
          "sortable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "sort-method": {
            "type": "attr",
            "values": [],
            "description": "sorting method, works when 'sortable' is true. Should return a number, just like Array.sort, type: Function(a, b)"
          },
          "sort-by": {
            "type": "attr",
            "values": [],
            "description": "specify which property to sort by, works when 'sortable' is true and 'sort-method' is undefined. If set to an Array, the column will sequentially sort by the next property if the previous one is equal, type: Function(row, index)/String/Array"
          },
          "resizable": {
            "type": "attr",
            "values": [],
            "description": "whether column width can be resized, works when border of 'el-table' is 'true'"
          },
          "formatter": {
            "type": "attr",
            "values": [],
            "description": "function that formats content"
          },
          "show-overflow-tooltip": {
            "type": "attr",
            "values": [],
            "description": "whether to hide extra content and show them in a tooltip when hovering on the cell"
          },
          "align": {
            "type": "attr",
            "values": ["left", "center", "right"],
            "description": ""
          },
          "header-align": {
            "type": "attr",
            "values": ["left", "center", "right"],
            "description": "alignment of the table header. If omitted, the value of the 'align' attribute will be applied"
          },
          "class-name": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "label-class-name": {
            "type": "attr",
            "values": [],
            "description": "class name of the label of this column"
          },
          "selectable": {
            "type": "attr",
            "values": [],
            "description": "function that determines if a certain row can be selected, works when type is 'selection' Function(row, index)"
          },
          "reserve-selection": {
            "type": "attr",
            "values": [],
            "description": "whether to reserve selection after data refreshing, works when type is 'selection'"
          },
          "filters": {
            "type": "attr",
            "values": [],
            "description": "an array of data filtering options. For each element in this array, 'text' and 'value' are required"
          },
          "filter-placement": {
            "type": "attr",
            "values": [],
            "description": "placement for the filter dropdown"
          },
          "filter-multiple": {
            "type": "attr",
            "values": [],
            "description": "whether data filtering supports multiple options"
          },
          "filter-method": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "filtered-value": {
            "type": "attr",
            "values": [],
            "description": "filter value for selected data, might be useful when table header is rendered with 'render-header'"
          }
        },
        "el-tag": {
          "_html": {
            "": '<el-tag type="${1:success}">$2</el-tag>',
            ":close": '<el-tag closable type="${1:success}">$2</el-tag>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/tag](http://element.eleme.io/#/zh-CN/component/tag) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| type | \u4E3B\u9898 | string | success/info/warning/danger | \u2014 |\n| closable | \u662F\u5426\u53EF\u5173\u95ED | boolean | \u2014 | false |\n| disable-transitions | \u662F\u5426\u7981\u7528\u6E10\u53D8\u52A8\u753B | boolean | \u2014 | false |\n| hit | \u662F\u5426\u6709\u8FB9\u6846\u63CF\u8FB9 | boolean | \u2014 | false |\n| color | \u80CC\u666F\u8272 | string | \u2014 | \u2014 |\n| size | \u5C3A\u5BF8 | string | medium / small / mini | \u2014 |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| close | \u5173\u95ED Tag \u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6 | \u2014 |",
          "type": {
            "type": "attr",
            "values": ["info", "success", "warning", "danger"],
            "description": "theme"
          },
          "closable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "close-transition": {
            "type": "attr",
            "values": [],
            "description": "whether the removal animation is disabled"
          },
          "hit": {
            "type": "attr",
            "values": [],
            "description": "whether Tag has a highlighted border"
          },
          "color": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "close": {
            "type": "event",
            "values": [],
            "description": "triggers when Tab is removed"
          }
        },
        "el-time-picker": {
          "_html": {
            "": `<el-time-picker
v-model="$1"
:picker-options="\${2:{ selectableRange: '18:30:00 - 20:30:00' }}"
placeholder="$3">
</el-time-picker>`
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/time-picker](http://element.eleme.io/#/zh-CN/component/time-picker) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| readonly | \u5B8C\u5168\u53EA\u8BFB | boolean | \u2014 | false |\n| disabled | \u7981\u7528 | boolean | \u2014 | false |\n| editable | \u6587\u672C\u6846\u53EF\u8F93\u5165 | boolean | \u2014 | true |\n| clearable | \u662F\u5426\u663E\u793A\u6E05\u9664\u6309\u94AE | boolean | \u2014 | true |\n| size | \u8F93\u5165\u6846\u5C3A\u5BF8 | string | medium / small / mini | \u2014 |\n| placeholder | \u975E\u8303\u56F4\u9009\u62E9\u65F6\u7684\u5360\u4F4D\u5185\u5BB9 | string | \u2014 | \u2014 |\n| start-placeholder | \u8303\u56F4\u9009\u62E9\u65F6\u5F00\u59CB\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9 | string | \u2014 | \u2014 |\n| end-placeholder | \u8303\u56F4\u9009\u62E9\u65F6\u5F00\u59CB\u65E5\u671F\u7684\u5360\u4F4D\u5185\u5BB9 | string | \u2014 | \u2014 |\n| is-range | \u662F\u5426\u4E3A\u65F6\u95F4\u8303\u56F4\u9009\u62E9\uFF0C\u4EC5\u5BF9<el-time-picker>\u6709\u6548 | boolean | \u2014 | false |\n| arrow-control | \u662F\u5426\u4F7F\u7528\u7BAD\u5934\u8FDB\u884C\u65F6\u95F4\u9009\u62E9\uFF0C\u4EC5\u5BF9<el-time-picker>\u6709\u6548 | boolean | \u2014 | false |\n| value | \u7ED1\u5B9A\u503C | date(TimePicker) / string(TimeSelect) | \u2014 | \u2014 |\n| align | \u5BF9\u9F50\u65B9\u5F0F | string | left / center / right | left |\n| popper-class | TimePicker \u4E0B\u62C9\u6846\u7684\u7C7B\u540D | string | \u2014 | \u2014 |\n| picker-options | \u5F53\u524D\u65F6\u95F4\u65E5\u671F\u9009\u62E9\u5668\u7279\u6709\u7684\u9009\u9879\u53C2\u8003\u4E0B\u8868 | object | \u2014 | {} |\n| range-separator | \u9009\u62E9\u8303\u56F4\u65F6\u7684\u5206\u9694\u7B26 | string | - | '-' |\n| value-format | \u53EF\u9009\uFF0C\u4EC5TimePicker\u65F6\u53EF\u7528\uFF0C\u7ED1\u5B9A\u503C\u7684\u683C\u5F0F\u3002\u4E0D\u6307\u5B9A\u5219\u7ED1\u5B9A\u503C\u4E3A Date \u5BF9\u8C61 | string | \u89C1\u65E5\u671F\u683C\u5F0F | \u2014 |\n| default-value | \u53EF\u9009\uFF0C\u9009\u62E9\u5668\u6253\u5F00\u65F6\u9ED8\u8BA4\u663E\u793A\u7684\u65F6\u95F4 | Date(TimePicker) / string(TimeSelect) | \u53EF\u88ABnew Date()\u89E3\u6790(TimePicker) / \u53EF\u9009\u503C(TimeSelect) | \u2014 |\n| name | \u539F\u751F\u5C5E\u6027 | string | \u2014 | \u2014 |\n| prefix-icon | \u81EA\u5B9A\u4E49\u5934\u90E8\u56FE\u6807\u7684\u7C7B\u540D | string | \u2014 | el-icon-time |\n| clear-icon | \u81EA\u5B9A\u4E49\u6E05\u7A7A\u56FE\u6807\u7684\u7C7B\u540D | string | \u2014 | el-icon-circle-close |\n\n| \u4E8B\u4EF6\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u7528\u6237\u786E\u8BA4\u9009\u5B9A\u7684\u503C\u65F6\u89E6\u53D1 | \u7EC4\u4EF6\u7ED1\u5B9A\u503C |\n| blur | \u5F53 input \u5931\u53BB\u7126\u70B9\u65F6\u89E6\u53D1 | \u7EC4\u4EF6\u5B9E\u4F8B |\n| focus | \u5F53 input \u83B7\u5F97\u7126\u70B9\u65F6\u89E6\u53D1 | \u7EC4\u4EF6\u5B9E\u4F8B |\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| focus | \u4F7F input \u83B7\u53D6\u7126\u70B9 | - |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "readonly": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "editable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "clearable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "start-placeholder": {
            "type": "attr",
            "values": [],
            "description": "placeholder for the start time in range mode"
          },
          "end-placeholder": {
            "type": "attr",
            "values": [],
            "description": "placeholder for the end time in range mode"
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "align": {
            "type": "attr",
            "values": ["left", "center", "right"],
            "description": ""
          },
          "picker-options": {
            "type": "attr",
            "values": ["format", "selectableRange"],
            "description": "additional options, type is object"
          },
          "range-separator": {
            "type": "attr",
            "values": [],
            "description": "default: '-'"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "is-range": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "arrow-control": {
            "type": "attr",
            "values": [],
            "description": "whether to pick time using arrow buttons, only works with <el-time-picker>"
          },
          "value-format": {
            "type": "attr",
            "values": [],
            "description": "optional, format of binding value. If not specified, the binding value will be a Date object"
          },
          "default-value": {
            "type": "attr",
            "values": [],
            "description": "optional default time of the picker, type: Date"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "blur": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "focus": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-time-select": {
          "_html": {
            "": `<el-time-select
v-model="$1"
:picker-options="\${2:{start: '08:30',step: '00:15',end: '18:30'}}"
placeholder="$3">
</el-time-select>`
          },
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "placeholder": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "readonly": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "editable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "clearable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": "value of the picker, default: HH:mm:ss"
          },
          "align": {
            "type": "attr",
            "values": ["left", "center", "right"],
            "description": ""
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "picker-options": {
            "type": "attr",
            "values": ["start", "end", "step", "minTime", "maxTime"],
            "description": "additional options, type is object"
          },
          "vertical": {
            "type": "attr",
            "values": [],
            "description": "defaults: false"
          },
          "height": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-tooltip": {
          "_html": {
            "": '<el-tooltip effect="dark" content="$1" placement="${2:top}">\n<el-button>$3</el-button>\n</el-tooltip>',
            ":content": '<el-tooltip effect="dark" content="$1" placement="${2:top}">\n<div slot="content">$3</div>\n<el-button>$4</el-button>\n</el-tooltip>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/tooltip](http://element.eleme.io/#/zh-CN/component/tooltip) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| effect | \u9ED8\u8BA4\u63D0\u4F9B\u7684\u4E3B\u9898 | String | dark/light | dark |\n| content | \u663E\u793A\u7684\u5185\u5BB9\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 slot#content \u4F20\u5165 DOM | String | \u2014 | \u2014 |\n| placement | Tooltip \u7684\u51FA\u73B0\u4F4D\u7F6E | String | top/top-start/top-end/bottom/bottom-start/bottom-end/left/left-start/left-end/right/right-start/right-end | bottom |\n| value(v-model) | \u72B6\u6001\u662F\u5426\u53EF\u89C1 | Boolean | \u2014 | false |\n| disabled | Tooltip \u662F\u5426\u53EF\u7528 | Boolean | \u2014 | false |\n| offset | \u51FA\u73B0\u4F4D\u7F6E\u7684\u504F\u79FB\u91CF | Number | \u2014 | 0 |\n| transition | \u5B9A\u4E49\u6E10\u53D8\u52A8\u753B | String | \u2014 | el-fade-in-linear |\n| visible-arrow | \u662F\u5426\u663E\u793A Tooltip \u7BAD\u5934\uFF0C\u66F4\u591A\u53C2\u6570\u53EF\u89C1Vue-popper | Boolean | \u2014 | true |\n| popper-options | popper.js \u7684\u53C2\u6570 | Object | \u53C2\u8003 popper.js \u6587\u6863 | { boundariesElement: 'body', gpuAcceleration: false } |\n| open-delay | \u5EF6\u8FDF\u51FA\u73B0\uFF0C\u5355\u4F4D\u6BEB\u79D2 | Number | \u2014 | 0 |\n| manual | \u624B\u52A8\u63A7\u5236\u6A21\u5F0F\uFF0C\u8BBE\u7F6E\u4E3A true \u540E\uFF0Cmouseenter \u548C mouseleave \u4E8B\u4EF6\u5C06\u4E0D\u4F1A\u751F\u6548 | Boolean | \u2014 | false |\n| popper-class | \u4E3A Tooltip \u7684 popper \u6DFB\u52A0\u7C7B\u540D | String | \u2014 | \u2014 |\n| enterable | \u9F20\u6807\u662F\u5426\u53EF\u8FDB\u5165\u5230 tooltip \u4E2D | Boolean | \u2014 | true |\n| hide-after | Tooltip \u51FA\u73B0\u540E\u81EA\u52A8\u9690\u85CF\u5EF6\u65F6\uFF0C\u5355\u4F4D\u6BEB\u79D2\uFF0C\u4E3A 0 \u5219\u4E0D\u4F1A\u81EA\u52A8\u9690\u85CF | number | \u2014 | 0 |",
          "content": {
            "type": "attr",
            "values": [],
            "description": "display content, can be overridden by slot#content"
          },
          "placement": {
            "type": "attr",
            "values": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"],
            "description": "default: bottom"
          },
          "effect": {
            "type": "attr",
            "values": ["dark", "light"],
            "description": "Tooltip theme"
          },
          "value": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "offset": {
            "type": "attr",
            "values": [],
            "description": "offset of the Tooltip, default: 0"
          },
          "transition": {
            "type": "attr",
            "values": [],
            "description": "animation name, default: 'el-fade-in-linear'"
          },
          "visible-arrow": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "popper-options": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "open-delay": {
            "type": "attr",
            "values": [],
            "description": "delay of appearance, in millisecond, default: 0"
          },
          "manual": {
            "type": "attr",
            "values": [],
            "description": "whether to control Tooltip manually. mouseenter and mouseleave won't have effects if set to 'true', default: false"
          },
          "popper-class": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "enterable": {
            "type": "attr",
            "values": [],
            "description": "enterable whether the mouse can enter the tooltip, default: true"
          },
          "hide-after": {
            "type": "attr",
            "values": [],
            "description": "timeout in milliseconds to hide tooltip, default: 0"
          }
        },
        "el-transfer": {
          "_html": {
            "": '<el-transfer\nv-model="$1"\n:data="$2">\n</el-transfer>',
            ":search": '<el-transfer\nv-model="$1"\n:data="$2">\nfilterable\n:filter-method=""\nfilter-placeholder="">\n</el-transfer>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/transfer](http://element.eleme.io/#/zh-CN/component/transfer) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| data | Transfer \u7684\u6570\u636E\u6E90 | array[{ key, label, disabled }] | \u2014 | [ ] |\n| filterable | \u662F\u5426\u53EF\u641C\u7D22 | boolean | \u2014 | false |\n| filter-placeholder | \u641C\u7D22\u6846\u5360\u4F4D\u7B26 | string | \u2014 | \u8BF7\u8F93\u5165\u641C\u7D22\u5185\u5BB9 |\n| filter-method | \u81EA\u5B9A\u4E49\u641C\u7D22\u65B9\u6CD5 | function | \u2014 | \u2014 |\n| target-order | \u53F3\u4FA7\u5217\u8868\u5143\u7D20\u7684\u6392\u5E8F\u7B56\u7565\uFF1A\u82E5\u4E3A original\uFF0C\u5219\u4FDD\u6301\u4E0E\u6570\u636E\u6E90\u76F8\u540C\u7684\u987A\u5E8F\uFF1B\u82E5\u4E3A push\uFF0C\u5219\u65B0\u52A0\u5165\u7684\u5143\u7D20\u6392\u5728\u6700\u540E\uFF1B\u82E5\u4E3A unshift\uFF0C\u5219\u65B0\u52A0\u5165\u7684\u5143\u7D20\u6392\u5728\u6700\u524D | string | original / push / unshift | original |\n| titles | \u81EA\u5B9A\u4E49\u5217\u8868\u6807\u9898 | array | \u2014 | ['\u5217\u8868 1', '\u5217\u8868 2'] |\n| button-texts | \u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u6848 | array | \u2014 | [ ] |\n| render-content | \u81EA\u5B9A\u4E49\u6570\u636E\u9879\u6E32\u67D3\u51FD\u6570 | function(h, option) | \u2014 | \u2014 |\n| format | \u5217\u8868\u9876\u90E8\u52FE\u9009\u72B6\u6001\u6587\u6848 | object{noChecked, hasChecked} | \u2014 | { noChecked: '${checked}/${total}', hasChecked: '${checked}/${total}' } |\n| props | \u6570\u636E\u6E90\u7684\u5B57\u6BB5\u522B\u540D | object{key, label, disabled} | \u2014 | \u2014 |\n| left-default-checked | \u521D\u59CB\u72B6\u6001\u4E0B\u5DE6\u4FA7\u5217\u8868\u7684\u5DF2\u52FE\u9009\u9879\u7684 key \u6570\u7EC4 | array | \u2014 | [ ] |\n| right-default-checked | \u521D\u59CB\u72B6\u6001\u4E0B\u53F3\u4FA7\u5217\u8868\u7684\u5DF2\u52FE\u9009\u9879\u7684 key \u6570\u7EC4 | array | \u2014 | [ ] |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| left-footer | \u5DE6\u4FA7\u5217\u8868\u5E95\u90E8\u7684\u5185\u5BB9 |\n| right-footer | \u53F3\u4FA7\u5217\u8868\u5E95\u90E8\u7684\u5185\u5BB9 |\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| clearQuery | \u6E05\u7A7A\u67D0\u4E2A\u9762\u677F\u7684\u641C\u7D22\u5173\u952E\u8BCD | 'left' / 'right'\uFF0C\u6307\u5B9A\u9700\u8981\u6E05\u7A7A\u7684\u9762\u677F |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| change | \u53F3\u4FA7\u5217\u8868\u5143\u7D20\u53D8\u5316\u65F6\u89E6\u53D1 | \u5F53\u524D\u503C\u3001\u6570\u636E\u79FB\u52A8\u7684\u65B9\u5411\uFF08'left' / 'right'\uFF09\u3001\u53D1\u751F\u79FB\u52A8\u7684\u6570\u636E key \u6570\u7EC4 |\n| left-check-change | \u5DE6\u4FA7\u5217\u8868\u5143\u7D20\u88AB\u7528\u6237\u9009\u4E2D / \u53D6\u6D88\u9009\u4E2D\u65F6\u89E6\u53D1 | \u5F53\u524D\u88AB\u9009\u4E2D\u7684\u5143\u7D20\u7684 key \u6570\u7EC4\u3001\u9009\u4E2D\u72B6\u6001\u53D1\u751F\u53D8\u5316\u7684\u5143\u7D20\u7684 key \u6570\u7EC4 |\n| right-check-change | \u53F3\u4FA7\u5217\u8868\u5143\u7D20\u88AB\u7528\u6237\u9009\u4E2D / \u53D6\u6D88\u9009\u4E2D\u65F6\u89E6\u53D1 | \u5F53\u524D\u88AB\u9009\u4E2D\u7684\u5143\u7D20\u7684 key \u6570\u7EC4\u3001\u9009\u4E2D\u72B6\u6001\u53D1\u751F\u53D8\u5316\u7684\u5143\u7D20\u7684 key \u6570\u7EC4 |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "data": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "filterable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "filter-placeholder": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "filter-method": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "target-order": {
            "type": "attr",
            "values": ["original", "push", "unshift"],
            "description": "order strategy for elements in the target list. If set to 'original', the elements will keep the same order as the data source. If set to 'push', the newly added elements will be pushed to the bottom. If set to 'unshift', the newly added elements will be inserted on the top, default: original"
          },
          "titles": {
            "type": "attr",
            "values": [],
            "description": "custom list titles, default: ['List 1', 'List 2']"
          },
          "button-texts": {
            "type": "attr",
            "values": [],
            "description": "custom button texts, default: []"
          },
          "render-content": {
            "type": "attr",
            "values": [],
            "description": "custom render function for data items"
          },
          "format": {
            "type": "attr",
            "values": [],
            "description": "texts for checking status in list footer, default: { noChecked: '${total} items', hasChecked: '${checked}/${total} checked' }"
          },
          "props": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "left-default-checked": {
            "type": "attr",
            "values": [],
            "description": "key array of initially checked data items of the left list, default: []"
          },
          "right-default-checked": {
            "type": "attr",
            "values": [],
            "description": "key array of initially checked data items of the right list, default: []"
          },
          "change": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "left-check-change": {
            "type": "event",
            "values": [],
            "description": "triggers when end user changes the checked state of any data item in the left list"
          },
          "right-check-change": {
            "type": "event",
            "values": [],
            "description": "triggers when end user changes the checked state of any data item in the right list"
          }
        },
        "el-tree": {
          "_html": {
            "": '<el-tree\n:data="$1"\n:props="$2"\n@node-click="$3">\n</el-tree>',
            ":select": '<el-tree\nshow-checkbox\n:data="$1"\n:props="$2"\n@node-click="$3">\n</el-tree>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/tree](http://element.eleme.io/#/zh-CN/component/tree) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| data | \u5C55\u793A\u6570\u636E | array | \u2014 | \u2014 |\n| empty-text | \u5185\u5BB9\u4E3A\u7A7A\u7684\u65F6\u5019\u5C55\u793A\u7684\u6587\u672C | String | \u2014 | \u2014 |\n| node-key | \u6BCF\u4E2A\u6811\u8282\u70B9\u7528\u6765\u4F5C\u4E3A\u552F\u4E00\u6807\u8BC6\u7684\u5C5E\u6027\uFF0C\u6574\u68F5\u6811\u5E94\u8BE5\u662F\u552F\u4E00\u7684 | String | \u2014 | \u2014 |\n| props | \u914D\u7F6E\u9009\u9879\uFF0C\u5177\u4F53\u770B\u4E0B\u8868 | object | \u2014 | \u2014 |\n| render-after-expand | \u662F\u5426\u5728\u7B2C\u4E00\u6B21\u5C55\u5F00\u67D0\u4E2A\u6811\u8282\u70B9\u540E\u624D\u6E32\u67D3\u5176\u5B50\u8282\u70B9 | boolean | \u2014 | true |\n| load | \u52A0\u8F7D\u5B50\u6811\u6570\u636E\u7684\u65B9\u6CD5\uFF0C\u4EC5\u5F53 lazy \u5C5E\u6027\u4E3Atrue \u65F6\u751F\u6548 | function(node, resolve) | \u2014 | \u2014 |\n| render-content | \u6811\u8282\u70B9\u7684\u5185\u5BB9\u533A\u7684\u6E32\u67D3 Function | Function(h, { node, data, store } | \u2014 | \u2014 |\n  | highlight-current | \u662F\u5426\u9AD8\u4EAE\u5F53\u524D\u9009\u4E2D\u8282\u70B9\uFF0C\u9ED8\u8BA4\u503C\u662F false\u3002 | boolean | \u2014 | false |\n  | default-expand-all | \u662F\u5426\u9ED8\u8BA4\u5C55\u5F00\u6240\u6709\u8282\u70B9 | boolean | \u2014 | false |\n  | expand-on-click-node | \u662F\u5426\u5728\u70B9\u51FB\u8282\u70B9\u7684\u65F6\u5019\u5C55\u5F00\u6216\u8005\u6536\u7F29\u8282\u70B9\uFF0C \u9ED8\u8BA4\u503C\u4E3A true\uFF0C\u5982\u679C\u4E3A false\uFF0C\u5219\u53EA\u6709\u70B9\u7BAD\u5934\u56FE\u6807\u7684\u65F6\u5019\u624D\u4F1A\u5C55\u5F00\u6216\u8005\u6536\u7F29\u8282\u70B9\u3002 | boolean | \u2014 | true |\n  | check-on-click-node | \u662F\u5426\u5728\u70B9\u51FB\u8282\u70B9\u7684\u65F6\u5019\u9009\u4E2D\u8282\u70B9\uFF0C\u9ED8\u8BA4\u503C\u4E3A false\uFF0C\u5373\u53EA\u6709\u5728\u70B9\u51FB\u590D\u9009\u6846\u65F6\u624D\u4F1A\u9009\u4E2D\u8282\u70B9\u3002 | boolean | \u2014 | false |\n  | auto-expand-parent | \u5C55\u5F00\u5B50\u8282\u70B9\u7684\u65F6\u5019\u662F\u5426\u81EA\u52A8\u5C55\u5F00\u7236\u8282\u70B9 | boolean | \u2014 | true |\n  | default-expanded-keys | \u9ED8\u8BA4\u5C55\u5F00\u7684\u8282\u70B9\u7684 key \u7684\u6570\u7EC4 | array | \u2014 | \u2014 |\n  | show-checkbox | \u8282\u70B9\u662F\u5426\u53EF\u88AB\u9009\u62E9 | boolean | \u2014 | false |\n  | check-strictly | \u5728\u663E\u793A\u590D\u9009\u6846\u7684\u60C5\u51B5\u4E0B\uFF0C\u662F\u5426\u4E25\u683C\u7684\u9075\u5FAA\u7236\u5B50\u4E0D\u4E92\u76F8\u5173\u8054\u7684\u505A\u6CD5\uFF0C\u9ED8\u8BA4\u4E3A false | boolean | \u2014 | false |\n  | default-checked-keys | \u9ED8\u8BA4\u52FE\u9009\u7684\u8282\u70B9\u7684 key \u7684\u6570\u7EC4 | array | \u2014 | \u2014 |\n  | filter-node-method | \u5BF9\u6811\u8282\u70B9\u8FDB\u884C\u7B5B\u9009\u65F6\u6267\u884C\u7684\u65B9\u6CD5\uFF0C\u8FD4\u56DE true \u8868\u793A\u8FD9\u4E2A\u8282\u70B9\u53EF\u4EE5\u663E\u793A\uFF0C\u8FD4\u56DE false \u5219\u8868\u793A\u8FD9\u4E2A\u8282\u70B9\u4F1A\u88AB\u9690\u85CF | Function(value, data, node) | \u2014 | \u2014 |\n  | accordion | \u662F\u5426\u6BCF\u6B21\u53EA\u6253\u5F00\u4E00\u4E2A\u540C\u7EA7\u6811\u8282\u70B9\u5C55\u5F00 | boolean | \u2014 | false |\n  | indent | \u76F8\u90BB\u7EA7\u8282\u70B9\u95F4\u7684\u6C34\u5E73\u7F29\u8FDB\uFF0C\u5355\u4F4D\u4E3A\u50CF\u7D20 | number | \u2014 | 16 |\n  | lazy | \u662F\u5426\u61D2\u52A0\u8F7D\u5B50\u8282\u70B9\uFF0C\u9700\u4E0E load \u65B9\u6CD5\u7ED3\u5408\u4F7F\u7528 | boolean | \u2014 | false |\n  | draggable | \u662F\u5426\u5F00\u542F\u62D6\u62FD\u8282\u70B9\u529F\u80FD | boolean | \u2014 | false |\n  | allow-drag | \u5224\u65AD\u8282\u70B9\u80FD\u5426\u88AB\u62D6\u62FD | Function(node) | \u2014 | \u2014 |\n  | allow-drop | \u62D6\u62FD\u65F6\u5224\u5B9A\u76EE\u6807\u8282\u70B9\u80FD\u5426\u88AB\u653E\u7F6E\u3002type \u53C2\u6570\u6709\u4E09\u79CD\u60C5\u51B5\uFF1A'prev'\u3001'inner' \u548C 'next'\uFF0C\u5206\u522B\u8868\u793A\u653E\u7F6E\u5728\u76EE\u6807\u8282\u70B9\u524D\u3001\u63D2\u5165\u81F3\u76EE\u6807\u8282\u70B9\u548C\u653E\u7F6E\u5728\u76EE\u6807\u8282\u70B9\u540E | Function(draggingNode, dropNode, type) | \u2014 | \u2014 |\n\n  | \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n  | :--- | :--- | :--- | :--- | :--- |\n  | label | \u6307\u5B9A\u8282\u70B9\u6807\u7B7E\u4E3A\u8282\u70B9\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u503C | string, function(data, node) | \u2014 | \u2014 |\n  | children | \u6307\u5B9A\u5B50\u6811\u4E3A\u8282\u70B9\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u503C | string | \u2014 | \u2014 |\n  | disabled | \u6307\u5B9A\u8282\u70B9\u9009\u62E9\u6846\u662F\u5426\u7981\u7528\u4E3A\u8282\u70B9\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u503C | boolean, function(data, node) | \u2014 | \u2014 |\n  | isLeaf | \u6307\u5B9A\u8282\u70B9\u662F\u5426\u4E3A\u53F6\u5B50\u8282\u70B9\uFF0C\u4EC5\u5728\u6307\u5B9A\u4E86 lazy \u5C5E\u6027\u7684\u60C5\u51B5\u4E0B\u751F\u6548 | boolean, function(data, node) | \u2014 | \u2014 |",
          "data": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "empty-text": {
            "type": "attr",
            "values": [],
            "description": "text displayed when data is void"
          },
          "node-key": {
            "type": "attr",
            "values": [],
            "description": "unique identity key name for nodes, its value should be unique across the whole tree"
          },
          "props": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "load": {
            "type": "attr",
            "values": [],
            "description": "method for loading subtree data"
          },
          "render-content": {
            "type": "attr",
            "values": [],
            "description": "render function for tree node"
          },
          "highlight-current": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "current-node-key": {
            "type": "attr",
            "values": [],
            "description": "key of current node, a set only prop"
          },
          "default-expand-all": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "expand-on-click-node": {
            "type": "attr",
            "values": [],
            "description": "whether to expand or collapse node when clicking on the node, if false, then expand or collapse node only when clicking on the arrow icon, default: true"
          },
          "auto-expand-parent": {
            "type": "attr",
            "values": [],
            "description": "whether to expand father node when a child node is expanded, default: true"
          },
          "default-expanded-keys": {
            "type": "attr",
            "values": [],
            "description": "array of keys of initially expanded nodes"
          },
          "show-checkbox": {
            "type": "attr",
            "values": [],
            "description": "whether node is selectable"
          },
          "check-strictly": {
            "type": "attr",
            "values": [],
            "description": "whether checked state of a node not affects its father and child nodes when 'show-checkbox' is 'true'"
          },
          "default-checked-keys": {
            "type": "attr",
            "values": [],
            "description": "array of keys of initially checked nodes"
          },
          "filter-node-method": {
            "type": "attr",
            "values": [],
            "description": "this function will be executed on each node when use filter method. if return 'false', tree node will be hidden."
          },
          "accordion": {
            "type": "attr",
            "values": [],
            "description": "whether only one node among the same level can be expanded at one time, default: false"
          },
          "indent": {
            "type": "attr",
            "values": [],
            "description": "horizontal indentation of nodes in adjacent levels in pixels, default: 16"
          },
          "check-descendants": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "draggable": {
            "type": "attr",
            "values": [],
            "description": "whether enable tree nodes drag and drop"
          },
          "allow-drag": {
            "type": "attr",
            "values": [],
            "description": "this function will be executed before dragging a node. If false is returned, the node can not be dragged, type: Function"
          },
          "allow-drop": {
            "type": "attr",
            "values": [],
            "description": "this function will be executed before the dragging node is dropped. If false is returned, the dragging node can not be dropped at the target node, type: Function"
          },
          "node-click": {
            "type": "event",
            "values": [],
            "description": "triggers when a node is clicked"
          },
          "node-contextmenu": {
            "type": "event",
            "values": [],
            "description": "triggers when a node is clicked by right button"
          },
          "check-change": {
            "type": "event",
            "values": [],
            "description": "triggers when the selected state of the node changes"
          },
          "check": {
            "type": "event",
            "values": [],
            "description": "triggers after clicking the checkbox of a node"
          },
          "current-change": {
            "type": "event",
            "values": [],
            "description": "triggers when current node changes"
          },
          "node-expand": {
            "type": "event",
            "values": [],
            "description": "triggers when current node open"
          },
          "node-collapse": {
            "type": "event",
            "values": [],
            "description": "triggers when current node close"
          },
          "node-drag-start": {
            "type": "event",
            "values": [],
            "description": "triggers when dragging starts"
          },
          "node-drag-enter": {
            "type": "event",
            "values": [],
            "description": "triggers when the dragging node enters another node"
          },
          "node-drag-leave": {
            "type": "event",
            "values": [],
            "description": "triggers when the dragging node leaves a node"
          },
          "node-drag-over": {
            "type": "event",
            "values": [],
            "description": "triggers when dragging over a node (like mouseover event)"
          },
          "node-drag-end": {
            "type": "event",
            "values": [],
            "description": "triggers when dragging ends"
          },
          "node-drop": {
            "type": "event",
            "values": [],
            "description": "triggers after the dragging node is dropped"
          }
        },
        "el-upload": {
          "_html": {
            "": `<el-upload
action=""
:on-preview=""
:on-remove=""
:before-remove=""
multiple
:limit="3"
:on-exceed=""
:file-list="[{name: 'name', url: 'url'}]">
<el-button size="small" type="primary">\u70B9\u51FB\u4E0A\u4F20</el-button>
<div slot="tip" class="el-upload__tip">\u53EA\u80FD\u4E0A\u4F20jpg/png\u6587\u4EF6\uFF0C\u4E14\u4E0D\u8D85\u8FC7500kb</div>
</el-upload>`,
            ":avatar": '<el-upload\naction=""\n:show-file-list="false"\n:on-success=""\n:before-upload="">\n<img v-if="imageUrl" :src="imageUrl">\n<i v-else class="el-icon-plus avatar-uploader-icon"></i>\n</el-upload>'
          },
          "_doc": "[element\uFF1Ahttp://element.eleme.io/#/zh-CN/component/upload](http://element.eleme.io/#/zh-CN/component/upload) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| action | \u5FC5\u9009\u53C2\u6570\uFF0C\u4E0A\u4F20\u7684\u5730\u5740 | string | \u2014 | \u2014 |\n| headers | \u8BBE\u7F6E\u4E0A\u4F20\u7684\u8BF7\u6C42\u5934\u90E8 | object | \u2014 | \u2014 |\n| multiple | \u662F\u5426\u652F\u6301\u591A\u9009\u6587\u4EF6 | boolean | \u2014 | \u2014 |\n| data | \u4E0A\u4F20\u65F6\u9644\u5E26\u7684\u989D\u5916\u53C2\u6570 | object | \u2014 | \u2014 |\n| name | \u4E0A\u4F20\u7684\u6587\u4EF6\u5B57\u6BB5\u540D | string | \u2014 | file |\n| with-credentials | \u652F\u6301\u53D1\u9001 cookie \u51ED\u8BC1\u4FE1\u606F | boolean | \u2014 | false |\n| show-file-list | \u662F\u5426\u663E\u793A\u5DF2\u4E0A\u4F20\u6587\u4EF6\u5217\u8868 | boolean | \u2014 | true |\n| drag | \u662F\u5426\u542F\u7528\u62D6\u62FD\u4E0A\u4F20 | boolean | \u2014 | false |\n| accept | \u63A5\u53D7\u4E0A\u4F20\u7684\u6587\u4EF6\u7C7B\u578B\uFF08thumbnail-mode \u6A21\u5F0F\u4E0B\u6B64\u53C2\u6570\u65E0\u6548\uFF09 | string | \u2014 | \u2014 |\n| on-preview | \u70B9\u51FB\u6587\u4EF6\u5217\u8868\u4E2D\u5DF2\u4E0A\u4F20\u7684\u6587\u4EF6\u65F6\u7684\u94A9\u5B50 | function(file) | \u2014 | \u2014 |\n| on-remove | \u6587\u4EF6\u5217\u8868\u79FB\u9664\u6587\u4EF6\u65F6\u7684\u94A9\u5B50 | function(file, fileList) | \u2014 | \u2014 |\n| on-success | \u6587\u4EF6\u4E0A\u4F20\u6210\u529F\u65F6\u7684\u94A9\u5B50 | function(response, file, fileList) | \u2014 | \u2014 |\n| on-error | \u6587\u4EF6\u4E0A\u4F20\u5931\u8D25\u65F6\u7684\u94A9\u5B50 | function(err, file, fileList) | \u2014 | \u2014 |\n| on-progress | \u6587\u4EF6\u4E0A\u4F20\u65F6\u7684\u94A9\u5B50 | function(event, file, fileList) | \u2014 | \u2014 |\n| on-change | \u6587\u4EF6\u72B6\u6001\u6539\u53D8\u65F6\u7684\u94A9\u5B50\uFF0C\u6DFB\u52A0\u6587\u4EF6\u3001\u4E0A\u4F20\u6210\u529F\u548C\u4E0A\u4F20\u5931\u8D25\u65F6\u90FD\u4F1A\u88AB\u8C03\u7528 | function(file, fileList) | \u2014 | \u2014 |\n| before-upload | \u4E0A\u4F20\u6587\u4EF6\u4E4B\u524D\u7684\u94A9\u5B50\uFF0C\u53C2\u6570\u4E3A\u4E0A\u4F20\u7684\u6587\u4EF6\uFF0C\u82E5\u8FD4\u56DE false \u6216\u8005\u8FD4\u56DE Promise \u4E14\u88AB reject\uFF0C\u5219\u505C\u6B62\u4E0A\u4F20\u3002 | function(file) | \u2014 | \u2014 |\n| before-remove | \u5220\u9664\u6587\u4EF6\u4E4B\u524D\u7684\u94A9\u5B50\uFF0C\u53C2\u6570\u4E3A\u4E0A\u4F20\u7684\u6587\u4EF6\u548C\u6587\u4EF6\u5217\u8868\uFF0C\u82E5\u8FD4\u56DE false \u6216\u8005\u8FD4\u56DE Promise \u4E14\u88AB reject\uFF0C\u5219\u505C\u6B62\u4E0A\u4F20\u3002 | function(file, fileList) | \u2014 | \u2014 |\n| list-type | \u6587\u4EF6\u5217\u8868\u7684\u7C7B\u578B | string | text/picture/picture-card | text |\n| auto-upload | \u662F\u5426\u5728\u9009\u53D6\u6587\u4EF6\u540E\u7ACB\u5373\u8FDB\u884C\u4E0A\u4F20 | boolean | \u2014 | true |\n| file-list | \u4E0A\u4F20\u7684\u6587\u4EF6\u5217\u8868, \u4F8B\u5982: [{name: 'food.jpg', url: 'https://xxx.cdn.com/xxx.jpg'}] | array | \u2014 | [] |\n| http-request | \u8986\u76D6\u9ED8\u8BA4\u7684\u4E0A\u4F20\u884C\u4E3A\uFF0C\u53EF\u4EE5\u81EA\u5B9A\u4E49\u4E0A\u4F20\u7684\u5B9E\u73B0 | function | \u2014 | \u2014 |\n| disabled | \u662F\u5426\u7981\u7528 | boolean | \u2014 | false |\n| limit | \u6700\u5927\u5141\u8BB8\u4E0A\u4F20\u4E2A\u6570 | number | \u2014 | \u2014 |\n| on-exceed | \u6587\u4EF6\u8D85\u51FA\u4E2A\u6570\u9650\u5236\u65F6\u7684\u94A9\u5B50 | function(files, fileList) | \u2014 | - |\n\n| name | \u8BF4\u660E |\n| :--- | :--- |\n| trigger | \u89E6\u53D1\u6587\u4EF6\u9009\u62E9\u6846\u7684\u5185\u5BB9 |\n| tip | \u63D0\u793A\u8BF4\u660E\u6587\u5B57 |\n\n| \u65B9\u6CD5\u540D | \u8BF4\u660E | \u53C2\u6570 |\n| :--- | :--- | :--- |\n| clearFiles | \u6E05\u7A7A\u5DF2\u4E0A\u4F20\u7684\u6587\u4EF6\u5217\u8868\uFF08\u8BE5\u65B9\u6CD5\u4E0D\u652F\u6301\u5728 before-upload \u4E2D\u8C03\u7528\uFF09 | \u2014 |\n| abort | \u53D6\u6D88\u4E0A\u4F20\u8BF7\u6C42 | \uFF08 file: fileList \u4E2D\u7684 file \u5BF9\u8C61 \uFF09 |\n| submit | \u624B\u52A8\u4E0A\u4F20\u6587\u4EF6\u5217\u8868 | \u2014 |",
          "action": {
            "type": "attr",
            "values": [],
            "description": "required, upload URL"
          },
          "headers": {
            "type": "attr",
            "values": [],
            "description": "request headers"
          },
          "multiple": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "data": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "name": {
            "type": "attr",
            "values": [],
            "description": "key name for uploaded file, default: 'file'"
          },
          "width": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "with-credentials": {
            "type": "attr",
            "values": [],
            "description": "whether cookies are sent"
          },
          "show-file-list": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "drag": {
            "type": "attr",
            "values": [],
            "description": "whether to activate drag and drop mode"
          },
          "accept": {
            "type": "attr",
            "values": [],
            "description": "accepted file types, will not work when thumbnail-mode is true"
          },
          "on-preview": {
            "type": "attr",
            "values": [],
            "description": "hook function when clicking the uploaded files, type: function(file)"
          },
          "on-remove": {
            "type": "attr",
            "values": [],
            "description": "hook function when files are removed, type: function(file, fileList)"
          },
          "on-success": {
            "type": "attr",
            "values": [],
            "description": "hook function when uploaded successfully, type: function(response, file, fileList)"
          },
          "on-error": {
            "type": "attr",
            "values": [],
            "description": "hook function when some errors occurs, type: function(err, file, fileList)"
          },
          "on-progress": {
            "type": "attr",
            "values": [],
            "description": "hook function when some progress occurs, type: function(event, file, fileList)"
          },
          "on-change": {
            "type": "attr",
            "values": [],
            "description": "hook function when select file or upload file success or upload file fail, type: function(file, fileList)"
          },
          "before-upload": {
            "type": "attr",
            "values": [],
            "description": "hook function before uploading with the file to be uploaded as its parameter. If false is returned or a Promise is returned and then is rejected, uploading will be aborted, type: function(file)"
          },
          "before-remove": {
            "type": "attr",
            "values": [],
            "description": "hook function before removing a file with the file and file list as its parameters. If false is returned or a Promise is returned and then is rejected, removing will be aborted. type: function(file, fileList)"
          },
          "list-type": {
            "type": "attr",
            "values": ["text", "picture", "picture-card"],
            "description": "type of fileList, default: 'text'"
          },
          "auto-upload": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "file-list": {
            "type": "attr",
            "values": [],
            "description": "default uploaded files, e.g. [{name: '*.jpeg', url: '*'}]"
          },
          "http-request": {
            "type": "attr",
            "values": [],
            "description": "override default xhr behavior, allowing you to implement your own upload-file's request"
          },
          "disabled": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "limit": {
            "type": "attr",
            "values": [],
            "description": "maximum number of uploads allowed"
          },
          "on-exceed": {
            "type": "attr",
            "values": [],
            "description": "hook function when limit is exceeded"
          }
        },
        "el-timeline": {
          "_html": {
            "": '<el-timeline :reverse="reverse">\n<el-timeline-item\nv-for="(activity, index) in activities"\n:key="index"\n:timestamp="activity.timestamp">\n{{activity.content}}\n</el-timeline-item>\n</el-timeline>'
          },
          "_doc": "[element:https://element.eleme.cn/#/zh-CN/component/timeline](https://element.eleme.cn/#/zh-CN/component/timeline) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| reverse | \u6307\u5B9A\u8282\u70B9\u6392\u5E8F\u65B9\u5411\uFF0C\u9ED8\u8BA4\u4E3A\u6B63\u5E8F | boolean | \u2014 | false |",
          "reverse": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-calendar": {
          "_html": {
            "": '<el-calendar v-model="${1:value}"></el-calendar>'
          },
          "_doc": "[element\uFF1Ahttps://element.eleme.cn/#/zh-CN/component/calendar](https://element.eleme.cn/#/zh-CN/component/calendar) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| value / v-model | \u7ED1\u5B9A\u503C | string | Date/string/number | - |\n| range | \u65F6\u95F4\u8303\u56F4\uFF0C\u5305\u62EC\u5F00\u59CB\u65F6\u95F4\u4E0E\u7ED3\u675F\u65F6\u95F4.\u5F00\u59CB\u65F6\u95F4\u5FC5\u987B\u662F\u5468\u4E00\uFF0C\u7ED3\u675F\u65F6\u95F4\u5FC5\u987B\u662F\u5468\u65E5\uFF0C\u4E14\u65F6\u95F4\u8DE8\u5EA6\u4E0D\u80FD\u8D85\u8FC7\u4E24\u4E2A\u6708\u3002 | Array | - |\n| first-day-of-week | \u5468\u8D77\u59CB\u65E5 | Number | 1 \u5230 7 | 1 |",
          "v-model": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "range": {
            "type": "attr",
            "values": [],
            "description": "whether to select a range"
          },
          "first-day-of-week": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "date": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "data": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        },
        "el-image": {
          "_html": {
            "": '<el-image\nstyle="${1:width: 100px; height: 100px}"\n:src="${2:url}"\n:fit="${3:fit}">$4</el-image>'
          },
          "_doc": "[element\uFF1Ahttps://element.eleme.cn/#/zh-CN/component/image](https://element.eleme.cn/#/zh-CN/component/image) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| src | \u56FE\u7247\u6E90\uFF0C\u540C\u539F\u751F | string | - | - |\n| fit | \u786E\u5B9A\u56FE\u7247\u5982\u4F55\u9002\u5E94\u5BB9\u5668\u6846\uFF0C\u540C\u539F\u751F object-fit | string | fill / contain / cover / none / scale-down | - |\n| alt | \u539F\u751F alt | string | - | - |\n| referrer-policy | \u539F\u751F referrerPolicy | string | - | - |\n| lazy | \u662F\u5426\u5F00\u542F\u61D2\u52A0\u8F7D | boolean | - | false |\n| scroll-container | \u5F00\u542F\u61D2\u52A0\u8F7D\u540E\uFF0C\u76D1\u542C scroll \u4E8B\u4EF6\u7684\u5BB9\u5668 | string / HTMLElement | - | \u6700\u8FD1\u4E00\u4E2A overflow \u503C\u4E3A auto \u6216 scroll \u7684\u7236\u5143\u7D20 |\n| preview-src-list | \u5F00\u542F\u56FE\u7247\u9884\u89C8\u529F\u80FD | Array | - | - |\n| z-index | \u8BBE\u7F6E\u56FE\u7247\u9884\u89C8\u7684 z-index | Number | - | - |\n\n| \u4E8B\u4EF6\u540D\u79F0 | \u8BF4\u660E | \u56DE\u8C03\u51FD\u6570 |\n| :--- | :--- | :--- |\n| load | \u56FE\u7247\u52A0\u8F7D\u6210\u529F\u89E6\u53D1 | (e: Event) |\n| error | \u56FE\u7247\u52A0\u8F7D\u5931\u8D25\u89E6\u53D1 | (e: Error) |\n\n| slot\u540D\u79F0 | \u8BF4\u660E |\n| :--- | :--- |\n| placeholder | \u56FE\u7247\u672A\u52A0\u8F7D\u7684\u5360\u4F4D\u5185\u5BB9 |\n| error | \u52A0\u8F7D\u5931\u8D25\u7684\u5185\u5BB9 |",
          "src": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "fit": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "alt": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "referrer-policy": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "lazy": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "scroll-container": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "preview-src-list": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "z-index": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "load": {
            "type": "attr",
            "values": [],
            "description": "method for loading subtree data"
          },
          "error": {
            "type": "attr",
            "values": [],
            "description": "field error message, set its value and the field will validate error and show this message immediately"
          }
        },
        "el-backtop": {
          "_html": {
            "": '<el-backtop target="${1:.page-component__scroll .el-scrollbar__wrap}">$2</el-backtop>'
          },
          "_doc": "[element\uFF1Ahttps://element.eleme.cn/#/zh-CN/component/backtop](https://element.eleme.cn/#/zh-CN/component/backtop) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| target | \u89E6\u53D1\u6EDA\u52A8\u7684\u5BF9\u8C61 | string | Date/string/number | - |\n| visibility-height | \u6EDA\u52A8\u9AD8\u5EA6\u8FBE\u5230\u6B64\u53C2\u6570\u503C\u624D\u51FA\u73B0 | number | 200 |\n| right | \u63A7\u5236\u5176\u663E\u793A\u4F4D\u7F6E, \u8DDD\u79BB\u9875\u9762\u53F3\u8FB9\u8DDD | number | 40 |\n| bottom | \u63A7\u5236\u5176\u663E\u793A\u4F4D\u7F6E, \u8DDD\u79BB\u9875\u9762\u5E95\u90E8\u8DDD\u79BB | number | 40 |\n\n| \u4E8B\u4EF6 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| click | \u70B9\u51FB\u6309\u94AE\u89E6\u53D1\u7684\u4E8B\u4EF6 | \u70B9\u51FB\u4E8B\u4EF6 |",
          "target": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "visibility-height": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "right": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "bottom": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "click": {
            "type": "event",
            "values": [],
            "description": ""
          }
        },
        "el-infinite-scroll": {
          "_html": {
            "": '<ul class="infinite-list" v-infinite-scroll="load" style="overflow:auto">\n<li v-for="i in count" class="infinite-list-item">{{ i }}</li>\n</ul>'
          }
        },
        "el-drawer": {
          "_html": {
            "": '<el-drawer\ntitle="${1:\u6211\u662F\u6807\u9898}"\n:visible.sync="${2:drawer}"\n:direction="${3:direction}"\n:before-close="${4:handleClose}">\n${5:<span>\u6211\u6765\u5566!</span>}\n</el-drawer>'
          },
          "_doc": "[element\uFF1Ahttps://element.eleme.cn/#/zh-CN/component/drawer](https://element.eleme.cn/#/zh-CN/component/drawer) \n\n| \u53C2\u6570 | \u8BF4\u660E | \u7C7B\u578B | \u53EF\u9009\u503C | \u9ED8\u8BA4\u503C |\n| :--- | :--- | :--- | :--- | :--- |\n| append-to-body | Drawer \u81EA\u8EAB\u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\u3002\u5D4C\u5957\u7684 Drawer \u5FC5\u987B\u6307\u5B9A\u8BE5\u5C5E\u6027\u5E76\u8D4B\u503C\u4E3A true | boolean | - | false |\n| before-close | \u5173\u95ED\u524D\u7684\u56DE\u8C03\uFF0C\u4F1A\u6682\u505C Drawer \u7684\u5173\u95ED | function(done)\uFF0Cdone \u7528\u4E8E\u5173\u95ED Drawer | - | - |\n| close-on-press-escape | \u662F\u5426\u53EF\u4EE5\u901A\u8FC7\u6309\u4E0B ESC \u5173\u95ED Drawer | boolean | - | true |\n| custom-class	 | Drawer \u7684\u81EA\u5B9A\u4E49\u7C7B\u540D | string | - | - |\n| destroy-on-close | \u63A7\u5236\u662F\u5426\u5728\u5173\u95ED Drawer \u4E4B\u540E\u5C06\u5B50\u5143\u7D20\u5168\u90E8\u9500\u6BC1 | boolean | - | false |\n| modal | \u662F\u5426\u9700\u8981\u906E\u7F69\u5C42 | boolean | - | true |\n| modal-append-to-body | \u906E\u7F69\u5C42\u662F\u5426\u63D2\u5165\u81F3 body \u5143\u7D20\u4E0A\uFF0C\u82E5\u4E3A false\uFF0C\u5219\u906E\u7F69\u5C42\u4F1A\u63D2\u5165\u81F3 Drawer \u7684\u7236\u5143\u7D20\u4E0A | boolean | - | true |\n| direction | Drawer \u6253\u5F00\u7684\u65B9\u5411 | Direction | rtl / ltr / ttb / tbb | rtl |\n| show-close | \u662F\u5426\u663E\u793A\u5173\u95ED\u6309\u94AE | boolean | - | true |\n| size | Drawer \u7A97\u4F53\u7684\u5927\u5C0F, \u5F53\u4F7F\u7528 number \u7C7B\u578B\u65F6, \u4EE5\u50CF\u7D20\u4E3A\u5355\u4F4D, \u5F53\u4F7F\u7528 string \u7C7B\u578B\u65F6, \u8BF7\u4F20\u5165 'x%', \u5426\u5219\u4FBF\u4F1A\u4EE5 number \u7C7B\u578B\u89E3\u91CA | number / string | - | 30% |\n| title | Drawer \u7684\u6807\u9898\uFF0C\u4E5F\u53EF\u901A\u8FC7\u5177\u540D slot \uFF08\u89C1\u4E0B\u8868\uFF09\u4F20\u5165 | string | - | - |\n| visible | \u662F\u5426\u663E\u793A Drawer\uFF0C\u652F\u6301 .sync \u4FEE\u9970\u7B26 | boolean | - | false |\n| wrapperClosable | \u70B9\u51FB\u906E\u7F69\u5C42\u662F\u5426\u53EF\u4EE5\u5173\u95ED Drawer | boolean | - | true |\n\n| slot\u540D\u79F0 | \u8BF4\u660E |\n| :--- | :--- |\n| - | Drawer \u7684\u5185\u5BB9 |\n| title | Drawer \u6807\u9898\u533A\u7684\u5185\u5BB9 |\n\n| \u4E8B\u4EF6 | \u8BF4\u660E | \u56DE\u8C03\u53C2\u6570 |\n| :--- | :--- | :--- |\n| open | Drawer \u6253\u5F00\u7684\u56DE\u8C03 | - |\n| opened | Drawer \u6253\u5F00\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03 | - |\n| close | Drawer \u5173\u95ED\u7684\u56DE\u8C03 | - |\n| closed | Drawer \u5173\u95ED\u52A8\u753B\u7ED3\u675F\u65F6\u7684\u56DE\u8C03 | - |",
          "append-to-body": {
            "type": "attr",
            "values": [],
            "description": "whether to append Dialog itself to body. A nested Dialog should have this attribute set to 'true', default: false"
          },
          "before-close": {
            "type": "attr",
            "values": [],
            "description": "callback before Dialog closes, and it will prevent Dialog from closing"
          },
          "close-on-press-escape": {
            "type": "attr",
            "values": [],
            "description": "whether the Dialog can be closed by pressing ESC, default: true"
          },
          "custom-class": {
            "type": "attr",
            "values": [],
            "description": "custom class names for Dialog"
          },
          "destroy-on-close": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "modal": {
            "type": "attr",
            "values": [],
            "description": "whether a mask is displayed, default: true"
          },
          "modal-append-to-body": {
            "type": "attr",
            "values": [],
            "description": "whether to append modal to body element. If false, the modal will be appended to Dialog's parent element, default: true"
          },
          "direction": {
            "type": "attr",
            "values": ["vertical", "horizontal"],
            "description": "display direction, default: horizontal"
          },
          "show-close": {
            "type": "attr",
            "values": [],
            "description": "whether to show a close button, default: true"
          },
          "size": {
            "type": "attr",
            "values": ["medium", "small", "mini"],
            "description": ""
          },
          "title": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "visible": {
            "type": "attr",
            "values": [],
            "description": "visibility of Dialog, supports the '.sync' modifier, default: false"
          },
          "wrapperClosable": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "open": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "opened": {
            "type": "attr",
            "values": [],
            "description": ""
          },
          "close": {
            "type": "event",
            "values": [],
            "description": ""
          },
          "closed": {
            "type": "attr",
            "values": [],
            "description": ""
          }
        }
      },
      "script": {
        "el-alert": {
          "_html": {
            "": "this.\\$alert('\u8FD9\u662F\u4E00\u6BB5\u5185\u5BB9', '\u6807\u9898\u540D\u79F0', {\nconfirmButtonText: '\u786E\u5B9A',\ncallback: action => {\n\n}\n})"
          }
        },
        "el-conform": {
          "_html": {
            "": "this.\\$confirm('\u6B64\u64CD\u4F5C\u5C06\u6C38\u4E45\u5220\u9664\u8BE5\u6587\u4EF6, \u662F\u5426\u7EE7\u7EED?', '\u63D0\u793A', {\nconfirmButtonText: '\u786E\u5B9A',\ncancelButtonText: '\u53D6\u6D88',\ntype: 'warning'\n}).then(() => {\nthis.\\$message({\ntype: 'success',\nmessage: '\u5220\u9664\u6210\u529F!'\n})\n}).catch(() => {\nthis.\\$message({\ntype: 'info',\nmessage: '\u5DF2\u53D6\u6D88\u5220\u9664'\n})\n})"
          }
        },
        "el-form": {
          "_html": {
            ":clear": "this.\\$refs['${1:form}'].clearValidate()",
            ":valid": "this.\\$refs['${1:formName}'].validate((valid) => {\nif (valid) {\n$2\n} else {\nreturn false\n}\n})"
          }
        },
        "el-message": {
          "_html": {
            "": "this.\\$message({\nmessage: '\u606D\u559C\u4F60\uFF0C\u8FD9\u662F\u4E00\u6761\u6210\u529F\u6D88\u606F',\ntype: 'success'\n})",
            ":close": "this.\\$message({\nmessage: '\u606D\u559C\u4F60\uFF0C\u8FD9\u662F\u4E00\u6761\u6210\u529F\u6D88\u606F',\nshowClose: true,\ntype: 'success'\n})"
          }
        },
        "el-notify": {
          "_html": {
            "": "this.\\$notify({\ntitle: '\u6807\u9898\u540D\u79F0',\nmessage: h('i', {style: 'color: teal'}, 'notify')\n})",
            ":noclose": "this.\\$notify({\ntitle: '\u63D0\u793A',\nmessage: '\u4E0D\u4F1A\u81EA\u52A8\u5173\u95ED\u7684\u6D88\u606F',\nduration: 0\n})",
            ":success": "this.\\$notify({\ntitle: '\u6210\u529F',\nmessage: '\u8FD9\u662F\u4E00\u6761\u6210\u529F\u7684\u63D0\u793A\u6D88\u606F',\ntype: 'success'\n})"
          }
        },
        "el-prompt": {
          "_html": {
            "": "this.\\$prompt('\u8BF7\u8F93\u5165\u90AE\u7BB1', '\u63D0\u793A', {\nconfirmButtonText: '\u786E\u5B9A',\ncancelButtonText: '\u53D6\u6D88',\ninputPattern: '',\ninputErrorMessage: ''\n}).then(({ value }) => {\n\n}).catch(() => {\n\n});"
          }
        },
        "el-rules": {
          "_html": {
            ":array": "{ type: 'array', required: true, message: '\u8BF7\u81F3\u5C11\u9009\u62E9\u4E00\u4E2A', trigger: 'change' }",
            ":date": "{ type: 'date', required: true, message: '\u8BF7\u9009\u62E9\u65E5\u671F', trigger: 'change' }",
            ":minMax": "{require: true, min: 3, max: 5, message: '\u957F\u5EA6\u5728 3 \u5230 5 \u4E2A\u5B57\u7B26', trigger: 'blur' }",
            ":required": "{required: true, message:'\u8BF7\u8F93\u5165', trigger: 'blur'}",
            ":self": "{ validator: validatePass, trigger: 'blur' }",
            ":selfmethod": "var validatePass = (rule, value, callback) => {\nif (value === '') {\ncallback(new Error(''));\n} else {\ncallback();\n}\n}"
          }
        },
        "el-pagination": {
          "_html": {
            "": "handleCurrentChange (pageNum) {\nthis.pageNum = pageNum\nthis.fetchList()\n},\nhandleSizeChange(pageSize) {\nthis.pageSize = pageSize\nthis.fetchList()\n}"
          }
        },
        "reg-phone": {
          "_html": {
            "": "/^[1][3,4,5,7,8][0-9]{9}$/"
          }
        },
        "reg-email": {
          "_html": {
            "": "/^[A-Za-zd]+([-_.][A-Za-zd]+)*@([A-Za-zd]+[-.])+[A-Za-zd]{2,4}$/"
          }
        }
      },
      "templateGlobalAttribute": {
        "v-loading": {
          "type": "attr",
          "values": ["string"],
          "description": "el-loading"
        }
      }
    };
  }
});

// node_modules/js-beautify/js/src/core/output.js
var require_output = __commonJS({
  "node_modules/js-beautify/js/src/core/output.js"(exports2, module2) {
    "use strict";
    function OutputLine(parent) {
      this.__parent = parent;
      this.__character_count = 0;
      this.__indent_count = -1;
      this.__alignment_count = 0;
      this.__wrap_point_index = 0;
      this.__wrap_point_character_count = 0;
      this.__wrap_point_indent_count = -1;
      this.__wrap_point_alignment_count = 0;
      this.__items = [];
    }
    OutputLine.prototype.clone_empty = function() {
      var line = new OutputLine(this.__parent);
      line.set_indent(this.__indent_count, this.__alignment_count);
      return line;
    };
    OutputLine.prototype.item = function(index) {
      if (index < 0) {
        return this.__items[this.__items.length + index];
      } else {
        return this.__items[index];
      }
    };
    OutputLine.prototype.has_match = function(pattern) {
      for (var lastCheckedOutput = this.__items.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {
        if (this.__items[lastCheckedOutput].match(pattern)) {
          return true;
        }
      }
      return false;
    };
    OutputLine.prototype.set_indent = function(indent, alignment) {
      if (this.is_empty()) {
        this.__indent_count = indent || 0;
        this.__alignment_count = alignment || 0;
        this.__character_count = this.__parent.get_indent_size(this.__indent_count, this.__alignment_count);
      }
    };
    OutputLine.prototype._set_wrap_point = function() {
      if (this.__parent.wrap_line_length) {
        this.__wrap_point_index = this.__items.length;
        this.__wrap_point_character_count = this.__character_count;
        this.__wrap_point_indent_count = this.__parent.next_line.__indent_count;
        this.__wrap_point_alignment_count = this.__parent.next_line.__alignment_count;
      }
    };
    OutputLine.prototype._should_wrap = function() {
      return this.__wrap_point_index && this.__character_count > this.__parent.wrap_line_length && this.__wrap_point_character_count > this.__parent.next_line.__character_count;
    };
    OutputLine.prototype._allow_wrap = function() {
      if (this._should_wrap()) {
        this.__parent.add_new_line();
        var next = this.__parent.current_line;
        next.set_indent(this.__wrap_point_indent_count, this.__wrap_point_alignment_count);
        next.__items = this.__items.slice(this.__wrap_point_index);
        this.__items = this.__items.slice(0, this.__wrap_point_index);
        next.__character_count += this.__character_count - this.__wrap_point_character_count;
        this.__character_count = this.__wrap_point_character_count;
        if (next.__items[0] === " ") {
          next.__items.splice(0, 1);
          next.__character_count -= 1;
        }
        return true;
      }
      return false;
    };
    OutputLine.prototype.is_empty = function() {
      return this.__items.length === 0;
    };
    OutputLine.prototype.last = function() {
      if (!this.is_empty()) {
        return this.__items[this.__items.length - 1];
      } else {
        return null;
      }
    };
    OutputLine.prototype.push = function(item) {
      this.__items.push(item);
      var last_newline_index = item.lastIndexOf("\n");
      if (last_newline_index !== -1) {
        this.__character_count = item.length - last_newline_index;
      } else {
        this.__character_count += item.length;
      }
    };
    OutputLine.prototype.pop = function() {
      var item = null;
      if (!this.is_empty()) {
        item = this.__items.pop();
        this.__character_count -= item.length;
      }
      return item;
    };
    OutputLine.prototype._remove_indent = function() {
      if (this.__indent_count > 0) {
        this.__indent_count -= 1;
        this.__character_count -= this.__parent.indent_size;
      }
    };
    OutputLine.prototype._remove_wrap_indent = function() {
      if (this.__wrap_point_indent_count > 0) {
        this.__wrap_point_indent_count -= 1;
      }
    };
    OutputLine.prototype.trim = function() {
      while (this.last() === " ") {
        this.__items.pop();
        this.__character_count -= 1;
      }
    };
    OutputLine.prototype.toString = function() {
      var result = "";
      if (this.is_empty()) {
        if (this.__parent.indent_empty_lines) {
          result = this.__parent.get_indent_string(this.__indent_count);
        }
      } else {
        result = this.__parent.get_indent_string(this.__indent_count, this.__alignment_count);
        result += this.__items.join("");
      }
      return result;
    };
    function IndentStringCache(options, baseIndentString) {
      this.__cache = [""];
      this.__indent_size = options.indent_size;
      this.__indent_string = options.indent_char;
      if (!options.indent_with_tabs) {
        this.__indent_string = new Array(options.indent_size + 1).join(options.indent_char);
      }
      baseIndentString = baseIndentString || "";
      if (options.indent_level > 0) {
        baseIndentString = new Array(options.indent_level + 1).join(this.__indent_string);
      }
      this.__base_string = baseIndentString;
      this.__base_string_length = baseIndentString.length;
    }
    IndentStringCache.prototype.get_indent_size = function(indent, column) {
      var result = this.__base_string_length;
      column = column || 0;
      if (indent < 0) {
        result = 0;
      }
      result += indent * this.__indent_size;
      result += column;
      return result;
    };
    IndentStringCache.prototype.get_indent_string = function(indent_level, column) {
      var result = this.__base_string;
      column = column || 0;
      if (indent_level < 0) {
        indent_level = 0;
        result = "";
      }
      column += indent_level * this.__indent_size;
      this.__ensure_cache(column);
      result += this.__cache[column];
      return result;
    };
    IndentStringCache.prototype.__ensure_cache = function(column) {
      while (column >= this.__cache.length) {
        this.__add_column();
      }
    };
    IndentStringCache.prototype.__add_column = function() {
      var column = this.__cache.length;
      var indent = 0;
      var result = "";
      if (this.__indent_size && column >= this.__indent_size) {
        indent = Math.floor(column / this.__indent_size);
        column -= indent * this.__indent_size;
        result = new Array(indent + 1).join(this.__indent_string);
      }
      if (column) {
        result += new Array(column + 1).join(" ");
      }
      this.__cache.push(result);
    };
    function Output(options, baseIndentString) {
      this.__indent_cache = new IndentStringCache(options, baseIndentString);
      this.raw = false;
      this._end_with_newline = options.end_with_newline;
      this.indent_size = options.indent_size;
      this.wrap_line_length = options.wrap_line_length;
      this.indent_empty_lines = options.indent_empty_lines;
      this.__lines = [];
      this.previous_line = null;
      this.current_line = null;
      this.next_line = new OutputLine(this);
      this.space_before_token = false;
      this.non_breaking_space = false;
      this.previous_token_wrapped = false;
      this.__add_outputline();
    }
    Output.prototype.__add_outputline = function() {
      this.previous_line = this.current_line;
      this.current_line = this.next_line.clone_empty();
      this.__lines.push(this.current_line);
    };
    Output.prototype.get_line_number = function() {
      return this.__lines.length;
    };
    Output.prototype.get_indent_string = function(indent, column) {
      return this.__indent_cache.get_indent_string(indent, column);
    };
    Output.prototype.get_indent_size = function(indent, column) {
      return this.__indent_cache.get_indent_size(indent, column);
    };
    Output.prototype.is_empty = function() {
      return !this.previous_line && this.current_line.is_empty();
    };
    Output.prototype.add_new_line = function(force_newline) {
      if (this.is_empty() || !force_newline && this.just_added_newline()) {
        return false;
      }
      if (!this.raw) {
        this.__add_outputline();
      }
      return true;
    };
    Output.prototype.get_code = function(eol) {
      this.trim(true);
      var last_item = this.current_line.pop();
      if (last_item) {
        if (last_item[last_item.length - 1] === "\n") {
          last_item = last_item.replace(/\n+$/g, "");
        }
        this.current_line.push(last_item);
      }
      if (this._end_with_newline) {
        this.__add_outputline();
      }
      var sweet_code = this.__lines.join("\n");
      if (eol !== "\n") {
        sweet_code = sweet_code.replace(/[\n]/g, eol);
      }
      return sweet_code;
    };
    Output.prototype.set_wrap_point = function() {
      this.current_line._set_wrap_point();
    };
    Output.prototype.set_indent = function(indent, alignment) {
      indent = indent || 0;
      alignment = alignment || 0;
      this.next_line.set_indent(indent, alignment);
      if (this.__lines.length > 1) {
        this.current_line.set_indent(indent, alignment);
        return true;
      }
      this.current_line.set_indent();
      return false;
    };
    Output.prototype.add_raw_token = function(token) {
      for (var x = 0; x < token.newlines; x++) {
        this.__add_outputline();
      }
      this.current_line.set_indent(-1);
      this.current_line.push(token.whitespace_before);
      this.current_line.push(token.text);
      this.space_before_token = false;
      this.non_breaking_space = false;
      this.previous_token_wrapped = false;
    };
    Output.prototype.add_token = function(printable_token) {
      this.__add_space_before_token();
      this.current_line.push(printable_token);
      this.space_before_token = false;
      this.non_breaking_space = false;
      this.previous_token_wrapped = this.current_line._allow_wrap();
    };
    Output.prototype.__add_space_before_token = function() {
      if (this.space_before_token && !this.just_added_newline()) {
        if (!this.non_breaking_space) {
          this.set_wrap_point();
        }
        this.current_line.push(" ");
      }
    };
    Output.prototype.remove_indent = function(index) {
      var output_length = this.__lines.length;
      while (index < output_length) {
        this.__lines[index]._remove_indent();
        index++;
      }
      this.current_line._remove_wrap_indent();
    };
    Output.prototype.trim = function(eat_newlines) {
      eat_newlines = eat_newlines === void 0 ? false : eat_newlines;
      this.current_line.trim();
      while (eat_newlines && this.__lines.length > 1 && this.current_line.is_empty()) {
        this.__lines.pop();
        this.current_line = this.__lines[this.__lines.length - 1];
        this.current_line.trim();
      }
      this.previous_line = this.__lines.length > 1 ? this.__lines[this.__lines.length - 2] : null;
    };
    Output.prototype.just_added_newline = function() {
      return this.current_line.is_empty();
    };
    Output.prototype.just_added_blankline = function() {
      return this.is_empty() || this.current_line.is_empty() && this.previous_line.is_empty();
    };
    Output.prototype.ensure_empty_line_above = function(starts_with, ends_with) {
      var index = this.__lines.length - 2;
      while (index >= 0) {
        var potentialEmptyLine = this.__lines[index];
        if (potentialEmptyLine.is_empty()) {
          break;
        } else if (potentialEmptyLine.item(0).indexOf(starts_with) !== 0 && potentialEmptyLine.item(-1) !== ends_with) {
          this.__lines.splice(index + 1, 0, new OutputLine(this));
          this.previous_line = this.__lines[this.__lines.length - 2];
          break;
        }
        index--;
      }
    };
    module2.exports.Output = Output;
  }
});

// node_modules/js-beautify/js/src/core/token.js
var require_token = __commonJS({
  "node_modules/js-beautify/js/src/core/token.js"(exports2, module2) {
    "use strict";
    function Token(type, text, newlines, whitespace_before) {
      this.type = type;
      this.text = text;
      this.comments_before = null;
      this.newlines = newlines || 0;
      this.whitespace_before = whitespace_before || "";
      this.parent = null;
      this.next = null;
      this.previous = null;
      this.opened = null;
      this.closed = null;
      this.directives = null;
    }
    module2.exports.Token = Token;
  }
});

// node_modules/js-beautify/js/src/javascript/acorn.js
var require_acorn = __commonJS({
  "node_modules/js-beautify/js/src/javascript/acorn.js"(exports2) {
    "use strict";
    var baseASCIIidentifierStartChars = "\\x23\\x24\\x40\\x41-\\x5a\\x5f\\x61-\\x7a";
    var baseASCIIidentifierChars = "\\x24\\x30-\\x39\\x41-\\x5a\\x5f\\x61-\\x7a";
    var nonASCIIidentifierStartChars = "\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc";
    var nonASCIIidentifierChars = "\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f";
    var unicodeEscapeOrCodePoint = "\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]+\\}";
    var identifierStart = "(?:" + unicodeEscapeOrCodePoint + "|[" + baseASCIIidentifierStartChars + nonASCIIidentifierStartChars + "])";
    var identifierChars = "(?:" + unicodeEscapeOrCodePoint + "|[" + baseASCIIidentifierChars + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "])*";
    exports2.identifier = new RegExp(identifierStart + identifierChars, "g");
    exports2.identifierStart = new RegExp(identifierStart);
    exports2.identifierMatch = new RegExp("(?:" + unicodeEscapeOrCodePoint + "|[" + baseASCIIidentifierChars + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "])+");
    exports2.newline = /[\n\r\u2028\u2029]/;
    exports2.lineBreak = new RegExp("\r\n|" + exports2.newline.source);
    exports2.allLineBreaks = new RegExp(exports2.lineBreak.source, "g");
  }
});

// node_modules/js-beautify/js/src/core/options.js
var require_options = __commonJS({
  "node_modules/js-beautify/js/src/core/options.js"(exports2, module2) {
    "use strict";
    function Options(options, merge_child_field) {
      this.raw_options = _mergeOpts(options, merge_child_field);
      this.disabled = this._get_boolean("disabled");
      this.eol = this._get_characters("eol", "auto");
      this.end_with_newline = this._get_boolean("end_with_newline");
      this.indent_size = this._get_number("indent_size", 4);
      this.indent_char = this._get_characters("indent_char", " ");
      this.indent_level = this._get_number("indent_level");
      this.preserve_newlines = this._get_boolean("preserve_newlines", true);
      this.max_preserve_newlines = this._get_number("max_preserve_newlines", 32786);
      if (!this.preserve_newlines) {
        this.max_preserve_newlines = 0;
      }
      this.indent_with_tabs = this._get_boolean("indent_with_tabs", this.indent_char === "	");
      if (this.indent_with_tabs) {
        this.indent_char = "	";
        if (this.indent_size === 1) {
          this.indent_size = 4;
        }
      }
      this.wrap_line_length = this._get_number("wrap_line_length", this._get_number("max_char"));
      this.indent_empty_lines = this._get_boolean("indent_empty_lines");
      this.templating = this._get_selection_list("templating", ["auto", "none", "angular", "django", "erb", "handlebars", "php", "smarty"], ["auto"]);
    }
    Options.prototype._get_array = function(name, default_value) {
      var option_value = this.raw_options[name];
      var result = default_value || [];
      if (typeof option_value === "object") {
        if (option_value !== null && typeof option_value.concat === "function") {
          result = option_value.concat();
        }
      } else if (typeof option_value === "string") {
        result = option_value.split(/[^a-zA-Z0-9_\/\-]+/);
      }
      return result;
    };
    Options.prototype._get_boolean = function(name, default_value) {
      var option_value = this.raw_options[name];
      var result = option_value === void 0 ? !!default_value : !!option_value;
      return result;
    };
    Options.prototype._get_characters = function(name, default_value) {
      var option_value = this.raw_options[name];
      var result = default_value || "";
      if (typeof option_value === "string") {
        result = option_value.replace(/\\r/, "\r").replace(/\\n/, "\n").replace(/\\t/, "	");
      }
      return result;
    };
    Options.prototype._get_number = function(name, default_value) {
      var option_value = this.raw_options[name];
      default_value = parseInt(default_value, 10);
      if (isNaN(default_value)) {
        default_value = 0;
      }
      var result = parseInt(option_value, 10);
      if (isNaN(result)) {
        result = default_value;
      }
      return result;
    };
    Options.prototype._get_selection = function(name, selection_list, default_value) {
      var result = this._get_selection_list(name, selection_list, default_value);
      if (result.length !== 1) {
        throw new Error(
          "Invalid Option Value: The option '" + name + "' can only be one of the following values:\n" + selection_list + "\nYou passed in: '" + this.raw_options[name] + "'"
        );
      }
      return result[0];
    };
    Options.prototype._get_selection_list = function(name, selection_list, default_value) {
      if (!selection_list || selection_list.length === 0) {
        throw new Error("Selection list cannot be empty.");
      }
      default_value = default_value || [selection_list[0]];
      if (!this._is_valid_selection(default_value, selection_list)) {
        throw new Error("Invalid Default Value!");
      }
      var result = this._get_array(name, default_value);
      if (!this._is_valid_selection(result, selection_list)) {
        throw new Error(
          "Invalid Option Value: The option '" + name + "' can contain only the following values:\n" + selection_list + "\nYou passed in: '" + this.raw_options[name] + "'"
        );
      }
      return result;
    };
    Options.prototype._is_valid_selection = function(result, selection_list) {
      return result.length && selection_list.length && !result.some(function(item) {
        return selection_list.indexOf(item) === -1;
      });
    };
    function _mergeOpts(allOptions, childFieldName) {
      var finalOpts = {};
      allOptions = _normalizeOpts(allOptions);
      var name;
      for (name in allOptions) {
        if (name !== childFieldName) {
          finalOpts[name] = allOptions[name];
        }
      }
      if (childFieldName && allOptions[childFieldName]) {
        for (name in allOptions[childFieldName]) {
          finalOpts[name] = allOptions[childFieldName][name];
        }
      }
      return finalOpts;
    }
    function _normalizeOpts(options) {
      var convertedOpts = {};
      var key;
      for (key in options) {
        var newKey = key.replace(/-/g, "_");
        convertedOpts[newKey] = options[key];
      }
      return convertedOpts;
    }
    module2.exports.Options = Options;
    module2.exports.normalizeOpts = _normalizeOpts;
    module2.exports.mergeOpts = _mergeOpts;
  }
});

// node_modules/js-beautify/js/src/javascript/options.js
var require_options2 = __commonJS({
  "node_modules/js-beautify/js/src/javascript/options.js"(exports2, module2) {
    "use strict";
    var BaseOptions = require_options().Options;
    var validPositionValues = ["before-newline", "after-newline", "preserve-newline"];
    function Options(options) {
      BaseOptions.call(this, options, "js");
      var raw_brace_style = this.raw_options.brace_style || null;
      if (raw_brace_style === "expand-strict") {
        this.raw_options.brace_style = "expand";
      } else if (raw_brace_style === "collapse-preserve-inline") {
        this.raw_options.brace_style = "collapse,preserve-inline";
      } else if (this.raw_options.braces_on_own_line !== void 0) {
        this.raw_options.brace_style = this.raw_options.braces_on_own_line ? "expand" : "collapse";
      }
      var brace_style_split = this._get_selection_list("brace_style", ["collapse", "expand", "end-expand", "none", "preserve-inline"]);
      this.brace_preserve_inline = false;
      this.brace_style = "collapse";
      for (var bs = 0; bs < brace_style_split.length; bs++) {
        if (brace_style_split[bs] === "preserve-inline") {
          this.brace_preserve_inline = true;
        } else {
          this.brace_style = brace_style_split[bs];
        }
      }
      this.unindent_chained_methods = this._get_boolean("unindent_chained_methods");
      this.break_chained_methods = this._get_boolean("break_chained_methods");
      this.space_in_paren = this._get_boolean("space_in_paren");
      this.space_in_empty_paren = this._get_boolean("space_in_empty_paren");
      this.jslint_happy = this._get_boolean("jslint_happy");
      this.space_after_anon_function = this._get_boolean("space_after_anon_function");
      this.space_after_named_function = this._get_boolean("space_after_named_function");
      this.keep_array_indentation = this._get_boolean("keep_array_indentation");
      this.space_before_conditional = this._get_boolean("space_before_conditional", true);
      this.unescape_strings = this._get_boolean("unescape_strings");
      this.e4x = this._get_boolean("e4x");
      this.comma_first = this._get_boolean("comma_first");
      this.operator_position = this._get_selection("operator_position", validPositionValues);
      this.test_output_raw = this._get_boolean("test_output_raw");
      if (this.jslint_happy) {
        this.space_after_anon_function = true;
      }
    }
    Options.prototype = new BaseOptions();
    module2.exports.Options = Options;
  }
});

// node_modules/js-beautify/js/src/core/inputscanner.js
var require_inputscanner = __commonJS({
  "node_modules/js-beautify/js/src/core/inputscanner.js"(exports2, module2) {
    "use strict";
    var regexp_has_sticky = RegExp.prototype.hasOwnProperty("sticky");
    function InputScanner(input_string) {
      this.__input = input_string || "";
      this.__input_length = this.__input.length;
      this.__position = 0;
    }
    InputScanner.prototype.restart = function() {
      this.__position = 0;
    };
    InputScanner.prototype.back = function() {
      if (this.__position > 0) {
        this.__position -= 1;
      }
    };
    InputScanner.prototype.hasNext = function() {
      return this.__position < this.__input_length;
    };
    InputScanner.prototype.next = function() {
      var val = null;
      if (this.hasNext()) {
        val = this.__input.charAt(this.__position);
        this.__position += 1;
      }
      return val;
    };
    InputScanner.prototype.peek = function(index) {
      var val = null;
      index = index || 0;
      index += this.__position;
      if (index >= 0 && index < this.__input_length) {
        val = this.__input.charAt(index);
      }
      return val;
    };
    InputScanner.prototype.__match = function(pattern, index) {
      pattern.lastIndex = index;
      var pattern_match = pattern.exec(this.__input);
      if (pattern_match && !(regexp_has_sticky && pattern.sticky)) {
        if (pattern_match.index !== index) {
          pattern_match = null;
        }
      }
      return pattern_match;
    };
    InputScanner.prototype.test = function(pattern, index) {
      index = index || 0;
      index += this.__position;
      if (index >= 0 && index < this.__input_length) {
        return !!this.__match(pattern, index);
      } else {
        return false;
      }
    };
    InputScanner.prototype.testChar = function(pattern, index) {
      var val = this.peek(index);
      pattern.lastIndex = 0;
      return val !== null && pattern.test(val);
    };
    InputScanner.prototype.match = function(pattern) {
      var pattern_match = this.__match(pattern, this.__position);
      if (pattern_match) {
        this.__position += pattern_match[0].length;
      } else {
        pattern_match = null;
      }
      return pattern_match;
    };
    InputScanner.prototype.read = function(starting_pattern, until_pattern, until_after) {
      var val = "";
      var match;
      if (starting_pattern) {
        match = this.match(starting_pattern);
        if (match) {
          val += match[0];
        }
      }
      if (until_pattern && (match || !starting_pattern)) {
        val += this.readUntil(until_pattern, until_after);
      }
      return val;
    };
    InputScanner.prototype.readUntil = function(pattern, until_after) {
      var val = "";
      var match_index = this.__position;
      pattern.lastIndex = this.__position;
      var pattern_match = pattern.exec(this.__input);
      if (pattern_match) {
        match_index = pattern_match.index;
        if (until_after) {
          match_index += pattern_match[0].length;
        }
      } else {
        match_index = this.__input_length;
      }
      val = this.__input.substring(this.__position, match_index);
      this.__position = match_index;
      return val;
    };
    InputScanner.prototype.readUntilAfter = function(pattern) {
      return this.readUntil(pattern, true);
    };
    InputScanner.prototype.get_regexp = function(pattern, match_from) {
      var result = null;
      var flags = "g";
      if (match_from && regexp_has_sticky) {
        flags = "y";
      }
      if (typeof pattern === "string" && pattern !== "") {
        result = new RegExp(pattern, flags);
      } else if (pattern) {
        result = new RegExp(pattern.source, flags);
      }
      return result;
    };
    InputScanner.prototype.get_literal_regexp = function(literal_string) {
      return RegExp(literal_string.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"));
    };
    InputScanner.prototype.peekUntilAfter = function(pattern) {
      var start = this.__position;
      var val = this.readUntilAfter(pattern);
      this.__position = start;
      return val;
    };
    InputScanner.prototype.lookBack = function(testVal) {
      var start = this.__position - 1;
      return start >= testVal.length && this.__input.substring(start - testVal.length, start).toLowerCase() === testVal;
    };
    module2.exports.InputScanner = InputScanner;
  }
});

// node_modules/js-beautify/js/src/core/tokenstream.js
var require_tokenstream = __commonJS({
  "node_modules/js-beautify/js/src/core/tokenstream.js"(exports2, module2) {
    "use strict";
    function TokenStream(parent_token) {
      this.__tokens = [];
      this.__tokens_length = this.__tokens.length;
      this.__position = 0;
      this.__parent_token = parent_token;
    }
    TokenStream.prototype.restart = function() {
      this.__position = 0;
    };
    TokenStream.prototype.isEmpty = function() {
      return this.__tokens_length === 0;
    };
    TokenStream.prototype.hasNext = function() {
      return this.__position < this.__tokens_length;
    };
    TokenStream.prototype.next = function() {
      var val = null;
      if (this.hasNext()) {
        val = this.__tokens[this.__position];
        this.__position += 1;
      }
      return val;
    };
    TokenStream.prototype.peek = function(index) {
      var val = null;
      index = index || 0;
      index += this.__position;
      if (index >= 0 && index < this.__tokens_length) {
        val = this.__tokens[index];
      }
      return val;
    };
    TokenStream.prototype.add = function(token) {
      if (this.__parent_token) {
        token.parent = this.__parent_token;
      }
      this.__tokens.push(token);
      this.__tokens_length += 1;
    };
    module2.exports.TokenStream = TokenStream;
  }
});

// node_modules/js-beautify/js/src/core/pattern.js
var require_pattern2 = __commonJS({
  "node_modules/js-beautify/js/src/core/pattern.js"(exports2, module2) {
    "use strict";
    function Pattern(input_scanner, parent) {
      this._input = input_scanner;
      this._starting_pattern = null;
      this._match_pattern = null;
      this._until_pattern = null;
      this._until_after = false;
      if (parent) {
        this._starting_pattern = this._input.get_regexp(parent._starting_pattern, true);
        this._match_pattern = this._input.get_regexp(parent._match_pattern, true);
        this._until_pattern = this._input.get_regexp(parent._until_pattern);
        this._until_after = parent._until_after;
      }
    }
    Pattern.prototype.read = function() {
      var result = this._input.read(this._starting_pattern);
      if (!this._starting_pattern || result) {
        result += this._input.read(this._match_pattern, this._until_pattern, this._until_after);
      }
      return result;
    };
    Pattern.prototype.read_match = function() {
      return this._input.match(this._match_pattern);
    };
    Pattern.prototype.until_after = function(pattern) {
      var result = this._create();
      result._until_after = true;
      result._until_pattern = this._input.get_regexp(pattern);
      result._update();
      return result;
    };
    Pattern.prototype.until = function(pattern) {
      var result = this._create();
      result._until_after = false;
      result._until_pattern = this._input.get_regexp(pattern);
      result._update();
      return result;
    };
    Pattern.prototype.starting_with = function(pattern) {
      var result = this._create();
      result._starting_pattern = this._input.get_regexp(pattern, true);
      result._update();
      return result;
    };
    Pattern.prototype.matching = function(pattern) {
      var result = this._create();
      result._match_pattern = this._input.get_regexp(pattern, true);
      result._update();
      return result;
    };
    Pattern.prototype._create = function() {
      return new Pattern(this._input, this);
    };
    Pattern.prototype._update = function() {
    };
    module2.exports.Pattern = Pattern;
  }
});

// node_modules/js-beautify/js/src/core/whitespacepattern.js
var require_whitespacepattern = __commonJS({
  "node_modules/js-beautify/js/src/core/whitespacepattern.js"(exports2, module2) {
    "use strict";
    var Pattern = require_pattern2().Pattern;
    function WhitespacePattern(input_scanner, parent) {
      Pattern.call(this, input_scanner, parent);
      if (parent) {
        this._line_regexp = this._input.get_regexp(parent._line_regexp);
      } else {
        this.__set_whitespace_patterns("", "");
      }
      this.newline_count = 0;
      this.whitespace_before_token = "";
    }
    WhitespacePattern.prototype = new Pattern();
    WhitespacePattern.prototype.__set_whitespace_patterns = function(whitespace_chars, newline_chars) {
      whitespace_chars += "\\t ";
      newline_chars += "\\n\\r";
      this._match_pattern = this._input.get_regexp(
        "[" + whitespace_chars + newline_chars + "]+",
        true
      );
      this._newline_regexp = this._input.get_regexp(
        "\\r\\n|[" + newline_chars + "]"
      );
    };
    WhitespacePattern.prototype.read = function() {
      this.newline_count = 0;
      this.whitespace_before_token = "";
      var resulting_string = this._input.read(this._match_pattern);
      if (resulting_string === " ") {
        this.whitespace_before_token = " ";
      } else if (resulting_string) {
        var matches = this.__split(this._newline_regexp, resulting_string);
        this.newline_count = matches.length - 1;
        this.whitespace_before_token = matches[this.newline_count];
      }
      return resulting_string;
    };
    WhitespacePattern.prototype.matching = function(whitespace_chars, newline_chars) {
      var result = this._create();
      result.__set_whitespace_patterns(whitespace_chars, newline_chars);
      result._update();
      return result;
    };
    WhitespacePattern.prototype._create = function() {
      return new WhitespacePattern(this._input, this);
    };
    WhitespacePattern.prototype.__split = function(regexp, input_string) {
      regexp.lastIndex = 0;
      var start_index = 0;
      var result = [];
      var next_match = regexp.exec(input_string);
      while (next_match) {
        result.push(input_string.substring(start_index, next_match.index));
        start_index = next_match.index + next_match[0].length;
        next_match = regexp.exec(input_string);
      }
      if (start_index < input_string.length) {
        result.push(input_string.substring(start_index, input_string.length));
      } else {
        result.push("");
      }
      return result;
    };
    module2.exports.WhitespacePattern = WhitespacePattern;
  }
});

// node_modules/js-beautify/js/src/core/tokenizer.js
var require_tokenizer = __commonJS({
  "node_modules/js-beautify/js/src/core/tokenizer.js"(exports2, module2) {
    "use strict";
    var InputScanner = require_inputscanner().InputScanner;
    var Token = require_token().Token;
    var TokenStream = require_tokenstream().TokenStream;
    var WhitespacePattern = require_whitespacepattern().WhitespacePattern;
    var TOKEN = {
      START: "TK_START",
      RAW: "TK_RAW",
      EOF: "TK_EOF"
    };
    var Tokenizer = function(input_string, options) {
      this._input = new InputScanner(input_string);
      this._options = options || {};
      this.__tokens = null;
      this._patterns = {};
      this._patterns.whitespace = new WhitespacePattern(this._input);
    };
    Tokenizer.prototype.tokenize = function() {
      this._input.restart();
      this.__tokens = new TokenStream();
      this._reset();
      var current;
      var previous = new Token(TOKEN.START, "");
      var open_token = null;
      var open_stack = [];
      var comments = new TokenStream();
      while (previous.type !== TOKEN.EOF) {
        current = this._get_next_token(previous, open_token);
        while (this._is_comment(current)) {
          comments.add(current);
          current = this._get_next_token(previous, open_token);
        }
        if (!comments.isEmpty()) {
          current.comments_before = comments;
          comments = new TokenStream();
        }
        current.parent = open_token;
        if (this._is_opening(current)) {
          open_stack.push(open_token);
          open_token = current;
        } else if (open_token && this._is_closing(current, open_token)) {
          current.opened = open_token;
          open_token.closed = current;
          open_token = open_stack.pop();
          current.parent = open_token;
        }
        current.previous = previous;
        previous.next = current;
        this.__tokens.add(current);
        previous = current;
      }
      return this.__tokens;
    };
    Tokenizer.prototype._is_first_token = function() {
      return this.__tokens.isEmpty();
    };
    Tokenizer.prototype._reset = function() {
    };
    Tokenizer.prototype._get_next_token = function(previous_token, open_token) {
      this._readWhitespace();
      var resulting_string = this._input.read(/.+/g);
      if (resulting_string) {
        return this._create_token(TOKEN.RAW, resulting_string);
      } else {
        return this._create_token(TOKEN.EOF, "");
      }
    };
    Tokenizer.prototype._is_comment = function(current_token) {
      return false;
    };
    Tokenizer.prototype._is_opening = function(current_token) {
      return false;
    };
    Tokenizer.prototype._is_closing = function(current_token, open_token) {
      return false;
    };
    Tokenizer.prototype._create_token = function(type, text) {
      var token = new Token(
        type,
        text,
        this._patterns.whitespace.newline_count,
        this._patterns.whitespace.whitespace_before_token
      );
      return token;
    };
    Tokenizer.prototype._readWhitespace = function() {
      return this._patterns.whitespace.read();
    };
    module2.exports.Tokenizer = Tokenizer;
    module2.exports.TOKEN = TOKEN;
  }
});

// node_modules/js-beautify/js/src/core/directives.js
var require_directives = __commonJS({
  "node_modules/js-beautify/js/src/core/directives.js"(exports2, module2) {
    "use strict";
    function Directives(start_block_pattern, end_block_pattern) {
      start_block_pattern = typeof start_block_pattern === "string" ? start_block_pattern : start_block_pattern.source;
      end_block_pattern = typeof end_block_pattern === "string" ? end_block_pattern : end_block_pattern.source;
      this.__directives_block_pattern = new RegExp(start_block_pattern + / beautify( \w+[:]\w+)+ /.source + end_block_pattern, "g");
      this.__directive_pattern = / (\w+)[:](\w+)/g;
      this.__directives_end_ignore_pattern = new RegExp(start_block_pattern + /\sbeautify\signore:end\s/.source + end_block_pattern, "g");
    }
    Directives.prototype.get_directives = function(text) {
      if (!text.match(this.__directives_block_pattern)) {
        return null;
      }
      var directives = {};
      this.__directive_pattern.lastIndex = 0;
      var directive_match = this.__directive_pattern.exec(text);
      while (directive_match) {
        directives[directive_match[1]] = directive_match[2];
        directive_match = this.__directive_pattern.exec(text);
      }
      return directives;
    };
    Directives.prototype.readIgnored = function(input) {
      return input.readUntilAfter(this.__directives_end_ignore_pattern);
    };
    module2.exports.Directives = Directives;
  }
});

// node_modules/js-beautify/js/src/core/templatablepattern.js
var require_templatablepattern = __commonJS({
  "node_modules/js-beautify/js/src/core/templatablepattern.js"(exports2, module2) {
    "use strict";
    var Pattern = require_pattern2().Pattern;
    var template_names = {
      django: false,
      erb: false,
      handlebars: false,
      php: false,
      smarty: false,
      angular: false
    };
    function TemplatablePattern(input_scanner, parent) {
      Pattern.call(this, input_scanner, parent);
      this.__template_pattern = null;
      this._disabled = Object.assign({}, template_names);
      this._excluded = Object.assign({}, template_names);
      if (parent) {
        this.__template_pattern = this._input.get_regexp(parent.__template_pattern);
        this._excluded = Object.assign(this._excluded, parent._excluded);
        this._disabled = Object.assign(this._disabled, parent._disabled);
      }
      var pattern = new Pattern(input_scanner);
      this.__patterns = {
        handlebars_comment: pattern.starting_with(/{{!--/).until_after(/--}}/),
        handlebars_unescaped: pattern.starting_with(/{{{/).until_after(/}}}/),
        handlebars: pattern.starting_with(/{{/).until_after(/}}/),
        php: pattern.starting_with(/<\?(?:[= ]|php)/).until_after(/\?>/),
        erb: pattern.starting_with(/<%[^%]/).until_after(/[^%]%>/),
        // django coflicts with handlebars a bit.
        django: pattern.starting_with(/{%/).until_after(/%}/),
        django_value: pattern.starting_with(/{{/).until_after(/}}/),
        django_comment: pattern.starting_with(/{#/).until_after(/#}/),
        smarty: pattern.starting_with(/{(?=[^}{\s\n])/).until_after(/[^\s\n]}/),
        smarty_comment: pattern.starting_with(/{\*/).until_after(/\*}/),
        smarty_literal: pattern.starting_with(/{literal}/).until_after(/{\/literal}/)
      };
    }
    TemplatablePattern.prototype = new Pattern();
    TemplatablePattern.prototype._create = function() {
      return new TemplatablePattern(this._input, this);
    };
    TemplatablePattern.prototype._update = function() {
      this.__set_templated_pattern();
    };
    TemplatablePattern.prototype.disable = function(language) {
      var result = this._create();
      result._disabled[language] = true;
      result._update();
      return result;
    };
    TemplatablePattern.prototype.read_options = function(options) {
      var result = this._create();
      for (var language in template_names) {
        result._disabled[language] = options.templating.indexOf(language) === -1;
      }
      result._update();
      return result;
    };
    TemplatablePattern.prototype.exclude = function(language) {
      var result = this._create();
      result._excluded[language] = true;
      result._update();
      return result;
    };
    TemplatablePattern.prototype.read = function() {
      var result = "";
      if (this._match_pattern) {
        result = this._input.read(this._starting_pattern);
      } else {
        result = this._input.read(this._starting_pattern, this.__template_pattern);
      }
      var next = this._read_template();
      while (next) {
        if (this._match_pattern) {
          next += this._input.read(this._match_pattern);
        } else {
          next += this._input.readUntil(this.__template_pattern);
        }
        result += next;
        next = this._read_template();
      }
      if (this._until_after) {
        result += this._input.readUntilAfter(this._until_pattern);
      }
      return result;
    };
    TemplatablePattern.prototype.__set_templated_pattern = function() {
      var items = [];
      if (!this._disabled.php) {
        items.push(this.__patterns.php._starting_pattern.source);
      }
      if (!this._disabled.handlebars) {
        items.push(this.__patterns.handlebars._starting_pattern.source);
      }
      if (!this._disabled.erb) {
        items.push(this.__patterns.erb._starting_pattern.source);
      }
      if (!this._disabled.django) {
        items.push(this.__patterns.django._starting_pattern.source);
        items.push(this.__patterns.django_value._starting_pattern.source);
        items.push(this.__patterns.django_comment._starting_pattern.source);
      }
      if (!this._disabled.smarty) {
        items.push(this.__patterns.smarty._starting_pattern.source);
      }
      if (this._until_pattern) {
        items.push(this._until_pattern.source);
      }
      this.__template_pattern = this._input.get_regexp("(?:" + items.join("|") + ")");
    };
    TemplatablePattern.prototype._read_template = function() {
      var resulting_string = "";
      var c = this._input.peek();
      if (c === "<") {
        var peek1 = this._input.peek(1);
        if (!this._disabled.php && !this._excluded.php && peek1 === "?") {
          resulting_string = resulting_string || this.__patterns.php.read();
        }
        if (!this._disabled.erb && !this._excluded.erb && peek1 === "%") {
          resulting_string = resulting_string || this.__patterns.erb.read();
        }
      } else if (c === "{") {
        if (!this._disabled.handlebars && !this._excluded.handlebars) {
          resulting_string = resulting_string || this.__patterns.handlebars_comment.read();
          resulting_string = resulting_string || this.__patterns.handlebars_unescaped.read();
          resulting_string = resulting_string || this.__patterns.handlebars.read();
        }
        if (!this._disabled.django) {
          if (!this._excluded.django && !this._excluded.handlebars) {
            resulting_string = resulting_string || this.__patterns.django_value.read();
          }
          if (!this._excluded.django) {
            resulting_string = resulting_string || this.__patterns.django_comment.read();
            resulting_string = resulting_string || this.__patterns.django.read();
          }
        }
        if (!this._disabled.smarty) {
          if (this._disabled.django && this._disabled.handlebars) {
            resulting_string = resulting_string || this.__patterns.smarty_comment.read();
            resulting_string = resulting_string || this.__patterns.smarty_literal.read();
            resulting_string = resulting_string || this.__patterns.smarty.read();
          }
        }
      }
      return resulting_string;
    };
    module2.exports.TemplatablePattern = TemplatablePattern;
  }
});

// node_modules/js-beautify/js/src/javascript/tokenizer.js
var require_tokenizer2 = __commonJS({
  "node_modules/js-beautify/js/src/javascript/tokenizer.js"(exports2, module2) {
    "use strict";
    var InputScanner = require_inputscanner().InputScanner;
    var BaseTokenizer = require_tokenizer().Tokenizer;
    var BASETOKEN = require_tokenizer().TOKEN;
    var Directives = require_directives().Directives;
    var acorn = require_acorn();
    var Pattern = require_pattern2().Pattern;
    var TemplatablePattern = require_templatablepattern().TemplatablePattern;
    function in_array(what, arr) {
      return arr.indexOf(what) !== -1;
    }
    var TOKEN = {
      START_EXPR: "TK_START_EXPR",
      END_EXPR: "TK_END_EXPR",
      START_BLOCK: "TK_START_BLOCK",
      END_BLOCK: "TK_END_BLOCK",
      WORD: "TK_WORD",
      RESERVED: "TK_RESERVED",
      SEMICOLON: "TK_SEMICOLON",
      STRING: "TK_STRING",
      EQUALS: "TK_EQUALS",
      OPERATOR: "TK_OPERATOR",
      COMMA: "TK_COMMA",
      BLOCK_COMMENT: "TK_BLOCK_COMMENT",
      COMMENT: "TK_COMMENT",
      DOT: "TK_DOT",
      UNKNOWN: "TK_UNKNOWN",
      START: BASETOKEN.START,
      RAW: BASETOKEN.RAW,
      EOF: BASETOKEN.EOF
    };
    var directives_core = new Directives(/\/\*/, /\*\//);
    var number_pattern = /0[xX][0123456789abcdefABCDEF_]*n?|0[oO][01234567_]*n?|0[bB][01_]*n?|\d[\d_]*n|(?:\.\d[\d_]*|\d[\d_]*\.?[\d_]*)(?:[eE][+-]?[\d_]+)?/;
    var digit = /[0-9]/;
    var dot_pattern = /[^\d\.]/;
    var positionable_operators = ">>> === !== &&= ??= ||= << && >= ** != == <= >> || ?? |> < / - + > : & % ? ^ | *".split(" ");
    var punct = ">>>= ... >>= <<= === >>> !== **= &&= ??= ||= => ^= :: /= << <= == && -= >= >> != -- += ** || ?? ++ %= &= *= |= |> = ! ? > < : / ^ - + * & % ~ |";
    punct = punct.replace(/[-[\]{}()*+?.,\\^$|#]/g, "\\$&");
    punct = "\\?\\.(?!\\d) " + punct;
    punct = punct.replace(/ /g, "|");
    var punct_pattern = new RegExp(punct);
    var line_starters = "continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export".split(",");
    var reserved_words = line_starters.concat(["do", "in", "of", "else", "get", "set", "new", "catch", "finally", "typeof", "yield", "async", "await", "from", "as", "class", "extends"]);
    var reserved_word_pattern = new RegExp("^(?:" + reserved_words.join("|") + ")$");
    var in_html_comment;
    var Tokenizer = function(input_string, options) {
      BaseTokenizer.call(this, input_string, options);
      this._patterns.whitespace = this._patterns.whitespace.matching(
        /\u00A0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff/.source,
        /\u2028\u2029/.source
      );
      var pattern_reader = new Pattern(this._input);
      var templatable = new TemplatablePattern(this._input).read_options(this._options);
      this.__patterns = {
        template: templatable,
        identifier: templatable.starting_with(acorn.identifier).matching(acorn.identifierMatch),
        number: pattern_reader.matching(number_pattern),
        punct: pattern_reader.matching(punct_pattern),
        // comment ends just before nearest linefeed or end of file
        comment: pattern_reader.starting_with(/\/\//).until(/[\n\r\u2028\u2029]/),
        //  /* ... */ comment ends with nearest */ or end of file
        block_comment: pattern_reader.starting_with(/\/\*/).until_after(/\*\//),
        html_comment_start: pattern_reader.matching(/<!--/),
        html_comment_end: pattern_reader.matching(/-->/),
        include: pattern_reader.starting_with(/#include/).until_after(acorn.lineBreak),
        shebang: pattern_reader.starting_with(/#!/).until_after(acorn.lineBreak),
        xml: pattern_reader.matching(/[\s\S]*?<(\/?)([-a-zA-Z:0-9_.]+|{[^}]+?}|!\[CDATA\[[^\]]*?\]\]|)(\s*{[^}]+?}|\s+[-a-zA-Z:0-9_.]+|\s+[-a-zA-Z:0-9_.]+\s*=\s*('[^']*'|"[^"]*"|{([^{}]|{[^}]+?})+?}))*\s*(\/?)\s*>/),
        single_quote: templatable.until(/['\\\n\r\u2028\u2029]/),
        double_quote: templatable.until(/["\\\n\r\u2028\u2029]/),
        template_text: templatable.until(/[`\\$]/),
        template_expression: templatable.until(/[`}\\]/)
      };
    };
    Tokenizer.prototype = new BaseTokenizer();
    Tokenizer.prototype._is_comment = function(current_token) {
      return current_token.type === TOKEN.COMMENT || current_token.type === TOKEN.BLOCK_COMMENT || current_token.type === TOKEN.UNKNOWN;
    };
    Tokenizer.prototype._is_opening = function(current_token) {
      return current_token.type === TOKEN.START_BLOCK || current_token.type === TOKEN.START_EXPR;
    };
    Tokenizer.prototype._is_closing = function(current_token, open_token) {
      return (current_token.type === TOKEN.END_BLOCK || current_token.type === TOKEN.END_EXPR) && (open_token && (current_token.text === "]" && open_token.text === "[" || current_token.text === ")" && open_token.text === "(" || current_token.text === "}" && open_token.text === "{"));
    };
    Tokenizer.prototype._reset = function() {
      in_html_comment = false;
    };
    Tokenizer.prototype._get_next_token = function(previous_token, open_token) {
      var token = null;
      this._readWhitespace();
      var c = this._input.peek();
      if (c === null) {
        return this._create_token(TOKEN.EOF, "");
      }
      token = token || this._read_non_javascript(c);
      token = token || this._read_string(c);
      token = token || this._read_pair(c, this._input.peek(1));
      token = token || this._read_word(previous_token);
      token = token || this._read_singles(c);
      token = token || this._read_comment(c);
      token = token || this._read_regexp(c, previous_token);
      token = token || this._read_xml(c, previous_token);
      token = token || this._read_punctuation();
      token = token || this._create_token(TOKEN.UNKNOWN, this._input.next());
      return token;
    };
    Tokenizer.prototype._read_word = function(previous_token) {
      var resulting_string;
      resulting_string = this.__patterns.identifier.read();
      if (resulting_string !== "") {
        resulting_string = resulting_string.replace(acorn.allLineBreaks, "\n");
        if (!(previous_token.type === TOKEN.DOT || previous_token.type === TOKEN.RESERVED && (previous_token.text === "set" || previous_token.text === "get")) && reserved_word_pattern.test(resulting_string)) {
          if ((resulting_string === "in" || resulting_string === "of") && (previous_token.type === TOKEN.WORD || previous_token.type === TOKEN.STRING)) {
            return this._create_token(TOKEN.OPERATOR, resulting_string);
          }
          return this._create_token(TOKEN.RESERVED, resulting_string);
        }
        return this._create_token(TOKEN.WORD, resulting_string);
      }
      resulting_string = this.__patterns.number.read();
      if (resulting_string !== "") {
        return this._create_token(TOKEN.WORD, resulting_string);
      }
    };
    Tokenizer.prototype._read_singles = function(c) {
      var token = null;
      if (c === "(" || c === "[") {
        token = this._create_token(TOKEN.START_EXPR, c);
      } else if (c === ")" || c === "]") {
        token = this._create_token(TOKEN.END_EXPR, c);
      } else if (c === "{") {
        token = this._create_token(TOKEN.START_BLOCK, c);
      } else if (c === "}") {
        token = this._create_token(TOKEN.END_BLOCK, c);
      } else if (c === ";") {
        token = this._create_token(TOKEN.SEMICOLON, c);
      } else if (c === "." && dot_pattern.test(this._input.peek(1))) {
        token = this._create_token(TOKEN.DOT, c);
      } else if (c === ",") {
        token = this._create_token(TOKEN.COMMA, c);
      }
      if (token) {
        this._input.next();
      }
      return token;
    };
    Tokenizer.prototype._read_pair = function(c, d) {
      var token = null;
      if (c === "#" && d === "{") {
        token = this._create_token(TOKEN.START_BLOCK, c + d);
      }
      if (token) {
        this._input.next();
        this._input.next();
      }
      return token;
    };
    Tokenizer.prototype._read_punctuation = function() {
      var resulting_string = this.__patterns.punct.read();
      if (resulting_string !== "") {
        if (resulting_string === "=") {
          return this._create_token(TOKEN.EQUALS, resulting_string);
        } else if (resulting_string === "?.") {
          return this._create_token(TOKEN.DOT, resulting_string);
        } else {
          return this._create_token(TOKEN.OPERATOR, resulting_string);
        }
      }
    };
    Tokenizer.prototype._read_non_javascript = function(c) {
      var resulting_string = "";
      if (c === "#") {
        if (this._is_first_token()) {
          resulting_string = this.__patterns.shebang.read();
          if (resulting_string) {
            return this._create_token(TOKEN.UNKNOWN, resulting_string.trim() + "\n");
          }
        }
        resulting_string = this.__patterns.include.read();
        if (resulting_string) {
          return this._create_token(TOKEN.UNKNOWN, resulting_string.trim() + "\n");
        }
        c = this._input.next();
        var sharp = "#";
        if (this._input.hasNext() && this._input.testChar(digit)) {
          do {
            c = this._input.next();
            sharp += c;
          } while (this._input.hasNext() && c !== "#" && c !== "=");
          if (c === "#") {
          } else if (this._input.peek() === "[" && this._input.peek(1) === "]") {
            sharp += "[]";
            this._input.next();
            this._input.next();
          } else if (this._input.peek() === "{" && this._input.peek(1) === "}") {
            sharp += "{}";
            this._input.next();
            this._input.next();
          }
          return this._create_token(TOKEN.WORD, sharp);
        }
        this._input.back();
      } else if (c === "<" && this._is_first_token()) {
        resulting_string = this.__patterns.html_comment_start.read();
        if (resulting_string) {
          while (this._input.hasNext() && !this._input.testChar(acorn.newline)) {
            resulting_string += this._input.next();
          }
          in_html_comment = true;
          return this._create_token(TOKEN.COMMENT, resulting_string);
        }
      } else if (in_html_comment && c === "-") {
        resulting_string = this.__patterns.html_comment_end.read();
        if (resulting_string) {
          in_html_comment = false;
          return this._create_token(TOKEN.COMMENT, resulting_string);
        }
      }
      return null;
    };
    Tokenizer.prototype._read_comment = function(c) {
      var token = null;
      if (c === "/") {
        var comment = "";
        if (this._input.peek(1) === "*") {
          comment = this.__patterns.block_comment.read();
          var directives = directives_core.get_directives(comment);
          if (directives && directives.ignore === "start") {
            comment += directives_core.readIgnored(this._input);
          }
          comment = comment.replace(acorn.allLineBreaks, "\n");
          token = this._create_token(TOKEN.BLOCK_COMMENT, comment);
          token.directives = directives;
        } else if (this._input.peek(1) === "/") {
          comment = this.__patterns.comment.read();
          token = this._create_token(TOKEN.COMMENT, comment);
        }
      }
      return token;
    };
    Tokenizer.prototype._read_string = function(c) {
      if (c === "`" || c === "'" || c === '"') {
        var resulting_string = this._input.next();
        this.has_char_escapes = false;
        if (c === "`") {
          resulting_string += this._read_string_recursive("`", true, "${");
        } else {
          resulting_string += this._read_string_recursive(c);
        }
        if (this.has_char_escapes && this._options.unescape_strings) {
          resulting_string = unescape_string(resulting_string);
        }
        if (this._input.peek() === c) {
          resulting_string += this._input.next();
        }
        resulting_string = resulting_string.replace(acorn.allLineBreaks, "\n");
        return this._create_token(TOKEN.STRING, resulting_string);
      }
      return null;
    };
    Tokenizer.prototype._allow_regexp_or_xml = function(previous_token) {
      return previous_token.type === TOKEN.RESERVED && in_array(previous_token.text, ["return", "case", "throw", "else", "do", "typeof", "yield"]) || previous_token.type === TOKEN.END_EXPR && previous_token.text === ")" && previous_token.opened.previous.type === TOKEN.RESERVED && in_array(previous_token.opened.previous.text, ["if", "while", "for"]) || in_array(previous_token.type, [
        TOKEN.COMMENT,
        TOKEN.START_EXPR,
        TOKEN.START_BLOCK,
        TOKEN.START,
        TOKEN.END_BLOCK,
        TOKEN.OPERATOR,
        TOKEN.EQUALS,
        TOKEN.EOF,
        TOKEN.SEMICOLON,
        TOKEN.COMMA
      ]);
    };
    Tokenizer.prototype._read_regexp = function(c, previous_token) {
      if (c === "/" && this._allow_regexp_or_xml(previous_token)) {
        var resulting_string = this._input.next();
        var esc = false;
        var in_char_class = false;
        while (this._input.hasNext() && ((esc || in_char_class || this._input.peek() !== c) && !this._input.testChar(acorn.newline))) {
          resulting_string += this._input.peek();
          if (!esc) {
            esc = this._input.peek() === "\\";
            if (this._input.peek() === "[") {
              in_char_class = true;
            } else if (this._input.peek() === "]") {
              in_char_class = false;
            }
          } else {
            esc = false;
          }
          this._input.next();
        }
        if (this._input.peek() === c) {
          resulting_string += this._input.next();
          resulting_string += this._input.read(acorn.identifier);
        }
        return this._create_token(TOKEN.STRING, resulting_string);
      }
      return null;
    };
    Tokenizer.prototype._read_xml = function(c, previous_token) {
      if (this._options.e4x && c === "<" && this._allow_regexp_or_xml(previous_token)) {
        var xmlStr = "";
        var match = this.__patterns.xml.read_match();
        if (match) {
          var rootTag = match[2].replace(/^{\s+/, "{").replace(/\s+}$/, "}");
          var isCurlyRoot = rootTag.indexOf("{") === 0;
          var depth = 0;
          while (match) {
            var isEndTag = !!match[1];
            var tagName = match[2];
            var isSingletonTag = !!match[match.length - 1] || tagName.slice(0, 8) === "![CDATA[";
            if (!isSingletonTag && (tagName === rootTag || isCurlyRoot && tagName.replace(/^{\s+/, "{").replace(/\s+}$/, "}"))) {
              if (isEndTag) {
                --depth;
              } else {
                ++depth;
              }
            }
            xmlStr += match[0];
            if (depth <= 0) {
              break;
            }
            match = this.__patterns.xml.read_match();
          }
          if (!match) {
            xmlStr += this._input.match(/[\s\S]*/g)[0];
          }
          xmlStr = xmlStr.replace(acorn.allLineBreaks, "\n");
          return this._create_token(TOKEN.STRING, xmlStr);
        }
      }
      return null;
    };
    function unescape_string(s) {
      var out = "", escaped = 0;
      var input_scan = new InputScanner(s);
      var matched = null;
      while (input_scan.hasNext()) {
        matched = input_scan.match(/([\s]|[^\\]|\\\\)+/g);
        if (matched) {
          out += matched[0];
        }
        if (input_scan.peek() === "\\") {
          input_scan.next();
          if (input_scan.peek() === "x") {
            matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);
          } else if (input_scan.peek() === "u") {
            matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);
            if (!matched) {
              matched = input_scan.match(/u\{([0-9A-Fa-f]+)\}/g);
            }
          } else {
            out += "\\";
            if (input_scan.hasNext()) {
              out += input_scan.next();
            }
            continue;
          }
          if (!matched) {
            return s;
          }
          escaped = parseInt(matched[1], 16);
          if (escaped > 126 && escaped <= 255 && matched[0].indexOf("x") === 0) {
            return s;
          } else if (escaped >= 0 && escaped < 32) {
            out += "\\" + matched[0];
          } else if (escaped > 1114111) {
            out += "\\" + matched[0];
          } else if (escaped === 34 || escaped === 39 || escaped === 92) {
            out += "\\" + String.fromCharCode(escaped);
          } else {
            out += String.fromCharCode(escaped);
          }
        }
      }
      return out;
    }
    Tokenizer.prototype._read_string_recursive = function(delimiter, allow_unescaped_newlines, start_sub) {
      var current_char;
      var pattern;
      if (delimiter === "'") {
        pattern = this.__patterns.single_quote;
      } else if (delimiter === '"') {
        pattern = this.__patterns.double_quote;
      } else if (delimiter === "`") {
        pattern = this.__patterns.template_text;
      } else if (delimiter === "}") {
        pattern = this.__patterns.template_expression;
      }
      var resulting_string = pattern.read();
      var next = "";
      while (this._input.hasNext()) {
        next = this._input.next();
        if (next === delimiter || !allow_unescaped_newlines && acorn.newline.test(next)) {
          this._input.back();
          break;
        } else if (next === "\\" && this._input.hasNext()) {
          current_char = this._input.peek();
          if (current_char === "x" || current_char === "u") {
            this.has_char_escapes = true;
          } else if (current_char === "\r" && this._input.peek(1) === "\n") {
            this._input.next();
          }
          next += this._input.next();
        } else if (start_sub) {
          if (start_sub === "${" && next === "$" && this._input.peek() === "{") {
            next += this._input.next();
          }
          if (start_sub === next) {
            if (delimiter === "`") {
              next += this._read_string_recursive("}", allow_unescaped_newlines, "`");
            } else {
              next += this._read_string_recursive("`", allow_unescaped_newlines, "${");
            }
            if (this._input.hasNext()) {
              next += this._input.next();
            }
          }
        }
        next += pattern.read();
        resulting_string += next;
      }
      return resulting_string;
    };
    module2.exports.Tokenizer = Tokenizer;
    module2.exports.TOKEN = TOKEN;
    module2.exports.positionable_operators = positionable_operators.slice();
    module2.exports.line_starters = line_starters.slice();
  }
});

// node_modules/js-beautify/js/src/javascript/beautifier.js
var require_beautifier = __commonJS({
  "node_modules/js-beautify/js/src/javascript/beautifier.js"(exports2, module2) {
    "use strict";
    var Output = require_output().Output;
    var Token = require_token().Token;
    var acorn = require_acorn();
    var Options = require_options2().Options;
    var Tokenizer = require_tokenizer2().Tokenizer;
    var line_starters = require_tokenizer2().line_starters;
    var positionable_operators = require_tokenizer2().positionable_operators;
    var TOKEN = require_tokenizer2().TOKEN;
    function in_array(what, arr) {
      return arr.indexOf(what) !== -1;
    }
    function ltrim(s) {
      return s.replace(/^\s+/g, "");
    }
    function generateMapFromStrings(list) {
      var result = {};
      for (var x = 0; x < list.length; x++) {
        result[list[x].replace(/-/g, "_")] = list[x];
      }
      return result;
    }
    function reserved_word(token, word) {
      return token && token.type === TOKEN.RESERVED && token.text === word;
    }
    function reserved_array(token, words) {
      return token && token.type === TOKEN.RESERVED && in_array(token.text, words);
    }
    var special_words = ["case", "return", "do", "if", "throw", "else", "await", "break", "continue", "async"];
    var validPositionValues = ["before-newline", "after-newline", "preserve-newline"];
    var OPERATOR_POSITION = generateMapFromStrings(validPositionValues);
    var OPERATOR_POSITION_BEFORE_OR_PRESERVE = [OPERATOR_POSITION.before_newline, OPERATOR_POSITION.preserve_newline];
    var MODE = {
      BlockStatement: "BlockStatement",
      // 'BLOCK'
      Statement: "Statement",
      // 'STATEMENT'
      ObjectLiteral: "ObjectLiteral",
      // 'OBJECT',
      ArrayLiteral: "ArrayLiteral",
      //'[EXPRESSION]',
      ForInitializer: "ForInitializer",
      //'(FOR-EXPRESSION)',
      Conditional: "Conditional",
      //'(COND-EXPRESSION)',
      Expression: "Expression"
      //'(EXPRESSION)'
    };
    function remove_redundant_indentation(output, frame) {
      if (frame.multiline_frame || frame.mode === MODE.ForInitializer || frame.mode === MODE.Conditional) {
        return;
      }
      output.remove_indent(frame.start_line_index);
    }
    function split_linebreaks(s) {
      s = s.replace(acorn.allLineBreaks, "\n");
      var out = [], idx = s.indexOf("\n");
      while (idx !== -1) {
        out.push(s.substring(0, idx));
        s = s.substring(idx + 1);
        idx = s.indexOf("\n");
      }
      if (s.length) {
        out.push(s);
      }
      return out;
    }
    function is_array(mode) {
      return mode === MODE.ArrayLiteral;
    }
    function is_expression(mode) {
      return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);
    }
    function all_lines_start_with(lines, c) {
      for (var i = 0; i < lines.length; i++) {
        var line = lines[i].trim();
        if (line.charAt(0) !== c) {
          return false;
        }
      }
      return true;
    }
    function each_line_matches_indent(lines, indent) {
      var i = 0, len = lines.length, line;
      for (; i < len; i++) {
        line = lines[i];
        if (line && line.indexOf(indent) !== 0) {
          return false;
        }
      }
      return true;
    }
    function Beautifier(source_text, options) {
      options = options || {};
      this._source_text = source_text || "";
      this._output = null;
      this._tokens = null;
      this._last_last_text = null;
      this._flags = null;
      this._previous_flags = null;
      this._flag_store = null;
      this._options = new Options(options);
    }
    Beautifier.prototype.create_flags = function(flags_base, mode) {
      var next_indent_level = 0;
      if (flags_base) {
        next_indent_level = flags_base.indentation_level;
        if (!this._output.just_added_newline() && flags_base.line_indent_level > next_indent_level) {
          next_indent_level = flags_base.line_indent_level;
        }
      }
      var next_flags = {
        mode,
        parent: flags_base,
        last_token: flags_base ? flags_base.last_token : new Token(TOKEN.START_BLOCK, ""),
        // last token text
        last_word: flags_base ? flags_base.last_word : "",
        // last TOKEN.WORD passed
        declaration_statement: false,
        declaration_assignment: false,
        multiline_frame: false,
        inline_frame: false,
        if_block: false,
        else_block: false,
        class_start_block: false,
        // class A { INSIDE HERE } or class B extends C { INSIDE HERE }
        do_block: false,
        do_while: false,
        import_block: false,
        in_case_statement: false,
        // switch(..){ INSIDE HERE }
        in_case: false,
        // we're on the exact line with "case 0:"
        case_body: false,
        // the indented case-action block
        case_block: false,
        // the indented case-action block is wrapped with {}
        indentation_level: next_indent_level,
        alignment: 0,
        line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,
        start_line_index: this._output.get_line_number(),
        ternary_depth: 0
      };
      return next_flags;
    };
    Beautifier.prototype._reset = function(source_text) {
      var baseIndentString = source_text.match(/^[\t ]*/)[0];
      this._last_last_text = "";
      this._output = new Output(this._options, baseIndentString);
      this._output.raw = this._options.test_output_raw;
      this._flag_store = [];
      this.set_mode(MODE.BlockStatement);
      var tokenizer = new Tokenizer(source_text, this._options);
      this._tokens = tokenizer.tokenize();
      return source_text;
    };
    Beautifier.prototype.beautify = function() {
      if (this._options.disabled) {
        return this._source_text;
      }
      var sweet_code;
      var source_text = this._reset(this._source_text);
      var eol = this._options.eol;
      if (this._options.eol === "auto") {
        eol = "\n";
        if (source_text && acorn.lineBreak.test(source_text || "")) {
          eol = source_text.match(acorn.lineBreak)[0];
        }
      }
      var current_token = this._tokens.next();
      while (current_token) {
        this.handle_token(current_token);
        this._last_last_text = this._flags.last_token.text;
        this._flags.last_token = current_token;
        current_token = this._tokens.next();
      }
      sweet_code = this._output.get_code(eol);
      return sweet_code;
    };
    Beautifier.prototype.handle_token = function(current_token, preserve_statement_flags) {
      if (current_token.type === TOKEN.START_EXPR) {
        this.handle_start_expr(current_token);
      } else if (current_token.type === TOKEN.END_EXPR) {
        this.handle_end_expr(current_token);
      } else if (current_token.type === TOKEN.START_BLOCK) {
        this.handle_start_block(current_token);
      } else if (current_token.type === TOKEN.END_BLOCK) {
        this.handle_end_block(current_token);
      } else if (current_token.type === TOKEN.WORD) {
        this.handle_word(current_token);
      } else if (current_token.type === TOKEN.RESERVED) {
        this.handle_word(current_token);
      } else if (current_token.type === TOKEN.SEMICOLON) {
        this.handle_semicolon(current_token);
      } else if (current_token.type === TOKEN.STRING) {
        this.handle_string(current_token);
      } else if (current_token.type === TOKEN.EQUALS) {
        this.handle_equals(current_token);
      } else if (current_token.type === TOKEN.OPERATOR) {
        this.handle_operator(current_token);
      } else if (current_token.type === TOKEN.COMMA) {
        this.handle_comma(current_token);
      } else if (current_token.type === TOKEN.BLOCK_COMMENT) {
        this.handle_block_comment(current_token, preserve_statement_flags);
      } else if (current_token.type === TOKEN.COMMENT) {
        this.handle_comment(current_token, preserve_statement_flags);
      } else if (current_token.type === TOKEN.DOT) {
        this.handle_dot(current_token);
      } else if (current_token.type === TOKEN.EOF) {
        this.handle_eof(current_token);
      } else if (current_token.type === TOKEN.UNKNOWN) {
        this.handle_unknown(current_token, preserve_statement_flags);
      } else {
        this.handle_unknown(current_token, preserve_statement_flags);
      }
    };
    Beautifier.prototype.handle_whitespace_and_comments = function(current_token, preserve_statement_flags) {
      var newlines = current_token.newlines;
      var keep_whitespace = this._options.keep_array_indentation && is_array(this._flags.mode);
      if (current_token.comments_before) {
        var comment_token = current_token.comments_before.next();
        while (comment_token) {
          this.handle_whitespace_and_comments(comment_token, preserve_statement_flags);
          this.handle_token(comment_token, preserve_statement_flags);
          comment_token = current_token.comments_before.next();
        }
      }
      if (keep_whitespace) {
        for (var i = 0; i < newlines; i += 1) {
          this.print_newline(i > 0, preserve_statement_flags);
        }
      } else {
        if (this._options.max_preserve_newlines && newlines > this._options.max_preserve_newlines) {
          newlines = this._options.max_preserve_newlines;
        }
        if (this._options.preserve_newlines) {
          if (newlines > 1) {
            this.print_newline(false, preserve_statement_flags);
            for (var j = 1; j < newlines; j += 1) {
              this.print_newline(true, preserve_statement_flags);
            }
          }
        }
      }
    };
    var newline_restricted_tokens = ["async", "break", "continue", "return", "throw", "yield"];
    Beautifier.prototype.allow_wrap_or_preserved_newline = function(current_token, force_linewrap) {
      force_linewrap = force_linewrap === void 0 ? false : force_linewrap;
      if (this._output.just_added_newline()) {
        return;
      }
      var shouldPreserveOrForce = this._options.preserve_newlines && current_token.newlines || force_linewrap;
      var operatorLogicApplies = in_array(this._flags.last_token.text, positionable_operators) || in_array(current_token.text, positionable_operators);
      if (operatorLogicApplies) {
        var shouldPrintOperatorNewline = in_array(this._flags.last_token.text, positionable_operators) && in_array(this._options.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE) || in_array(current_token.text, positionable_operators);
        shouldPreserveOrForce = shouldPreserveOrForce && shouldPrintOperatorNewline;
      }
      if (shouldPreserveOrForce) {
        this.print_newline(false, true);
      } else if (this._options.wrap_line_length) {
        if (reserved_array(this._flags.last_token, newline_restricted_tokens)) {
          return;
        }
        this._output.set_wrap_point();
      }
    };
    Beautifier.prototype.print_newline = function(force_newline, preserve_statement_flags) {
      if (!preserve_statement_flags) {
        if (this._flags.last_token.text !== ";" && this._flags.last_token.text !== "," && this._flags.last_token.text !== "=" && (this._flags.last_token.type !== TOKEN.OPERATOR || this._flags.last_token.text === "--" || this._flags.last_token.text === "++")) {
          var next_token = this._tokens.peek();
          while (this._flags.mode === MODE.Statement && !(this._flags.if_block && reserved_word(next_token, "else")) && !this._flags.do_block) {
            this.restore_mode();
          }
        }
      }
      if (this._output.add_new_line(force_newline)) {
        this._flags.multiline_frame = true;
      }
    };
    Beautifier.prototype.print_token_line_indentation = function(current_token) {
      if (this._output.just_added_newline()) {
        if (this._options.keep_array_indentation && current_token.newlines && (current_token.text === "[" || is_array(this._flags.mode))) {
          this._output.current_line.set_indent(-1);
          this._output.current_line.push(current_token.whitespace_before);
          this._output.space_before_token = false;
        } else if (this._output.set_indent(this._flags.indentation_level, this._flags.alignment)) {
          this._flags.line_indent_level = this._flags.indentation_level;
        }
      }
    };
    Beautifier.prototype.print_token = function(current_token) {
      if (this._output.raw) {
        this._output.add_raw_token(current_token);
        return;
      }
      if (this._options.comma_first && current_token.previous && current_token.previous.type === TOKEN.COMMA && this._output.just_added_newline()) {
        if (this._output.previous_line.last() === ",") {
          var popped = this._output.previous_line.pop();
          if (this._output.previous_line.is_empty()) {
            this._output.previous_line.push(popped);
            this._output.trim(true);
            this._output.current_line.pop();
            this._output.trim();
          }
          this.print_token_line_indentation(current_token);
          this._output.add_token(",");
          this._output.space_before_token = true;
        }
      }
      this.print_token_line_indentation(current_token);
      this._output.non_breaking_space = true;
      this._output.add_token(current_token.text);
      if (this._output.previous_token_wrapped) {
        this._flags.multiline_frame = true;
      }
    };
    Beautifier.prototype.indent = function() {
      this._flags.indentation_level += 1;
      this._output.set_indent(this._flags.indentation_level, this._flags.alignment);
    };
    Beautifier.prototype.deindent = function() {
      if (this._flags.indentation_level > 0 && (!this._flags.parent || this._flags.indentation_level > this._flags.parent.indentation_level)) {
        this._flags.indentation_level -= 1;
        this._output.set_indent(this._flags.indentation_level, this._flags.alignment);
      }
    };
    Beautifier.prototype.set_mode = function(mode) {
      if (this._flags) {
        this._flag_store.push(this._flags);
        this._previous_flags = this._flags;
      } else {
        this._previous_flags = this.create_flags(null, mode);
      }
      this._flags = this.create_flags(this._previous_flags, mode);
      this._output.set_indent(this._flags.indentation_level, this._flags.alignment);
    };
    Beautifier.prototype.restore_mode = function() {
      if (this._flag_store.length > 0) {
        this._previous_flags = this._flags;
        this._flags = this._flag_store.pop();
        if (this._previous_flags.mode === MODE.Statement) {
          remove_redundant_indentation(this._output, this._previous_flags);
        }
        this._output.set_indent(this._flags.indentation_level, this._flags.alignment);
      }
    };
    Beautifier.prototype.start_of_object_property = function() {
      return this._flags.parent.mode === MODE.ObjectLiteral && this._flags.mode === MODE.Statement && (this._flags.last_token.text === ":" && this._flags.ternary_depth === 0 || reserved_array(this._flags.last_token, ["get", "set"]));
    };
    Beautifier.prototype.start_of_statement = function(current_token) {
      var start = false;
      start = start || reserved_array(this._flags.last_token, ["var", "let", "const"]) && current_token.type === TOKEN.WORD;
      start = start || reserved_word(this._flags.last_token, "do");
      start = start || !(this._flags.parent.mode === MODE.ObjectLiteral && this._flags.mode === MODE.Statement) && reserved_array(this._flags.last_token, newline_restricted_tokens) && !current_token.newlines;
      start = start || reserved_word(this._flags.last_token, "else") && !(reserved_word(current_token, "if") && !current_token.comments_before);
      start = start || this._flags.last_token.type === TOKEN.END_EXPR && (this._previous_flags.mode === MODE.ForInitializer || this._previous_flags.mode === MODE.Conditional);
      start = start || this._flags.last_token.type === TOKEN.WORD && this._flags.mode === MODE.BlockStatement && !this._flags.in_case && !(current_token.text === "--" || current_token.text === "++") && this._last_last_text !== "function" && current_token.type !== TOKEN.WORD && current_token.type !== TOKEN.RESERVED;
      start = start || this._flags.mode === MODE.ObjectLiteral && (this._flags.last_token.text === ":" && this._flags.ternary_depth === 0 || reserved_array(this._flags.last_token, ["get", "set"]));
      if (start) {
        this.set_mode(MODE.Statement);
        this.indent();
        this.handle_whitespace_and_comments(current_token, true);
        if (!this.start_of_object_property()) {
          this.allow_wrap_or_preserved_newline(
            current_token,
            reserved_array(current_token, ["do", "for", "if", "while"])
          );
        }
        return true;
      }
      return false;
    };
    Beautifier.prototype.handle_start_expr = function(current_token) {
      if (!this.start_of_statement(current_token)) {
        this.handle_whitespace_and_comments(current_token);
      }
      var next_mode = MODE.Expression;
      if (current_token.text === "[") {
        if (this._flags.last_token.type === TOKEN.WORD || this._flags.last_token.text === ")") {
          if (reserved_array(this._flags.last_token, line_starters)) {
            this._output.space_before_token = true;
          }
          this.print_token(current_token);
          this.set_mode(next_mode);
          this.indent();
          if (this._options.space_in_paren) {
            this._output.space_before_token = true;
          }
          return;
        }
        next_mode = MODE.ArrayLiteral;
        if (is_array(this._flags.mode)) {
          if (this._flags.last_token.text === "[" || this._flags.last_token.text === "," && (this._last_last_text === "]" || this._last_last_text === "}")) {
            if (!this._options.keep_array_indentation) {
              this.print_newline();
            }
          }
        }
        if (!in_array(this._flags.last_token.type, [TOKEN.START_EXPR, TOKEN.END_EXPR, TOKEN.WORD, TOKEN.OPERATOR, TOKEN.DOT])) {
          this._output.space_before_token = true;
        }
      } else {
        if (this._flags.last_token.type === TOKEN.RESERVED) {
          if (this._flags.last_token.text === "for") {
            this._output.space_before_token = this._options.space_before_conditional;
            next_mode = MODE.ForInitializer;
          } else if (in_array(this._flags.last_token.text, ["if", "while", "switch"])) {
            this._output.space_before_token = this._options.space_before_conditional;
            next_mode = MODE.Conditional;
          } else if (in_array(this._flags.last_word, ["await", "async"])) {
            this._output.space_before_token = true;
          } else if (this._flags.last_token.text === "import" && current_token.whitespace_before === "") {
            this._output.space_before_token = false;
          } else if (in_array(this._flags.last_token.text, line_starters) || this._flags.last_token.text === "catch") {
            this._output.space_before_token = true;
          }
        } else if (this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {
          if (!this.start_of_object_property()) {
            this.allow_wrap_or_preserved_newline(current_token);
          }
        } else if (this._flags.last_token.type === TOKEN.WORD) {
          this._output.space_before_token = false;
          var peek_back_two = this._tokens.peek(-3);
          if (this._options.space_after_named_function && peek_back_two) {
            var peek_back_three = this._tokens.peek(-4);
            if (reserved_array(peek_back_two, ["async", "function"]) || peek_back_two.text === "*" && reserved_array(peek_back_three, ["async", "function"])) {
              this._output.space_before_token = true;
            } else if (this._flags.mode === MODE.ObjectLiteral) {
              if (peek_back_two.text === "{" || peek_back_two.text === "," || peek_back_two.text === "*" && (peek_back_three.text === "{" || peek_back_three.text === ",")) {
                this._output.space_before_token = true;
              }
            } else if (this._flags.parent && this._flags.parent.class_start_block) {
              this._output.space_before_token = true;
            }
          }
        } else {
          this.allow_wrap_or_preserved_newline(current_token);
        }
        if (this._flags.last_token.type === TOKEN.RESERVED && (this._flags.last_word === "function" || this._flags.last_word === "typeof") || this._flags.last_token.text === "*" && (in_array(this._last_last_text, ["function", "yield"]) || this._flags.mode === MODE.ObjectLiteral && in_array(this._last_last_text, ["{", ","]))) {
          this._output.space_before_token = this._options.space_after_anon_function;
        }
      }
      if (this._flags.last_token.text === ";" || this._flags.last_token.type === TOKEN.START_BLOCK) {
        this.print_newline();
      } else if (this._flags.last_token.type === TOKEN.END_EXPR || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.END_BLOCK || this._flags.last_token.text === "." || this._flags.last_token.type === TOKEN.COMMA) {
        this.allow_wrap_or_preserved_newline(current_token, current_token.newlines);
      }
      this.print_token(current_token);
      this.set_mode(next_mode);
      if (this._options.space_in_paren) {
        this._output.space_before_token = true;
      }
      this.indent();
    };
    Beautifier.prototype.handle_end_expr = function(current_token) {
      while (this._flags.mode === MODE.Statement) {
        this.restore_mode();
      }
      this.handle_whitespace_and_comments(current_token);
      if (this._flags.multiline_frame) {
        this.allow_wrap_or_preserved_newline(
          current_token,
          current_token.text === "]" && is_array(this._flags.mode) && !this._options.keep_array_indentation
        );
      }
      if (this._options.space_in_paren) {
        if (this._flags.last_token.type === TOKEN.START_EXPR && !this._options.space_in_empty_paren) {
          this._output.trim();
          this._output.space_before_token = false;
        } else {
          this._output.space_before_token = true;
        }
      }
      this.deindent();
      this.print_token(current_token);
      this.restore_mode();
      remove_redundant_indentation(this._output, this._previous_flags);
      if (this._flags.do_while && this._previous_flags.mode === MODE.Conditional) {
        this._previous_flags.mode = MODE.Expression;
        this._flags.do_block = false;
        this._flags.do_while = false;
      }
    };
    Beautifier.prototype.handle_start_block = function(current_token) {
      this.handle_whitespace_and_comments(current_token);
      var next_token = this._tokens.peek();
      var second_token = this._tokens.peek(1);
      if (this._flags.last_word === "switch" && this._flags.last_token.type === TOKEN.END_EXPR) {
        this.set_mode(MODE.BlockStatement);
        this._flags.in_case_statement = true;
      } else if (this._flags.case_body) {
        this.set_mode(MODE.BlockStatement);
      } else if (second_token && (in_array(second_token.text, [":", ","]) && in_array(next_token.type, [TOKEN.STRING, TOKEN.WORD, TOKEN.RESERVED]) || in_array(next_token.text, ["get", "set", "..."]) && in_array(second_token.type, [TOKEN.WORD, TOKEN.RESERVED]))) {
        if (in_array(this._last_last_text, ["class", "interface"]) && !in_array(second_token.text, [":", ","])) {
          this.set_mode(MODE.BlockStatement);
        } else {
          this.set_mode(MODE.ObjectLiteral);
        }
      } else if (this._flags.last_token.type === TOKEN.OPERATOR && this._flags.last_token.text === "=>") {
        this.set_mode(MODE.BlockStatement);
      } else if (in_array(this._flags.last_token.type, [TOKEN.EQUALS, TOKEN.START_EXPR, TOKEN.COMMA, TOKEN.OPERATOR]) || reserved_array(this._flags.last_token, ["return", "throw", "import", "default"])) {
        this.set_mode(MODE.ObjectLiteral);
      } else {
        this.set_mode(MODE.BlockStatement);
      }
      if (this._flags.last_token) {
        if (reserved_array(this._flags.last_token.previous, ["class", "extends"])) {
          this._flags.class_start_block = true;
        }
      }
      var empty_braces = !next_token.comments_before && next_token.text === "}";
      var empty_anonymous_function = empty_braces && this._flags.last_word === "function" && this._flags.last_token.type === TOKEN.END_EXPR;
      if (this._options.brace_preserve_inline) {
        var index = 0;
        var check_token = null;
        this._flags.inline_frame = true;
        do {
          index += 1;
          check_token = this._tokens.peek(index - 1);
          if (check_token.newlines) {
            this._flags.inline_frame = false;
            break;
          }
        } while (check_token.type !== TOKEN.EOF && !(check_token.type === TOKEN.END_BLOCK && check_token.opened === current_token));
      }
      if ((this._options.brace_style === "expand" || this._options.brace_style === "none" && current_token.newlines) && !this._flags.inline_frame) {
        if (this._flags.last_token.type !== TOKEN.OPERATOR && (empty_anonymous_function || this._flags.last_token.type === TOKEN.EQUALS || reserved_array(this._flags.last_token, special_words) && this._flags.last_token.text !== "else")) {
          this._output.space_before_token = true;
        } else {
          this.print_newline(false, true);
        }
      } else {
        if (is_array(this._previous_flags.mode) && (this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.COMMA)) {
          if (this._flags.last_token.type === TOKEN.COMMA || this._options.space_in_paren) {
            this._output.space_before_token = true;
          }
          if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR && this._flags.inline_frame) {
            this.allow_wrap_or_preserved_newline(current_token);
            this._previous_flags.multiline_frame = this._previous_flags.multiline_frame || this._flags.multiline_frame;
            this._flags.multiline_frame = false;
          }
        }
        if (this._flags.last_token.type !== TOKEN.OPERATOR && this._flags.last_token.type !== TOKEN.START_EXPR) {
          if (in_array(this._flags.last_token.type, [TOKEN.START_BLOCK, TOKEN.SEMICOLON]) && !this._flags.inline_frame) {
            this.print_newline();
          } else {
            this._output.space_before_token = true;
          }
        }
      }
      this.print_token(current_token);
      this.indent();
      if (!empty_braces && !(this._options.brace_preserve_inline && this._flags.inline_frame)) {
        this.print_newline();
      }
    };
    Beautifier.prototype.handle_end_block = function(current_token) {
      this.handle_whitespace_and_comments(current_token);
      while (this._flags.mode === MODE.Statement) {
        this.restore_mode();
      }
      var empty_braces = this._flags.last_token.type === TOKEN.START_BLOCK;
      if (this._flags.inline_frame && !empty_braces) {
        this._output.space_before_token = true;
      } else if (this._options.brace_style === "expand") {
        if (!empty_braces) {
          this.print_newline();
        }
      } else {
        if (!empty_braces) {
          if (is_array(this._flags.mode) && this._options.keep_array_indentation) {
            this._options.keep_array_indentation = false;
            this.print_newline();
            this._options.keep_array_indentation = true;
          } else {
            this.print_newline();
          }
        }
      }
      this.restore_mode();
      this.print_token(current_token);
    };
    Beautifier.prototype.handle_word = function(current_token) {
      if (current_token.type === TOKEN.RESERVED) {
        if (in_array(current_token.text, ["set", "get"]) && this._flags.mode !== MODE.ObjectLiteral) {
          current_token.type = TOKEN.WORD;
        } else if (current_token.text === "import" && in_array(this._tokens.peek().text, ["(", "."])) {
          current_token.type = TOKEN.WORD;
        } else if (in_array(current_token.text, ["as", "from"]) && !this._flags.import_block) {
          current_token.type = TOKEN.WORD;
        } else if (this._flags.mode === MODE.ObjectLiteral) {
          var next_token = this._tokens.peek();
          if (next_token.text === ":") {
            current_token.type = TOKEN.WORD;
          }
        }
      }
      if (this.start_of_statement(current_token)) {
        if (reserved_array(this._flags.last_token, ["var", "let", "const"]) && current_token.type === TOKEN.WORD) {
          this._flags.declaration_statement = true;
        }
      } else if (current_token.newlines && !is_expression(this._flags.mode) && (this._flags.last_token.type !== TOKEN.OPERATOR || (this._flags.last_token.text === "--" || this._flags.last_token.text === "++")) && this._flags.last_token.type !== TOKEN.EQUALS && (this._options.preserve_newlines || !reserved_array(this._flags.last_token, ["var", "let", "const", "set", "get"]))) {
        this.handle_whitespace_and_comments(current_token);
        this.print_newline();
      } else {
        this.handle_whitespace_and_comments(current_token);
      }
      if (this._flags.do_block && !this._flags.do_while) {
        if (reserved_word(current_token, "while")) {
          this._output.space_before_token = true;
          this.print_token(current_token);
          this._output.space_before_token = true;
          this._flags.do_while = true;
          return;
        } else {
          this.print_newline();
          this._flags.do_block = false;
        }
      }
      if (this._flags.if_block) {
        if (!this._flags.else_block && reserved_word(current_token, "else")) {
          this._flags.else_block = true;
        } else {
          while (this._flags.mode === MODE.Statement) {
            this.restore_mode();
          }
          this._flags.if_block = false;
          this._flags.else_block = false;
        }
      }
      if (this._flags.in_case_statement && reserved_array(current_token, ["case", "default"])) {
        this.print_newline();
        if (!this._flags.case_block && (this._flags.case_body || this._options.jslint_happy)) {
          this.deindent();
        }
        this._flags.case_body = false;
        this.print_token(current_token);
        this._flags.in_case = true;
        return;
      }
      if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {
        if (!this.start_of_object_property() && !// start of object property is different for numeric values with +/- prefix operators
        (in_array(this._flags.last_token.text, ["+", "-"]) && this._last_last_text === ":" && this._flags.parent.mode === MODE.ObjectLiteral)) {
          this.allow_wrap_or_preserved_newline(current_token);
        }
      }
      if (reserved_word(current_token, "function")) {
        if (in_array(this._flags.last_token.text, ["}", ";"]) || this._output.just_added_newline() && !(in_array(this._flags.last_token.text, ["(", "[", "{", ":", "=", ","]) || this._flags.last_token.type === TOKEN.OPERATOR)) {
          if (!this._output.just_added_blankline() && !current_token.comments_before) {
            this.print_newline();
            this.print_newline(true);
          }
        }
        if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD) {
          if (reserved_array(this._flags.last_token, ["get", "set", "new", "export"]) || reserved_array(this._flags.last_token, newline_restricted_tokens)) {
            this._output.space_before_token = true;
          } else if (reserved_word(this._flags.last_token, "default") && this._last_last_text === "export") {
            this._output.space_before_token = true;
          } else if (this._flags.last_token.text === "declare") {
            this._output.space_before_token = true;
          } else {
            this.print_newline();
          }
        } else if (this._flags.last_token.type === TOKEN.OPERATOR || this._flags.last_token.text === "=") {
          this._output.space_before_token = true;
        } else if (!this._flags.multiline_frame && (is_expression(this._flags.mode) || is_array(this._flags.mode))) {
        } else {
          this.print_newline();
        }
        this.print_token(current_token);
        this._flags.last_word = current_token.text;
        return;
      }
      var prefix = "NONE";
      if (this._flags.last_token.type === TOKEN.END_BLOCK) {
        if (this._previous_flags.inline_frame) {
          prefix = "SPACE";
        } else if (!reserved_array(current_token, ["else", "catch", "finally", "from"])) {
          prefix = "NEWLINE";
        } else {
          if (this._options.brace_style === "expand" || this._options.brace_style === "end-expand" || this._options.brace_style === "none" && current_token.newlines) {
            prefix = "NEWLINE";
          } else {
            prefix = "SPACE";
            this._output.space_before_token = true;
          }
        }
      } else if (this._flags.last_token.type === TOKEN.SEMICOLON && this._flags.mode === MODE.BlockStatement) {
        prefix = "NEWLINE";
      } else if (this._flags.last_token.type === TOKEN.SEMICOLON && is_expression(this._flags.mode)) {
        prefix = "SPACE";
      } else if (this._flags.last_token.type === TOKEN.STRING) {
        prefix = "NEWLINE";
      } else if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD || this._flags.last_token.text === "*" && (in_array(this._last_last_text, ["function", "yield"]) || this._flags.mode === MODE.ObjectLiteral && in_array(this._last_last_text, ["{", ","]))) {
        prefix = "SPACE";
      } else if (this._flags.last_token.type === TOKEN.START_BLOCK) {
        if (this._flags.inline_frame) {
          prefix = "SPACE";
        } else {
          prefix = "NEWLINE";
        }
      } else if (this._flags.last_token.type === TOKEN.END_EXPR) {
        this._output.space_before_token = true;
        prefix = "NEWLINE";
      }
      if (reserved_array(current_token, line_starters) && this._flags.last_token.text !== ")") {
        if (this._flags.inline_frame || this._flags.last_token.text === "else" || this._flags.last_token.text === "export") {
          prefix = "SPACE";
        } else {
          prefix = "NEWLINE";
        }
      }
      if (reserved_array(current_token, ["else", "catch", "finally"])) {
        if ((!(this._flags.last_token.type === TOKEN.END_BLOCK && this._previous_flags.mode === MODE.BlockStatement) || this._options.brace_style === "expand" || this._options.brace_style === "end-expand" || this._options.brace_style === "none" && current_token.newlines) && !this._flags.inline_frame) {
          this.print_newline();
        } else {
          this._output.trim(true);
          var line = this._output.current_line;
          if (line.last() !== "}") {
            this.print_newline();
          }
          this._output.space_before_token = true;
        }
      } else if (prefix === "NEWLINE") {
        if (reserved_array(this._flags.last_token, special_words)) {
          this._output.space_before_token = true;
        } else if (this._flags.last_token.text === "declare" && reserved_array(current_token, ["var", "let", "const"])) {
          this._output.space_before_token = true;
        } else if (this._flags.last_token.type !== TOKEN.END_EXPR) {
          if ((this._flags.last_token.type !== TOKEN.START_EXPR || !reserved_array(current_token, ["var", "let", "const"])) && this._flags.last_token.text !== ":") {
            if (reserved_word(current_token, "if") && reserved_word(current_token.previous, "else")) {
              this._output.space_before_token = true;
            } else {
              this.print_newline();
            }
          }
        } else if (reserved_array(current_token, line_starters) && this._flags.last_token.text !== ")") {
          this.print_newline();
        }
      } else if (this._flags.multiline_frame && is_array(this._flags.mode) && this._flags.last_token.text === "," && this._last_last_text === "}") {
        this.print_newline();
      } else if (prefix === "SPACE") {
        this._output.space_before_token = true;
      }
      if (current_token.previous && (current_token.previous.type === TOKEN.WORD || current_token.previous.type === TOKEN.RESERVED)) {
        this._output.space_before_token = true;
      }
      this.print_token(current_token);
      this._flags.last_word = current_token.text;
      if (current_token.type === TOKEN.RESERVED) {
        if (current_token.text === "do") {
          this._flags.do_block = true;
        } else if (current_token.text === "if") {
          this._flags.if_block = true;
        } else if (current_token.text === "import") {
          this._flags.import_block = true;
        } else if (this._flags.import_block && reserved_word(current_token, "from")) {
          this._flags.import_block = false;
        }
      }
    };
    Beautifier.prototype.handle_semicolon = function(current_token) {
      if (this.start_of_statement(current_token)) {
        this._output.space_before_token = false;
      } else {
        this.handle_whitespace_and_comments(current_token);
      }
      var next_token = this._tokens.peek();
      while (this._flags.mode === MODE.Statement && !(this._flags.if_block && reserved_word(next_token, "else")) && !this._flags.do_block) {
        this.restore_mode();
      }
      if (this._flags.import_block) {
        this._flags.import_block = false;
      }
      this.print_token(current_token);
    };
    Beautifier.prototype.handle_string = function(current_token) {
      if (current_token.text.startsWith("`") && current_token.newlines === 0 && current_token.whitespace_before === "" && (current_token.previous.text === ")" || this._flags.last_token.type === TOKEN.WORD)) {
      } else if (this.start_of_statement(current_token)) {
        this._output.space_before_token = true;
      } else {
        this.handle_whitespace_and_comments(current_token);
        if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD || this._flags.inline_frame) {
          this._output.space_before_token = true;
        } else if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {
          if (!this.start_of_object_property()) {
            this.allow_wrap_or_preserved_newline(current_token);
          }
        } else if (current_token.text.startsWith("`") && this._flags.last_token.type === TOKEN.END_EXPR && (current_token.previous.text === "]" || current_token.previous.text === ")") && current_token.newlines === 0) {
          this._output.space_before_token = true;
        } else {
          this.print_newline();
        }
      }
      this.print_token(current_token);
    };
    Beautifier.prototype.handle_equals = function(current_token) {
      if (this.start_of_statement(current_token)) {
      } else {
        this.handle_whitespace_and_comments(current_token);
      }
      if (this._flags.declaration_statement) {
        this._flags.declaration_assignment = true;
      }
      this._output.space_before_token = true;
      this.print_token(current_token);
      this._output.space_before_token = true;
    };
    Beautifier.prototype.handle_comma = function(current_token) {
      this.handle_whitespace_and_comments(current_token, true);
      this.print_token(current_token);
      this._output.space_before_token = true;
      if (this._flags.declaration_statement) {
        if (is_expression(this._flags.parent.mode)) {
          this._flags.declaration_assignment = false;
        }
        if (this._flags.declaration_assignment) {
          this._flags.declaration_assignment = false;
          this.print_newline(false, true);
        } else if (this._options.comma_first) {
          this.allow_wrap_or_preserved_newline(current_token);
        }
      } else if (this._flags.mode === MODE.ObjectLiteral || this._flags.mode === MODE.Statement && this._flags.parent.mode === MODE.ObjectLiteral) {
        if (this._flags.mode === MODE.Statement) {
          this.restore_mode();
        }
        if (!this._flags.inline_frame) {
          this.print_newline();
        }
      } else if (this._options.comma_first) {
        this.allow_wrap_or_preserved_newline(current_token);
      }
    };
    Beautifier.prototype.handle_operator = function(current_token) {
      var isGeneratorAsterisk = current_token.text === "*" && (reserved_array(this._flags.last_token, ["function", "yield"]) || in_array(this._flags.last_token.type, [TOKEN.START_BLOCK, TOKEN.COMMA, TOKEN.END_BLOCK, TOKEN.SEMICOLON]));
      var isUnary = in_array(current_token.text, ["-", "+"]) && (in_array(this._flags.last_token.type, [TOKEN.START_BLOCK, TOKEN.START_EXPR, TOKEN.EQUALS, TOKEN.OPERATOR]) || in_array(this._flags.last_token.text, line_starters) || this._flags.last_token.text === ",");
      if (this.start_of_statement(current_token)) {
      } else {
        var preserve_statement_flags = !isGeneratorAsterisk;
        this.handle_whitespace_and_comments(current_token, preserve_statement_flags);
      }
      if (current_token.text === "*" && this._flags.last_token.type === TOKEN.DOT) {
        this.print_token(current_token);
        return;
      }
      if (current_token.text === "::") {
        this.print_token(current_token);
        return;
      }
      if (in_array(current_token.text, ["-", "+"]) && this.start_of_object_property()) {
        this.print_token(current_token);
        return;
      }
      if (this._flags.last_token.type === TOKEN.OPERATOR && in_array(this._options.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)) {
        this.allow_wrap_or_preserved_newline(current_token);
      }
      if (current_token.text === ":" && this._flags.in_case) {
        this.print_token(current_token);
        this._flags.in_case = false;
        this._flags.case_body = true;
        if (this._tokens.peek().type !== TOKEN.START_BLOCK) {
          this.indent();
          this.print_newline();
          this._flags.case_block = false;
        } else {
          this._flags.case_block = true;
          this._output.space_before_token = true;
        }
        return;
      }
      var space_before = true;
      var space_after = true;
      var in_ternary = false;
      if (current_token.text === ":") {
        if (this._flags.ternary_depth === 0) {
          space_before = false;
        } else {
          this._flags.ternary_depth -= 1;
          in_ternary = true;
        }
      } else if (current_token.text === "?") {
        this._flags.ternary_depth += 1;
      }
      if (!isUnary && !isGeneratorAsterisk && this._options.preserve_newlines && in_array(current_token.text, positionable_operators)) {
        var isColon = current_token.text === ":";
        var isTernaryColon = isColon && in_ternary;
        var isOtherColon = isColon && !in_ternary;
        switch (this._options.operator_position) {
          case OPERATOR_POSITION.before_newline:
            this._output.space_before_token = !isOtherColon;
            this.print_token(current_token);
            if (!isColon || isTernaryColon) {
              this.allow_wrap_or_preserved_newline(current_token);
            }
            this._output.space_before_token = true;
            return;
          case OPERATOR_POSITION.after_newline:
            this._output.space_before_token = true;
            if (!isColon || isTernaryColon) {
              if (this._tokens.peek().newlines) {
                this.print_newline(false, true);
              } else {
                this.allow_wrap_or_preserved_newline(current_token);
              }
            } else {
              this._output.space_before_token = false;
            }
            this.print_token(current_token);
            this._output.space_before_token = true;
            return;
          case OPERATOR_POSITION.preserve_newline:
            if (!isOtherColon) {
              this.allow_wrap_or_preserved_newline(current_token);
            }
            space_before = !(this._output.just_added_newline() || isOtherColon);
            this._output.space_before_token = space_before;
            this.print_token(current_token);
            this._output.space_before_token = true;
            return;
        }
      }
      if (isGeneratorAsterisk) {
        this.allow_wrap_or_preserved_newline(current_token);
        space_before = false;
        var next_token = this._tokens.peek();
        space_after = next_token && in_array(next_token.type, [TOKEN.WORD, TOKEN.RESERVED]);
      } else if (current_token.text === "...") {
        this.allow_wrap_or_preserved_newline(current_token);
        space_before = this._flags.last_token.type === TOKEN.START_BLOCK;
        space_after = false;
      } else if (in_array(current_token.text, ["--", "++", "!", "~"]) || isUnary) {
        if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR) {
          this.allow_wrap_or_preserved_newline(current_token);
        }
        space_before = false;
        space_after = false;
        if (current_token.newlines && (current_token.text === "--" || current_token.text === "++" || current_token.text === "~")) {
          var new_line_needed = reserved_array(this._flags.last_token, special_words) && current_token.newlines;
          if (new_line_needed && (this._previous_flags.if_block || this._previous_flags.else_block)) {
            this.restore_mode();
          }
          this.print_newline(new_line_needed, true);
        }
        if (this._flags.last_token.text === ";" && is_expression(this._flags.mode)) {
          space_before = true;
        }
        if (this._flags.last_token.type === TOKEN.RESERVED) {
          space_before = true;
        } else if (this._flags.last_token.type === TOKEN.END_EXPR) {
          space_before = !(this._flags.last_token.text === "]" && (current_token.text === "--" || current_token.text === "++"));
        } else if (this._flags.last_token.type === TOKEN.OPERATOR) {
          space_before = in_array(current_token.text, ["--", "-", "++", "+"]) && in_array(this._flags.last_token.text, ["--", "-", "++", "+"]);
          if (in_array(current_token.text, ["+", "-"]) && in_array(this._flags.last_token.text, ["--", "++"])) {
            space_after = true;
          }
        }
        if ((this._flags.mode === MODE.BlockStatement && !this._flags.inline_frame || this._flags.mode === MODE.Statement) && (this._flags.last_token.text === "{" || this._flags.last_token.text === ";")) {
          this.print_newline();
        }
      }
      this._output.space_before_token = this._output.space_before_token || space_before;
      this.print_token(current_token);
      this._output.space_before_token = space_after;
    };
    Beautifier.prototype.handle_block_comment = function(current_token, preserve_statement_flags) {
      if (this._output.raw) {
        this._output.add_raw_token(current_token);
        if (current_token.directives && current_token.directives.preserve === "end") {
          this._output.raw = this._options.test_output_raw;
        }
        return;
      }
      if (current_token.directives) {
        this.print_newline(false, preserve_statement_flags);
        this.print_token(current_token);
        if (current_token.directives.preserve === "start") {
          this._output.raw = true;
        }
        this.print_newline(false, true);
        return;
      }
      if (!acorn.newline.test(current_token.text) && !current_token.newlines) {
        this._output.space_before_token = true;
        this.print_token(current_token);
        this._output.space_before_token = true;
        return;
      } else {
        this.print_block_commment(current_token, preserve_statement_flags);
      }
    };
    Beautifier.prototype.print_block_commment = function(current_token, preserve_statement_flags) {
      var lines = split_linebreaks(current_token.text);
      var j;
      var javadoc = false;
      var starless = false;
      var lastIndent = current_token.whitespace_before;
      var lastIndentLength = lastIndent.length;
      this.print_newline(false, preserve_statement_flags);
      this.print_token_line_indentation(current_token);
      this._output.add_token(lines[0]);
      this.print_newline(false, preserve_statement_flags);
      if (lines.length > 1) {
        lines = lines.slice(1);
        javadoc = all_lines_start_with(lines, "*");
        starless = each_line_matches_indent(lines, lastIndent);
        if (javadoc) {
          this._flags.alignment = 1;
        }
        for (j = 0; j < lines.length; j++) {
          if (javadoc) {
            this.print_token_line_indentation(current_token);
            this._output.add_token(ltrim(lines[j]));
          } else if (starless && lines[j]) {
            this.print_token_line_indentation(current_token);
            this._output.add_token(lines[j].substring(lastIndentLength));
          } else {
            this._output.current_line.set_indent(-1);
            this._output.add_token(lines[j]);
          }
          this.print_newline(false, preserve_statement_flags);
        }
        this._flags.alignment = 0;
      }
    };
    Beautifier.prototype.handle_comment = function(current_token, preserve_statement_flags) {
      if (current_token.newlines) {
        this.print_newline(false, preserve_statement_flags);
      } else {
        this._output.trim(true);
      }
      this._output.space_before_token = true;
      this.print_token(current_token);
      this.print_newline(false, preserve_statement_flags);
    };
    Beautifier.prototype.handle_dot = function(current_token) {
      if (this.start_of_statement(current_token)) {
      } else {
        this.handle_whitespace_and_comments(current_token, true);
      }
      if (this._flags.last_token.text.match("^[0-9]+$")) {
        this._output.space_before_token = true;
      }
      if (reserved_array(this._flags.last_token, special_words)) {
        this._output.space_before_token = false;
      } else {
        this.allow_wrap_or_preserved_newline(
          current_token,
          this._flags.last_token.text === ")" && this._options.break_chained_methods
        );
      }
      if (this._options.unindent_chained_methods && this._output.just_added_newline()) {
        this.deindent();
      }
      this.print_token(current_token);
    };
    Beautifier.prototype.handle_unknown = function(current_token, preserve_statement_flags) {
      this.print_token(current_token);
      if (current_token.text[current_token.text.length - 1] === "\n") {
        this.print_newline(false, preserve_statement_flags);
      }
    };
    Beautifier.prototype.handle_eof = function(current_token) {
      while (this._flags.mode === MODE.Statement) {
        this.restore_mode();
      }
      this.handle_whitespace_and_comments(current_token);
    };
    module2.exports.Beautifier = Beautifier;
  }
});

// node_modules/js-beautify/js/src/javascript/index.js
var require_javascript = __commonJS({
  "node_modules/js-beautify/js/src/javascript/index.js"(exports2, module2) {
    "use strict";
    var Beautifier = require_beautifier().Beautifier;
    var Options = require_options2().Options;
    function js_beautify(js_source_text, options) {
      var beautifier = new Beautifier(js_source_text, options);
      return beautifier.beautify();
    }
    module2.exports = js_beautify;
    module2.exports.defaultOptions = function() {
      return new Options();
    };
  }
});

// node_modules/js-beautify/js/src/css/options.js
var require_options3 = __commonJS({
  "node_modules/js-beautify/js/src/css/options.js"(exports2, module2) {
    "use strict";
    var BaseOptions = require_options().Options;
    function Options(options) {
      BaseOptions.call(this, options, "css");
      this.selector_separator_newline = this._get_boolean("selector_separator_newline", true);
      this.newline_between_rules = this._get_boolean("newline_between_rules", true);
      var space_around_selector_separator = this._get_boolean("space_around_selector_separator");
      this.space_around_combinator = this._get_boolean("space_around_combinator") || space_around_selector_separator;
      var brace_style_split = this._get_selection_list("brace_style", ["collapse", "expand", "end-expand", "none", "preserve-inline"]);
      this.brace_style = "collapse";
      for (var bs = 0; bs < brace_style_split.length; bs++) {
        if (brace_style_split[bs] !== "expand") {
          this.brace_style = "collapse";
        } else {
          this.brace_style = brace_style_split[bs];
        }
      }
    }
    Options.prototype = new BaseOptions();
    module2.exports.Options = Options;
  }
});

// node_modules/js-beautify/js/src/css/beautifier.js
var require_beautifier2 = __commonJS({
  "node_modules/js-beautify/js/src/css/beautifier.js"(exports2, module2) {
    "use strict";
    var Options = require_options3().Options;
    var Output = require_output().Output;
    var InputScanner = require_inputscanner().InputScanner;
    var Directives = require_directives().Directives;
    var directives_core = new Directives(/\/\*/, /\*\//);
    var lineBreak = /\r\n|[\r\n]/;
    var allLineBreaks = /\r\n|[\r\n]/g;
    var whitespaceChar = /\s/;
    var whitespacePattern = /(?:\s|\n)+/g;
    var block_comment_pattern = /\/\*(?:[\s\S]*?)((?:\*\/)|$)/g;
    var comment_pattern = /\/\/(?:[^\n\r\u2028\u2029]*)/g;
    function Beautifier(source_text, options) {
      this._source_text = source_text || "";
      this._options = new Options(options);
      this._ch = null;
      this._input = null;
      this.NESTED_AT_RULE = {
        "page": true,
        "font-face": true,
        "keyframes": true,
        // also in CONDITIONAL_GROUP_RULE below
        "media": true,
        "supports": true,
        "document": true
      };
      this.CONDITIONAL_GROUP_RULE = {
        "media": true,
        "supports": true,
        "document": true
      };
      this.NON_SEMICOLON_NEWLINE_PROPERTY = [
        "grid-template-areas",
        "grid-template"
      ];
    }
    Beautifier.prototype.eatString = function(endChars) {
      var result = "";
      this._ch = this._input.next();
      while (this._ch) {
        result += this._ch;
        if (this._ch === "\\") {
          result += this._input.next();
        } else if (endChars.indexOf(this._ch) !== -1 || this._ch === "\n") {
          break;
        }
        this._ch = this._input.next();
      }
      return result;
    };
    Beautifier.prototype.eatWhitespace = function(allowAtLeastOneNewLine) {
      var result = whitespaceChar.test(this._input.peek());
      var newline_count = 0;
      while (whitespaceChar.test(this._input.peek())) {
        this._ch = this._input.next();
        if (allowAtLeastOneNewLine && this._ch === "\n") {
          if (newline_count === 0 || newline_count < this._options.max_preserve_newlines) {
            newline_count++;
            this._output.add_new_line(true);
          }
        }
      }
      return result;
    };
    Beautifier.prototype.foundNestedPseudoClass = function() {
      var openParen = 0;
      var i = 1;
      var ch = this._input.peek(i);
      while (ch) {
        if (ch === "{") {
          return true;
        } else if (ch === "(") {
          openParen += 1;
        } else if (ch === ")") {
          if (openParen === 0) {
            return false;
          }
          openParen -= 1;
        } else if (ch === ";" || ch === "}") {
          return false;
        }
        i++;
        ch = this._input.peek(i);
      }
      return false;
    };
    Beautifier.prototype.print_string = function(output_string) {
      this._output.set_indent(this._indentLevel);
      this._output.non_breaking_space = true;
      this._output.add_token(output_string);
    };
    Beautifier.prototype.preserveSingleSpace = function(isAfterSpace) {
      if (isAfterSpace) {
        this._output.space_before_token = true;
      }
    };
    Beautifier.prototype.indent = function() {
      this._indentLevel++;
    };
    Beautifier.prototype.outdent = function() {
      if (this._indentLevel > 0) {
        this._indentLevel--;
      }
    };
    Beautifier.prototype.beautify = function() {
      if (this._options.disabled) {
        return this._source_text;
      }
      var source_text = this._source_text;
      var eol = this._options.eol;
      if (eol === "auto") {
        eol = "\n";
        if (source_text && lineBreak.test(source_text || "")) {
          eol = source_text.match(lineBreak)[0];
        }
      }
      source_text = source_text.replace(allLineBreaks, "\n");
      var baseIndentString = source_text.match(/^[\t ]*/)[0];
      this._output = new Output(this._options, baseIndentString);
      this._input = new InputScanner(source_text);
      this._indentLevel = 0;
      this._nestedLevel = 0;
      this._ch = null;
      var parenLevel = 0;
      var insideRule = false;
      var insidePropertyValue = false;
      var enteringConditionalGroup = false;
      var insideNonNestedAtRule = false;
      var insideScssMap = false;
      var topCharacter = this._ch;
      var insideNonSemiColonValues = false;
      var whitespace;
      var isAfterSpace;
      var previous_ch;
      while (true) {
        whitespace = this._input.read(whitespacePattern);
        isAfterSpace = whitespace !== "";
        previous_ch = topCharacter;
        this._ch = this._input.next();
        if (this._ch === "\\" && this._input.hasNext()) {
          this._ch += this._input.next();
        }
        topCharacter = this._ch;
        if (!this._ch) {
          break;
        } else if (this._ch === "/" && this._input.peek() === "*") {
          this._output.add_new_line();
          this._input.back();
          var comment = this._input.read(block_comment_pattern);
          var directives = directives_core.get_directives(comment);
          if (directives && directives.ignore === "start") {
            comment += directives_core.readIgnored(this._input);
          }
          this.print_string(comment);
          this.eatWhitespace(true);
          this._output.add_new_line();
        } else if (this._ch === "/" && this._input.peek() === "/") {
          this._output.space_before_token = true;
          this._input.back();
          this.print_string(this._input.read(comment_pattern));
          this.eatWhitespace(true);
        } else if (this._ch === "$") {
          this.preserveSingleSpace(isAfterSpace);
          this.print_string(this._ch);
          var variable = this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);
          if (variable.match(/[ :]$/)) {
            variable = this.eatString(": ").replace(/\s+$/, "");
            this.print_string(variable);
            this._output.space_before_token = true;
          }
          if (parenLevel === 0 && variable.indexOf(":") !== -1) {
            insidePropertyValue = true;
            this.indent();
          }
        } else if (this._ch === "@") {
          this.preserveSingleSpace(isAfterSpace);
          if (this._input.peek() === "{") {
            this.print_string(this._ch + this.eatString("}"));
          } else {
            this.print_string(this._ch);
            var variableOrRule = this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);
            if (variableOrRule.match(/[ :]$/)) {
              variableOrRule = this.eatString(": ").replace(/\s+$/, "");
              this.print_string(variableOrRule);
              this._output.space_before_token = true;
            }
            if (parenLevel === 0 && variableOrRule.indexOf(":") !== -1) {
              insidePropertyValue = true;
              this.indent();
            } else if (variableOrRule in this.NESTED_AT_RULE) {
              this._nestedLevel += 1;
              if (variableOrRule in this.CONDITIONAL_GROUP_RULE) {
                enteringConditionalGroup = true;
              }
            } else if (parenLevel === 0 && !insidePropertyValue) {
              insideNonNestedAtRule = true;
            }
          }
        } else if (this._ch === "#" && this._input.peek() === "{") {
          this.preserveSingleSpace(isAfterSpace);
          this.print_string(this._ch + this.eatString("}"));
        } else if (this._ch === "{") {
          if (insidePropertyValue) {
            insidePropertyValue = false;
            this.outdent();
          }
          insideNonNestedAtRule = false;
          if (enteringConditionalGroup) {
            enteringConditionalGroup = false;
            insideRule = this._indentLevel >= this._nestedLevel;
          } else {
            insideRule = this._indentLevel >= this._nestedLevel - 1;
          }
          if (this._options.newline_between_rules && insideRule) {
            if (this._output.previous_line && this._output.previous_line.item(-1) !== "{") {
              this._output.ensure_empty_line_above("/", ",");
            }
          }
          this._output.space_before_token = true;
          if (this._options.brace_style === "expand") {
            this._output.add_new_line();
            this.print_string(this._ch);
            this.indent();
            this._output.set_indent(this._indentLevel);
          } else {
            if (previous_ch === "(") {
              this._output.space_before_token = false;
            } else if (previous_ch !== ",") {
              this.indent();
            }
            this.print_string(this._ch);
          }
          this.eatWhitespace(true);
          this._output.add_new_line();
        } else if (this._ch === "}") {
          this.outdent();
          this._output.add_new_line();
          if (previous_ch === "{") {
            this._output.trim(true);
          }
          if (insidePropertyValue) {
            this.outdent();
            insidePropertyValue = false;
          }
          this.print_string(this._ch);
          insideRule = false;
          if (this._nestedLevel) {
            this._nestedLevel--;
          }
          this.eatWhitespace(true);
          this._output.add_new_line();
          if (this._options.newline_between_rules && !this._output.just_added_blankline()) {
            if (this._input.peek() !== "}") {
              this._output.add_new_line(true);
            }
          }
          if (this._input.peek() === ")") {
            this._output.trim(true);
            if (this._options.brace_style === "expand") {
              this._output.add_new_line(true);
            }
          }
        } else if (this._ch === ":") {
          for (var i = 0; i < this.NON_SEMICOLON_NEWLINE_PROPERTY.length; i++) {
            if (this._input.lookBack(this.NON_SEMICOLON_NEWLINE_PROPERTY[i])) {
              insideNonSemiColonValues = true;
              break;
            }
          }
          if ((insideRule || enteringConditionalGroup) && !(this._input.lookBack("&") || this.foundNestedPseudoClass()) && !this._input.lookBack("(") && !insideNonNestedAtRule && parenLevel === 0) {
            this.print_string(":");
            if (!insidePropertyValue) {
              insidePropertyValue = true;
              this._output.space_before_token = true;
              this.eatWhitespace(true);
              this.indent();
            }
          } else {
            if (this._input.lookBack(" ")) {
              this._output.space_before_token = true;
            }
            if (this._input.peek() === ":") {
              this._ch = this._input.next();
              this.print_string("::");
            } else {
              this.print_string(":");
            }
          }
        } else if (this._ch === '"' || this._ch === "'") {
          var preserveQuoteSpace = previous_ch === '"' || previous_ch === "'";
          this.preserveSingleSpace(preserveQuoteSpace || isAfterSpace);
          this.print_string(this._ch + this.eatString(this._ch));
          this.eatWhitespace(true);
        } else if (this._ch === ";") {
          insideNonSemiColonValues = false;
          if (parenLevel === 0) {
            if (insidePropertyValue) {
              this.outdent();
              insidePropertyValue = false;
            }
            insideNonNestedAtRule = false;
            this.print_string(this._ch);
            this.eatWhitespace(true);
            if (this._input.peek() !== "/") {
              this._output.add_new_line();
            }
          } else {
            this.print_string(this._ch);
            this.eatWhitespace(true);
            this._output.space_before_token = true;
          }
        } else if (this._ch === "(") {
          if (this._input.lookBack("url")) {
            this.print_string(this._ch);
            this.eatWhitespace();
            parenLevel++;
            this.indent();
            this._ch = this._input.next();
            if (this._ch === ")" || this._ch === '"' || this._ch === "'") {
              this._input.back();
            } else if (this._ch) {
              this.print_string(this._ch + this.eatString(")"));
              if (parenLevel) {
                parenLevel--;
                this.outdent();
              }
            }
          } else {
            var space_needed = false;
            if (this._input.lookBack("with")) {
              space_needed = true;
            }
            this.preserveSingleSpace(isAfterSpace || space_needed);
            this.print_string(this._ch);
            if (insidePropertyValue && previous_ch === "$" && this._options.selector_separator_newline) {
              this._output.add_new_line();
              insideScssMap = true;
            } else {
              this.eatWhitespace();
              parenLevel++;
              this.indent();
            }
          }
        } else if (this._ch === ")") {
          if (parenLevel) {
            parenLevel--;
            this.outdent();
          }
          if (insideScssMap && this._input.peek() === ";" && this._options.selector_separator_newline) {
            insideScssMap = false;
            this.outdent();
            this._output.add_new_line();
          }
          this.print_string(this._ch);
        } else if (this._ch === ",") {
          this.print_string(this._ch);
          this.eatWhitespace(true);
          if (this._options.selector_separator_newline && (!insidePropertyValue || insideScssMap) && parenLevel === 0 && !insideNonNestedAtRule) {
            this._output.add_new_line();
          } else {
            this._output.space_before_token = true;
          }
        } else if ((this._ch === ">" || this._ch === "+" || this._ch === "~") && !insidePropertyValue && parenLevel === 0) {
          if (this._options.space_around_combinator) {
            this._output.space_before_token = true;
            this.print_string(this._ch);
            this._output.space_before_token = true;
          } else {
            this.print_string(this._ch);
            this.eatWhitespace();
            if (this._ch && whitespaceChar.test(this._ch)) {
              this._ch = "";
            }
          }
        } else if (this._ch === "]") {
          this.print_string(this._ch);
        } else if (this._ch === "[") {
          this.preserveSingleSpace(isAfterSpace);
          this.print_string(this._ch);
        } else if (this._ch === "=") {
          this.eatWhitespace();
          this.print_string("=");
          if (whitespaceChar.test(this._ch)) {
            this._ch = "";
          }
        } else if (this._ch === "!" && !this._input.lookBack("\\")) {
          this._output.space_before_token = true;
          this.print_string(this._ch);
        } else {
          var preserveAfterSpace = previous_ch === '"' || previous_ch === "'";
          this.preserveSingleSpace(preserveAfterSpace || isAfterSpace);
          this.print_string(this._ch);
          if (!this._output.just_added_newline() && this._input.peek() === "\n" && insideNonSemiColonValues) {
            this._output.add_new_line();
          }
        }
      }
      var sweetCode = this._output.get_code(eol);
      return sweetCode;
    };
    module2.exports.Beautifier = Beautifier;
  }
});

// node_modules/js-beautify/js/src/css/index.js
var require_css = __commonJS({
  "node_modules/js-beautify/js/src/css/index.js"(exports2, module2) {
    "use strict";
    var Beautifier = require_beautifier2().Beautifier;
    var Options = require_options3().Options;
    function css_beautify(source_text, options) {
      var beautifier = new Beautifier(source_text, options);
      return beautifier.beautify();
    }
    module2.exports = css_beautify;
    module2.exports.defaultOptions = function() {
      return new Options();
    };
  }
});

// node_modules/js-beautify/js/src/html/options.js
var require_options4 = __commonJS({
  "node_modules/js-beautify/js/src/html/options.js"(exports2, module2) {
    "use strict";
    var BaseOptions = require_options().Options;
    function Options(options) {
      BaseOptions.call(this, options, "html");
      if (this.templating.length === 1 && this.templating[0] === "auto") {
        this.templating = ["django", "erb", "handlebars", "php"];
      }
      this.indent_inner_html = this._get_boolean("indent_inner_html");
      this.indent_body_inner_html = this._get_boolean("indent_body_inner_html", true);
      this.indent_head_inner_html = this._get_boolean("indent_head_inner_html", true);
      this.indent_handlebars = this._get_boolean("indent_handlebars", true);
      this.wrap_attributes = this._get_selection(
        "wrap_attributes",
        ["auto", "force", "force-aligned", "force-expand-multiline", "aligned-multiple", "preserve", "preserve-aligned"]
      );
      this.wrap_attributes_min_attrs = this._get_number("wrap_attributes_min_attrs", 2);
      this.wrap_attributes_indent_size = this._get_number("wrap_attributes_indent_size", this.indent_size);
      this.extra_liners = this._get_array("extra_liners", ["head", "body", "/html"]);
      this.inline = this._get_array("inline", [
        "a",
        "abbr",
        "area",
        "audio",
        "b",
        "bdi",
        "bdo",
        "br",
        "button",
        "canvas",
        "cite",
        "code",
        "data",
        "datalist",
        "del",
        "dfn",
        "em",
        "embed",
        "i",
        "iframe",
        "img",
        "input",
        "ins",
        "kbd",
        "keygen",
        "label",
        "map",
        "mark",
        "math",
        "meter",
        "noscript",
        "object",
        "output",
        "progress",
        "q",
        "ruby",
        "s",
        "samp",
        /* 'script', */
        "select",
        "small",
        "span",
        "strong",
        "sub",
        "sup",
        "svg",
        "template",
        "textarea",
        "time",
        "u",
        "var",
        "video",
        "wbr",
        "text",
        // obsolete inline tags
        "acronym",
        "big",
        "strike",
        "tt"
      ]);
      this.inline_custom_elements = this._get_boolean("inline_custom_elements", true);
      this.void_elements = this._get_array("void_elements", [
        // HTLM void elements - aka self-closing tags - aka singletons
        // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements
        "area",
        "base",
        "br",
        "col",
        "embed",
        "hr",
        "img",
        "input",
        "keygen",
        "link",
        "menuitem",
        "meta",
        "param",
        "source",
        "track",
        "wbr",
        // NOTE: Optional tags are too complex for a simple list
        // they are hard coded in _do_optional_end_element
        // Doctype and xml elements
        "!doctype",
        "?xml",
        // obsolete tags
        // basefont: https://www.computerhope.com/jargon/h/html-basefont-tag.htm
        // isndex: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/isindex
        "basefont",
        "isindex"
      ]);
      this.unformatted = this._get_array("unformatted", []);
      this.content_unformatted = this._get_array("content_unformatted", [
        "pre",
        "textarea"
      ]);
      this.unformatted_content_delimiter = this._get_characters("unformatted_content_delimiter");
      this.indent_scripts = this._get_selection("indent_scripts", ["normal", "keep", "separate"]);
    }
    Options.prototype = new BaseOptions();
    module2.exports.Options = Options;
  }
});

// node_modules/js-beautify/js/src/html/tokenizer.js
var require_tokenizer3 = __commonJS({
  "node_modules/js-beautify/js/src/html/tokenizer.js"(exports2, module2) {
    "use strict";
    var BaseTokenizer = require_tokenizer().Tokenizer;
    var BASETOKEN = require_tokenizer().TOKEN;
    var Directives = require_directives().Directives;
    var TemplatablePattern = require_templatablepattern().TemplatablePattern;
    var Pattern = require_pattern2().Pattern;
    var TOKEN = {
      TAG_OPEN: "TK_TAG_OPEN",
      TAG_CLOSE: "TK_TAG_CLOSE",
      CONTROL_FLOW_OPEN: "TK_CONTROL_FLOW_OPEN",
      CONTROL_FLOW_CLOSE: "TK_CONTROL_FLOW_CLOSE",
      ATTRIBUTE: "TK_ATTRIBUTE",
      EQUALS: "TK_EQUALS",
      VALUE: "TK_VALUE",
      COMMENT: "TK_COMMENT",
      TEXT: "TK_TEXT",
      UNKNOWN: "TK_UNKNOWN",
      START: BASETOKEN.START,
      RAW: BASETOKEN.RAW,
      EOF: BASETOKEN.EOF
    };
    var directives_core = new Directives(/<\!--/, /-->/);
    var Tokenizer = function(input_string, options) {
      BaseTokenizer.call(this, input_string, options);
      this._current_tag_name = "";
      var templatable_reader = new TemplatablePattern(this._input).read_options(this._options);
      var pattern_reader = new Pattern(this._input);
      this.__patterns = {
        word: templatable_reader.until(/[\n\r\t <]/),
        word_control_flow_close_excluded: templatable_reader.until(/[\n\r\t <}]/),
        single_quote: templatable_reader.until_after(/'/),
        double_quote: templatable_reader.until_after(/"/),
        attribute: templatable_reader.until(/[\n\r\t =>]|\/>/),
        element_name: templatable_reader.until(/[\n\r\t >\/]/),
        angular_control_flow_start: pattern_reader.matching(/\@[a-zA-Z]+[^({]*[({]/),
        handlebars_comment: pattern_reader.starting_with(/{{!--/).until_after(/--}}/),
        handlebars: pattern_reader.starting_with(/{{/).until_after(/}}/),
        handlebars_open: pattern_reader.until(/[\n\r\t }]/),
        handlebars_raw_close: pattern_reader.until(/}}/),
        comment: pattern_reader.starting_with(/<!--/).until_after(/-->/),
        cdata: pattern_reader.starting_with(/<!\[CDATA\[/).until_after(/]]>/),
        // https://en.wikipedia.org/wiki/Conditional_comment
        conditional_comment: pattern_reader.starting_with(/<!\[/).until_after(/]>/),
        processing: pattern_reader.starting_with(/<\?/).until_after(/\?>/)
      };
      if (this._options.indent_handlebars) {
        this.__patterns.word = this.__patterns.word.exclude("handlebars");
        this.__patterns.word_control_flow_close_excluded = this.__patterns.word_control_flow_close_excluded.exclude("handlebars");
      }
      this._unformatted_content_delimiter = null;
      if (this._options.unformatted_content_delimiter) {
        var literal_regexp = this._input.get_literal_regexp(this._options.unformatted_content_delimiter);
        this.__patterns.unformatted_content_delimiter = pattern_reader.matching(literal_regexp).until_after(literal_regexp);
      }
    };
    Tokenizer.prototype = new BaseTokenizer();
    Tokenizer.prototype._is_comment = function(current_token) {
      return false;
    };
    Tokenizer.prototype._is_opening = function(current_token) {
      return current_token.type === TOKEN.TAG_OPEN || current_token.type === TOKEN.CONTROL_FLOW_OPEN;
    };
    Tokenizer.prototype._is_closing = function(current_token, open_token) {
      return current_token.type === TOKEN.TAG_CLOSE && (open_token && ((current_token.text === ">" || current_token.text === "/>") && open_token.text[0] === "<" || current_token.text === "}}" && open_token.text[0] === "{" && open_token.text[1] === "{")) || current_token.type === TOKEN.CONTROL_FLOW_CLOSE && (current_token.text === "}" && open_token.text.endsWith("{"));
    };
    Tokenizer.prototype._reset = function() {
      this._current_tag_name = "";
    };
    Tokenizer.prototype._get_next_token = function(previous_token, open_token) {
      var token = null;
      this._readWhitespace();
      var c = this._input.peek();
      if (c === null) {
        return this._create_token(TOKEN.EOF, "");
      }
      token = token || this._read_open_handlebars(c, open_token);
      token = token || this._read_attribute(c, previous_token, open_token);
      token = token || this._read_close(c, open_token);
      token = token || this._read_control_flows(c, open_token);
      token = token || this._read_raw_content(c, previous_token, open_token);
      token = token || this._read_content_word(c, open_token);
      token = token || this._read_comment_or_cdata(c);
      token = token || this._read_processing(c);
      token = token || this._read_open(c, open_token);
      token = token || this._create_token(TOKEN.UNKNOWN, this._input.next());
      return token;
    };
    Tokenizer.prototype._read_comment_or_cdata = function(c) {
      var token = null;
      var resulting_string = null;
      var directives = null;
      if (c === "<") {
        var peek1 = this._input.peek(1);
        if (peek1 === "!") {
          resulting_string = this.__patterns.comment.read();
          if (resulting_string) {
            directives = directives_core.get_directives(resulting_string);
            if (directives && directives.ignore === "start") {
              resulting_string += directives_core.readIgnored(this._input);
            }
          } else {
            resulting_string = this.__patterns.cdata.read();
          }
        }
        if (resulting_string) {
          token = this._create_token(TOKEN.COMMENT, resulting_string);
          token.directives = directives;
        }
      }
      return token;
    };
    Tokenizer.prototype._read_processing = function(c) {
      var token = null;
      var resulting_string = null;
      var directives = null;
      if (c === "<") {
        var peek1 = this._input.peek(1);
        if (peek1 === "!" || peek1 === "?") {
          resulting_string = this.__patterns.conditional_comment.read();
          resulting_string = resulting_string || this.__patterns.processing.read();
        }
        if (resulting_string) {
          token = this._create_token(TOKEN.COMMENT, resulting_string);
          token.directives = directives;
        }
      }
      return token;
    };
    Tokenizer.prototype._read_open = function(c, open_token) {
      var resulting_string = null;
      var token = null;
      if (!open_token || open_token.type === TOKEN.CONTROL_FLOW_OPEN) {
        if (c === "<") {
          resulting_string = this._input.next();
          if (this._input.peek() === "/") {
            resulting_string += this._input.next();
          }
          resulting_string += this.__patterns.element_name.read();
          token = this._create_token(TOKEN.TAG_OPEN, resulting_string);
        }
      }
      return token;
    };
    Tokenizer.prototype._read_open_handlebars = function(c, open_token) {
      var resulting_string = null;
      var token = null;
      if (!open_token || open_token.type === TOKEN.CONTROL_FLOW_OPEN) {
        if (this._options.indent_handlebars && c === "{" && this._input.peek(1) === "{") {
          if (this._input.peek(2) === "!") {
            resulting_string = this.__patterns.handlebars_comment.read();
            resulting_string = resulting_string || this.__patterns.handlebars.read();
            token = this._create_token(TOKEN.COMMENT, resulting_string);
          } else {
            resulting_string = this.__patterns.handlebars_open.read();
            token = this._create_token(TOKEN.TAG_OPEN, resulting_string);
          }
        }
      }
      return token;
    };
    Tokenizer.prototype._read_control_flows = function(c, open_token) {
      var resulting_string = "";
      var token = null;
      if (!this._options.templating.includes("angular") || !this._options.indent_handlebars) {
        return token;
      }
      if (c === "@") {
        resulting_string = this.__patterns.angular_control_flow_start.read();
        if (resulting_string === "") {
          return token;
        }
        var opening_parentheses_count = resulting_string.endsWith("(") ? 1 : 0;
        var closing_parentheses_count = 0;
        while (!(resulting_string.endsWith("{") && opening_parentheses_count === closing_parentheses_count)) {
          var next_char = this._input.next();
          if (next_char === null) {
            break;
          } else if (next_char === "(") {
            opening_parentheses_count++;
          } else if (next_char === ")") {
            closing_parentheses_count++;
          }
          resulting_string += next_char;
        }
        token = this._create_token(TOKEN.CONTROL_FLOW_OPEN, resulting_string);
      } else if (c === "}" && open_token && open_token.type === TOKEN.CONTROL_FLOW_OPEN) {
        resulting_string = this._input.next();
        token = this._create_token(TOKEN.CONTROL_FLOW_CLOSE, resulting_string);
      }
      return token;
    };
    Tokenizer.prototype._read_close = function(c, open_token) {
      var resulting_string = null;
      var token = null;
      if (open_token && open_token.type === TOKEN.TAG_OPEN) {
        if (open_token.text[0] === "<" && (c === ">" || c === "/" && this._input.peek(1) === ">")) {
          resulting_string = this._input.next();
          if (c === "/") {
            resulting_string += this._input.next();
          }
          token = this._create_token(TOKEN.TAG_CLOSE, resulting_string);
        } else if (open_token.text[0] === "{" && c === "}" && this._input.peek(1) === "}") {
          this._input.next();
          this._input.next();
          token = this._create_token(TOKEN.TAG_CLOSE, "}}");
        }
      }
      return token;
    };
    Tokenizer.prototype._read_attribute = function(c, previous_token, open_token) {
      var token = null;
      var resulting_string = "";
      if (open_token && open_token.text[0] === "<") {
        if (c === "=") {
          token = this._create_token(TOKEN.EQUALS, this._input.next());
        } else if (c === '"' || c === "'") {
          var content = this._input.next();
          if (c === '"') {
            content += this.__patterns.double_quote.read();
          } else {
            content += this.__patterns.single_quote.read();
          }
          token = this._create_token(TOKEN.VALUE, content);
        } else {
          resulting_string = this.__patterns.attribute.read();
          if (resulting_string) {
            if (previous_token.type === TOKEN.EQUALS) {
              token = this._create_token(TOKEN.VALUE, resulting_string);
            } else {
              token = this._create_token(TOKEN.ATTRIBUTE, resulting_string);
            }
          }
        }
      }
      return token;
    };
    Tokenizer.prototype._is_content_unformatted = function(tag_name) {
      return this._options.void_elements.indexOf(tag_name) === -1 && (this._options.content_unformatted.indexOf(tag_name) !== -1 || this._options.unformatted.indexOf(tag_name) !== -1);
    };
    Tokenizer.prototype._read_raw_content = function(c, previous_token, open_token) {
      var resulting_string = "";
      if (open_token && open_token.text[0] === "{") {
        resulting_string = this.__patterns.handlebars_raw_close.read();
      } else if (previous_token.type === TOKEN.TAG_CLOSE && previous_token.opened.text[0] === "<" && previous_token.text[0] !== "/") {
        var tag_name = previous_token.opened.text.substr(1).toLowerCase();
        if (tag_name === "script" || tag_name === "style") {
          var token = this._read_comment_or_cdata(c);
          if (token) {
            token.type = TOKEN.TEXT;
            return token;
          }
          resulting_string = this._input.readUntil(new RegExp("</" + tag_name + "[\\n\\r\\t ]*?>", "ig"));
        } else if (this._is_content_unformatted(tag_name)) {
          resulting_string = this._input.readUntil(new RegExp("</" + tag_name + "[\\n\\r\\t ]*?>", "ig"));
        }
      }
      if (resulting_string) {
        return this._create_token(TOKEN.TEXT, resulting_string);
      }
      return null;
    };
    Tokenizer.prototype._read_content_word = function(c, open_token) {
      var resulting_string = "";
      if (this._options.unformatted_content_delimiter) {
        if (c === this._options.unformatted_content_delimiter[0]) {
          resulting_string = this.__patterns.unformatted_content_delimiter.read();
        }
      }
      if (!resulting_string) {
        resulting_string = open_token && open_token.type === TOKEN.CONTROL_FLOW_OPEN ? this.__patterns.word_control_flow_close_excluded.read() : this.__patterns.word.read();
      }
      if (resulting_string) {
        return this._create_token(TOKEN.TEXT, resulting_string);
      }
    };
    module2.exports.Tokenizer = Tokenizer;
    module2.exports.TOKEN = TOKEN;
  }
});

// node_modules/js-beautify/js/src/html/beautifier.js
var require_beautifier3 = __commonJS({
  "node_modules/js-beautify/js/src/html/beautifier.js"(exports2, module2) {
    "use strict";
    var Options = require_options4().Options;
    var Output = require_output().Output;
    var Tokenizer = require_tokenizer3().Tokenizer;
    var TOKEN = require_tokenizer3().TOKEN;
    var lineBreak = /\r\n|[\r\n]/;
    var allLineBreaks = /\r\n|[\r\n]/g;
    var Printer = function(options, base_indent_string) {
      this.indent_level = 0;
      this.alignment_size = 0;
      this.max_preserve_newlines = options.max_preserve_newlines;
      this.preserve_newlines = options.preserve_newlines;
      this._output = new Output(options, base_indent_string);
    };
    Printer.prototype.current_line_has_match = function(pattern) {
      return this._output.current_line.has_match(pattern);
    };
    Printer.prototype.set_space_before_token = function(value, non_breaking) {
      this._output.space_before_token = value;
      this._output.non_breaking_space = non_breaking;
    };
    Printer.prototype.set_wrap_point = function() {
      this._output.set_indent(this.indent_level, this.alignment_size);
      this._output.set_wrap_point();
    };
    Printer.prototype.add_raw_token = function(token) {
      this._output.add_raw_token(token);
    };
    Printer.prototype.print_preserved_newlines = function(raw_token) {
      var newlines = 0;
      if (raw_token.type !== TOKEN.TEXT && raw_token.previous.type !== TOKEN.TEXT) {
        newlines = raw_token.newlines ? 1 : 0;
      }
      if (this.preserve_newlines) {
        newlines = raw_token.newlines < this.max_preserve_newlines + 1 ? raw_token.newlines : this.max_preserve_newlines + 1;
      }
      for (var n = 0; n < newlines; n++) {
        this.print_newline(n > 0);
      }
      return newlines !== 0;
    };
    Printer.prototype.traverse_whitespace = function(raw_token) {
      if (raw_token.whitespace_before || raw_token.newlines) {
        if (!this.print_preserved_newlines(raw_token)) {
          this._output.space_before_token = true;
        }
        return true;
      }
      return false;
    };
    Printer.prototype.previous_token_wrapped = function() {
      return this._output.previous_token_wrapped;
    };
    Printer.prototype.print_newline = function(force) {
      this._output.add_new_line(force);
    };
    Printer.prototype.print_token = function(token) {
      if (token.text) {
        this._output.set_indent(this.indent_level, this.alignment_size);
        this._output.add_token(token.text);
      }
    };
    Printer.prototype.indent = function() {
      this.indent_level++;
    };
    Printer.prototype.deindent = function() {
      if (this.indent_level > 0) {
        this.indent_level--;
        this._output.set_indent(this.indent_level, this.alignment_size);
      }
    };
    Printer.prototype.get_full_indent = function(level) {
      level = this.indent_level + (level || 0);
      if (level < 1) {
        return "";
      }
      return this._output.get_indent_string(level);
    };
    var get_type_attribute = function(start_token) {
      var result = null;
      var raw_token = start_token.next;
      while (raw_token.type !== TOKEN.EOF && start_token.closed !== raw_token) {
        if (raw_token.type === TOKEN.ATTRIBUTE && raw_token.text === "type") {
          if (raw_token.next && raw_token.next.type === TOKEN.EQUALS && raw_token.next.next && raw_token.next.next.type === TOKEN.VALUE) {
            result = raw_token.next.next.text;
          }
          break;
        }
        raw_token = raw_token.next;
      }
      return result;
    };
    var get_custom_beautifier_name = function(tag_check, raw_token) {
      var typeAttribute = null;
      var result = null;
      if (!raw_token.closed) {
        return null;
      }
      if (tag_check === "script") {
        typeAttribute = "text/javascript";
      } else if (tag_check === "style") {
        typeAttribute = "text/css";
      }
      typeAttribute = get_type_attribute(raw_token) || typeAttribute;
      if (typeAttribute.search("text/css") > -1) {
        result = "css";
      } else if (typeAttribute.search(/module|((text|application|dojo)\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\+)?json|method|aspect))/) > -1) {
        result = "javascript";
      } else if (typeAttribute.search(/(text|application|dojo)\/(x-)?(html)/) > -1) {
        result = "html";
      } else if (typeAttribute.search(/test\/null/) > -1) {
        result = "null";
      }
      return result;
    };
    function in_array(what, arr) {
      return arr.indexOf(what) !== -1;
    }
    function TagFrame(parent, parser_token, indent_level) {
      this.parent = parent || null;
      this.tag = parser_token ? parser_token.tag_name : "";
      this.indent_level = indent_level || 0;
      this.parser_token = parser_token || null;
    }
    function TagStack(printer) {
      this._printer = printer;
      this._current_frame = null;
    }
    TagStack.prototype.get_parser_token = function() {
      return this._current_frame ? this._current_frame.parser_token : null;
    };
    TagStack.prototype.record_tag = function(parser_token) {
      var new_frame = new TagFrame(this._current_frame, parser_token, this._printer.indent_level);
      this._current_frame = new_frame;
    };
    TagStack.prototype._try_pop_frame = function(frame) {
      var parser_token = null;
      if (frame) {
        parser_token = frame.parser_token;
        this._printer.indent_level = frame.indent_level;
        this._current_frame = frame.parent;
      }
      return parser_token;
    };
    TagStack.prototype._get_frame = function(tag_list, stop_list) {
      var frame = this._current_frame;
      while (frame) {
        if (tag_list.indexOf(frame.tag) !== -1) {
          break;
        } else if (stop_list && stop_list.indexOf(frame.tag) !== -1) {
          frame = null;
          break;
        }
        frame = frame.parent;
      }
      return frame;
    };
    TagStack.prototype.try_pop = function(tag, stop_list) {
      var frame = this._get_frame([tag], stop_list);
      return this._try_pop_frame(frame);
    };
    TagStack.prototype.indent_to_tag = function(tag_list) {
      var frame = this._get_frame(tag_list);
      if (frame) {
        this._printer.indent_level = frame.indent_level;
      }
    };
    function Beautifier(source_text, options, js_beautify, css_beautify) {
      this._source_text = source_text || "";
      options = options || {};
      this._js_beautify = js_beautify;
      this._css_beautify = css_beautify;
      this._tag_stack = null;
      var optionHtml = new Options(options, "html");
      this._options = optionHtml;
      this._is_wrap_attributes_force = this._options.wrap_attributes.substr(0, "force".length) === "force";
      this._is_wrap_attributes_force_expand_multiline = this._options.wrap_attributes === "force-expand-multiline";
      this._is_wrap_attributes_force_aligned = this._options.wrap_attributes === "force-aligned";
      this._is_wrap_attributes_aligned_multiple = this._options.wrap_attributes === "aligned-multiple";
      this._is_wrap_attributes_preserve = this._options.wrap_attributes.substr(0, "preserve".length) === "preserve";
      this._is_wrap_attributes_preserve_aligned = this._options.wrap_attributes === "preserve-aligned";
    }
    Beautifier.prototype.beautify = function() {
      if (this._options.disabled) {
        return this._source_text;
      }
      var source_text = this._source_text;
      var eol = this._options.eol;
      if (this._options.eol === "auto") {
        eol = "\n";
        if (source_text && lineBreak.test(source_text)) {
          eol = source_text.match(lineBreak)[0];
        }
      }
      source_text = source_text.replace(allLineBreaks, "\n");
      var baseIndentString = source_text.match(/^[\t ]*/)[0];
      var last_token = {
        text: "",
        type: ""
      };
      var last_tag_token = new TagOpenParserToken();
      var printer = new Printer(this._options, baseIndentString);
      var tokens = new Tokenizer(source_text, this._options).tokenize();
      this._tag_stack = new TagStack(printer);
      var parser_token = null;
      var raw_token = tokens.next();
      while (raw_token.type !== TOKEN.EOF) {
        if (raw_token.type === TOKEN.TAG_OPEN || raw_token.type === TOKEN.COMMENT) {
          parser_token = this._handle_tag_open(printer, raw_token, last_tag_token, last_token, tokens);
          last_tag_token = parser_token;
        } else if (raw_token.type === TOKEN.ATTRIBUTE || raw_token.type === TOKEN.EQUALS || raw_token.type === TOKEN.VALUE || raw_token.type === TOKEN.TEXT && !last_tag_token.tag_complete) {
          parser_token = this._handle_inside_tag(printer, raw_token, last_tag_token, last_token);
        } else if (raw_token.type === TOKEN.TAG_CLOSE) {
          parser_token = this._handle_tag_close(printer, raw_token, last_tag_token);
        } else if (raw_token.type === TOKEN.TEXT) {
          parser_token = this._handle_text(printer, raw_token, last_tag_token);
        } else if (raw_token.type === TOKEN.CONTROL_FLOW_OPEN) {
          parser_token = this._handle_control_flow_open(printer, raw_token);
        } else if (raw_token.type === TOKEN.CONTROL_FLOW_CLOSE) {
          parser_token = this._handle_control_flow_close(printer, raw_token);
        } else {
          printer.add_raw_token(raw_token);
        }
        last_token = parser_token;
        raw_token = tokens.next();
      }
      var sweet_code = printer._output.get_code(eol);
      return sweet_code;
    };
    Beautifier.prototype._handle_control_flow_open = function(printer, raw_token) {
      var parser_token = {
        text: raw_token.text,
        type: raw_token.type
      };
      printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== "", true);
      if (raw_token.newlines) {
        printer.print_preserved_newlines(raw_token);
      } else {
        printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== "", true);
      }
      printer.print_token(raw_token);
      printer.indent();
      return parser_token;
    };
    Beautifier.prototype._handle_control_flow_close = function(printer, raw_token) {
      var parser_token = {
        text: raw_token.text,
        type: raw_token.type
      };
      printer.deindent();
      if (raw_token.newlines) {
        printer.print_preserved_newlines(raw_token);
      } else {
        printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== "", true);
      }
      printer.print_token(raw_token);
      return parser_token;
    };
    Beautifier.prototype._handle_tag_close = function(printer, raw_token, last_tag_token) {
      var parser_token = {
        text: raw_token.text,
        type: raw_token.type
      };
      printer.alignment_size = 0;
      last_tag_token.tag_complete = true;
      printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== "", true);
      if (last_tag_token.is_unformatted) {
        printer.add_raw_token(raw_token);
      } else {
        if (last_tag_token.tag_start_char === "<") {
          printer.set_space_before_token(raw_token.text[0] === "/", true);
          if (this._is_wrap_attributes_force_expand_multiline && last_tag_token.has_wrapped_attrs) {
            printer.print_newline(false);
          }
        }
        printer.print_token(raw_token);
      }
      if (last_tag_token.indent_content && !(last_tag_token.is_unformatted || last_tag_token.is_content_unformatted)) {
        printer.indent();
        last_tag_token.indent_content = false;
      }
      if (!last_tag_token.is_inline_element && !(last_tag_token.is_unformatted || last_tag_token.is_content_unformatted)) {
        printer.set_wrap_point();
      }
      return parser_token;
    };
    Beautifier.prototype._handle_inside_tag = function(printer, raw_token, last_tag_token, last_token) {
      var wrapped = last_tag_token.has_wrapped_attrs;
      var parser_token = {
        text: raw_token.text,
        type: raw_token.type
      };
      printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== "", true);
      if (last_tag_token.is_unformatted) {
        printer.add_raw_token(raw_token);
      } else if (last_tag_token.tag_start_char === "{" && raw_token.type === TOKEN.TEXT) {
        if (printer.print_preserved_newlines(raw_token)) {
          raw_token.newlines = 0;
          printer.add_raw_token(raw_token);
        } else {
          printer.print_token(raw_token);
        }
      } else {
        if (raw_token.type === TOKEN.ATTRIBUTE) {
          printer.set_space_before_token(true);
        } else if (raw_token.type === TOKEN.EQUALS) {
          printer.set_space_before_token(false);
        } else if (raw_token.type === TOKEN.VALUE && raw_token.previous.type === TOKEN.EQUALS) {
          printer.set_space_before_token(false);
        }
        if (raw_token.type === TOKEN.ATTRIBUTE && last_tag_token.tag_start_char === "<") {
          if (this._is_wrap_attributes_preserve || this._is_wrap_attributes_preserve_aligned) {
            printer.traverse_whitespace(raw_token);
            wrapped = wrapped || raw_token.newlines !== 0;
          }
          if (this._is_wrap_attributes_force && last_tag_token.attr_count >= this._options.wrap_attributes_min_attrs && (last_token.type !== TOKEN.TAG_OPEN || // ie. second attribute and beyond
          this._is_wrap_attributes_force_expand_multiline)) {
            printer.print_newline(false);
            wrapped = true;
          }
        }
        printer.print_token(raw_token);
        wrapped = wrapped || printer.previous_token_wrapped();
        last_tag_token.has_wrapped_attrs = wrapped;
      }
      return parser_token;
    };
    Beautifier.prototype._handle_text = function(printer, raw_token, last_tag_token) {
      var parser_token = {
        text: raw_token.text,
        type: "TK_CONTENT"
      };
      if (last_tag_token.custom_beautifier_name) {
        this._print_custom_beatifier_text(printer, raw_token, last_tag_token);
      } else if (last_tag_token.is_unformatted || last_tag_token.is_content_unformatted) {
        printer.add_raw_token(raw_token);
      } else {
        printer.traverse_whitespace(raw_token);
        printer.print_token(raw_token);
      }
      return parser_token;
    };
    Beautifier.prototype._print_custom_beatifier_text = function(printer, raw_token, last_tag_token) {
      var local = this;
      if (raw_token.text !== "") {
        var text = raw_token.text, _beautifier, script_indent_level = 1, pre = "", post = "";
        if (last_tag_token.custom_beautifier_name === "javascript" && typeof this._js_beautify === "function") {
          _beautifier = this._js_beautify;
        } else if (last_tag_token.custom_beautifier_name === "css" && typeof this._css_beautify === "function") {
          _beautifier = this._css_beautify;
        } else if (last_tag_token.custom_beautifier_name === "html") {
          _beautifier = function(html_source, options) {
            var beautifier = new Beautifier(html_source, options, local._js_beautify, local._css_beautify);
            return beautifier.beautify();
          };
        }
        if (this._options.indent_scripts === "keep") {
          script_indent_level = 0;
        } else if (this._options.indent_scripts === "separate") {
          script_indent_level = -printer.indent_level;
        }
        var indentation = printer.get_full_indent(script_indent_level);
        text = text.replace(/\n[ \t]*$/, "");
        if (last_tag_token.custom_beautifier_name !== "html" && text[0] === "<" && text.match(/^(<!--|<!\[CDATA\[)/)) {
          var matched = /^(<!--[^\n]*|<!\[CDATA\[)(\n?)([ \t\n]*)([\s\S]*)(-->|]]>)$/.exec(text);
          if (!matched) {
            printer.add_raw_token(raw_token);
            return;
          }
          pre = indentation + matched[1] + "\n";
          text = matched[4];
          if (matched[5]) {
            post = indentation + matched[5];
          }
          text = text.replace(/\n[ \t]*$/, "");
          if (matched[2] || matched[3].indexOf("\n") !== -1) {
            matched = matched[3].match(/[ \t]+$/);
            if (matched) {
              raw_token.whitespace_before = matched[0];
            }
          }
        }
        if (text) {
          if (_beautifier) {
            var Child_options = function() {
              this.eol = "\n";
            };
            Child_options.prototype = this._options.raw_options;
            var child_options = new Child_options();
            text = _beautifier(indentation + text, child_options);
          } else {
            var white = raw_token.whitespace_before;
            if (white) {
              text = text.replace(new RegExp("\n(" + white + ")?", "g"), "\n");
            }
            text = indentation + text.replace(/\n/g, "\n" + indentation);
          }
        }
        if (pre) {
          if (!text) {
            text = pre + post;
          } else {
            text = pre + text + "\n" + post;
          }
        }
        printer.print_newline(false);
        if (text) {
          raw_token.text = text;
          raw_token.whitespace_before = "";
          raw_token.newlines = 0;
          printer.add_raw_token(raw_token);
          printer.print_newline(true);
        }
      }
    };
    Beautifier.prototype._handle_tag_open = function(printer, raw_token, last_tag_token, last_token, tokens) {
      var parser_token = this._get_tag_open_token(raw_token);
      if ((last_tag_token.is_unformatted || last_tag_token.is_content_unformatted) && !last_tag_token.is_empty_element && raw_token.type === TOKEN.TAG_OPEN && !parser_token.is_start_tag) {
        printer.add_raw_token(raw_token);
        parser_token.start_tag_token = this._tag_stack.try_pop(parser_token.tag_name);
      } else {
        printer.traverse_whitespace(raw_token);
        this._set_tag_position(printer, raw_token, parser_token, last_tag_token, last_token);
        if (!parser_token.is_inline_element) {
          printer.set_wrap_point();
        }
        printer.print_token(raw_token);
      }
      if (parser_token.is_start_tag && this._is_wrap_attributes_force) {
        var peek_index = 0;
        var peek_token;
        do {
          peek_token = tokens.peek(peek_index);
          if (peek_token.type === TOKEN.ATTRIBUTE) {
            parser_token.attr_count += 1;
          }
          peek_index += 1;
        } while (peek_token.type !== TOKEN.EOF && peek_token.type !== TOKEN.TAG_CLOSE);
      }
      if (this._is_wrap_attributes_force_aligned || this._is_wrap_attributes_aligned_multiple || this._is_wrap_attributes_preserve_aligned) {
        parser_token.alignment_size = raw_token.text.length + 1;
      }
      if (!parser_token.tag_complete && !parser_token.is_unformatted) {
        printer.alignment_size = parser_token.alignment_size;
      }
      return parser_token;
    };
    var TagOpenParserToken = function(parent, raw_token) {
      this.parent = parent || null;
      this.text = "";
      this.type = "TK_TAG_OPEN";
      this.tag_name = "";
      this.is_inline_element = false;
      this.is_unformatted = false;
      this.is_content_unformatted = false;
      this.is_empty_element = false;
      this.is_start_tag = false;
      this.is_end_tag = false;
      this.indent_content = false;
      this.multiline_content = false;
      this.custom_beautifier_name = null;
      this.start_tag_token = null;
      this.attr_count = 0;
      this.has_wrapped_attrs = false;
      this.alignment_size = 0;
      this.tag_complete = false;
      this.tag_start_char = "";
      this.tag_check = "";
      if (!raw_token) {
        this.tag_complete = true;
      } else {
        var tag_check_match;
        this.tag_start_char = raw_token.text[0];
        this.text = raw_token.text;
        if (this.tag_start_char === "<") {
          tag_check_match = raw_token.text.match(/^<([^\s>]*)/);
          this.tag_check = tag_check_match ? tag_check_match[1] : "";
        } else {
          tag_check_match = raw_token.text.match(/^{{~?(?:[\^]|#\*?)?([^\s}]+)/);
          this.tag_check = tag_check_match ? tag_check_match[1] : "";
          if ((raw_token.text.startsWith("{{#>") || raw_token.text.startsWith("{{~#>")) && this.tag_check[0] === ">") {
            if (this.tag_check === ">" && raw_token.next !== null) {
              this.tag_check = raw_token.next.text.split(" ")[0];
            } else {
              this.tag_check = raw_token.text.split(">")[1];
            }
          }
        }
        this.tag_check = this.tag_check.toLowerCase();
        if (raw_token.type === TOKEN.COMMENT) {
          this.tag_complete = true;
        }
        this.is_start_tag = this.tag_check.charAt(0) !== "/";
        this.tag_name = !this.is_start_tag ? this.tag_check.substr(1) : this.tag_check;
        this.is_end_tag = !this.is_start_tag || raw_token.closed && raw_token.closed.text === "/>";
        var handlebar_starts = 2;
        if (this.tag_start_char === "{" && this.text.length >= 3) {
          if (this.text.charAt(2) === "~") {
            handlebar_starts = 3;
          }
        }
        this.is_end_tag = this.is_end_tag || this.tag_start_char === "{" && (this.text.length < 3 || /[^#\^]/.test(this.text.charAt(handlebar_starts)));
      }
    };
    Beautifier.prototype._get_tag_open_token = function(raw_token) {
      var parser_token = new TagOpenParserToken(this._tag_stack.get_parser_token(), raw_token);
      parser_token.alignment_size = this._options.wrap_attributes_indent_size;
      parser_token.is_end_tag = parser_token.is_end_tag || in_array(parser_token.tag_check, this._options.void_elements);
      parser_token.is_empty_element = parser_token.tag_complete || parser_token.is_start_tag && parser_token.is_end_tag;
      parser_token.is_unformatted = !parser_token.tag_complete && in_array(parser_token.tag_check, this._options.unformatted);
      parser_token.is_content_unformatted = !parser_token.is_empty_element && in_array(parser_token.tag_check, this._options.content_unformatted);
      parser_token.is_inline_element = in_array(parser_token.tag_name, this._options.inline) || this._options.inline_custom_elements && parser_token.tag_name.includes("-") || parser_token.tag_start_char === "{";
      return parser_token;
    };
    Beautifier.prototype._set_tag_position = function(printer, raw_token, parser_token, last_tag_token, last_token) {
      if (!parser_token.is_empty_element) {
        if (parser_token.is_end_tag) {
          parser_token.start_tag_token = this._tag_stack.try_pop(parser_token.tag_name);
        } else {
          if (this._do_optional_end_element(parser_token)) {
            if (!parser_token.is_inline_element) {
              printer.print_newline(false);
            }
          }
          this._tag_stack.record_tag(parser_token);
          if ((parser_token.tag_name === "script" || parser_token.tag_name === "style") && !(parser_token.is_unformatted || parser_token.is_content_unformatted)) {
            parser_token.custom_beautifier_name = get_custom_beautifier_name(parser_token.tag_check, raw_token);
          }
        }
      }
      if (in_array(parser_token.tag_check, this._options.extra_liners)) {
        printer.print_newline(false);
        if (!printer._output.just_added_blankline()) {
          printer.print_newline(true);
        }
      }
      if (parser_token.is_empty_element) {
        if (parser_token.tag_start_char === "{" && parser_token.tag_check === "else") {
          this._tag_stack.indent_to_tag(["if", "unless", "each"]);
          parser_token.indent_content = true;
          var foundIfOnCurrentLine = printer.current_line_has_match(/{{#if/);
          if (!foundIfOnCurrentLine) {
            printer.print_newline(false);
          }
        }
        if (parser_token.tag_name === "!--" && last_token.type === TOKEN.TAG_CLOSE && last_tag_token.is_end_tag && parser_token.text.indexOf("\n") === -1) {
        } else {
          if (!(parser_token.is_inline_element || parser_token.is_unformatted)) {
            printer.print_newline(false);
          }
          this._calcluate_parent_multiline(printer, parser_token);
        }
      } else if (parser_token.is_end_tag) {
        var do_end_expand = false;
        do_end_expand = parser_token.start_tag_token && parser_token.start_tag_token.multiline_content;
        do_end_expand = do_end_expand || !parser_token.is_inline_element && !(last_tag_token.is_inline_element || last_tag_token.is_unformatted) && !(last_token.type === TOKEN.TAG_CLOSE && parser_token.start_tag_token === last_tag_token) && last_token.type !== "TK_CONTENT";
        if (parser_token.is_content_unformatted || parser_token.is_unformatted) {
          do_end_expand = false;
        }
        if (do_end_expand) {
          printer.print_newline(false);
        }
      } else {
        parser_token.indent_content = !parser_token.custom_beautifier_name;
        if (parser_token.tag_start_char === "<") {
          if (parser_token.tag_name === "html") {
            parser_token.indent_content = this._options.indent_inner_html;
          } else if (parser_token.tag_name === "head") {
            parser_token.indent_content = this._options.indent_head_inner_html;
          } else if (parser_token.tag_name === "body") {
            parser_token.indent_content = this._options.indent_body_inner_html;
          }
        }
        if (!(parser_token.is_inline_element || parser_token.is_unformatted) && (last_token.type !== "TK_CONTENT" || parser_token.is_content_unformatted)) {
          printer.print_newline(false);
        }
        this._calcluate_parent_multiline(printer, parser_token);
      }
    };
    Beautifier.prototype._calcluate_parent_multiline = function(printer, parser_token) {
      if (parser_token.parent && printer._output.just_added_newline() && !((parser_token.is_inline_element || parser_token.is_unformatted) && parser_token.parent.is_inline_element)) {
        parser_token.parent.multiline_content = true;
      }
    };
    var p_closers = ["address", "article", "aside", "blockquote", "details", "div", "dl", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hr", "main", "menu", "nav", "ol", "p", "pre", "section", "table", "ul"];
    var p_parent_excludes = ["a", "audio", "del", "ins", "map", "noscript", "video"];
    Beautifier.prototype._do_optional_end_element = function(parser_token) {
      var result = null;
      if (parser_token.is_empty_element || !parser_token.is_start_tag || !parser_token.parent) {
        return;
      }
      if (parser_token.tag_name === "body") {
        result = result || this._tag_stack.try_pop("head");
      } else if (parser_token.tag_name === "li") {
        result = result || this._tag_stack.try_pop("li", ["ol", "ul", "menu"]);
      } else if (parser_token.tag_name === "dd" || parser_token.tag_name === "dt") {
        result = result || this._tag_stack.try_pop("dt", ["dl"]);
        result = result || this._tag_stack.try_pop("dd", ["dl"]);
      } else if (parser_token.parent.tag_name === "p" && p_closers.indexOf(parser_token.tag_name) !== -1) {
        var p_parent = parser_token.parent.parent;
        if (!p_parent || p_parent_excludes.indexOf(p_parent.tag_name) === -1) {
          result = result || this._tag_stack.try_pop("p");
        }
      } else if (parser_token.tag_name === "rp" || parser_token.tag_name === "rt") {
        result = result || this._tag_stack.try_pop("rt", ["ruby", "rtc"]);
        result = result || this._tag_stack.try_pop("rp", ["ruby", "rtc"]);
      } else if (parser_token.tag_name === "optgroup") {
        result = result || this._tag_stack.try_pop("optgroup", ["select"]);
      } else if (parser_token.tag_name === "option") {
        result = result || this._tag_stack.try_pop("option", ["select", "datalist", "optgroup"]);
      } else if (parser_token.tag_name === "colgroup") {
        result = result || this._tag_stack.try_pop("caption", ["table"]);
      } else if (parser_token.tag_name === "thead") {
        result = result || this._tag_stack.try_pop("caption", ["table"]);
        result = result || this._tag_stack.try_pop("colgroup", ["table"]);
      } else if (parser_token.tag_name === "tbody" || parser_token.tag_name === "tfoot") {
        result = result || this._tag_stack.try_pop("caption", ["table"]);
        result = result || this._tag_stack.try_pop("colgroup", ["table"]);
        result = result || this._tag_stack.try_pop("thead", ["table"]);
        result = result || this._tag_stack.try_pop("tbody", ["table"]);
      } else if (parser_token.tag_name === "tr") {
        result = result || this._tag_stack.try_pop("caption", ["table"]);
        result = result || this._tag_stack.try_pop("colgroup", ["table"]);
        result = result || this._tag_stack.try_pop("tr", ["table", "thead", "tbody", "tfoot"]);
      } else if (parser_token.tag_name === "th" || parser_token.tag_name === "td") {
        result = result || this._tag_stack.try_pop("td", ["table", "thead", "tbody", "tfoot", "tr"]);
        result = result || this._tag_stack.try_pop("th", ["table", "thead", "tbody", "tfoot", "tr"]);
      }
      parser_token.parent = this._tag_stack.get_parser_token();
      return result;
    };
    module2.exports.Beautifier = Beautifier;
  }
});

// node_modules/js-beautify/js/src/html/index.js
var require_html = __commonJS({
  "node_modules/js-beautify/js/src/html/index.js"(exports2, module2) {
    "use strict";
    var Beautifier = require_beautifier3().Beautifier;
    var Options = require_options4().Options;
    function style_html(html_source, options, js_beautify, css_beautify) {
      var beautifier = new Beautifier(html_source, options, js_beautify, css_beautify);
      return beautifier.beautify();
    }
    module2.exports = style_html;
    module2.exports.defaultOptions = function() {
      return new Options();
    };
  }
});

// node_modules/js-beautify/js/src/index.js
var require_src = __commonJS({
  "node_modules/js-beautify/js/src/index.js"(exports2, module2) {
    "use strict";
    var js_beautify = require_javascript();
    var css_beautify = require_css();
    var html_beautify = require_html();
    function style_html(html_source, options, js, css) {
      js = js || js_beautify;
      css = css || css_beautify;
      return html_beautify(html_source, options, js, css);
    }
    style_html.defaultOptions = html_beautify.defaultOptions;
    module2.exports.js = js_beautify;
    module2.exports.css = css_beautify;
    module2.exports.html = style_html;
  }
});

// node_modules/js-beautify/js/index.js
var require_js = __commonJS({
  "node_modules/js-beautify/js/index.js"(exports2, module2) {
    "use strict";
    function get_beautify(js_beautify, css_beautify, html_beautify) {
      var beautify = function(src, config) {
        return js_beautify.js_beautify(src, config);
      };
      beautify.js = js_beautify.js_beautify;
      beautify.css = css_beautify.css_beautify;
      beautify.html = html_beautify.html_beautify;
      beautify.js_beautify = js_beautify.js_beautify;
      beautify.css_beautify = css_beautify.css_beautify;
      beautify.html_beautify = html_beautify.html_beautify;
      return beautify;
    }
    if (typeof define === "function" && define.amd) {
      define([
        "./lib/beautify",
        "./lib/beautify-css",
        "./lib/beautify-html"
      ], function(js_beautify, css_beautify, html_beautify) {
        return get_beautify(js_beautify, css_beautify, html_beautify);
      });
    } else {
      (function(mod) {
        var beautifier = require_src();
        beautifier.js_beautify = beautifier.js;
        beautifier.css_beautify = beautifier.css;
        beautifier.html_beautify = beautifier.html;
        mod.exports = get_beautify(beautifier, beautifier, beautifier);
      })(module2);
    }
  }
});

// out/pro/framework.js
var require_framework = __commonJS({
  "out/pro/framework.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.vueHelperDefinitionProvider = void 0;
    var vscode_1 = require("vscode");
    var fs = require("fs");
    var path = require("path");
    var snippets_html_1 = require_snippets_html();
    var snippets_js_1 = require_snippets_js();
    var glob = require_commonjs5();
    var camelcase_1 = (init_camelcase(), __toCommonJS(camelcase_exports));
    var element_plus_1 = require_element_plus();
    var ant_design_vue_1 = require_ant_design_vue();
    var element_ui_1 = require_element_ui();
    var helper_12 = require_helper();
    var beautify = require_js();
    var frameInherit = {
      "element-plus": element_plus_1.default,
      "ant-design-vue": ant_design_vue_1.default,
      "element-ui": element_ui_1.default
    };
    var frameworksCompletionItem = [];
    var FrameworkProviderPro = class {
      constructor(helper, options) {
        this.frameworks = [];
        this.type = helper_12.FuncType.Pro;
        this.helper = helper;
        this.options = options;
        this.frameworkCompletionItemProvider = new FrameworkCompletionItemProvider(this);
      }
      init() {
        this.frameworks = this.helper.frameworks;
        vscode_1.languages.registerCompletionItemProvider(["vue", "javascript", "typescript", "html", "wxml"], this.frameworkCompletionItemProvider, "", ":", "<", '"', "'", "@", "(", ">", "{");
        vscode_1.languages.registerHoverProvider(["vue", "wxml"], new FrameworkHoverProvider(this));
        vscode_1.languages.registerDefinitionProvider(["vue", "javascript", "typescript", "html", "wxml"], new vueHelperDefinitionProvider(this));
        vscode_1.commands.registerCommand("vue-helper.private.completion", (params) => {
          this.privateComponentInsert(params.comp);
        });
      }
      privateComponentInsert(comp) {
        return __awaiter(this, void 0, void 0, function* () {
          let activeTextEditor = vscode_1.window.activeTextEditor;
          if (!activeTextEditor) {
            return;
          }
          let isRepeat = false;
          let posterName = "";
          let activeEditorDoc = activeTextEditor.document.getText();
          if (comp.script) {
            if (activeEditorDoc.includes("// " + comp.name)) {
              isRepeat = true;
              posterName = yield vscode_1.window.showInputBox({
                placeHolder: "\u8BF7\u8F93\u5165\u540E\u7F00\uFF0C\u907F\u514D\u91CD\u590D"
              });
            }
          }
          let importCode = "";
          let scriptCode = "";
          if (comp.script) {
            let importText = "";
            let isImportEnd = false;
            const scriptList = comp.script.split("\n");
            for (let i = 0; i < scriptList.length; i++) {
              const item = scriptList[i];
              if (isImportEnd) {
                scriptCode += item + "\n";
              } else {
                if (item.trim()) {
                  importText += item;
                  if (importText.includes("import")) {
                    importCode += item + "\n";
                    if (/.*import\s.*\sfrom\s.*/gi.test(importText)) {
                      importText = "";
                    }
                  } else {
                    scriptCode += item + "\n";
                    isImportEnd = true;
                  }
                } else if (isImportEnd) {
                  scriptCode += item + "\n";
                }
              }
            }
          }
          let position = {
            jsImport: 0,
            js: 0,
            css: 0
          };
          let lineCount = activeTextEditor.document.lineCount;
          let current = 0;
          while (current < lineCount) {
            let lineText = activeTextEditor.document.lineAt(current);
            if (/^\s*<script.*>\s*$/.test(lineText.text)) {
              position.jsImport = current;
            }
            if (/^\s*<\/script.*>\s*$/.test(lineText.text)) {
              position.js = current;
            }
            if (/^\s*<\/style.*>\s*$/.test(lineText.text)) {
              position.css = current;
            }
            current++;
          }
          activeTextEditor.edit((editBuilder) => {
            if (activeTextEditor === null || activeTextEditor === void 0 ? void 0 : activeTextEditor.selection.active) {
              if (!isRepeat && importCode && position.jsImport > 0) {
                editBuilder.insert(new vscode_1.Position(position.jsImport + 1, 0), importCode.replace(/\$\$/gi, posterName || ""));
              }
              if (scriptCode && position.js > 0) {
                if (isRepeat) {
                  editBuilder.insert(new vscode_1.Position(position.js, 0), scriptCode.replace(/\$\$/gi, posterName || ""));
                } else {
                  editBuilder.insert(new vscode_1.Position(position.js, 0), (`// ${comp.name}
` + scriptCode).replace(/\$\$/gi, posterName || ""));
                }
              }
              if (!isRepeat && comp.style && position.css > 0) {
                editBuilder.insert(new vscode_1.Position(position.css, 0), (comp.style + "\n").replace(/\$\$/gi, posterName || ""));
              }
            }
          });
          let destRootPath = activeTextEditor.document.uri.path;
          if (!isRepeat && comp.fileList && comp.fileList.length > 0) {
            comp.fileList.forEach((fileItem) => {
              let destPath = path.join(destRootPath, "..", fileItem.name);
              try {
                fs.writeFileSync(this.helper.pathCompliantWin(destPath), fs.readFileSync(this.helper.pathCompliantWin(fileItem.url)));
              } catch (error) {
              }
            });
          }
        });
      }
    };
    exports2.default = FrameworkProviderPro;
    var FrameworkCompletionItemProvider = class {
      constructor(frameworkProvider) {
        this.attribute = {};
        this.jsTag = {};
        this.tag = {};
        this.name = "FrameworkCompletionItemProvider";
        this.globalAttribute = {};
        this.tagReg = /<([\w-]+)\s+/g;
        this.attrReg = /(?:\(|\s*)((\w(-)?)*)=['"][^'"]*/;
        this.triggerKeys = [];
        this.privateComponentList = [];
        this.frameworkProvider = frameworkProvider;
        this.init();
      }
      // 框架处理
      initFramework() {
        let adoptFramework = [];
        this.frameworkProvider.helper.frameworks.forEach((framework) => {
          let installMatch = false;
          let intalllMatchFramework = null;
          let inheritMatch = false;
          let inheritMatchFramework = null;
          this.frameworkProvider.helper.frameworkIntalled.forEach((intallFramework) => {
            if (framework.name === intallFramework.name) {
              if (!installMatch) {
                if (framework.version === intallFramework.version) {
                  installMatch = true;
                  intalllMatchFramework = intallFramework;
                } else if (intalllMatchFramework) {
                  if (Math.abs(parseInt(framework.version) - parseInt(intalllMatchFramework.version)) > Math.abs(parseInt(framework.version) - parseInt(intallFramework.version))) {
                    intalllMatchFramework = intallFramework;
                  }
                } else if (!intalllMatchFramework) {
                  intalllMatchFramework = intallFramework;
                }
              }
            }
          });
          this.frameworkProvider.helper.frameworkInherit.forEach((inheritFramework) => {
            if (framework.name === inheritFramework.name) {
              if (!inheritMatch) {
                if (framework.version === inheritFramework.version) {
                  inheritMatch = true;
                  inheritMatchFramework = inheritFramework;
                } else if (inheritMatchFramework) {
                  if (Math.abs(parseInt(framework.version) - parseInt(inheritMatchFramework.version)) > Math.abs(parseInt(framework.version) - parseInt(inheritFramework.version))) {
                    inheritMatchFramework = inheritFramework;
                  }
                } else if (!inheritMatchFramework) {
                  inheritMatchFramework = inheritFramework;
                }
              }
            }
          });
          if (installMatch) {
            adoptFramework.push({
              name: intalllMatchFramework.name,
              version: intalllMatchFramework.version,
              source: "install",
              trigger: intalllMatchFramework.trigger,
              key: intalllMatchFramework.key
            });
          } else if (inheritMatch) {
            adoptFramework.push({
              name: inheritMatchFramework.name,
              version: inheritMatchFramework.version,
              source: "inherit",
              trigger: inheritMatchFramework.trigger,
              key: inheritMatchFramework.name + inheritMatchFramework.version
            });
          } else if (intalllMatchFramework) {
            adoptFramework.push({
              name: intalllMatchFramework.name,
              version: intalllMatchFramework.version,
              source: "install",
              trigger: intalllMatchFramework.trigger,
              key: intalllMatchFramework.key
            });
          } else if (inheritMatchFramework) {
            adoptFramework.push({
              name: inheritMatchFramework.name,
              version: inheritMatchFramework.version,
              source: "inherit",
              trigger: inheritMatchFramework.trigger,
              key: inheritMatchFramework.name + inheritMatchFramework.version
            });
          }
        });
        try {
          frameworksCompletionItem = [];
          let frameworkNames = [];
          adoptFramework.forEach((framework) => {
            if (!frameworkNames.includes(framework.name)) {
              frameworkNames.push(framework.name);
              this.triggerKeys.push(framework.trigger);
              if (framework.source === "install") {
                const componentDir = this.frameworkProvider.helper.config.get("component-dir");
                if (componentDir) {
                  const installFrameworkPath = path.join(componentDir, "framework/" + framework.key + ".json");
                  if (fs.existsSync(installFrameworkPath)) {
                    let installFramework = fs.readFileSync(installFrameworkPath, "utf-8");
                    if (installFramework) {
                      let installFrameworkJson = JSON.parse(installFramework);
                      installFrameworkJson.trigger = framework.trigger;
                      frameworksCompletionItem.push(installFrameworkJson);
                    }
                  }
                }
              } else {
                if (frameInherit[framework.name]) {
                  let inheritFramework = frameInherit[framework.name];
                  inheritFramework.trigger = framework.trigger;
                  frameworksCompletionItem.push(inheritFramework);
                }
              }
            }
          });
        } catch (error) {
        }
      }
      initPrivateComponent() {
        try {
          const componentDir = this.frameworkProvider.helper.config.get("component-dir");
          if (componentDir) {
            const componentPath = path.join(componentDir, "codeBlock.json");
            if (fs.existsSync(componentPath)) {
              let vueLanguages = ["common"];
              this.frameworkProvider.helper.vueVersion === "3" ? vueLanguages.push("vue3") : vueLanguages.push("vue2");
              let component = fs.readFileSync(componentPath, "utf-8");
              let frameworkList = this.frameworkProvider.helper.frameworks.map((framework) => {
                return framework.name;
              });
              if (component) {
                let componentJson = JSON.parse(component);
                for (const key in componentJson) {
                  const item = componentJson[key];
                  if (vueLanguages.includes(item.language)) {
                    if (!item.framework || frameworkList.includes(item.framework)) {
                      this.privateComponentList.push(item);
                    }
                  }
                }
              }
            }
          }
        } catch (error) {
        }
      }
      init() {
        frameworksCompletionItem = [];
        this.privateComponentList = [];
        this.initFramework();
        this.initPrivateComponent();
      }
      refresh() {
        this.init();
      }
      isCloseTag(document2, position) {
        let txt = document2.getText(new vscode_1.Range(new vscode_1.Position(position.line, 0), position)).trim();
        const word = txt.replace(/<[^<]*$/gi, "");
        if (word) {
          return false;
        }
        if (!txt.endsWith(">") || /.*=("[^"]*>|'[^']*>)$/gi.test(txt) || txt.endsWith("/>")) {
          return false;
        }
        let txtArr = txt.match(/<([\w-]+)(\s*|(\s+[\w-_:@\.]+(=("[^"]*"|'[^']*'))?)+)\s*>/gim);
        if (Array.isArray(txtArr) && txtArr.length > 0) {
          let txtStr = txtArr[txtArr.length - 1];
          return /<([\w-]+)(\s*|(\s+[\w-_:@\.]+(=("[^"]*"|'[^']*'))?)+)\s*>$/gi.test(txtStr);
        }
        return false;
      }
      // 自动补全关闭标签
      getCloseTagSuggestion(document2, position) {
        let txtInfo = document2.lineAt(position.line);
        let txtArr = txtInfo.text.match(/<([\w-]+)(\s*|(\s+[\w-_:@\.]+(=("[^"]*"|'[^']*'))?)+)\s*>/gim);
        let tag = "div";
        if (txtArr) {
          tag = txtArr[txtArr.length - 1].replace(/<([\w-]+)(\s*|(\s+[\w-_:@\.]+(=("[^"]*"|'[^']*'))?)+)\s*>/gim, "$1");
        }
        const closeTag = "</" + tag;
        if (txtInfo.text.includes(closeTag)) {
          return;
        }
        let exclude = ["br", "img"];
        if (exclude.indexOf(tag) === -1 && vscode_1.window.activeTextEditor) {
          vscode_1.window.activeTextEditor.edit((editBuilder) => {
            editBuilder.insert(position, "</" + tag + ">");
          });
          let newPosition = vscode_1.window.activeTextEditor.selection.active.translate(0, 0);
          if (newPosition) {
            vscode_1.window.activeTextEditor.selection = new vscode_1.Selection(newPosition, newPosition);
          }
        }
      }
      // 获取本行位置前的文本
      getTextBeforePosition(position, document2) {
        var start = new vscode_1.Position(position.line, 0);
        var range = new vscode_1.Range(start, position);
        return document2.getText(range);
      }
      // 匹配标签
      matchTag(reg, txt, line, document2, position) {
        let match;
        let arr = [];
        if (/<\/?[-\w]+[^<>]*>[\s\w]*<?\s*[\w-]*$/.test(txt) || position.line === line && (/^\s*[^<]+\s*>[^<\/>]*$/.test(txt) || /[^<>]*<$/.test(txt[txt.length - 1]))) {
          return "break";
        }
        while (match = reg.exec(txt)) {
          arr.push({
            text: match[1],
            offset: document2.offsetAt(new vscode_1.Position(line, match.index))
          });
        }
        return arr.pop();
      }
      getPreTag(document2, position) {
        let line = position.line;
        let tag;
        let txt = this.getTextBeforePosition(position, document2);
        while (position.line - line < 10 && line >= 0) {
          if (line !== position.line) {
            txt = document2.lineAt(line).text;
          }
          tag = this.matchTag(this.tagReg, txt, line, document2, position);
          if (tag === "break") {
            return;
          }
          if (tag) {
            return tag;
          }
          line--;
        }
        return;
      }
      // 获取预览属性
      getPreAttr(document2, position) {
        let txt = this.getTextBeforePosition(position, document2).replace(/"[^'"]*(\s*)[^'"]*$/, "");
        let end = position.character;
        let start = txt.lastIndexOf(" ", end) + 1;
        let parsedTxt = document2.getText(new vscode_1.Range(position.line, start, position.line, end));
        return this.matchAttr(this.attrReg, parsedTxt);
      }
      // 匹配属性
      matchAttr(reg, txt) {
        let match;
        match = reg.exec(txt);
        return !/"[^"]*"/.test(txt) && match && match[1];
      }
      // 属性值开始
      isAttrValueStart(tag, attr) {
        return tag && attr;
      }
      // 属性值建议值
      getFrameworkAttrValueSuggestion(tag, attr) {
        let suggestions = [];
        try {
          frameworksCompletionItem.forEach((framework) => {
            if (framework.template) {
              if (framework.template[tag] && framework.template[tag][attr]) {
                const attrItem = framework.template[tag][attr];
                if (attrItem.values) {
                  attrItem.values.forEach((val) => {
                    suggestions.push({
                      label: val,
                      sortText: `\x000${val}`,
                      insertText: val,
                      kind: vscode_1.CompletionItemKind.Property,
                      detail: this.frameworkProvider.helper.name
                    });
                  });
                }
              }
            }
          });
        } catch (_error) {
        }
        return suggestions;
      }
      // 属性建议值
      getAttrSuggestion(tag) {
        let suggestions = [];
        try {
          frameworksCompletionItem.forEach((framework) => {
            if (framework.template) {
              if (framework.template[tag]) {
                const tagItem = framework.template[tag];
                for (const attrKey in tagItem) {
                  const attrItem = tagItem[attrKey];
                  if (attrKey[0] !== "_") {
                    if (attrItem.type === "attr") {
                      suggestions.push({
                        label: attrKey,
                        sortText: `\x000${attrKey}`,
                        insertText: new vscode_1.SnippetString(`${attrKey}="$1"`),
                        kind: vscode_1.CompletionItemKind.Property,
                        detail: this.frameworkProvider.helper.name,
                        documentation: attrItem.description
                      });
                    } else {
                      suggestions.push({
                        label: attrKey,
                        sortText: `\x000${attrKey}`,
                        insertText: new vscode_1.SnippetString(`${attrKey}="$1"`),
                        kind: vscode_1.CompletionItemKind.Event,
                        detail: this.frameworkProvider.helper.name,
                        documentation: attrItem.description
                      });
                    }
                  }
                }
              }
            }
          });
        } catch (_error) {
        }
        return suggestions;
      }
      buildAttrSuggestion(attr) {
        const completionItem = new vscode_1.CompletionItem(attr.name);
        completionItem.sortText = `000${attr.name}`;
        completionItem.insertText = attr.name;
        completionItem.kind = attr.type === "method" ? vscode_1.CompletionItemKind.Method : vscode_1.CompletionItemKind.Property;
        completionItem.detail = this.frameworkProvider.helper.name;
        completionItem.documentation = vscode_1.l10n.t(attr.description);
        return completionItem;
      }
      // 获取props属性值
      getPropAttr(document2, tagName) {
        let documentText = document2.getText();
        let tagNameUpper = tagName.replace(/(-[a-z])/g, (_, c) => {
          return c ? c.toUpperCase() : "";
        }).replace(/-/gi, "");
        let pathReg = RegExp("import\\s+(" + tagName + "|" + tagNameUpper + `)\\s+from\\s+['"]([^'"]*)`, "g");
        let pathRegArr = documentText.match(pathReg);
        if (pathRegArr && pathRegArr.length > 0) {
          let tagPath = pathRegArr[0];
          tagPath = tagPath.replace(/(.*['"])/, "");
          tagPath = tagPath.replace(this.frameworkProvider.helper.prefix.alias, this.frameworkProvider.helper.prefix.path);
          if (!tagPath.endsWith(".vue")) {
            tagPath += ".vue";
          }
          if (tagPath.indexOf("./") > 0 || tagPath.indexOf("../") > 0) {
            tagPath = path.join(document2.fileName, "../", tagPath);
          } else {
            tagPath = path.join(vscode_1.workspace.rootPath || "", tagPath);
          }
          documentText = fs.readFileSync(tagPath, "utf8");
        } else {
          return;
        }
        let props = [];
        let scriptIndex = documentText.indexOf("<script");
        if (scriptIndex) {
          let docText = documentText.substr(scriptIndex, documentText.length);
          let propIndex = docText.indexOf("props");
          let propStack = 0;
          if (propIndex) {
            docText = docText.substr(propIndex, docText.length);
            let braceBeforeIndex = docText.indexOf("{");
            let braceAfterIndex = 0;
            if (braceBeforeIndex) {
              ++propStack;
              docText = docText.substr(braceBeforeIndex + 1, docText.length);
            }
            let propText = "";
            while (propStack > 0 && docText.length > 0) {
              braceBeforeIndex = docText.indexOf("{");
              braceAfterIndex = docText.indexOf("}");
              if (braceBeforeIndex === -1) {
                docText = "";
              } else if (braceBeforeIndex < braceAfterIndex) {
                if (propStack === 1) {
                  propText += docText.substr(0, braceBeforeIndex);
                }
                ++propStack;
                docText = docText.substr(braceBeforeIndex > 0 ? braceBeforeIndex + 1 : 1, docText.length);
              } else {
                --propStack;
                docText = docText.substr(braceAfterIndex > 0 ? braceAfterIndex + 1 : 1, docText.length);
              }
            }
            let propMatch = propText.match(/\s[\w-]*:/gi);
            if (propMatch && propMatch.length > 0) {
              propMatch.forEach((propItem, propIndex2) => {
                propItem = propItem.substr(1, propItem.length - 2);
                propItem = propItem.replace(/([A-Z])/g, (_, c) => {
                  return c ? "-" + c.toLowerCase() : "";
                });
                props.push({
                  label: propItem,
                  sortText: "0" + propIndex2,
                  insertText: new vscode_1.SnippetString(`:${propItem}="$0"`),
                  kind: vscode_1.CompletionItemKind.Property,
                  documentation: ""
                });
              });
            }
          }
        }
        let emitReg = documentText.match(/\$emit\(\s?['"](\w*)/g);
        if (emitReg && emitReg.length > 0) {
          for (let i = 0; i < emitReg.length; i++) {
            let emitName = emitReg[i];
            emitName = emitName.replace(/(.*['"])/, "");
            props.push({
              label: emitName,
              sortText: "0" + (props.length + 1),
              insertText: new vscode_1.SnippetString(`@${emitName}="$0"`),
              kind: vscode_1.CompletionItemKind.Method,
              documentation: ""
            });
          }
        }
        return props;
      }
      // 判断是否是导入
      isImport(document2, position) {
        let lineTxt = document2.lineAt(position.line).text.trim();
        return /^\s*import.*/.test(lineTxt);
      }
      // 导入建议
      importSuggestion(document2, position) {
        let search = document2.lineAt(position.line).text.trim();
        search = search.replace(/^import/, "").trim();
        let suggestions = [];
        if (search) {
          let files = this.frameworkProvider.helper.traverse.search("", search, false);
          files.forEach((vf) => {
            let filePath = "";
            if (this.frameworkProvider.helper.prefix.alias) {
              filePath = vf.path;
            } else {
              filePath = this.frameworkProvider.helper.getRelativePath(document2.uri.path, path.join(this.frameworkProvider.helper.projectPath, vf.path));
            }
            let camelName = vf.name;
            let insertPath = filePath;
            if (filePath.endsWith(".ts")) {
              insertPath = filePath.substring(0, filePath.length - 3);
            }
            suggestions.push({
              label: vf.name,
              sortText: `0${vf.name}`,
              insertText: new vscode_1.SnippetString(`\${1:${camelName}} from '${insertPath}'`),
              kind: vscode_1.CompletionItemKind.Reference,
              detail: vf.name,
              documentation: `import ${camelName} from ${filePath}`
            });
          });
        }
        return suggestions;
      }
      // vue文件只在template里面提示，已script作为标记
      notInTemplate(document2, position) {
        let line = position.line;
        while (line) {
          if (/^\s*<script.*>\s*$/.test(document2.lineAt(line).text)) {
            return true;
          }
          line--;
        }
        return false;
      }
      // 编译建议标签
      buildTagSuggestion(tag, tagVal, id) {
        return {
          label: tag,
          sortText: `00${id}${tag}`,
          insertText: new vscode_1.SnippetString(tagVal),
          kind: vscode_1.CompletionItemKind.Snippet,
          detail: this.frameworkProvider.helper.name,
          documentation: ""
        };
      }
      // 框架tag
      getFrameworkTagJsSuggestion(triggerKey) {
        let suggestions = [];
        try {
          frameworksCompletionItem.forEach((framework) => {
            if (framework.trigger === triggerKey) {
              if (framework.script) {
                for (const tag in framework.script) {
                  const tagItem = framework.script[tag];
                  if (tagItem && tagItem._html) {
                    for (const tagExtra in tagItem._html) {
                      const item = tagItem._html[tagExtra];
                      let key = tag + tagExtra;
                      suggestions.push({
                        label: key,
                        sortText: `\x000${key}`,
                        insertText: new vscode_1.SnippetString(beautify.js(item, { index_size: this.frameworkProvider.helper.tabSize })),
                        kind: vscode_1.CompletionItemKind.Snippet,
                        detail: this.frameworkProvider.helper.name,
                        documentation: item
                      });
                    }
                  }
                }
              }
            }
          });
        } catch (_error) {
        }
        return suggestions;
      }
      // 获取js代码提示
      getTagJsSuggestion() {
        let suggestions = [];
        let id = 1;
        const useVueSnippets = this.frameworkProvider.helper.config.get("use-vue-snippets");
        if (useVueSnippets) {
          const snippetsJs = (0, snippets_js_1.default)(this.frameworkProvider.helper.tabSize);
          for (const key in snippetsJs) {
            const snippet = snippetsJs[key];
            suggestions.push({
              label: key,
              sortText: `0${id}${key}`,
              insertText: new vscode_1.SnippetString(snippet),
              kind: vscode_1.CompletionItemKind.Snippet,
              detail: this.frameworkProvider.helper.name
            });
            id++;
          }
        }
        try {
          for (let tag in this.jsTag) {
            const tagItem = this.jsTag[tag];
            suggestions.push({
              label: tag,
              sortText: `00${id}${tag}`,
              insertText: new vscode_1.SnippetString(tagItem),
              kind: vscode_1.CompletionItemKind.Snippet,
              detail: this.frameworkProvider.helper.name,
              documentation: tagItem
            });
            id++;
          }
        } catch (_error) {
        }
        return suggestions;
      }
      // 添加工程内vue组件提示
      addLocalComponentSuggestions() {
        let suggestions = [];
        if (vscode_1.window.activeTextEditor) {
          let activeEditorPath = this.frameworkProvider.helper.getActiveEditorDir(vscode_1.window.activeTextEditor.document.uri.path);
          for (const key in this.frameworkProvider.helper.localVues) {
            const localVueList = this.frameworkProvider.helper.localVues[key];
            for (let i = 0; i < localVueList.length; i++) {
              const vf = localVueList[i];
              let relPath = this.frameworkProvider.helper.getVueRelativePath(activeEditorPath, vf.path);
              let importName = vf.name.includes("-") ? (0, camelcase_1.default)(vf.name, { pascalCase: true }) : vf.name;
              suggestions.push({
                label: vf.name,
                sortText: `0${i}${vf.name}`,
                insertText: new vscode_1.SnippetString(vf.insertText),
                kind: vscode_1.CompletionItemKind.Module,
                detail: this.frameworkProvider.helper.name,
                documentation: `import ${importName} from '${relPath}'`,
                command: { command: `vue-helper.autoImport`, title: `vue-helper.autoImport`, arguments: [importName, relPath] }
              });
            }
          }
        }
        return suggestions;
      }
      // 框架template标签
      getFrameworkTagSuggestion(triggerKey) {
        let suggestions = [];
        try {
          frameworksCompletionItem.forEach((framework) => {
            if (framework.trigger === triggerKey) {
              if (framework.template) {
                for (const tag in framework.template) {
                  const tagItem = framework.template[tag];
                  if (tagItem && tagItem._html) {
                    for (const tagExtra in tagItem._html) {
                      const item = tagItem._html[tagExtra];
                      let key = tag + tagExtra;
                      suggestions.push({
                        label: key,
                        sortText: `\x000${key}`,
                        insertText: new vscode_1.SnippetString(beautify.html(item, { index_size: this.frameworkProvider.helper.tabSize })),
                        kind: vscode_1.CompletionItemKind.Snippet,
                        detail: this.frameworkProvider.helper.name,
                        documentation: item
                      });
                    }
                  }
                }
              }
            }
          });
        } catch (_error) {
        }
        return suggestions;
      }
      // 标签提示项
      getTagSuggestion() {
        let suggestions = this.addLocalComponentSuggestions();
        let id = 1;
        const useVueSnippets = this.frameworkProvider.helper.config.get("use-vue-snippets");
        if (useVueSnippets) {
          const snippetsHtml = (0, snippets_html_1.default)(this.frameworkProvider.helper.tabSize);
          for (const key in snippetsHtml) {
            const snippet = snippetsHtml[key];
            suggestions.push({
              label: key,
              sortText: `0${id}${key}`,
              insertText: new vscode_1.SnippetString(snippet),
              kind: vscode_1.CompletionItemKind.Snippet,
              detail: this.frameworkProvider.helper.name
            });
            id++;
          }
        }
        try {
          for (let tag in this.tag) {
            suggestions.push(this.buildTagSuggestion(tag, this.tag[tag], id));
            id++;
          }
        } catch (_error) {
        }
        return suggestions;
      }
      getElementTagLabelSuggestion() {
        let suggestions = this.addLocalComponentSuggestions();
        let id = 1;
        try {
          let labels = [];
          for (let tag in this.attribute) {
            let label = tag.replace(/:.*/gi, "");
            if (!labels.includes(label)) {
              labels.push(label);
              suggestions.push({
                label,
                sortText: `00${id}${label}`,
                insertText: new vscode_1.SnippetString(`${label}$0></${label}>`),
                kind: vscode_1.CompletionItemKind.Snippet,
                detail: this.frameworkProvider.helper.name
              });
              id++;
            }
          }
        } catch (_error) {
        }
        return suggestions;
      }
      getPrivateComponentSuggestion() {
        let suggestions = [];
        this.privateComponentList.forEach((comp) => {
          suggestions.push({
            label: comp.name,
            sortText: "\x000" + comp.name,
            insertText: new vscode_1.SnippetString(comp.template),
            kind: vscode_1.CompletionItemKind.Snippet,
            documentation: comp.remark,
            command: { command: "vue-helper.private.completion", title: "completions", arguments: [{
              comp
            }] }
          });
        });
        return suggestions;
      }
      provideCompletionItems(document2, position, _token, _context) {
        if (this.isCloseTag(document2, position)) {
          if (!this.notInTemplate(document2, position)) {
            this.getCloseTagSuggestion(document2, position);
          }
          return [];
        }
        let tag = this.getPreTag(document2, position);
        let attr = this.getPreAttr(document2, position);
        let word = this.frameworkProvider.helper.getCurrentWord(document2, position);
        let hasSquareQuote = document2.lineAt(position.line).text.includes("<");
        let firstKey = "";
        if (word) {
          firstKey = word[0];
        }
        let retCompletionItems = [];
        if (tag && attr && this.isAttrValueStart(tag, attr)) {
          let attrValSuggestions = this.getFrameworkAttrValueSuggestion(tag.text, attr);
          if (attrValSuggestions.length === 0) {
            let ret = [];
            let documentText = document2.getText();
            let tagNameUpper = (0, camelcase_1.default)(tag.text, { pascalCase: true });
            let pathReg = RegExp("import\\s+(" + tag.text + "|" + tagNameUpper + `)\\s+from\\s+['"]([^'"]*)`, "g");
            let pathRegArr = documentText.match(pathReg);
            if (pathRegArr && pathRegArr.length > 0) {
              let tagPath = pathRegArr[0];
              tagPath = tagPath.replace(/(.*['"])/, "");
              tagPath = tagPath.replace(this.frameworkProvider.helper.prefix.alias, this.frameworkProvider.helper.prefix.path);
              if (!tagPath.endsWith(".vue")) {
                tagPath += ".vue";
              }
              if (tagPath.indexOf("./") > 0 || tagPath.indexOf("../") > 0) {
                tagPath = path.join(document2.fileName, "../", tagPath);
                tagPath = tagPath.replace(/\\/gi, "/").replace(this.frameworkProvider.helper.projectPath + "/", "");
              }
              let localAttr = this.frameworkProvider.helper.localAttrs[tagPath + tag.text];
              if (localAttr && localAttr.props && localAttr.props[attr]) {
                const attrEnum = localAttr.props[attr].enum;
                if (attrEnum) {
                  const attrEnums = attrEnum.split(" ");
                  attrEnums.forEach((attrItem) => {
                    ret.push({
                      sortText: "\x000" + attrItem,
                      label: attrItem,
                      detail: "vue-helper",
                      kind: vscode_1.CompletionItemKind.Value
                    });
                  });
                }
              }
            }
            retCompletionItems = retCompletionItems.concat(ret);
          } else {
            retCompletionItems = retCompletionItems.concat(attrValSuggestions);
          }
        } else if (tag) {
          let attrRet = [];
          attrRet = this.getAttrSuggestion(tag.text);
          retCompletionItems = retCompletionItems.concat(attrRet);
        } else if (this.isImport(document2, position)) {
          retCompletionItems = retCompletionItems.concat(this.importSuggestion(document2, position));
        }
        if (firstKey) {
          retCompletionItems = retCompletionItems.concat(this.getPrivateComponentSuggestion());
        }
        if (this.triggerKeys.includes(firstKey)) {
          retCompletionItems = retCompletionItems.concat(this.getFrameworkTagSuggestion(firstKey));
        } else if (word.includes("v")) {
          retCompletionItems = retCompletionItems.concat(this.notInTemplate(document2, position) ? this.getTagJsSuggestion() : this.getTagSuggestion());
        } else if (!tag && hasSquareQuote) {
          retCompletionItems = retCompletionItems.concat(this.notInTemplate(document2, position) ? [] : this.getElementTagLabelSuggestion());
        }
        return retCompletionItems;
      }
    };
    var FrameworkHoverProvider = class {
      constructor(frameworkProvider) {
        this.frameworkProvider = frameworkProvider;
      }
      // 获取属性所属标签
      getTag(document2, position) {
        let line = position.line;
        let tagName = "";
        while (line > 0 && !tagName) {
          let lineInfo = document2.lineAt(line);
          let text = lineInfo.text.trim();
          if (line === position.line) {
            text = text.substring(0, position.character);
          }
          let txtArr = text.match(/<[^(>/)]+/gim);
          if (txtArr) {
            for (let i = txtArr.length - 1; i >= 0; i--) {
              if (txtArr[i][0] === "<" && txtArr[i][1] !== "/") {
                if (txtArr[i].indexOf(" ") !== -1) {
                  tagName = txtArr[i].replace(/^<(\S*)(\s.*|\s*)/gi, "$1");
                } else {
                  tagName = txtArr[i].replace(/^<(.*)/gi, "$1");
                }
                break;
              }
            }
          }
          --line;
        }
        return tagName;
      }
      provideHover(document2, position) {
        let hoverText = "";
        let word = this.frameworkProvider.helper.getWord(document2, position, [" ", "<", ">", '"', "'", ".", "\\", "=", ":"]);
        frameworksCompletionItem.forEach((framework) => {
          if (framework.template) {
            if (framework.template[word.selectText] && framework.template[word.selectText]._doc) {
              hoverText = framework.template[word.selectText]._doc;
            }
          }
        });
        if (hoverText) {
          return new vscode_1.Hover(hoverText);
        }
        return null;
      }
      generateDocument(el) {
        let ret = "";
        const args = [{ resourceUri: el.path }];
        const stageCommandUri = vscode_1.Uri.parse(`command:vue-helper.visitLocal?${encodeURIComponent(JSON.stringify(args))}`);
        if (el.props) {
          ret += `[\u6253\u5F00](${stageCommandUri})
      
${el.comment && el.comment.description || ""}

| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |
| :--- | :--- | :--- | :--- |`;
          for (const key in el.props) {
            const prop = el.props[key];
            ret += `
| ${key} | ${prop.description || "-"} | ${prop.type || "-"} | ${prop.default || "-"} |`;
          }
          ret += "\n";
        }
        if (el.emits) {
          ret += `
| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u793A\u4F8B |
| :--- | :--- | :--- |`;
          for (const key in el.emits) {
            const emit = el.emits[key];
            ret += `
| ${key} | ${emit.description || "-"} | ${emit.example || "-"} |`;
          }
          ret += "\n";
        }
        if (el.slots) {
          ret += `
| \u63D2\u69FD\u540D| \u53C2\u6570 |
| :--- | :--- |`;
          for (const key in el.slots) {
            const slot = el.slots[key];
            let slotParam = "";
            if (slot) {
              slotParam = slot.join(",");
            }
            ret += `
| ${key} | ${slotParam || "-"} |`;
          }
          ret += "\n";
        }
        return ret;
      }
    };
    var vueHelperDefinitionProvider = class _vueHelperDefinitionProvider {
      constructor(frameworkProvider) {
        this.VUE_ATTR = {
          props: 1,
          computed: 2,
          methods: 3,
          watch: 4,
          beforeCreate: 5,
          created: 6,
          beforeMount: 7,
          mounted: 8,
          beforeUpdate: 9,
          updated: 10,
          activated: 11,
          deactivated: 12,
          beforeDestroy: 13,
          destroyed: 14,
          directives: 15,
          filters: 16,
          components: 17,
          data: 18
        };
        this.frameworkProvider = frameworkProvider;
      }
      /**
       * 判断是文件内跳转还是文件外跳转
       */
      getDefinitionPosition(lineText) {
        const pathRegs = [
          /import\s+.*\s+from\s+['"](.*)['"]/,
          /import\s*[^'"]*\(['"](.*)['"]\)[^'"]*/,
          /.*require\s*\([^'"]*['"](.*)['"][^'"]*\)/,
          /import\s+['"](.*)['"]/,
          /import\s*\([^'"]*(?:\/\*.*\*\/)\s*['"](.*)['"][^'"]\)*/
        ];
        let execResult;
        for (const pathReg of pathRegs) {
          execResult = pathReg.exec(lineText);
          if (execResult && execResult[1]) {
            const filePath = execResult[1];
            return {
              path: filePath
            };
          }
        }
      }
      /**
       * 获取框架
       * @param plugin 数组则是获取框架，字符串则为获取插件
       */
      getPlugin(plugin) {
        return __awaiter(this, void 0, void 0, function* () {
          return yield new Promise((resolve, reject) => {
            fs.readFile(vscode_1.workspace.rootPath + path.sep + "package.json", "utf8", (err, data) => {
              if (err)
                reject(err);
              let ret = "";
              let p = {};
              try {
                p = JSON.parse(data);
              } catch (_e) {
              }
              if (Array.isArray(plugin)) {
                let framework = plugin;
                for (let i = 0; i < framework.length; i++) {
                  const frame = framework[i];
                  if (p.dependencies && p.dependencies[frame] || p.devDependencies && p.devDependencies[frame]) {
                    ret = frame;
                  }
                }
              } else {
                let pluginArr = plugin.split("/");
                if (pluginArr.length === 1 && (p.dependencies && p.dependencies[plugin]) || p.devDependencies && p.devDependencies[plugin]) {
                  ret = plugin;
                } else if (pluginArr.length > 1 && (p.dependencies && p.dependencies[pluginArr[0]]) || p.devDependencies && p.devDependencies[pluginArr[0]]) {
                  ret = plugin;
                }
              }
              if (ret) {
                resolve(ret);
              } else {
                resolve("");
              }
            });
          });
        });
      }
      readDir(dir, selectText, frame) {
        return __awaiter(this, void 0, void 0, function* () {
          return yield new Promise((resolve, reject) => {
            fs.readdir(dir, "utf8", (err, files) => {
              if (err)
                reject(err);
              if (files.indexOf(selectText.toLowerCase()) !== -1) {
                if (frame === "iview") {
                  let prePath = dir + path.sep + selectText.toLowerCase() + path.sep;
                  let vuePath = prePath + selectText.toLowerCase() + ".vue";
                  let indexPath = prePath + "index.js";
                  if (fs.existsSync(vuePath)) {
                    resolve(vuePath);
                  } else if (fs.existsSync(indexPath)) {
                    resolve(indexPath);
                  } else {
                    resolve("");
                  }
                } else if (frame === "element-ui") {
                  let prePath = dir + path.sep + selectText.replace(/^el-/gi, "") + path.sep;
                  let mainPath = prePath + "src" + path.sep + "main.vue";
                  let vuePath = prePath + "src" + path.sep + selectText + ".vue";
                  let indexPath = prePath + "index.js";
                  if (fs.existsSync(mainPath)) {
                    resolve(mainPath);
                  } else if (fs.existsSync(vuePath)) {
                    resolve(vuePath);
                  } else if (fs.existsSync(indexPath)) {
                    resolve(indexPath);
                  } else {
                    resolve("");
                  }
                }
              } else {
                resolve("");
              }
            });
          });
        });
      }
      /**
      * 在node_modules目录下去查找
      * @param selectText
      */
      definitionPlugin(selectText) {
        return __awaiter(this, void 0, void 0, function* () {
          let frame = this.frameworkProvider.frameworks;
          if (frame.length > 0) {
            let framework = frame[0].name;
            if (framework === "iview") {
              return yield this.readDir(this.frameworkProvider.helper.projectPath + path.sep + "node_modules" + path.sep + "iview" + path.sep + "src" + path.sep + "components", selectText, framework);
            } else if (framework === "element-ui") {
              return yield this.readDir(this.frameworkProvider.helper.projectPath + path.sep + "node_modules" + path.sep + "element-ui" + path.sep + "packages", selectText.replace(/^el-/gi, ""), framework);
            } else {
              return "";
            }
          }
        });
      }
      /**
       * 获取node_modules下package.json文件中的main字段
       * @param path
       */
      getMain(rootPath) {
        return __awaiter(this, void 0, void 0, function* () {
          return yield new Promise((resolve, reject) => {
            fs.readFile(rootPath + "package.json", "utf8", (err, data) => {
              if (err)
                reject(err);
              let p = {};
              try {
                p = JSON.parse(data);
              } catch (_e) {
              }
              if (p.main) {
                resolve(p.main);
              } else {
                resolve("");
              }
            });
          });
        });
      }
      /**
       * 文件外跳转
       * 处理方式
       * 1. 根据文件目录查询是否存在相应文件
       * 2. 通过package.json判断是否存在安装插件
       * @param document
       * @param position
       * @param line
       */
      definitionOutFile(document2, file) {
        return __awaiter(this, void 0, void 0, function* () {
          let filePath = file.path;
          let isAbsolute = false;
          if (filePath.includes(this.frameworkProvider.helper.prefix.alias)) {
            isAbsolute = true;
          }
          filePath = filePath.replace(this.frameworkProvider.helper.prefix.alias, this.frameworkProvider.helper.prefix.path);
          if (/(.*\/.*|[^.]+)\..*$/gi.test(filePath)) {
            let tempFile = "";
            if (isAbsolute) {
              tempFile = path.join(this.frameworkProvider.helper.projectPath, filePath);
            } else {
              tempFile = path.join(document2.uri.path || "", "../", filePath);
            }
            if (fs.existsSync(tempFile)) {
              return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(tempFile), new vscode_1.Position(0, 0)));
            }
          } else {
            const postfix = ["vue", "js", "css", "scss", "less"];
            for (let i = 0; i < postfix.length; i++) {
              const post = postfix[i];
              let tempFile = "";
              if (isAbsolute) {
                tempFile = path.join(this.frameworkProvider.helper.projectPath, filePath);
              } else {
                tempFile = path.join(document2.uri.path || "", "../", filePath);
              }
              if (tempFile.endsWith(path.sep)) {
                tempFile = tempFile + "index." + post;
                if (fs.existsSync(tempFile)) {
                  return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(tempFile), new vscode_1.Position(0, 0)));
                }
              } else {
                let indexFile = tempFile + path.sep + "index." + post;
                tempFile += "." + post;
                tempFile = this.frameworkProvider.helper.pathCompliantWin(tempFile);
                if (fs.existsSync(tempFile)) {
                  return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(tempFile), new vscode_1.Position(0, 0)));
                }
                if (fs.existsSync(indexFile)) {
                  return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(indexFile), new vscode_1.Position(0, 0)));
                }
              }
            }
          }
          let plugin = yield this.getPlugin(filePath);
          let pluginRootPath = vscode_1.workspace.rootPath + path.sep + "node_modules" + path.sep + plugin + path.sep;
          let pluginOwn = vscode_1.workspace.rootPath + path.sep + "node_modules" + path.sep + plugin + ".js";
          let pluginPath = pluginRootPath + "index.js";
          if (fs.existsSync(pluginOwn)) {
            return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(pluginOwn), new vscode_1.Position(0, 0)));
          } else if (fs.existsSync(pluginPath)) {
            return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(pluginPath), new vscode_1.Position(0, 0)));
          }
          let main = yield this.getMain(pluginRootPath);
          if (main) {
            return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(pluginRootPath + main), new vscode_1.Position(0, 0)));
          }
          return Promise.resolve(null);
        });
      }
      /**
       * 文件内跳转
       */
      definitionInFile(document2, position) {
        return __awaiter(this, void 0, void 0, function* () {
          const word = this.frameworkProvider.helper.getWord(document2, position, [" ", "<", ">", '"', "'", ".", "\\", "=", ":", "@", "(", ")", "[", "]", "{", "}", ",", "!"]);
          let pos = 0;
          let begin = false;
          let lineText = "";
          let braceLeftCount = 0;
          let attr = "";
          let searchType = "";
          if (word.startText === "<") {
            searchType = "components";
          }
          while (pos < document2.lineCount && !/^\s*<\/script>\s*$/g.test(lineText)) {
            lineText = document2.lineAt(++pos).text;
            if (!begin) {
              if (/^\s*<script.*>\s*$/g.test(lineText)) {
                begin = true;
              }
              continue;
            }
            let keyWord = lineText.replace(/\s*(\w*)\s*(\(\s*\)|:|(:\s*function\s*\(\s*\)))\s*{\s*/gi, "$1");
            if (this.VUE_ATTR[keyWord] !== void 0 && braceLeftCount === 0) {
              attr = keyWord;
              braceLeftCount = 0;
            }
            if (searchType === "components") {
              let tag = word.selectText.toLowerCase().replace(/-/gi, "");
              if (attr) {
                for (let i = 0; i < this.frameworkProvider.helper.vueFiles.length; i++) {
                  const vueFile = this.frameworkProvider.helper.vueFiles[i];
                  const vueFileName = vueFile.name.toLowerCase().replace(/-/gi, "");
                  if (vueFileName === tag) {
                    return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(path.join(this.frameworkProvider.helper.projectPath, vueFile.path.replace(this.frameworkProvider.helper.prefix.alias, this.frameworkProvider.helper.prefix.path))), new vscode_1.Position(0, 0)));
                  }
                }
                let retPath = yield this.definitionPlugin(word.selectText);
                if (retPath) {
                  return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(retPath), new vscode_1.Position(0, 0)));
                }
                break;
              } else {
                if (lineText.toLowerCase().includes(tag) && (lineText.trim().indexOf("import") === 0 || lineText.trim().indexOf("require") === 0)) {
                  return this.definitionOutFile(document2, this.getDefinitionPosition(lineText));
                }
              }
            } else {
              let braceLeftList = lineText.match(/{/gi);
              let braceRightList = lineText.match(/}/gi);
              if (attr === "data" && braceLeftCount >= 2) {
                let matchName = lineText.replace(/\s*(\w+):.+/gi, "$1");
                if (word.selectText === matchName && braceLeftCount === 2) {
                  return Promise.resolve(new vscode_1.Location(document2.uri, new vscode_1.Position(pos, lineText.indexOf(matchName) + matchName.length)));
                }
                let braceLeft = braceLeftList ? braceLeftList.length : 0;
                let braceRight = braceRightList ? braceRightList.length : 0;
                braceLeftCount += braceLeft - braceRight;
              } else if (attr) {
                let matchName = lineText.replace(/\s*(async\s*)?(\w*)\s*(:|\().*/gi, "$2");
                if (word.selectText === matchName && braceLeftCount === 1) {
                  return Promise.resolve(new vscode_1.Location(document2.uri, new vscode_1.Position(pos, lineText.indexOf(matchName) + matchName.length)));
                }
                let braceLeft = braceLeftList ? braceLeftList.length : 0;
                let braceRight = braceRightList ? braceRightList.length : 0;
                braceLeftCount += braceLeft - braceRight;
              }
              if (attr === "data") {
                if (/\s*return\s*{\s*/gi.test(lineText)) {
                  braceLeftCount = 2;
                }
              }
            }
          }
          let files = glob.sync(vscode_1.workspace.rootPath + "/!(node_modules)/**/*.vue");
          for (let i = 0; i < files.length; i++) {
            const vueFile = files[i];
            let vueChangeFile = vueFile.replace(/-/gi, "").toLowerCase().replace(/\.vue$/, "");
            if (vueChangeFile.endsWith("/" + word.selectText.toLowerCase().replace(/-/gi, ""))) {
              return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(vueFile), new vscode_1.Position(0, 0)));
            }
          }
          return Promise.resolve(null);
        });
      }
      definitionTs(document2, position) {
        const word = this.frameworkProvider.helper.getWord(document2, position, [" ", "<", ">", '"', "'", ".", "\\", "=", ":", "@", "(", ")", "[", "]", "{", "}", ",", "!"]);
        const lineCount = document2.lineCount;
        let i = 0;
        let reg = new RegExp(`${word.selectText}\\s*=\\s*\\(w*\\)`, "gi");
        let methodPosition = {
          line: 0,
          character: 0
        };
        while (i < lineCount) {
          let text = document2.lineAt(i).text;
          if (reg.test(text)) {
            methodPosition.line = i;
            methodPosition.character = text.indexOf(word.selectText);
            break;
          }
          i++;
        }
        if (vscode_1.window.activeTextEditor) {
          this.frameworkProvider.helper.jumpToLocation(vscode_1.window.activeTextEditor, new vscode_1.Position(methodPosition.line, methodPosition.character));
        }
      }
      vue3JumpInFile(document2, position) {
        const word = this.frameworkProvider.helper.getWord(document2, position, [" ", "<", ">", '"', "'", ".", "\\", "=", ":", "@", "(", ")", "[", "]", "{", "}", ",", "!"]);
        const prefix = this.frameworkProvider.helper.getVuePrefix(document2, position);
        const jumpPosition = {
          line: 0,
          character: 0
        };
        let start = false;
        const varFuncReg = this.frameworkProvider.helper.reg.varFunc(word.selectText);
        const funcReg = this.frameworkProvider.helper.reg.func(word.selectText);
        const varReg = this.frameworkProvider.helper.reg.variable(word.selectText);
        if (prefix === "@") {
          for (let i = 0; i < document2.lineCount; i++) {
            const text = document2.lineAt(i).text;
            if (text.includes("<script ")) {
              start = true;
            }
            if (start) {
              if (varFuncReg.test(text)) {
                if (jumpPosition.line === 0) {
                  jumpPosition.line = i;
                  jumpPosition.character = text.indexOf(word.selectText);
                }
                if (funcReg.test(text) || varReg.test(text)) {
                  jumpPosition.line = i;
                  jumpPosition.character = text.indexOf(word.selectText);
                  break;
                }
              }
            }
          }
        } else {
          for (let i = 0; i < document2.lineCount; i++) {
            const text = document2.lineAt(i).text;
            if (text.includes("<script ")) {
              start = true;
            }
            if (start) {
              if (varFuncReg.test(text)) {
                if (jumpPosition.line === 0) {
                  jumpPosition.line = i;
                  jumpPosition.character = text.indexOf(word.selectText);
                }
                if (varReg.test(text)) {
                  jumpPosition.line = i;
                  jumpPosition.character = text.indexOf(word.selectText);
                  break;
                }
              }
            }
          }
        }
        if (jumpPosition.line > 0) {
          return new vscode_1.Location(document2.uri, new vscode_1.Position(jumpPosition.line, jumpPosition.character));
        }
        return null;
      }
      provideDefinition(document2, position, _token) {
        return __awaiter(this, void 0, void 0, function* () {
          let docText = document2.getText();
          const line = document2.lineAt(position.line);
          let file = this.getDefinitionPosition(line.text);
          if (file) {
            if (!(this.frameworkProvider.helper.hasAliasConfig && file.path.includes("."))) {
              return this.definitionOutFile(document2, file);
            }
          } else {
            if (!(docText.includes('lang="ts"') || this.frameworkProvider.helper.isTs)) {
              return this.definitionInFile(document2, position);
            }
            if (_vueHelperDefinitionProvider.count === 0) {
              _vueHelperDefinitionProvider.count = 1;
              try {
                const res = yield vscode_1.commands.executeCommand("vscode.executeDefinitionProvider", document2.uri, position);
                if (res && res.length === 0) {
                  if (this.frameworkProvider.helper.vueVersion) {
                    return this.vue3JumpInFile(document2, position);
                  }
                }
              } catch (error) {
              }
            } else {
              _vueHelperDefinitionProvider.count = 0;
            }
          }
          return [];
        });
      }
    };
    exports2.vueHelperDefinitionProvider = vueHelperDefinitionProvider;
    vueHelperDefinitionProvider.count = 0;
  }
});

// out/pro/privateComp.js
var require_privateComp = __commonJS({
  "out/pro/privateComp.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    var vscode_1 = require("vscode");
    var helper_12 = require_helper();
    var fs = require("fs");
    var path = require("path");
    var webviewMgn_1 = require_webviewMgn();
    var framework_1 = require_framework();
    var beautify = require_js();
    var PrivateComp = class {
      constructor(helper, options) {
        this.type = helper_12.FuncType.Pro;
        this.helper = helper;
        this.options = options;
        this.webviewMgn = this.helper.getPlugin(webviewMgn_1.WebviewMgn);
      }
      init() {
        vscode_1.commands.registerCommand("vue-helper.private.setting", () => __awaiter(this, void 0, void 0, function* () {
          this.helper.setComponentDir(true);
        }));
        vscode_1.commands.registerCommand("vue-helper.private.see", () => __awaiter(this, void 0, void 0, function* () {
          this.openPrivateComponent();
        }));
      }
      uploadComponentConfig(params) {
        return __awaiter(this, void 0, void 0, function* () {
          let componentDir = this.helper.config.get("component-dir");
          if (!componentDir) {
            componentDir = yield this.helper.setComponentDir();
          }
          let componentJson = fs.readFileSync(path.join(componentDir, "component.json"), "utf-8");
          let languagesJson = fs.readFileSync(path.join(componentDir, "languages.json"), "utf-8");
          this.webviewMgn.postMessage(Object.assign({ command: "config", data: JSON.parse(componentJson), languages: JSON.parse(languagesJson), language: this.helper.vueVersion == "3" ? "vue3" : "vue2", framework: this.helper.formFramework }, params));
        });
      }
      getTime() {
        return Math.floor((/* @__PURE__ */ new Date()).getTime() / 1e3);
      }
      emptyDir(dir) {
        const files = fs.readdirSync(dir);
        files.forEach((file) => {
          const filePath = path.join(dir, file);
          const stats = fs.statSync(filePath);
          if (stats.isDirectory()) {
            this.emptyDir(filePath);
          } else {
            fs.unlinkSync(filePath);
          }
        });
      }
      rmEmptyDir(dir, level = 0) {
        const files = fs.readdirSync(dir);
        if (files.length > 0) {
          let tempFile = 0;
          files.forEach((file) => {
            tempFile++;
            this.rmEmptyDir(path.join(dir, file), 1);
          });
          if (tempFile === files.length && level !== 0) {
            fs.rmdirSync(dir);
          }
        } else {
          level !== 0 && fs.rmdirSync(dir);
        }
      }
      removeDir(dir) {
        this.emptyDir(dir);
        this.rmEmptyDir(dir);
        fs.rmdirSync(dir);
      }
      addBlock(block) {
        return __awaiter(this, void 0, void 0, function* () {
          const componentDir = this.helper.config.get("component-dir");
          let componentName = "";
          let componentJson = fs.readFileSync(path.join(componentDir, "codeBlock.json"), "utf-8");
          let languagesJson = fs.readFileSync(path.join(componentDir, "languages.json"), "utf-8");
          componentJson = JSON.parse(componentJson);
          languagesJson = JSON.parse(languagesJson);
          try {
            const componentRootDir = path.join(componentDir, "codeBlock");
            let editId = "";
            if (block.id) {
              editId = block.id;
            }
            block.id = this.getTime() + "";
            componentName = block.id + block.name;
            let componentBaseDir = path.join(componentRootDir, componentName);
            if (!fs.existsSync(componentBaseDir)) {
              fs.mkdirSync(componentBaseDir);
            }
            componentJson[block.id] = {
              id: block.id,
              name: block.name,
              language: block.language,
              framework: block.framework,
              remark: block.remark,
              script: block.script,
              style: block.style,
              template: block.template
            };
            let fileList = [];
            if (block.fileList.length > 0) {
              block.fileList.forEach((fileItem) => {
                let componentFilePath = path.join(componentBaseDir, fileItem.name);
                fs.writeFileSync(componentFilePath, fs.readFileSync(this.helper.pathCompliantWin(fileItem.url)));
                fileList.push({
                  name: fileItem.name,
                  url: componentFilePath
                });
              });
            }
            componentJson[block.id].fileList = fileList;
            let blockExist = null;
            if (componentJson[editId]) {
              blockExist = componentJson[editId];
              delete componentJson[editId];
            }
            fs.writeFileSync(path.join(componentDir, "codeBlock.json"), JSON.stringify(componentJson), "utf-8");
            if (!editId) {
              this.webviewMgn.postMessage({
                command: "add",
                data: componentJson
              });
              this.helper.getPlugin(framework_1.default).frameworkCompletionItemProvider.init();
            }
            if (editId && blockExist) {
              let componentBaseDirModify = path.join(componentRootDir, editId + blockExist.name);
              if (fs.existsSync(componentBaseDirModify)) {
                this.removeDir(componentBaseDirModify);
              }
              this.webviewMgn.postMessage({
                command: "edit",
                data: componentJson
              });
              this.helper.getPlugin(framework_1.default).frameworkCompletionItemProvider.init();
            }
          } catch (error) {
            console.log(error);
          }
        });
      }
      uploadBlockConfig(isAdd) {
        return __awaiter(this, void 0, void 0, function* () {
          let componentDir = this.helper.config.get("component-dir");
          if (!componentDir) {
            componentDir = yield this.helper.setComponentDir();
          }
          let componentJson = fs.readFileSync(path.join(componentDir, "codeBlock.json"), "utf-8");
          let languagesJson = fs.readFileSync(path.join(componentDir, "languages.json"), "utf-8");
          this.webviewMgn.postMessage({
            command: "config",
            data: JSON.parse(componentJson),
            languages: JSON.parse(languagesJson),
            language: this.helper.vueVersion == "3" ? "vue3" : "vue2",
            framework: this.helper.formFramework,
            add: isAdd
          });
        });
      }
      removeBlock(id) {
        const componentDir = this.helper.config.get("component-dir");
        let componentJson = fs.readFileSync(path.join(componentDir, "codeBlock.json"), "utf-8");
        componentJson = JSON.parse(componentJson);
        try {
          let blockExist = null;
          if (componentJson[id]) {
            blockExist = componentJson[id];
            delete componentJson[id];
          }
          fs.writeFileSync(path.join(componentDir, "codeBlock.json"), JSON.stringify(componentJson), "utf-8");
          if (blockExist) {
            const componentRootDir = path.join(componentDir, "codeBlock");
            let componentBaseDirModify = path.join(componentRootDir, id + blockExist.name);
            if (fs.existsSync(componentBaseDirModify)) {
              this.removeDir(componentBaseDirModify);
            }
          }
          this.webviewMgn.postMessage({
            command: "remove",
            data: componentJson
          });
          this.helper.getPlugin(framework_1.default).frameworkCompletionItemProvider.init();
        } catch (error) {
          console.log(error);
        }
      }
      removeComponent(id) {
        const componentDir = this.helper.config.get("component-dir");
        let componentJson = fs.readFileSync(path.join(componentDir, "component.json"), "utf-8");
        componentJson = JSON.parse(componentJson);
        try {
          let blockExist = null;
          if (componentJson[id]) {
            blockExist = componentJson[id];
            delete componentJson[id];
          }
          fs.writeFileSync(path.join(componentDir, "component.json"), JSON.stringify(componentJson), "utf-8");
          if (blockExist) {
            const componentRootDir = path.join(componentDir, "component");
            let componentBaseDirModify = path.join(componentRootDir, id + blockExist.name);
            if (fs.existsSync(componentBaseDirModify)) {
              this.removeDir(componentBaseDirModify);
            }
          }
          this.webviewMgn.postMessage({
            command: "remove",
            data: componentJson
          });
        } catch (error) {
        }
      }
      traverseTreeGenerate(tree, sourcePath, destPath) {
        try {
          tree.forEach((item) => {
            const destDirPath = this.helper.pathCompliantWin(path.join(destPath, item.label));
            if (item.children) {
              fs.mkdirSync(destDirPath);
              this.traverseTreeGenerate(item.children, path.join(sourcePath, item.label), path.join(destPath, item.label));
            } else {
              fs.writeFileSync(destDirPath, fs.readFileSync(this.helper.pathCompliantWin(path.join(sourcePath, item.label))));
            }
          });
        } catch (error) {
        }
      }
      addComponent(comp) {
        const componentDir = this.helper.config.get("component-dir");
        let componentName = "";
        let componentJson = fs.readFileSync(path.join(componentDir, "component.json"), "utf-8");
        let languagesJson = fs.readFileSync(path.join(componentDir, "languages.json"), "utf-8");
        componentJson = JSON.parse(componentJson);
        languagesJson = JSON.parse(languagesJson);
        try {
          const componentRootDir = path.join(componentDir, "component");
          let editId = "";
          if (comp.id) {
            editId = comp.id;
          }
          comp.id = this.getTime() + "";
          componentName = comp.id + comp.name;
          let componentBaseDir = path.join(componentRootDir, componentName);
          if (!fs.existsSync(componentBaseDir)) {
            fs.mkdirSync(componentBaseDir);
          }
          componentJson[comp.id] = {
            id: comp.id,
            name: comp.name,
            language: comp.language,
            framework: comp.framework,
            remark: comp.remark
          };
          let fileList = [];
          if (comp.fileList.length > 0) {
            comp.fileList.forEach((fileItem) => {
              let componentFilePath = path.join(componentBaseDir, fileItem.name);
              fs.writeFileSync(componentFilePath, fs.readFileSync(this.helper.pathCompliantWin(fileItem.url)));
              fileList.push({
                name: fileItem.name,
                url: componentFilePath
              });
            });
          }
          componentJson[comp.id].fileList = fileList;
          if (comp.tree) {
            this.traverseTreeGenerate(comp.tree, path.join(comp.url, ".."), componentBaseDir);
            componentJson[comp.id].tree = comp.tree;
          }
          let blockExist = null;
          if (componentJson[editId]) {
            blockExist = componentJson[editId];
            delete componentJson[editId];
          }
          fs.writeFileSync(path.join(componentDir, "component.json"), JSON.stringify(componentJson), "utf-8");
          if (!editId) {
            this.webviewMgn.postMessage({
              command: "add",
              data: componentJson
            });
          }
          if (editId && blockExist) {
            let componentBaseDirModify = path.join(componentRootDir, editId + blockExist.name);
            if (fs.existsSync(componentBaseDirModify)) {
              this.removeDir(componentBaseDirModify);
            }
            this.webviewMgn.postMessage({
              command: "edit",
              data: componentJson
            });
          }
        } catch (error) {
          console.log(error);
        }
      }
      downloadFramework(data) {
        return __awaiter(this, void 0, void 0, function* () {
          if (helper_12.default.user.vip > 0) {
            const componentDir = this.helper.config.get("component-dir");
            try {
              this.helper.axios.get(data.url, {
                responseType: "json"
              }).then((res) => {
                fs.writeFileSync(path.join(componentDir, "framework/" + data.name + data.version + ".json"), beautify.js(JSON.stringify(res.data), { index_size: 2 }));
                let frameworkPath = path.join(componentDir, "framework.json");
                let framework = fs.readFileSync(frameworkPath, "utf-8");
                if (framework) {
                  framework = JSON.parse(framework);
                  framework[data.name + data.version] = {
                    name: data.name,
                    trigger: data.trigger,
                    version: data.version
                  };
                  fs.writeFileSync(frameworkPath, beautify.js(JSON.stringify(framework), { index_size: 2 }), "utf-8");
                }
                this.webviewMgn.postMessage({
                  command: "download"
                });
              });
            } catch (error) {
              console.log(error);
            }
          } else {
            this.webviewMgn.postMessage({
              command: "noPermit"
            });
          }
        });
      }
      openPrivateComponent(params, isAdd) {
        this.helper.setContext("vue-helper.self", true);
        this.webviewMgn.openView({
          title: "\u79C1\u6709\u7EC4\u4EF6\u5E93",
          page: "module",
          split: true,
          dispose: () => {
            this.helper.setContext("vue-helper.self", false);
          },
          messageHandler: (message) => {
            switch (message.command) {
              case "init":
                break;
              case "config":
                if (params) {
                  this.uploadComponentConfig(params);
                } else {
                  this.uploadBlockConfig(isAdd || false);
                }
                break;
              case "addBlock":
                this.addBlock(message.data);
                break;
              case "remove":
                if (message.params.type === "1") {
                  this.removeBlock(message.params.id);
                } else {
                  this.removeComponent(message.params.id);
                }
                break;
              case "addModule":
                this.addComponent(message.data);
                break;
              case "switch":
                let componentDir = this.helper.config.get("component-dir");
                let componentJson = "";
                if (message.params === "1") {
                  componentJson = fs.readFileSync(path.join(componentDir, "codeBlock.json"), "utf-8");
                } else {
                  componentJson = fs.readFileSync(path.join(componentDir, "component.json"), "utf-8");
                }
                this.webviewMgn.postMessage({
                  command: "config",
                  data: JSON.parse(componentJson)
                });
                break;
              case "openWebsite":
                this.helper.opn(message.url);
                break;
              case "downloadFramework":
                this.downloadFramework(message.data);
                break;
            }
          }
        });
      }
    };
    exports2.default = PrivateComp;
  }
});

// out/base/assist.js
var require_assist = __commonJS({
  "out/base/assist.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    var vscode_1 = require("vscode");
    var helper_12 = require_helper();
    var Assist = class {
      constructor(helper, options) {
        this.type = helper_12.FuncType.Base;
        this.helper = helper;
        this.options = options;
      }
      init() {
        vscode_1.commands.registerCommand("vue-helper.blockSelect", () => {
          this.blockSelect();
        });
        vscode_1.commands.registerCommand("vue-helper.funcEnhance", () => {
          this.funcEnhance();
        });
        vscode_1.commands.registerCommand("vue-helper.backspace", () => {
          this.backspace();
        });
        vscode_1.commands.registerCommand("vue-helper.autoImport", (name, relPath) => {
          let editor = vscode_1.window.activeTextEditor;
          if (!editor) {
            return;
          }
          this.autoImportComponent(editor, editor.selection.anchor.line, name, relPath);
        });
        this.helper.setContext("vue-helper.backspace", true);
      }
      autoImportComponent(editor, line, name, relPath) {
        if (editor.document.getText().includes(`import ${name}`)) {
          return;
        }
        let countLine = editor.document.lineCount;
        while (!/^\s*<script.*>\s*$/.test(editor.document.lineAt(line).text)) {
          if (countLine > line) {
            line++;
          } else {
            break;
          }
        }
        let importString = `import ${name} from '${relPath}'
`;
        if (editor.document.lineAt(line).text.includes("setup")) {
          editor.edit((editBuilder) => {
            importString = importString.replace(/\\/gi, "/");
            editBuilder.insert(new vscode_1.Position(line + 1, 0), importString);
          });
          return;
        }
        if (editor.document.lineAt(line + 1).text.includes("export default")) {
          line += 1;
        } else {
          line += 1;
          if (countLine < line) {
            return;
          }
          while (/import /gi.test(editor.document.lineAt(line).text.trim())) {
            if (countLine > line) {
              line++;
            } else {
              break;
            }
          }
        }
        let importLine = line;
        if (line < countLine) {
          let prorityInsertLine = 0;
          let secondInsertLine = 0;
          let hasComponents = false;
          let baseEmpty = "";
          while (!/\s*<\/script>\s*/gi.test(editor.document.lineAt(line).text.trim())) {
            if (/\s*components\s*:\s*{.*}.*/gi.test(editor.document.lineAt(line).text.trim())) {
              let text = editor.document.lineAt(line).text;
              let preText = text.replace(/\s*}.*$/, "");
              let insertPos = preText.length;
              editor.edit((editBuilder) => {
                importString = importString.replace(/\\/gi, "/");
                editBuilder.insert(new vscode_1.Position(importLine, 0), importString);
                editBuilder.insert(new vscode_1.Position(line, insertPos), ", " + name);
              });
              break;
            }
            if (hasComponents && /\s*},?\s*$/gi.test(editor.document.lineAt(line).text.trim())) {
              let text = editor.document.lineAt(line - 1).text;
              let insertPos = text.indexOf(text.trim());
              let empty = "";
              for (let i = 0; i < insertPos; i++) {
                empty += " ";
              }
              editor.edit((editBuilder) => {
                importString = importString.replace(/\\/gi, "/");
                editBuilder.insert(new vscode_1.Position(importLine, 0), importString);
                editBuilder.insert(new vscode_1.Position(line - 1, editor.document.lineAt(line - 1).text.length), ",\n" + empty + name);
              });
              break;
            }
            if (/\s*components\s*:\s*{\s*$/gi.test(editor.document.lineAt(line).text.trim())) {
              hasComponents = true;
            }
            if (/\s*export\s*default\s*{\s*/gi.test(editor.document.lineAt(line).text.trim())) {
              secondInsertLine = line;
            }
            if (/\s*data\s*\(\s*\)\s*{\s*/gi.test(editor.document.lineAt(line).text.trim())) {
              let text = editor.document.lineAt(line).text;
              let insertPos = text.indexOf(text.trim());
              for (let i = 0; i < insertPos; i++) {
                baseEmpty += "";
              }
              prorityInsertLine = line;
            }
            if (countLine > line) {
              line++;
            } else {
              break;
            }
          }
          if (prorityInsertLine > 0) {
            editor.edit((editBuilder) => {
              importString = importString.replace(/\\/gi, "/");
              editBuilder.insert(new vscode_1.Position(importLine - 1, 0), importString);
              editBuilder.insert(new vscode_1.Position(prorityInsertLine - 1, editor.document.lineAt(prorityInsertLine - 1).text.length), `
	${baseEmpty}components: { ${name} },`);
            });
          }
          if (secondInsertLine > 0) {
            editor.edit((editBuilder) => {
              importString = importString.replace(/\\/gi, "/");
              editBuilder.insert(new vscode_1.Position(importLine, 0), importString);
              editBuilder.insert(new vscode_1.Position(secondInsertLine, editor.document.lineAt(secondInsertLine).text.length), `
${this.helper.tabSize}components: { ${name} },`);
            });
          }
        }
      }
      asNormal(key, modifiers) {
        switch (key) {
          case "enter":
            if (modifiers === "ctrl") {
              return vscode_1.commands.executeCommand("editor.action.insertLineAfter");
            } else {
              return vscode_1.commands.executeCommand("type", { source: "keyboard", text: "\n" });
            }
          case "tab":
            if (vscode_1.workspace.getConfiguration("emmet").get("triggerExpansionOnTab")) {
              return vscode_1.commands.executeCommand("editor.emmet.action.expandAbbreviation");
            } else if (modifiers === "shift") {
              return vscode_1.commands.executeCommand("editor.action.outdentLines");
            } else {
              return vscode_1.commands.executeCommand("tab");
            }
          case "backspace":
            return vscode_1.commands.executeCommand("deleteLeft");
        }
      }
      // 回退删除处理
      backspace() {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b, _c, _d, _e, _f, _g;
          let editor = vscode_1.window.activeTextEditor;
          if (!editor) {
            this.asNormal("backspace");
            return;
          }
          if (((_a = vscode_1.window.activeTextEditor) === null || _a === void 0 ? void 0 : _a.selections.length) && ((_b = vscode_1.window.activeTextEditor) === null || _b === void 0 ? void 0 : _b.selections.length) > 1) {
            let selections = (_c = vscode_1.window.activeTextEditor) === null || _c === void 0 ? void 0 : _c.selections;
            let selectionList = [];
            for (let index = 0; index < selections.length; index++) {
              const selection = selections[index];
              if (selection.start.line === selection.end.line && selection.start.character === selection.end.character) {
                if (selection.anchor.character > 0) {
                  selectionList.push(new vscode_1.Selection(new vscode_1.Position(selection.anchor.line, selection.anchor.character - 1), selection.anchor));
                } else if (selection.anchor.line > 0) {
                  let len = editor.document.lineAt(selection.anchor.line - 1).text.length;
                  selectionList.push(new vscode_1.Selection(new vscode_1.Position(selection.anchor.line - 1, len), selection.anchor));
                }
              } else {
                selectionList.push(selection);
              }
            }
            yield editor.edit((editBuilder) => {
              for (let i = 0; i < selectionList.length; i++) {
                editBuilder.delete(selectionList[i]);
              }
            });
            return;
          }
          if (((_d = vscode_1.window.activeTextEditor) === null || _d === void 0 ? void 0 : _d.selection.start.line) === ((_e = vscode_1.window.activeTextEditor) === null || _e === void 0 ? void 0 : _e.selection.end.line) && ((_f = vscode_1.window.activeTextEditor) === null || _f === void 0 ? void 0 : _f.selection.start.character) === ((_g = vscode_1.window.activeTextEditor) === null || _g === void 0 ? void 0 : _g.selection.end.character)) {
            if (editor.selection.anchor.line === 0) {
              if (editor.selection.anchor.character > 0) {
                yield editor.edit((editBuilder) => {
                  editBuilder.delete(new vscode_1.Selection(new vscode_1.Position(editor.selection.anchor.line, editor.selection.anchor.character - 1), editor.selection.anchor));
                });
              }
            } else {
              let isLineEmpty = editor.document.lineAt(editor.selection.anchor.line).text.trim() === "";
              if (isLineEmpty) {
                let preText = "";
                let line = editor.selection.anchor.line;
                while (preText.trim() === "" && line >= 0) {
                  line -= 1;
                  preText = editor.document.lineAt(line).text;
                }
                yield editor.edit((editBuilder) => {
                  editBuilder.delete(new vscode_1.Selection(new vscode_1.Position(line, preText.length), editor.selection.anchor));
                });
              } else {
                let startPosition;
                let endPosition = editor.selection.anchor;
                let preLineText = editor.document.getText(new vscode_1.Range(new vscode_1.Position(endPosition.line, 0), endPosition));
                if (endPosition.character === 0 || preLineText.trim() === "") {
                  startPosition = new vscode_1.Position(endPosition.line - 1, editor.document.lineAt(endPosition.line - 1).text.length);
                } else {
                  startPosition = new vscode_1.Position(endPosition.line, endPosition.character - 1);
                  let txt = editor.document.getText(new vscode_1.Range(new vscode_1.Position(endPosition.line, endPosition.character - 1), endPosition));
                  if (editor.document.lineAt(endPosition.line).text.length > endPosition.character) {
                    let nextTxt = editor.document.getText(new vscode_1.Range(endPosition, new vscode_1.Position(endPosition.line, endPosition.character + 1)));
                    if (txt === "{" && nextTxt === "}" || txt === "(" && nextTxt === ")" || txt === "'" && nextTxt === "'" || txt === '"' && nextTxt === '"' || txt === "[" && nextTxt === "]" || txt === "<" && nextTxt === ">") {
                      endPosition = new vscode_1.Position(endPosition.line, endPosition.character + 1);
                    }
                  }
                }
                yield editor.edit((editBuilder) => {
                  editBuilder.delete(new vscode_1.Selection(startPosition, endPosition));
                });
              }
            }
          } else {
            this.asNormal("backspace");
          }
        });
      }
      jumpAndGenerateVar(word) {
        var _a, _b, _c;
        if (((_a = vscode_1.window.activeTextEditor) === null || _a === void 0 ? void 0 : _a.document) && ((_b = vscode_1.window.activeTextEditor) === null || _b === void 0 ? void 0 : _b.selection.anchor.line)) {
          let words = word.split(".");
          let lineCount = vscode_1.window.activeTextEditor.document.lineCount;
          let currentLine = (_c = vscode_1.window.activeTextEditor) === null || _c === void 0 ? void 0 : _c.selection.anchor.line;
          let variable = words[words.length - 1];
          let parentVariable = word.substring(0, word.length - variable.length - 1);
          let parentLine = 0;
          let isVue2 = false;
          let hasExist = false;
          let braceLeftCount = 0;
          let tagLeft = "{";
          let tagRight = "}";
          let wordReg = variable + ":";
          let hasRefImport = false;
          let refImportLine = 0;
          let refImportCharacter = 0;
          let refInsertText = "import { ref } from 'vue'\n";
          let refExtraLine = 1;
          let braceLeftCountSetup = 0;
          let isSetup = false;
          let parentCharacter = 0;
          if (parentVariable) {
            let parentVariableReg = new RegExp(`\\s*[var|let|const]\\s*${parentVariable}\\s*=`, "gi");
            while (currentLine < lineCount) {
              let text = vscode_1.window.activeTextEditor.document.lineAt(currentLine).text;
              if (parentVariableReg.test(text)) {
                parentLine = currentLine;
                if (/{\s*}/.test(text)) {
                  parentCharacter = text.indexOf("{");
                }
                braceLeftCount = 0;
              }
              if (text.includes(wordReg) && braceLeftCount === 1) {
                hasExist = true;
              }
              if (/\s*data\s*\(\s*\)\s*{\s*/gi.test(text)) {
                let nextText = vscode_1.window.activeTextEditor.document.lineAt(currentLine + 1).text;
                if (text.includes("return") || nextText.includes("return")) {
                  isVue2 = true;
                  parentVariableReg = new RegExp(`\\s*${parentVariable}\\s*:\\s*{\\s*`, "gi");
                  ++currentLine;
                  continue;
                }
              }
              if (text.includes(`'vue'`) || text.includes(`"vue"`) || text.includes(`vue.`)) {
                if (new RegExp(`{.*ref.*}`, "gi").test(text)) {
                  hasRefImport = true;
                } else {
                  refImportCharacter = text.replace(/\s*}.*/gi, "").length;
                  refInsertText = `, ref`;
                  refImportLine = currentLine - 1;
                  refExtraLine = 0;
                }
              }
              if (isVue2) {
                let pos = 0;
                while ((text.indexOf(tagLeft, pos) !== -1 || text.indexOf(tagRight, pos) !== -1) && pos < text.length) {
                  let i = -1;
                  if (text.indexOf(tagLeft, pos) !== -1) {
                    i = text.indexOf(tagLeft, pos);
                  }
                  if (text.indexOf(tagRight, pos) !== -1) {
                    if (i === -1 || i > text.indexOf(tagRight, pos)) {
                      --braceLeftCount;
                      pos = text.indexOf(tagRight, pos) + 1;
                    } else {
                      ++braceLeftCount;
                      pos = i + 1;
                    }
                  } else {
                    if (i !== -1) {
                      ++braceLeftCount;
                      pos = i + 1;
                    }
                  }
                  if (braceLeftCount === 0) {
                    break;
                  }
                }
                if (braceLeftCount === 0) {
                  break;
                }
              }
              if (/\s*setup\s*\([\w\s_,{}:]*\)\s*{/gi.test(text)) {
                isSetup = true;
                braceLeftCountSetup = 1;
                ++currentLine;
                continue;
              }
              if (isSetup) {
                let leftBrace = text.match(/{/gi);
                if (leftBrace) {
                  braceLeftCountSetup += leftBrace.length;
                }
                let rightBrace = text.match(/}/gi);
                if (rightBrace) {
                  braceLeftCountSetup -= rightBrace.length;
                }
                if (braceLeftCountSetup === 2 && /return\s*{/gi.test(text)) {
                  break;
                }
                if (braceLeftCountSetup <= 0) {
                  break;
                }
              }
              if (/^\s*<\/script>\s*$/g.test(text)) {
                break;
              }
              ++currentLine;
            }
          } else {
            while (currentLine < lineCount) {
              let text = vscode_1.window.activeTextEditor.document.lineAt(currentLine).text;
              if (/^\s*<script.*>\s*$/g.test(text)) {
                refImportLine = currentLine;
              }
              if (text.includes(wordReg) && braceLeftCount === 1) {
                hasExist = true;
              }
              if (/\s*data\s*\(\s*\)\s*{\s*/gi.test(text)) {
                let nextText = vscode_1.window.activeTextEditor.document.lineAt(currentLine + 1).text;
                if (text.includes("return") || nextText.includes("return")) {
                  isVue2 = true;
                  ++currentLine;
                  continue;
                }
              }
              if (text.includes(`'vue'`) || text.includes(`"vue"`) || text.includes(`vue.`)) {
                if (new RegExp(`{.*ref.*}`, "gi").test(text)) {
                  hasRefImport = true;
                } else {
                  refImportCharacter = text.replace(/\s*}.*/gi, "").length;
                  refInsertText = `, ref`;
                  refImportLine = currentLine - 1;
                  refExtraLine = 0;
                }
              }
              if (isVue2) {
                let pos = 0;
                while ((text.indexOf(tagLeft, pos) !== -1 || text.indexOf(tagRight, pos) !== -1) && pos < text.length) {
                  let i = -1;
                  if (text.indexOf(tagLeft, pos) !== -1) {
                    i = text.indexOf(tagLeft, pos);
                  }
                  if (text.indexOf(tagRight, pos) !== -1) {
                    if (i === -1 || i > text.indexOf(tagRight, pos)) {
                      --braceLeftCount;
                      pos = text.indexOf(tagRight, pos) + 1;
                    } else {
                      ++braceLeftCount;
                      pos = i + 1;
                    }
                  } else {
                    if (i !== -1) {
                      ++braceLeftCount;
                      pos = i + 1;
                    }
                  }
                  if (braceLeftCount === 0) {
                    break;
                  }
                }
                if (braceLeftCount === 0) {
                  break;
                }
              }
              if (/\s*setup\s*\([\w\s_,{}:]*\)\s*{/gi.test(text)) {
                isSetup = true;
                braceLeftCountSetup = 1;
                ++currentLine;
                continue;
              }
              if (isSetup) {
                let leftBrace = text.match(/{/gi);
                if (leftBrace) {
                  braceLeftCountSetup += leftBrace.length;
                }
                let rightBrace = text.match(/}/gi);
                if (rightBrace) {
                  braceLeftCountSetup -= rightBrace.length;
                }
                if (braceLeftCountSetup === 2 && /return\s*{/gi.test(text)) {
                  break;
                }
                if (braceLeftCountSetup <= 0) {
                  break;
                }
              }
              if (/^\s*<\/script>\s*$/g.test(text)) {
                break;
              }
              ++currentLine;
            }
          }
          if (currentLine < lineCount) {
            if (isVue2) {
              let prevText = vscode_1.window.activeTextEditor.document.lineAt(currentLine - 1).text;
              let commaText = "";
              let editor = vscode_1.window.activeTextEditor;
              let prevTextTrim = prevText.trim();
              let prevEmptyLength = prevText.indexOf(prevTextTrim);
              let emptyText = "";
              if (prevTextTrim.includes("return")) {
                emptyText = this.helper.tabSize;
              } else if (!prevTextTrim.includes("return") && !prevTextTrim.includes(",")) {
                commaText = ",";
              }
              for (let i = 0; i < prevEmptyLength; i++) {
                emptyText += " ";
              }
              if (hasExist) {
                let jumpCol = prevEmptyLength + emptyText.length + variable.length + 2;
                editor.revealRange(new vscode_1.Range(new vscode_1.Position(currentLine - 1, jumpCol), new vscode_1.Position(currentLine - 1, jumpCol)), vscode_1.TextEditorRevealType.Default);
                editor.selection = new vscode_1.Selection(new vscode_1.Position(currentLine - 1, jumpCol), new vscode_1.Position(currentLine - 1, jumpCol));
              } else {
                editor.edit((editBuilder) => {
                  editBuilder.insert(new vscode_1.Position(currentLine - 1, prevEmptyLength + prevTextTrim.length), `${commaText}
${emptyText}${variable}: `);
                }).then(() => {
                  let jumpCol = prevEmptyLength + emptyText.length + variable.length + 2;
                  editor.revealRange(new vscode_1.Range(new vscode_1.Position(currentLine, jumpCol), new vscode_1.Position(currentLine, jumpCol)), vscode_1.TextEditorRevealType.Default);
                  editor.selection = new vscode_1.Selection(new vscode_1.Position(currentLine, jumpCol), new vscode_1.Position(currentLine, jumpCol));
                });
              }
            } else {
              let editor = vscode_1.window.activeTextEditor;
              let insertLineHasParent = parentLine + 1;
              let space = "";
              editor.edit((editBuilder) => {
                if (isSetup) {
                  space = this.helper.tabSize + this.helper.tabSize;
                }
                if (parentLine > 0) {
                  if (parentCharacter > 0) {
                    editBuilder.insert(new vscode_1.Position(insertLineHasParent - 1, parentCharacter + 1), `
${space}  ${variable}: '',
${space}`);
                  } else {
                    editBuilder.insert(new vscode_1.Position(insertLineHasParent, 0), `${space}  ${variable}: '',
`);
                  }
                } else {
                  editBuilder.insert(new vscode_1.Position(currentLine, 0), `${space}const ${variable} = ref()
`);
                }
                if (!hasRefImport) {
                  editBuilder.insert(new vscode_1.Position(refImportLine + 1, refImportCharacter), refInsertText);
                  currentLine += refExtraLine;
                }
              }).then(() => {
                if (parentLine > 0) {
                  if (isSetup) {
                    insertLineHasParent += 1;
                  }
                  let jumpCol = 5 + variable.length + space.length;
                  editor.revealRange(new vscode_1.Range(new vscode_1.Position(insertLineHasParent, jumpCol), new vscode_1.Position(insertLineHasParent, jumpCol)), vscode_1.TextEditorRevealType.Default);
                  editor.selection = new vscode_1.Selection(new vscode_1.Position(insertLineHasParent, jumpCol), new vscode_1.Position(insertLineHasParent, jumpCol));
                } else {
                  let jumpCol = 13 + variable.length + space.length;
                  editor.revealRange(new vscode_1.Range(new vscode_1.Position(currentLine, jumpCol), new vscode_1.Position(currentLine, jumpCol)), vscode_1.TextEditorRevealType.Default);
                  editor.selection = new vscode_1.Selection(new vscode_1.Position(currentLine, jumpCol), new vscode_1.Position(currentLine, jumpCol));
                }
              });
            }
          }
        }
      }
      jumpAndGenerateMtd(word) {
        var _a, _b, _c;
        if (((_a = vscode_1.window.activeTextEditor) === null || _a === void 0 ? void 0 : _a.document) && ((_b = vscode_1.window.activeTextEditor) === null || _b === void 0 ? void 0 : _b.selection.anchor.line)) {
          let lineCount = vscode_1.window.activeTextEditor.document.lineCount;
          let currentLine = (_c = vscode_1.window.activeTextEditor) === null || _c === void 0 ? void 0 : _c.selection.anchor.line;
          let isJs = false;
          let isInMethods = false;
          let funcName = word.replace(/\(.*/gi, "");
          let funcPosition = {
            line: 0,
            character: 0
          };
          let braceLeftCount = 0;
          let isSetup = false;
          let selectionLineText = vscode_1.window.activeTextEditor.document.lineAt(currentLine).text;
          if (/^\s*(function)?\s*\w*\s*\(.*\)\s*{\s*$/gi.test(selectionLineText)) {
            return;
          }
          while (currentLine < lineCount) {
            let text = vscode_1.window.activeTextEditor.document.lineAt(currentLine).text;
            if (/^\s*<\/script>\s*$/g.test(text)) {
              break;
            }
            if (!isJs) {
              if (/^\s*<script.*>\s*$/g.test(text)) {
                isJs = true;
              }
              ++currentLine;
              continue;
            }
            if (/\s*setup\s*\([\w\s_,{}:]*\)\s*{/gi.test(text)) {
              isSetup = true;
              braceLeftCount = 1;
              ++currentLine;
              continue;
            }
            if (isSetup) {
              let leftBrace = text.match(/{/gi);
              if (leftBrace) {
                braceLeftCount += leftBrace.length;
              }
              let rightBrace = text.match(/}/gi);
              if (rightBrace) {
                braceLeftCount -= rightBrace.length;
              }
              if (braceLeftCount === 2 && /return\s*{/gi.test(text)) {
                break;
              }
              if (braceLeftCount <= 0) {
                break;
              }
            }
            if (text.includes(funcName) && this.helper.isMethodExist(funcName, text)) {
              funcPosition.line = currentLine;
              funcPosition.character = this.helper.getLineCharacter(text, true);
            }
            if (!isInMethods) {
              if (/\s*methods\s*:\s*{\s*/gi.test(text)) {
                isInMethods = true;
              }
              ++currentLine;
              continue;
            }
            if (text.includes("...")) {
              ++currentLine;
              continue;
            }
            ++currentLine;
            break;
          }
          if (currentLine < lineCount) {
            word = word.replace(/\(\s?\w*\./gi, "(").replace(/\s+\w*\./gi, " ");
            let editor = vscode_1.window.activeTextEditor;
            if (!isInMethods) {
              currentLine += 1;
            }
            if (funcPosition.line > 0) {
              return this.helper.jumpToLocation(editor, new vscode_1.Position(funcPosition.line, funcPosition.character));
            }
            editor.edit((editBuilder) => {
              let space = this.helper.tabSize;
              let spaceFunc = "";
              let funcMark = "function ";
              let comma = "";
              if (isInMethods) {
                spaceFunc = space + space;
                comma = ",";
                funcMark = "";
                space = spaceFunc + space;
              }
              if (isSetup) {
                spaceFunc = space + space;
                space = spaceFunc + space;
              }
              editBuilder.insert(new vscode_1.Position(currentLine - 1, 0), `${spaceFunc}${funcMark}${word.includes("(") ? word + " {" : word + "() {"}
${space}
${spaceFunc}}${comma}
`);
            }).then(() => {
              this.helper.jumpToLocation(editor, new vscode_1.Position(currentLine - 1, isInMethods ? 4 : 0));
            });
          }
        }
      }
      autoEnhance() {
        let editor = vscode_1.window.activeTextEditor;
        if (!editor) {
          return;
        }
        let txt = editor.document.lineAt(editor.selection.anchor.line).text;
        if (editor.document.lineCount <= editor.selection.anchor.line + 1) {
          return;
        }
        let nextLineTxt = editor.document.lineAt(editor.selection.anchor.line + 1).text;
        let baseEmpty = txt.replace(/(\s)\S.*/gi, "$1");
        let replaceTxt = ` {
${baseEmpty}${this.helper.tabSize}
${baseEmpty}}`;
        if (/^\s*$/gi.test(txt) || txt === "") {
          replaceTxt = "name (params)" + replaceTxt;
        } else if (/[0-9a-zA-Z]\s{0,1}:\s{0,1}[\w\"\']/gi.test(txt)) {
          replaceTxt = ",\n" + baseEmpty;
        } else if (txt.indexOf(")") === -1) {
          replaceTxt = " (params)" + replaceTxt;
        }
        if (/\s*\/\/\s+.*/gi.test(nextLineTxt)) {
          if (editor.document.lineCount <= editor.selection.anchor.line + 2) {
            return;
          }
          nextLineTxt = editor.document.lineAt(editor.selection.anchor.line + 2).text;
        }
        if (/.*(.*).*{.*/gi.test(nextLineTxt)) {
          let isCond = false;
          let txtTrim = txt.trim();
          const condList = ["if", "for", "while", "switch"];
          condList.forEach((cond) => {
            if (txtTrim.indexOf(cond) === 0) {
              isCond = true;
            }
          });
          if (!isCond) {
            replaceTxt += ",";
          }
        }
        if (txt.includes("function")) {
          return;
        }
        editor.edit((editBuilder) => {
          editBuilder.insert(new vscode_1.Position(editor.selection.anchor.line, txt.length + 1), replaceTxt);
        });
        let newPosition = editor.selection.active.translate(1, (baseEmpty + this.helper.tabSize).length);
        editor.selection = new vscode_1.Selection(newPosition, newPosition);
      }
      // 函数增强
      funcEnhance() {
        var _a, _b, _c, _d;
        let editor = vscode_1.window.activeTextEditor;
        if (!editor) {
          return;
        }
        let character = (((_a = vscode_1.window.activeTextEditor) === null || _a === void 0 ? void 0 : _a.selection.anchor.character) || 0) - 1;
        let txt = (_b = vscode_1.window.activeTextEditor) === null || _b === void 0 ? void 0 : _b.document.lineAt((_c = vscode_1.window.activeTextEditor) === null || _c === void 0 ? void 0 : _c.selection.anchor.line).text;
        let word = "";
        let isWordEnd = false;
        let type = "";
        if (txt && txt.includes('"')) {
          type = "0";
        }
        while (txt && character && character > 0) {
          let wordSingle = txt[character];
          if (wordSingle === '"') {
            type = "0";
            isWordEnd = true;
          }
          if (wordSingle === " ") {
            break;
          }
          if (!isWordEnd) {
            word = wordSingle + word;
          }
          if (wordSingle === "@") {
            type = "1";
          }
          --character;
        }
        character = ((_d = vscode_1.window.activeTextEditor) === null || _d === void 0 ? void 0 : _d.selection.anchor.character) || 0;
        while (txt && character && txt.length > character) {
          if (txt[character] === '"') {
            break;
          }
          word = word + txt[character];
          ++character;
        }
        if (word.includes(")")) {
          type = "1";
        }
        switch (type) {
          case "0":
            this.jumpAndGenerateVar(word);
            break;
          case "1":
            this.jumpAndGenerateMtd(word);
            break;
          default:
            this.autoEnhance();
            break;
        }
      }
      // 选择函数块
      selectJsBlock(editor, lineText, startPosition, type) {
        let lineCount = editor.document.lineCount;
        let lineCurrent = startPosition.line;
        let braceLeftCount = 0;
        let tagLeft = "{";
        let tagRight = "}";
        if (type === "array") {
          tagLeft = "[";
          tagRight = "]";
        }
        while (lineCurrent <= lineCount) {
          let pos = 0;
          while ((lineText.indexOf(tagLeft, pos) !== -1 || lineText.indexOf(tagRight, pos) !== -1) && pos < lineText.length) {
            let i = -1;
            if (lineText.indexOf(tagLeft, pos) !== -1) {
              i = lineText.indexOf(tagLeft, pos);
            }
            if (lineText.indexOf(tagRight, pos) !== -1) {
              if (i === -1 || i > lineText.indexOf(tagRight, pos)) {
                --braceLeftCount;
                pos = lineText.indexOf(tagRight, pos) + 1;
              } else {
                ++braceLeftCount;
                pos = i + 1;
              }
            } else {
              if (i !== -1) {
                ++braceLeftCount;
                pos = i + 1;
              }
            }
            if (braceLeftCount === 0) {
              break;
            }
          }
          if (braceLeftCount === 0) {
            let extra = 0;
            let textExtra = editor.document.lineAt(lineCurrent).text;
            if (lineCurrent === startPosition.line) {
              extra = textExtra.indexOf(lineText);
            }
            if (type === "function" && textExtra[pos + extra - 1] === "}" && textExtra[pos + extra] === ")") {
              extra += 1;
            }
            editor.selection = new vscode_1.Selection(startPosition, new vscode_1.Position(lineCurrent, pos + extra));
            return;
          }
          ++lineCurrent;
          if (lineCount >= lineCurrent) {
            lineText = editor.document.lineAt(lineCurrent).text;
          }
        }
        return;
      }
      // 代码块选择
      blockSelect() {
        let editor = vscode_1.window.activeTextEditor;
        if (!editor) {
          return;
        }
        let startPosition = editor.selection.start;
        let lineTextObj = editor.document.lineAt(startPosition.line);
        let lineText = lineTextObj.text;
        if (lineText.length > 0 && startPosition.character === 0 && lineText[startPosition.character] === "[") {
          this.selectJsBlock(editor, lineText.substring(startPosition.character, lineText.length), startPosition, "array");
        } else if (lineText.length > 0 && startPosition.character > 0 && lineText[startPosition.character - 1] === "[") {
          this.selectJsBlock(editor, lineText.substring(startPosition.character - 1, lineText.length), new vscode_1.Position(startPosition.line, startPosition.character - 1), "array");
        } else if (lineText.length > 0 && startPosition.character < lineText.length && lineText[startPosition.character] === "[") {
          this.selectJsBlock(editor, lineText.substring(startPosition.character, lineText.length), startPosition, "array");
        } else if (lineText.length > 0 && startPosition.character === 0 && lineText[startPosition.character] === "{") {
          this.selectJsBlock(editor, lineText.substring(startPosition.character, lineText.length), startPosition, "json");
        } else if (lineText.length > 0 && startPosition.character > 0 && lineText[startPosition.character - 1] === "{") {
          this.selectJsBlock(editor, lineText.substring(startPosition.character - 1, lineText.length), new vscode_1.Position(startPosition.line, startPosition.character - 1), "json");
        } else if (lineText.length > 0 && startPosition.character < lineText.length && lineText[startPosition.character] === "{") {
          this.selectJsBlock(editor, lineText.substring(startPosition.character, lineText.length), startPosition, "json");
        } else if (lineText.trim().length > 0 && lineText.trim()[0] === "<" && startPosition.character <= lineText.indexOf("<")) {
          lineText = lineText.substring(startPosition.character, lineText.length);
          this.selectHtmlBlock(editor, lineText, startPosition);
        } else if (lineText.trim().length > 0 && lineText.trim()[0] === "<" && startPosition.character <= lineText.indexOf("<")) {
          lineText = lineText.substring(startPosition.character, lineText.length);
          this.selectHtmlBlock(editor, lineText, startPosition);
        } else if (/^\s*[\sa-zA-Z:_-]*\s*\[\s*$/gi.test(lineText)) {
          this.selectJsBlock(editor, lineText, new vscode_1.Position(startPosition.line, lineText.length - lineText.replace(/\s*/, "").length), "array");
        } else if (lineText.trim().length > 0 && /(function|if|for|while)?.+\(.*\)\s*{/gi.test(lineText) && /^\s*(function|if|for|while)?\s*$/g.test(lineText.substr(0, startPosition.character)) || /^(\s*[\sa-zA-Z_-]*\([\sa-zA-Z_-]*\)\s*{\s*)|(\s*[\sa-zA-Z:_-]*\s*{\s*)$/gi.test(lineText) && /^\s*(function|if|for|while)?\s*$/g.test(lineText.substr(0, startPosition.character))) {
          this.selectJsBlock(editor, lineText, new vscode_1.Position(startPosition.line, lineText.length - lineText.replace(/\s*/, "").length), "function");
        } else {
          this.selectLineBlock(editor, lineText, startPosition);
        }
        return;
      }
      // 选择html代码块
      selectHtmlBlock(editor, lineText, startPosition) {
        const ncname = "[a-zA-Z_][\\w\\-\\.]*";
        const qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
        const startTagOpen = new RegExp("^<" + qnameCapture);
        const endTag = new RegExp("^(<\\/" + qnameCapture + "[^>]*>)");
        const comment = /^<!--/;
        const commentEnd = "-->";
        const lineCount = editor.document.lineCount;
        let lineCurrent = startPosition.line;
        let isNoIncludeTag = false;
        let tagStack = null;
        let col = lineText.indexOf(lineText.trim()) + startPosition.character;
        let beginPosition = new vscode_1.Position(startPosition.line, startPosition.character + lineText.length - lineText.replace(/\s*(.*)/, "$1").length);
        lineText = lineText.trim();
        let noIncludeTags = ["input", "img"];
        while (lineText) {
          let textTagPos = lineText.indexOf("<");
          if (textTagPos === 0) {
            let hasEndTag = false;
            let hasTag = false;
            if (comment.test(lineText)) {
              let commentIndex = lineText.indexOf(commentEnd);
              while (commentIndex === -1 && lineCurrent < lineCount) {
                lineText = editor.document.lineAt(++lineCurrent).text;
                commentIndex = lineText.indexOf(commentEnd);
              }
              lineText = lineText.substr(commentIndex + 3, lineText.length);
            }
            const startTagMatch = lineText.match(startTagOpen);
            const endTagMatch = lineText.match(endTag);
            if (endTagMatch) {
              hasEndTag = true;
              if (Array.isArray(tagStack)) {
                let tagIndex = tagStack.length;
                if (tagIndex > 0) {
                  let isTagMatch = false;
                  while (tagIndex > 0 && !isTagMatch) {
                    let tag = tagStack[tagIndex - 1];
                    if (tag === endTagMatch[2]) {
                      isTagMatch = true;
                    }
                    tagStack.pop();
                    --tagIndex;
                  }
                }
              }
              let endAdvance = lineText.indexOf(endTagMatch[1]) + endTagMatch[1].length;
              col += endAdvance;
              lineText = lineText.substr(endAdvance, lineText.length);
            }
            if (Array.isArray(tagStack) && tagStack.length === 0) {
              editor.selection = new vscode_1.Selection(beginPosition, new vscode_1.Position(lineCurrent, col));
              break;
            }
            console.log("startTagMatch", startTagMatch);
            if (startTagMatch) {
              hasTag = true;
              if (isNoIncludeTag) {
                let lineTextCur = editor.document.lineAt(lineCurrent).text;
                lineText = lineTextCur.substr(0, col);
                let indexLast = lineText.lastIndexOf(">");
                while (indexLast === -1 && lineCurrent > 0) {
                  --lineCurrent;
                  lineText = editor.document.lineAt(lineCurrent).text;
                  indexLast = lineText.lastIndexOf(">");
                }
                editor.selection = new vscode_1.Selection(beginPosition, new vscode_1.Position(lineCurrent, indexLast + 2));
                break;
              }
              if (Array.isArray(tagStack)) {
                tagStack.push(startTagMatch[1]);
              } else {
                tagStack = [startTagMatch[1]];
                if (noIncludeTags.indexOf(startTagMatch[1]) !== -1) {
                  isNoIncludeTag = true;
                }
              }
              const startAdvance = lineText.indexOf(startTagMatch[1]) + startTagMatch[1].length;
              col += startAdvance;
              lineText = lineText.substr(startAdvance, lineText.length);
            }
            if (lineText.indexOf("/>") !== -1 && Array.isArray(tagStack) && tagStack.length === 1) {
              let tagCloseIndex = lineText.indexOf("/>");
              let prevText = lineText.substr(0, tagCloseIndex + 2);
              let tagReg = /<([\w-]+)(\s*|(\s+[\w-_:@\.]+(=("[^"]*"|'[^']*'))?)+)\s*(\/)?>/gim;
              if (!tagReg.test(prevText)) {
                tagStack.pop();
              }
              editor.selection = new vscode_1.Selection(beginPosition, new vscode_1.Position(lineCurrent, col + tagCloseIndex + 2));
              break;
            }
            if (!lineText && lineCurrent < lineCount && tagStack.length > 0) {
              do {
                ++lineCurrent;
                lineText = editor.document.lineAt(lineCurrent).text;
              } while (!lineText && lineCurrent < lineCount);
              col = lineText.indexOf(lineText.trim());
              lineText = lineText.trim();
              continue;
            }
            if (!hasTag && !hasEndTag && lineText.length > 0) {
              let noTagIndex = lineText.indexOf("<", 1);
              if (noTagIndex === -1) {
                if (lineCurrent < lineCount) {
                  do {
                    ++lineCurrent;
                    lineText = editor.document.lineAt(lineCurrent).text;
                  } while (!lineText && lineCurrent < lineCount);
                  col = lineText.indexOf(lineText.trim());
                  lineText = lineText.trim();
                } else {
                  break;
                }
              } else {
                col += lineText.length;
                lineText = lineText.substr(noTagIndex, lineText.length);
                col -= lineText.length;
              }
            }
          } else if (textTagPos > 0) {
            lineText = lineText.substr(textTagPos, lineText.length);
            col += textTagPos;
          } else if (textTagPos < 0) {
            if (lineCurrent < lineCount) {
              if (lineText.indexOf("/>") !== -1 && Array.isArray(tagStack) && tagStack.length > 0) {
                let tagCloseIndex = lineText.indexOf("/>");
                let prevText = lineText.substr(0, tagCloseIndex + 2);
                let tagReg = /<([\w-]+)(\s*|(\s+[\w-_:@\.]+(=("[^"]*"|'[^']*'))?)+)\s*(\/)?>/gim;
                if (!tagReg.test(prevText)) {
                  tagStack.pop();
                }
                if (tagStack.length === 0) {
                  editor.selection = new vscode_1.Selection(beginPosition, new vscode_1.Position(lineCurrent, col + tagCloseIndex + 2));
                  break;
                }
              }
              do {
                ++lineCurrent;
                lineText = editor.document.lineAt(lineCurrent).text;
                if (lineText.replace(/\s/gi, "") === "") {
                  lineText = "";
                }
              } while (!lineText && lineCurrent < lineCount);
              col = lineText.indexOf(lineText.trim());
              lineText = lineText.trim();
            } else {
              lineText = "";
            }
          }
        }
      }
      selectLineBlock(editor, lineText, startPosition) {
        let TAGS = ['"', "'", "(", "{", "[", " ", "`", ">"];
        let TAGS_CLOSE = {
          '"': '"',
          "'": "'",
          "(": ")",
          "{": "}",
          "[": "]",
          " ": " ",
          "`": "`",
          ">": "<"
        };
        let pos = startPosition.character - 1;
        let endTag = "", beginPos = 0, endPos = 0, inBeginTags = [], includeTags = false;
        beginPos = pos;
        while (pos >= 0) {
          if (TAGS.indexOf(lineText[pos]) !== -1) {
            endTag = lineText[pos];
            break;
          }
          --pos;
        }
        if (beginPos === pos) {
          includeTags = true;
          beginPos = pos;
        } else {
          beginPos = pos + 1;
        }
        if (endTag.length > 0) {
          pos = startPosition.character;
          if (endTag === ">") {
            while (pos <= lineText.length && pos >= 0) {
              let txt = lineText[pos];
              if ((txt === TAGS_CLOSE[endTag] || txt === ">") && pos > beginPos) {
                break;
              }
              ++pos;
            }
          } else {
            while (pos <= lineText.length && pos >= 0) {
              let txt = lineText[pos];
              if (inBeginTags.length === 0 && (txt === TAGS_CLOSE[endTag] || txt === ">") && pos > beginPos) {
                break;
              }
              if (inBeginTags.length > 0 && TAGS_CLOSE[inBeginTags[inBeginTags.length - 1]] === txt) {
                inBeginTags.pop();
              } else if (TAGS.indexOf(txt) !== -1 && txt !== " ") {
                inBeginTags.push(txt);
              }
              ++pos;
            }
          }
        }
        includeTags ? endPos = pos + 1 : endPos = pos;
        editor.selection = new vscode_1.Selection(new vscode_1.Position(startPosition.line, beginPos), new vscode_1.Position(startPosition.line, endPos));
      }
    };
    exports2.default = Assist;
  }
});

// node_modules/lodash/lodash.js
var require_lodash8 = __commonJS({
  "node_modules/lodash/lodash.js"(exports2, module2) {
    (function() {
      var undefined2;
      var VERSION = "4.17.21";
      var LARGE_ARRAY_SIZE = 200;
      var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
      var HASH_UNDEFINED = "__lodash_hash_undefined__";
      var MAX_MEMOIZE_SIZE = 500;
      var PLACEHOLDER = "__lodash_placeholder__";
      var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
      var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
      var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
      var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
      var HOT_COUNT = 800, HOT_SPAN = 16;
      var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
      var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
      var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
      var wrapFlags = [
        ["ary", WRAP_ARY_FLAG],
        ["bind", WRAP_BIND_FLAG],
        ["bindKey", WRAP_BIND_KEY_FLAG],
        ["curry", WRAP_CURRY_FLAG],
        ["curryRight", WRAP_CURRY_RIGHT_FLAG],
        ["flip", WRAP_FLIP_FLAG],
        ["partial", WRAP_PARTIAL_FLAG],
        ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
        ["rearg", WRAP_REARG_FLAG]
      ];
      var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
      var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
      var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
      var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
      var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
      var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
      var reTrimStart = /^\s+/;
      var reWhitespace = /\s/;
      var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
      var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
      var reEscapeChar = /\\(\\)?/g;
      var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
      var reFlags = /\w*$/;
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary = /^0b[01]+$/i;
      var reIsHostCtor = /^\[object .+?Constructor\]$/;
      var reIsOctal = /^0o[0-7]+$/i;
      var reIsUint = /^(?:0|[1-9]\d*)$/;
      var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var reNoMatch = /($^)/;
      var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
      var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
      var rsApos = "['\u2019]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
      var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
      var reApos = RegExp(rsApos, "g");
      var reComboMark = RegExp(rsCombo, "g");
      var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
      var reUnicodeWord = RegExp([
        rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
        rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
        rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
        rsUpper + "+" + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
      ].join("|"), "g");
      var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
      var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      var contextProps = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ];
      var templateCounter = -1;
      var typedArrayTags = {};
      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
      typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
      var cloneableTags = {};
      cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
      cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
      var deburredLetters = {
        // Latin-1 Supplement block.
        "\xC0": "A",
        "\xC1": "A",
        "\xC2": "A",
        "\xC3": "A",
        "\xC4": "A",
        "\xC5": "A",
        "\xE0": "a",
        "\xE1": "a",
        "\xE2": "a",
        "\xE3": "a",
        "\xE4": "a",
        "\xE5": "a",
        "\xC7": "C",
        "\xE7": "c",
        "\xD0": "D",
        "\xF0": "d",
        "\xC8": "E",
        "\xC9": "E",
        "\xCA": "E",
        "\xCB": "E",
        "\xE8": "e",
        "\xE9": "e",
        "\xEA": "e",
        "\xEB": "e",
        "\xCC": "I",
        "\xCD": "I",
        "\xCE": "I",
        "\xCF": "I",
        "\xEC": "i",
        "\xED": "i",
        "\xEE": "i",
        "\xEF": "i",
        "\xD1": "N",
        "\xF1": "n",
        "\xD2": "O",
        "\xD3": "O",
        "\xD4": "O",
        "\xD5": "O",
        "\xD6": "O",
        "\xD8": "O",
        "\xF2": "o",
        "\xF3": "o",
        "\xF4": "o",
        "\xF5": "o",
        "\xF6": "o",
        "\xF8": "o",
        "\xD9": "U",
        "\xDA": "U",
        "\xDB": "U",
        "\xDC": "U",
        "\xF9": "u",
        "\xFA": "u",
        "\xFB": "u",
        "\xFC": "u",
        "\xDD": "Y",
        "\xFD": "y",
        "\xFF": "y",
        "\xC6": "Ae",
        "\xE6": "ae",
        "\xDE": "Th",
        "\xFE": "th",
        "\xDF": "ss",
        // Latin Extended-A block.
        "\u0100": "A",
        "\u0102": "A",
        "\u0104": "A",
        "\u0101": "a",
        "\u0103": "a",
        "\u0105": "a",
        "\u0106": "C",
        "\u0108": "C",
        "\u010A": "C",
        "\u010C": "C",
        "\u0107": "c",
        "\u0109": "c",
        "\u010B": "c",
        "\u010D": "c",
        "\u010E": "D",
        "\u0110": "D",
        "\u010F": "d",
        "\u0111": "d",
        "\u0112": "E",
        "\u0114": "E",
        "\u0116": "E",
        "\u0118": "E",
        "\u011A": "E",
        "\u0113": "e",
        "\u0115": "e",
        "\u0117": "e",
        "\u0119": "e",
        "\u011B": "e",
        "\u011C": "G",
        "\u011E": "G",
        "\u0120": "G",
        "\u0122": "G",
        "\u011D": "g",
        "\u011F": "g",
        "\u0121": "g",
        "\u0123": "g",
        "\u0124": "H",
        "\u0126": "H",
        "\u0125": "h",
        "\u0127": "h",
        "\u0128": "I",
        "\u012A": "I",
        "\u012C": "I",
        "\u012E": "I",
        "\u0130": "I",
        "\u0129": "i",
        "\u012B": "i",
        "\u012D": "i",
        "\u012F": "i",
        "\u0131": "i",
        "\u0134": "J",
        "\u0135": "j",
        "\u0136": "K",
        "\u0137": "k",
        "\u0138": "k",
        "\u0139": "L",
        "\u013B": "L",
        "\u013D": "L",
        "\u013F": "L",
        "\u0141": "L",
        "\u013A": "l",
        "\u013C": "l",
        "\u013E": "l",
        "\u0140": "l",
        "\u0142": "l",
        "\u0143": "N",
        "\u0145": "N",
        "\u0147": "N",
        "\u014A": "N",
        "\u0144": "n",
        "\u0146": "n",
        "\u0148": "n",
        "\u014B": "n",
        "\u014C": "O",
        "\u014E": "O",
        "\u0150": "O",
        "\u014D": "o",
        "\u014F": "o",
        "\u0151": "o",
        "\u0154": "R",
        "\u0156": "R",
        "\u0158": "R",
        "\u0155": "r",
        "\u0157": "r",
        "\u0159": "r",
        "\u015A": "S",
        "\u015C": "S",
        "\u015E": "S",
        "\u0160": "S",
        "\u015B": "s",
        "\u015D": "s",
        "\u015F": "s",
        "\u0161": "s",
        "\u0162": "T",
        "\u0164": "T",
        "\u0166": "T",
        "\u0163": "t",
        "\u0165": "t",
        "\u0167": "t",
        "\u0168": "U",
        "\u016A": "U",
        "\u016C": "U",
        "\u016E": "U",
        "\u0170": "U",
        "\u0172": "U",
        "\u0169": "u",
        "\u016B": "u",
        "\u016D": "u",
        "\u016F": "u",
        "\u0171": "u",
        "\u0173": "u",
        "\u0174": "W",
        "\u0175": "w",
        "\u0176": "Y",
        "\u0177": "y",
        "\u0178": "Y",
        "\u0179": "Z",
        "\u017B": "Z",
        "\u017D": "Z",
        "\u017A": "z",
        "\u017C": "z",
        "\u017E": "z",
        "\u0132": "IJ",
        "\u0133": "ij",
        "\u0152": "Oe",
        "\u0153": "oe",
        "\u0149": "'n",
        "\u017F": "s"
      };
      var htmlEscapes = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      };
      var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      };
      var stringEscapes = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      };
      var freeParseFloat = parseFloat, freeParseInt = parseInt;
      var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
      var freeSelf = typeof self == "object" && self && self.Object === Object && self;
      var root = freeGlobal || freeSelf || Function("return this")();
      var freeExports = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
      var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var freeProcess = moduleExports && freeGlobal.process;
      var nodeUtil = function() {
        try {
          var types = freeModule && freeModule.require && freeModule.require("util").types;
          if (types) {
            return types;
          }
          return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e) {
        }
      }();
      var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
      function apply(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          var value = array[index];
          setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
      }
      function arrayEach(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (iteratee(array[index], index, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while (length--) {
          if (iteratee(array[length], length, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEvery(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (!predicate(array[index], index, array)) {
            return false;
          }
        }
        return true;
      }
      function arrayFilter(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function arrayIncludes(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf(array, value, 0) > -1;
      }
      function arrayIncludesWith(array, value, comparator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (comparator(value, array[index])) {
            return true;
          }
        }
        return false;
      }
      function arrayMap(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index < length) {
          result[index] = iteratee(array[index], index, array);
        }
        return result;
      }
      function arrayPush(array, values) {
        var index = -1, length = values.length, offset = array.length;
        while (++index < length) {
          array[offset + index] = values[index];
        }
        return array;
      }
      function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[++index];
        }
        while (++index < length) {
          accumulator = iteratee(accumulator, array[index], index, array);
        }
        return accumulator;
      }
      function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[--length];
        }
        while (length--) {
          accumulator = iteratee(accumulator, array[length], length, array);
        }
        return accumulator;
      }
      function arraySome(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (predicate(array[index], index, array)) {
            return true;
          }
        }
        return false;
      }
      var asciiSize = baseProperty("length");
      function asciiToArray(string) {
        return string.split("");
      }
      function asciiWords(string) {
        return string.match(reAsciiWord) || [];
      }
      function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key, collection2) {
          if (predicate(value, key, collection2)) {
            result = key;
            return false;
          }
        });
        return result;
      }
      function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
        while (fromRight ? index-- : ++index < length) {
          if (predicate(array[index], index, array)) {
            return index;
          }
        }
        return -1;
      }
      function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
      }
      function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (comparator(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function baseIsNaN(value) {
        return value !== value;
      }
      function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN;
      }
      function baseProperty(key) {
        return function(object) {
          return object == null ? undefined2 : object[key];
        };
      }
      function basePropertyOf(object) {
        return function(key) {
          return object == null ? undefined2 : object[key];
        };
      }
      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection2) {
          accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection2);
        });
        return accumulator;
      }
      function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while (length--) {
          array[length] = array[length].value;
        }
        return array;
      }
      function baseSum(array, iteratee) {
        var result, index = -1, length = array.length;
        while (++index < length) {
          var current = iteratee(array[index]);
          if (current !== undefined2) {
            result = result === undefined2 ? current : result + current;
          }
        }
        return result;
      }
      function baseTimes(n, iteratee) {
        var index = -1, result = Array(n);
        while (++index < n) {
          result[index] = iteratee(index);
        }
        return result;
      }
      function baseToPairs(object, props) {
        return arrayMap(props, function(key) {
          return [key, object[key]];
        });
      }
      function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
      }
      function baseUnary(func) {
        return function(value) {
          return func(value);
        };
      }
      function baseValues(object, props) {
        return arrayMap(props, function(key) {
          return object[key];
        });
      }
      function cacheHas(cache, key) {
        return cache.has(key);
      }
      function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1, length = strSymbols.length;
        while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function countHolders(array, placeholder) {
        var length = array.length, result = 0;
        while (length--) {
          if (array[length] === placeholder) {
            ++result;
          }
        }
        return result;
      }
      var deburrLetter = basePropertyOf(deburredLetters);
      var escapeHtmlChar = basePropertyOf(htmlEscapes);
      function escapeStringChar(chr) {
        return "\\" + stringEscapes[chr];
      }
      function getValue(object, key) {
        return object == null ? undefined2 : object[key];
      }
      function hasUnicode(string) {
        return reHasUnicode.test(string);
      }
      function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
      }
      function iteratorToArray(iterator) {
        var data, result = [];
        while (!(data = iterator.next()).done) {
          result.push(data.value);
        }
        return result;
      }
      function mapToArray(map) {
        var index = -1, result = Array(map.size);
        map.forEach(function(value, key) {
          result[++index] = [key, value];
        });
        return result;
      }
      function overArg(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      function replaceHolders(array, placeholder) {
        var index = -1, length = array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (value === placeholder || value === PLACEHOLDER) {
            array[index] = PLACEHOLDER;
            result[resIndex++] = index;
          }
        }
        return result;
      }
      function setToArray(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = value;
        });
        return result;
      }
      function setToPairs(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = [value, value];
        });
        return result;
      }
      function strictIndexOf(array, value, fromIndex) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (array[index] === value) {
            return index;
          }
        }
        return -1;
      }
      function strictLastIndexOf(array, value, fromIndex) {
        var index = fromIndex + 1;
        while (index--) {
          if (array[index] === value) {
            return index;
          }
        }
        return index;
      }
      function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
      }
      function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
      }
      function trimmedEndIndex(string) {
        var index = string.length;
        while (index-- && reWhitespace.test(string.charAt(index))) {
        }
        return index;
      }
      var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
      function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while (reUnicode.test(string)) {
          ++result;
        }
        return result;
      }
      function unicodeToArray(string) {
        return string.match(reUnicode) || [];
      }
      function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
      }
      var runInContext = function runInContext2(context) {
        context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
        var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
        var arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype;
        var coreJsData = context["__core-js_shared__"];
        var funcToString = funcProto.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var idCounter = 0;
        var maskSrcKey = function() {
          var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
          return uid ? "Symbol(src)_1." + uid : "";
        }();
        var nativeObjectToString = objectProto.toString;
        var objectCtorString = funcToString.call(Object2);
        var oldDash = root._;
        var reIsNative = RegExp2(
          "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        );
        var Buffer2 = moduleExports ? context.Buffer : undefined2, Symbol2 = context.Symbol, Uint8Array2 = context.Uint8Array, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : undefined2, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : undefined2, symIterator = Symbol2 ? Symbol2.iterator : undefined2, symToStringTag = Symbol2 ? Symbol2.toStringTag : undefined2;
        var defineProperty = function() {
          try {
            var func = getNative(Object2, "defineProperty");
            func({}, "", {});
            return func;
          } catch (e) {
          }
        }();
        var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
        var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : undefined2, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math2.max, nativeMin = Math2.min, nativeNow = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto.reverse;
        var DataView = getNative(context, "DataView"), Map2 = getNative(context, "Map"), Promise2 = getNative(context, "Promise"), Set2 = getNative(context, "Set"), WeakMap = getNative(context, "WeakMap"), nativeCreate = getNative(Object2, "create");
        var metaMap = WeakMap && new WeakMap();
        var realNames = {};
        var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map2), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set2), weakMapCtorString = toSource(WeakMap);
        var symbolProto = Symbol2 ? Symbol2.prototype : undefined2, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined2, symbolToString = symbolProto ? symbolProto.toString : undefined2;
        function lodash(value) {
          if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
            if (value instanceof LodashWrapper) {
              return value;
            }
            if (hasOwnProperty.call(value, "__wrapped__")) {
              return wrapperClone(value);
            }
          }
          return new LodashWrapper(value);
        }
        var baseCreate = /* @__PURE__ */ function() {
          function object() {
          }
          return function(proto) {
            if (!isObject(proto)) {
              return {};
            }
            if (objectCreate) {
              return objectCreate(proto);
            }
            object.prototype = proto;
            var result2 = new object();
            object.prototype = undefined2;
            return result2;
          };
        }();
        function baseLodash() {
        }
        function LodashWrapper(value, chainAll) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__chain__ = !!chainAll;
          this.__index__ = 0;
          this.__values__ = undefined2;
        }
        lodash.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          "escape": reEscape,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          "evaluate": reEvaluate,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          "interpolate": reInterpolate,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          "variable": "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          "imports": {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            "_": lodash
          }
        };
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        function LazyWrapper(value) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__dir__ = 1;
          this.__filtered__ = false;
          this.__iteratees__ = [];
          this.__takeCount__ = MAX_ARRAY_LENGTH;
          this.__views__ = [];
        }
        function lazyClone() {
          var result2 = new LazyWrapper(this.__wrapped__);
          result2.__actions__ = copyArray(this.__actions__);
          result2.__dir__ = this.__dir__;
          result2.__filtered__ = this.__filtered__;
          result2.__iteratees__ = copyArray(this.__iteratees__);
          result2.__takeCount__ = this.__takeCount__;
          result2.__views__ = copyArray(this.__views__);
          return result2;
        }
        function lazyReverse() {
          if (this.__filtered__) {
            var result2 = new LazyWrapper(this);
            result2.__dir__ = -1;
            result2.__filtered__ = true;
          } else {
            result2 = this.clone();
            result2.__dir__ *= -1;
          }
          return result2;
        }
        function lazyValue() {
          var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
          if (!isArr || !isRight && arrLength == length && takeCount == length) {
            return baseWrapperValue(array, this.__actions__);
          }
          var result2 = [];
          outer:
            while (length-- && resIndex < takeCount) {
              index += dir;
              var iterIndex = -1, value = array[index];
              while (++iterIndex < iterLength) {
                var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed = iteratee2(value);
                if (type == LAZY_MAP_FLAG) {
                  value = computed;
                } else if (!computed) {
                  if (type == LAZY_FILTER_FLAG) {
                    continue outer;
                  } else {
                    break outer;
                  }
                }
              }
              result2[resIndex++] = value;
            }
          return result2;
        }
        LazyWrapper.prototype = baseCreate(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        function Hash(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function hashClear() {
          this.__data__ = nativeCreate ? nativeCreate(null) : {};
          this.size = 0;
        }
        function hashDelete(key) {
          var result2 = this.has(key) && delete this.__data__[key];
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function hashGet(key) {
          var data = this.__data__;
          if (nativeCreate) {
            var result2 = data[key];
            return result2 === HASH_UNDEFINED ? undefined2 : result2;
          }
          return hasOwnProperty.call(data, key) ? data[key] : undefined2;
        }
        function hashHas(key) {
          var data = this.__data__;
          return nativeCreate ? data[key] !== undefined2 : hasOwnProperty.call(data, key);
        }
        function hashSet(key, value) {
          var data = this.__data__;
          this.size += this.has(key) ? 0 : 1;
          data[key] = nativeCreate && value === undefined2 ? HASH_UNDEFINED : value;
          return this;
        }
        Hash.prototype.clear = hashClear;
        Hash.prototype["delete"] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        function ListCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function listCacheClear() {
          this.__data__ = [];
          this.size = 0;
        }
        function listCacheDelete(key) {
          var data = this.__data__, index = assocIndexOf(data, key);
          if (index < 0) {
            return false;
          }
          var lastIndex = data.length - 1;
          if (index == lastIndex) {
            data.pop();
          } else {
            splice.call(data, index, 1);
          }
          --this.size;
          return true;
        }
        function listCacheGet(key) {
          var data = this.__data__, index = assocIndexOf(data, key);
          return index < 0 ? undefined2 : data[index][1];
        }
        function listCacheHas(key) {
          return assocIndexOf(this.__data__, key) > -1;
        }
        function listCacheSet(key, value) {
          var data = this.__data__, index = assocIndexOf(data, key);
          if (index < 0) {
            ++this.size;
            data.push([key, value]);
          } else {
            data[index][1] = value;
          }
          return this;
        }
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        function MapCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function mapCacheClear() {
          this.size = 0;
          this.__data__ = {
            "hash": new Hash(),
            "map": new (Map2 || ListCache)(),
            "string": new Hash()
          };
        }
        function mapCacheDelete(key) {
          var result2 = getMapData(this, key)["delete"](key);
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function mapCacheGet(key) {
          return getMapData(this, key).get(key);
        }
        function mapCacheHas(key) {
          return getMapData(this, key).has(key);
        }
        function mapCacheSet(key, value) {
          var data = getMapData(this, key), size2 = data.size;
          data.set(key, value);
          this.size += data.size == size2 ? 0 : 1;
          return this;
        }
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype["delete"] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        function SetCache(values2) {
          var index = -1, length = values2 == null ? 0 : values2.length;
          this.__data__ = new MapCache();
          while (++index < length) {
            this.add(values2[index]);
          }
        }
        function setCacheAdd(value) {
          this.__data__.set(value, HASH_UNDEFINED);
          return this;
        }
        function setCacheHas(value) {
          return this.__data__.has(value);
        }
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        function Stack(entries) {
          var data = this.__data__ = new ListCache(entries);
          this.size = data.size;
        }
        function stackClear() {
          this.__data__ = new ListCache();
          this.size = 0;
        }
        function stackDelete(key) {
          var data = this.__data__, result2 = data["delete"](key);
          this.size = data.size;
          return result2;
        }
        function stackGet(key) {
          return this.__data__.get(key);
        }
        function stackHas(key) {
          return this.__data__.has(key);
        }
        function stackSet(key, value) {
          var data = this.__data__;
          if (data instanceof ListCache) {
            var pairs = data.__data__;
            if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
              pairs.push([key, value]);
              this.size = ++data.size;
              return this;
            }
            data = this.__data__ = new MapCache(pairs);
          }
          data.set(key, value);
          this.size = data.size;
          return this;
        }
        Stack.prototype.clear = stackClear;
        Stack.prototype["delete"] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        function arrayLikeKeys(value, inherited) {
          var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value.length, String2) : [], length = result2.length;
          for (var key in value) {
            if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
            (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
            isIndex(key, length)))) {
              result2.push(key);
            }
          }
          return result2;
        }
        function arraySample(array) {
          var length = array.length;
          return length ? array[baseRandom(0, length - 1)] : undefined2;
        }
        function arraySampleSize(array, n) {
          return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
        }
        function arrayShuffle(array) {
          return shuffleSelf(copyArray(array));
        }
        function assignMergeValue(object, key, value) {
          if (value !== undefined2 && !eq(object[key], value) || value === undefined2 && !(key in object)) {
            baseAssignValue(object, key, value);
          }
        }
        function assignValue(object, key, value) {
          var objValue = object[key];
          if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined2 && !(key in object)) {
            baseAssignValue(object, key, value);
          }
        }
        function assocIndexOf(array, key) {
          var length = array.length;
          while (length--) {
            if (eq(array[length][0], key)) {
              return length;
            }
          }
          return -1;
        }
        function baseAggregator(collection, setter, iteratee2, accumulator) {
          baseEach(collection, function(value, key, collection2) {
            setter(accumulator, value, iteratee2(value), collection2);
          });
          return accumulator;
        }
        function baseAssign(object, source) {
          return object && copyObject(source, keys(source), object);
        }
        function baseAssignIn(object, source) {
          return object && copyObject(source, keysIn(source), object);
        }
        function baseAssignValue(object, key, value) {
          if (key == "__proto__" && defineProperty) {
            defineProperty(object, key, {
              "configurable": true,
              "enumerable": true,
              "value": value,
              "writable": true
            });
          } else {
            object[key] = value;
          }
        }
        function baseAt(object, paths) {
          var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
          while (++index < length) {
            result2[index] = skip ? undefined2 : get(object, paths[index]);
          }
          return result2;
        }
        function baseClamp(number, lower, upper) {
          if (number === number) {
            if (upper !== undefined2) {
              number = number <= upper ? number : upper;
            }
            if (lower !== undefined2) {
              number = number >= lower ? number : lower;
            }
          }
          return number;
        }
        function baseClone(value, bitmask, customizer, key, object, stack) {
          var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
          if (customizer) {
            result2 = object ? customizer(value, key, object, stack) : customizer(value);
          }
          if (result2 !== undefined2) {
            return result2;
          }
          if (!isObject(value)) {
            return value;
          }
          var isArr = isArray(value);
          if (isArr) {
            result2 = initCloneArray(value);
            if (!isDeep) {
              return copyArray(value, result2);
            }
          } else {
            var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
            if (isBuffer(value)) {
              return cloneBuffer(value, isDeep);
            }
            if (tag == objectTag || tag == argsTag || isFunc && !object) {
              result2 = isFlat || isFunc ? {} : initCloneObject(value);
              if (!isDeep) {
                return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));
              }
            } else {
              if (!cloneableTags[tag]) {
                return object ? value : {};
              }
              result2 = initCloneByTag(value, tag, isDeep);
            }
          }
          stack || (stack = new Stack());
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result2);
          if (isSet(value)) {
            value.forEach(function(subValue) {
              result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            });
          } else if (isMap(value)) {
            value.forEach(function(subValue, key2) {
              result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
            });
          }
          var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
          var props = isArr ? undefined2 : keysFunc(value);
          arrayEach(props || value, function(subValue, key2) {
            if (props) {
              key2 = subValue;
              subValue = value[key2];
            }
            assignValue(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
          });
          return result2;
        }
        function baseConforms(source) {
          var props = keys(source);
          return function(object) {
            return baseConformsTo(object, source, props);
          };
        }
        function baseConformsTo(object, source, props) {
          var length = props.length;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (length--) {
            var key = props[length], predicate = source[key], value = object[key];
            if (value === undefined2 && !(key in object) || !predicate(value)) {
              return false;
            }
          }
          return true;
        }
        function baseDelay(func, wait, args) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return setTimeout2(function() {
            func.apply(undefined2, args);
          }, wait);
        }
        function baseDifference(array, values2, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
          if (!length) {
            return result2;
          }
          if (iteratee2) {
            values2 = arrayMap(values2, baseUnary(iteratee2));
          }
          if (comparator) {
            includes2 = arrayIncludesWith;
            isCommon = false;
          } else if (values2.length >= LARGE_ARRAY_SIZE) {
            includes2 = cacheHas;
            isCommon = false;
            values2 = new SetCache(values2);
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var valuesIndex = valuesLength;
                while (valuesIndex--) {
                  if (values2[valuesIndex] === computed) {
                    continue outer;
                  }
                }
                result2.push(value);
              } else if (!includes2(values2, computed, comparator)) {
                result2.push(value);
              }
            }
          return result2;
        }
        var baseEach = createBaseEach(baseForOwn);
        var baseEachRight = createBaseEach(baseForOwnRight, true);
        function baseEvery(collection, predicate) {
          var result2 = true;
          baseEach(collection, function(value, index, collection2) {
            result2 = !!predicate(value, index, collection2);
            return result2;
          });
          return result2;
        }
        function baseExtremum(array, iteratee2, comparator) {
          var index = -1, length = array.length;
          while (++index < length) {
            var value = array[index], current = iteratee2(value);
            if (current != null && (computed === undefined2 ? current === current && !isSymbol(current) : comparator(current, computed))) {
              var computed = current, result2 = value;
            }
          }
          return result2;
        }
        function baseFill(array, value, start, end) {
          var length = array.length;
          start = toInteger(start);
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end === undefined2 || end > length ? length : toInteger(end);
          if (end < 0) {
            end += length;
          }
          end = start > end ? 0 : toLength(end);
          while (start < end) {
            array[start++] = value;
          }
          return array;
        }
        function baseFilter(collection, predicate) {
          var result2 = [];
          baseEach(collection, function(value, index, collection2) {
            if (predicate(value, index, collection2)) {
              result2.push(value);
            }
          });
          return result2;
        }
        function baseFlatten(array, depth, predicate, isStrict, result2) {
          var index = -1, length = array.length;
          predicate || (predicate = isFlattenable);
          result2 || (result2 = []);
          while (++index < length) {
            var value = array[index];
            if (depth > 0 && predicate(value)) {
              if (depth > 1) {
                baseFlatten(value, depth - 1, predicate, isStrict, result2);
              } else {
                arrayPush(result2, value);
              }
            } else if (!isStrict) {
              result2[result2.length] = value;
            }
          }
          return result2;
        }
        var baseFor = createBaseFor();
        var baseForRight = createBaseFor(true);
        function baseForOwn(object, iteratee2) {
          return object && baseFor(object, iteratee2, keys);
        }
        function baseForOwnRight(object, iteratee2) {
          return object && baseForRight(object, iteratee2, keys);
        }
        function baseFunctions(object, props) {
          return arrayFilter(props, function(key) {
            return isFunction(object[key]);
          });
        }
        function baseGet(object, path) {
          path = castPath(path, object);
          var index = 0, length = path.length;
          while (object != null && index < length) {
            object = object[toKey(path[index++])];
          }
          return index && index == length ? object : undefined2;
        }
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
          var result2 = keysFunc(object);
          return isArray(object) ? result2 : arrayPush(result2, symbolsFunc(object));
        }
        function baseGetTag(value) {
          if (value == null) {
            return value === undefined2 ? undefinedTag : nullTag;
          }
          return symToStringTag && symToStringTag in Object2(value) ? getRawTag(value) : objectToString(value);
        }
        function baseGt(value, other) {
          return value > other;
        }
        function baseHas(object, key) {
          return object != null && hasOwnProperty.call(object, key);
        }
        function baseHasIn(object, key) {
          return object != null && key in Object2(object);
        }
        function baseInRange(number, start, end) {
          return number >= nativeMin(start, end) && number < nativeMax(start, end);
        }
        function baseIntersection(arrays, iteratee2, comparator) {
          var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
          while (othIndex--) {
            var array = arrays[othIndex];
            if (othIndex && iteratee2) {
              array = arrayMap(array, baseUnary(iteratee2));
            }
            maxLength = nativeMin(array.length, maxLength);
            caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined2;
          }
          array = arrays[0];
          var index = -1, seen = caches[0];
          outer:
            while (++index < length && result2.length < maxLength) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (!(seen ? cacheHas(seen, computed) : includes2(result2, computed, comparator))) {
                othIndex = othLength;
                while (--othIndex) {
                  var cache = caches[othIndex];
                  if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                    continue outer;
                  }
                }
                if (seen) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseInverter(object, setter, iteratee2, accumulator) {
          baseForOwn(object, function(value, key, object2) {
            setter(accumulator, iteratee2(value), key, object2);
          });
          return accumulator;
        }
        function baseInvoke(object, path, args) {
          path = castPath(path, object);
          object = parent(object, path);
          var func = object == null ? object : object[toKey(last(path))];
          return func == null ? undefined2 : apply(func, object, args);
        }
        function baseIsArguments(value) {
          return isObjectLike(value) && baseGetTag(value) == argsTag;
        }
        function baseIsArrayBuffer(value) {
          return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
        }
        function baseIsDate(value) {
          return isObjectLike(value) && baseGetTag(value) == dateTag;
        }
        function baseIsEqual(value, other, bitmask, customizer, stack) {
          if (value === other) {
            return true;
          }
          if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
            return value !== value && other !== other;
          }
          return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
          var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
          objTag = objTag == argsTag ? objectTag : objTag;
          othTag = othTag == argsTag ? objectTag : othTag;
          var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
          if (isSameTag && isBuffer(object)) {
            if (!isBuffer(other)) {
              return false;
            }
            objIsArr = true;
            objIsObj = false;
          }
          if (isSameTag && !objIsObj) {
            stack || (stack = new Stack());
            return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
          }
          if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
            var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
            if (objIsWrapped || othIsWrapped) {
              var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
              stack || (stack = new Stack());
              return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
            }
          }
          if (!isSameTag) {
            return false;
          }
          stack || (stack = new Stack());
          return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        function baseIsMap(value) {
          return isObjectLike(value) && getTag(value) == mapTag;
        }
        function baseIsMatch(object, source, matchData, customizer) {
          var index = matchData.length, length = index, noCustomizer = !customizer;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (index--) {
            var data = matchData[index];
            if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
              return false;
            }
          }
          while (++index < length) {
            data = matchData[index];
            var key = data[0], objValue = object[key], srcValue = data[1];
            if (noCustomizer && data[2]) {
              if (objValue === undefined2 && !(key in object)) {
                return false;
              }
            } else {
              var stack = new Stack();
              if (customizer) {
                var result2 = customizer(objValue, srcValue, key, object, source, stack);
              }
              if (!(result2 === undefined2 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) {
                return false;
              }
            }
          }
          return true;
        }
        function baseIsNative(value) {
          if (!isObject(value) || isMasked(value)) {
            return false;
          }
          var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
          return pattern.test(toSource(value));
        }
        function baseIsRegExp(value) {
          return isObjectLike(value) && baseGetTag(value) == regexpTag;
        }
        function baseIsSet(value) {
          return isObjectLike(value) && getTag(value) == setTag;
        }
        function baseIsTypedArray(value) {
          return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }
        function baseIteratee(value) {
          if (typeof value == "function") {
            return value;
          }
          if (value == null) {
            return identity;
          }
          if (typeof value == "object") {
            return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
          }
          return property(value);
        }
        function baseKeys(object) {
          if (!isPrototype(object)) {
            return nativeKeys(object);
          }
          var result2 = [];
          for (var key in Object2(object)) {
            if (hasOwnProperty.call(object, key) && key != "constructor") {
              result2.push(key);
            }
          }
          return result2;
        }
        function baseKeysIn(object) {
          if (!isObject(object)) {
            return nativeKeysIn(object);
          }
          var isProto = isPrototype(object), result2 = [];
          for (var key in object) {
            if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
              result2.push(key);
            }
          }
          return result2;
        }
        function baseLt(value, other) {
          return value < other;
        }
        function baseMap(collection, iteratee2) {
          var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value, key, collection2) {
            result2[++index] = iteratee2(value, key, collection2);
          });
          return result2;
        }
        function baseMatches(source) {
          var matchData = getMatchData(source);
          if (matchData.length == 1 && matchData[0][2]) {
            return matchesStrictComparable(matchData[0][0], matchData[0][1]);
          }
          return function(object) {
            return object === source || baseIsMatch(object, source, matchData);
          };
        }
        function baseMatchesProperty(path, srcValue) {
          if (isKey(path) && isStrictComparable(srcValue)) {
            return matchesStrictComparable(toKey(path), srcValue);
          }
          return function(object) {
            var objValue = get(object, path);
            return objValue === undefined2 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
          };
        }
        function baseMerge(object, source, srcIndex, customizer, stack) {
          if (object === source) {
            return;
          }
          baseFor(source, function(srcValue, key) {
            stack || (stack = new Stack());
            if (isObject(srcValue)) {
              baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
            } else {
              var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined2;
              if (newValue === undefined2) {
                newValue = srcValue;
              }
              assignMergeValue(object, key, newValue);
            }
          }, keysIn);
        }
        function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
          var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
          if (stacked) {
            assignMergeValue(object, key, stacked);
            return;
          }
          var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined2;
          var isCommon = newValue === undefined2;
          if (isCommon) {
            var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
            newValue = srcValue;
            if (isArr || isBuff || isTyped) {
              if (isArray(objValue)) {
                newValue = objValue;
              } else if (isArrayLikeObject(objValue)) {
                newValue = copyArray(objValue);
              } else if (isBuff) {
                isCommon = false;
                newValue = cloneBuffer(srcValue, true);
              } else if (isTyped) {
                isCommon = false;
                newValue = cloneTypedArray(srcValue, true);
              } else {
                newValue = [];
              }
            } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
              newValue = objValue;
              if (isArguments(objValue)) {
                newValue = toPlainObject(objValue);
              } else if (!isObject(objValue) || isFunction(objValue)) {
                newValue = initCloneObject(srcValue);
              }
            } else {
              isCommon = false;
            }
          }
          if (isCommon) {
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack["delete"](srcValue);
          }
          assignMergeValue(object, key, newValue);
        }
        function baseNth(array, n) {
          var length = array.length;
          if (!length) {
            return;
          }
          n += n < 0 ? length : 0;
          return isIndex(n, length) ? array[n] : undefined2;
        }
        function baseOrderBy(collection, iteratees, orders) {
          if (iteratees.length) {
            iteratees = arrayMap(iteratees, function(iteratee2) {
              if (isArray(iteratee2)) {
                return function(value) {
                  return baseGet(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                };
              }
              return iteratee2;
            });
          } else {
            iteratees = [identity];
          }
          var index = -1;
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          var result2 = baseMap(collection, function(value, key, collection2) {
            var criteria = arrayMap(iteratees, function(iteratee2) {
              return iteratee2(value);
            });
            return { "criteria": criteria, "index": ++index, "value": value };
          });
          return baseSortBy(result2, function(object, other) {
            return compareMultiple(object, other, orders);
          });
        }
        function basePick(object, paths) {
          return basePickBy(object, paths, function(value, path) {
            return hasIn(object, path);
          });
        }
        function basePickBy(object, paths, predicate) {
          var index = -1, length = paths.length, result2 = {};
          while (++index < length) {
            var path = paths[index], value = baseGet(object, path);
            if (predicate(value, path)) {
              baseSet(result2, castPath(path, object), value);
            }
          }
          return result2;
        }
        function basePropertyDeep(path) {
          return function(object) {
            return baseGet(object, path);
          };
        }
        function basePullAll(array, values2, iteratee2, comparator) {
          var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen = array;
          if (array === values2) {
            values2 = copyArray(values2);
          }
          if (iteratee2) {
            seen = arrayMap(array, baseUnary(iteratee2));
          }
          while (++index < length) {
            var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value;
            while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
              if (seen !== array) {
                splice.call(seen, fromIndex, 1);
              }
              splice.call(array, fromIndex, 1);
            }
          }
          return array;
        }
        function basePullAt(array, indexes) {
          var length = array ? indexes.length : 0, lastIndex = length - 1;
          while (length--) {
            var index = indexes[length];
            if (length == lastIndex || index !== previous) {
              var previous = index;
              if (isIndex(index)) {
                splice.call(array, index, 1);
              } else {
                baseUnset(array, index);
              }
            }
          }
          return array;
        }
        function baseRandom(lower, upper) {
          return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        function baseRange(start, end, step, fromRight) {
          var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length);
          while (length--) {
            result2[fromRight ? length : ++index] = start;
            start += step;
          }
          return result2;
        }
        function baseRepeat(string, n) {
          var result2 = "";
          if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
            return result2;
          }
          do {
            if (n % 2) {
              result2 += string;
            }
            n = nativeFloor(n / 2);
            if (n) {
              string += string;
            }
          } while (n);
          return result2;
        }
        function baseRest(func, start) {
          return setToString(overRest(func, start, identity), func + "");
        }
        function baseSample(collection) {
          return arraySample(values(collection));
        }
        function baseSampleSize(collection, n) {
          var array = values(collection);
          return shuffleSelf(array, baseClamp(n, 0, array.length));
        }
        function baseSet(object, path, value, customizer) {
          if (!isObject(object)) {
            return object;
          }
          path = castPath(path, object);
          var index = -1, length = path.length, lastIndex = length - 1, nested = object;
          while (nested != null && ++index < length) {
            var key = toKey(path[index]), newValue = value;
            if (key === "__proto__" || key === "constructor" || key === "prototype") {
              return object;
            }
            if (index != lastIndex) {
              var objValue = nested[key];
              newValue = customizer ? customizer(objValue, key, nested) : undefined2;
              if (newValue === undefined2) {
                newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
              }
            }
            assignValue(nested, key, newValue);
            nested = nested[key];
          }
          return object;
        }
        var baseSetData = !metaMap ? identity : function(func, data) {
          metaMap.set(func, data);
          return func;
        };
        var baseSetToString = !defineProperty ? identity : function(func, string) {
          return defineProperty(func, "toString", {
            "configurable": true,
            "enumerable": false,
            "value": constant(string),
            "writable": true
          });
        };
        function baseShuffle(collection) {
          return shuffleSelf(values(collection));
        }
        function baseSlice(array, start, end) {
          var index = -1, length = array.length;
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end > length ? length : end;
          if (end < 0) {
            end += length;
          }
          length = start > end ? 0 : end - start >>> 0;
          start >>>= 0;
          var result2 = Array2(length);
          while (++index < length) {
            result2[index] = array[index + start];
          }
          return result2;
        }
        function baseSome(collection, predicate) {
          var result2;
          baseEach(collection, function(value, index, collection2) {
            result2 = predicate(value, index, collection2);
            return !result2;
          });
          return !!result2;
        }
        function baseSortedIndex(array, value, retHighest) {
          var low = 0, high = array == null ? low : array.length;
          if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
            while (low < high) {
              var mid = low + high >>> 1, computed = array[mid];
              if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return high;
          }
          return baseSortedIndexBy(array, value, identity, retHighest);
        }
        function baseSortedIndexBy(array, value, iteratee2, retHighest) {
          var low = 0, high = array == null ? 0 : array.length;
          if (high === 0) {
            return 0;
          }
          value = iteratee2(value);
          var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined2;
          while (low < high) {
            var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined2, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
            if (valIsNaN) {
              var setLow = retHighest || othIsReflexive;
            } else if (valIsUndefined) {
              setLow = othIsReflexive && (retHighest || othIsDefined);
            } else if (valIsNull) {
              setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
            } else if (valIsSymbol) {
              setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
            } else if (othIsNull || othIsSymbol) {
              setLow = false;
            } else {
              setLow = retHighest ? computed <= value : computed < value;
            }
            if (setLow) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return nativeMin(high, MAX_ARRAY_INDEX);
        }
        function baseSortedUniq(array, iteratee2) {
          var index = -1, length = array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
            if (!index || !eq(computed, seen)) {
              var seen = computed;
              result2[resIndex++] = value === 0 ? 0 : value;
            }
          }
          return result2;
        }
        function baseToNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          return +value;
        }
        function baseToString(value) {
          if (typeof value == "string") {
            return value;
          }
          if (isArray(value)) {
            return arrayMap(value, baseToString) + "";
          }
          if (isSymbol(value)) {
            return symbolToString ? symbolToString.call(value) : "";
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
        }
        function baseUniq(array, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen = result2;
          if (comparator) {
            isCommon = false;
            includes2 = arrayIncludesWith;
          } else if (length >= LARGE_ARRAY_SIZE) {
            var set2 = iteratee2 ? null : createSet(array);
            if (set2) {
              return setToArray(set2);
            }
            isCommon = false;
            includes2 = cacheHas;
            seen = new SetCache();
          } else {
            seen = iteratee2 ? [] : result2;
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var seenIndex = seen.length;
                while (seenIndex--) {
                  if (seen[seenIndex] === computed) {
                    continue outer;
                  }
                }
                if (iteratee2) {
                  seen.push(computed);
                }
                result2.push(value);
              } else if (!includes2(seen, computed, comparator)) {
                if (seen !== result2) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseUnset(object, path) {
          path = castPath(path, object);
          object = parent(object, path);
          return object == null || delete object[toKey(last(path))];
        }
        function baseUpdate(object, path, updater, customizer) {
          return baseSet(object, path, updater(baseGet(object, path)), customizer);
        }
        function baseWhile(array, predicate, isDrop, fromRight) {
          var length = array.length, index = fromRight ? length : -1;
          while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
          }
          return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
        }
        function baseWrapperValue(value, actions) {
          var result2 = value;
          if (result2 instanceof LazyWrapper) {
            result2 = result2.value();
          }
          return arrayReduce(actions, function(result3, action) {
            return action.func.apply(action.thisArg, arrayPush([result3], action.args));
          }, result2);
        }
        function baseXor(arrays, iteratee2, comparator) {
          var length = arrays.length;
          if (length < 2) {
            return length ? baseUniq(arrays[0]) : [];
          }
          var index = -1, result2 = Array2(length);
          while (++index < length) {
            var array = arrays[index], othIndex = -1;
            while (++othIndex < length) {
              if (othIndex != index) {
                result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
              }
            }
          }
          return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
        }
        function baseZipObject(props, values2, assignFunc) {
          var index = -1, length = props.length, valsLength = values2.length, result2 = {};
          while (++index < length) {
            var value = index < valsLength ? values2[index] : undefined2;
            assignFunc(result2, props[index], value);
          }
          return result2;
        }
        function castArrayLikeObject(value) {
          return isArrayLikeObject(value) ? value : [];
        }
        function castFunction(value) {
          return typeof value == "function" ? value : identity;
        }
        function castPath(value, object) {
          if (isArray(value)) {
            return value;
          }
          return isKey(value, object) ? [value] : stringToPath(toString(value));
        }
        var castRest = baseRest;
        function castSlice(array, start, end) {
          var length = array.length;
          end = end === undefined2 ? length : end;
          return !start && end >= length ? array : baseSlice(array, start, end);
        }
        var clearTimeout2 = ctxClearTimeout || function(id) {
          return root.clearTimeout(id);
        };
        function cloneBuffer(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
          buffer.copy(result2);
          return result2;
        }
        function cloneArrayBuffer(arrayBuffer) {
          var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
          return result2;
        }
        function cloneDataView(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        function cloneRegExp(regexp) {
          var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
          result2.lastIndex = regexp.lastIndex;
          return result2;
        }
        function cloneSymbol(symbol) {
          return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};
        }
        function cloneTypedArray(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        function compareAscending(value, other) {
          if (value !== other) {
            var valIsDefined = value !== undefined2, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
            var othIsDefined = other !== undefined2, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
            if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
              return 1;
            }
            if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
              return -1;
            }
          }
          return 0;
        }
        function compareMultiple(object, other, orders) {
          var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
          while (++index < length) {
            var result2 = compareAscending(objCriteria[index], othCriteria[index]);
            if (result2) {
              if (index >= ordersLength) {
                return result2;
              }
              var order = orders[index];
              return result2 * (order == "desc" ? -1 : 1);
            }
          }
          return object.index - other.index;
        }
        function composeArgs(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
          while (++leftIndex < leftLength) {
            result2[leftIndex] = partials[leftIndex];
          }
          while (++argsIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[holders[argsIndex]] = args[argsIndex];
            }
          }
          while (rangeLength--) {
            result2[leftIndex++] = args[argsIndex++];
          }
          return result2;
        }
        function composeArgsRight(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
          while (++argsIndex < rangeLength) {
            result2[argsIndex] = args[argsIndex];
          }
          var offset = argsIndex;
          while (++rightIndex < rightLength) {
            result2[offset + rightIndex] = partials[rightIndex];
          }
          while (++holdersIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[offset + holders[holdersIndex]] = args[argsIndex++];
            }
          }
          return result2;
        }
        function copyArray(source, array) {
          var index = -1, length = source.length;
          array || (array = Array2(length));
          while (++index < length) {
            array[index] = source[index];
          }
          return array;
        }
        function copyObject(source, props, object, customizer) {
          var isNew = !object;
          object || (object = {});
          var index = -1, length = props.length;
          while (++index < length) {
            var key = props[index];
            var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined2;
            if (newValue === undefined2) {
              newValue = source[key];
            }
            if (isNew) {
              baseAssignValue(object, key, newValue);
            } else {
              assignValue(object, key, newValue);
            }
          }
          return object;
        }
        function copySymbols(source, object) {
          return copyObject(source, getSymbols(source), object);
        }
        function copySymbolsIn(source, object) {
          return copyObject(source, getSymbolsIn(source), object);
        }
        function createAggregator(setter, initializer) {
          return function(collection, iteratee2) {
            var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
            return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
          };
        }
        function createAssigner(assigner) {
          return baseRest(function(object, sources) {
            var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined2, guard = length > 2 ? sources[2] : undefined2;
            customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined2;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              customizer = length < 3 ? undefined2 : customizer;
              length = 1;
            }
            object = Object2(object);
            while (++index < length) {
              var source = sources[index];
              if (source) {
                assigner(object, source, index, customizer);
              }
            }
            return object;
          });
        }
        function createBaseEach(eachFunc, fromRight) {
          return function(collection, iteratee2) {
            if (collection == null) {
              return collection;
            }
            if (!isArrayLike(collection)) {
              return eachFunc(collection, iteratee2);
            }
            var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
            while (fromRight ? index-- : ++index < length) {
              if (iteratee2(iterable[index], index, iterable) === false) {
                break;
              }
            }
            return collection;
          };
        }
        function createBaseFor(fromRight) {
          return function(object, iteratee2, keysFunc) {
            var index = -1, iterable = Object2(object), props = keysFunc(object), length = props.length;
            while (length--) {
              var key = props[fromRight ? length : ++index];
              if (iteratee2(iterable[key], key, iterable) === false) {
                break;
              }
            }
            return object;
          };
        }
        function createBind(func, bitmask, thisArg) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            return fn.apply(isBind ? thisArg : this, arguments);
          }
          return wrapper;
        }
        function createCaseFirst(methodName) {
          return function(string) {
            string = toString(string);
            var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined2;
            var chr = strSymbols ? strSymbols[0] : string.charAt(0);
            var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
            return chr[methodName]() + trailing;
          };
        }
        function createCompounder(callback) {
          return function(string) {
            return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
          };
        }
        function createCtor(Ctor) {
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return new Ctor();
              case 1:
                return new Ctor(args[0]);
              case 2:
                return new Ctor(args[0], args[1]);
              case 3:
                return new Ctor(args[0], args[1], args[2]);
              case 4:
                return new Ctor(args[0], args[1], args[2], args[3]);
              case 5:
                return new Ctor(args[0], args[1], args[2], args[3], args[4]);
              case 6:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
              case 7:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
            }
            var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
            return isObject(result2) ? result2 : thisBinding;
          };
        }
        function createCurry(func, bitmask, arity) {
          var Ctor = createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper);
            while (index--) {
              args[index] = arguments[index];
            }
            var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
            length -= holders.length;
            if (length < arity) {
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                undefined2,
                args,
                holders,
                undefined2,
                undefined2,
                arity - length
              );
            }
            var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            return apply(fn, this, args);
          }
          return wrapper;
        }
        function createFind(findIndexFunc) {
          return function(collection, predicate, fromIndex) {
            var iterable = Object2(collection);
            if (!isArrayLike(collection)) {
              var iteratee2 = getIteratee(predicate, 3);
              collection = keys(collection);
              predicate = function(key) {
                return iteratee2(iterable[key], key, iterable);
              };
            }
            var index = findIndexFunc(collection, predicate, fromIndex);
            return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined2;
          };
        }
        function createFlow(fromRight) {
          return flatRest(function(funcs) {
            var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
            if (fromRight) {
              funcs.reverse();
            }
            while (index--) {
              var func = funcs[index];
              if (typeof func != "function") {
                throw new TypeError2(FUNC_ERROR_TEXT);
              }
              if (prereq && !wrapper && getFuncName(func) == "wrapper") {
                var wrapper = new LodashWrapper([], true);
              }
            }
            index = wrapper ? index : length;
            while (++index < length) {
              func = funcs[index];
              var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined2;
              if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
                wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
              } else {
                wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
              }
            }
            return function() {
              var args = arguments, value = args[0];
              if (wrapper && args.length == 1 && isArray(value)) {
                return wrapper.plant(value).value();
              }
              var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
              while (++index2 < length) {
                result2 = funcs[index2].call(this, result2);
              }
              return result2;
            };
          });
        }
        function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
          var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined2 : createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length;
            while (index--) {
              args[index] = arguments[index];
            }
            if (isCurried) {
              var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
            }
            if (partials) {
              args = composeArgs(args, partials, holders, isCurried);
            }
            if (partialsRight) {
              args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
            }
            length -= holdersCount;
            if (isCurried && length < arity) {
              var newHolders = replaceHolders(args, placeholder);
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                thisArg,
                args,
                newHolders,
                argPos,
                ary2,
                arity - length
              );
            }
            var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
            length = args.length;
            if (argPos) {
              args = reorder(args, argPos);
            } else if (isFlip && length > 1) {
              args.reverse();
            }
            if (isAry && ary2 < length) {
              args.length = ary2;
            }
            if (this && this !== root && this instanceof wrapper) {
              fn = Ctor || createCtor(fn);
            }
            return fn.apply(thisBinding, args);
          }
          return wrapper;
        }
        function createInverter(setter, toIteratee) {
          return function(object, iteratee2) {
            return baseInverter(object, setter, toIteratee(iteratee2), {});
          };
        }
        function createMathOperation(operator, defaultValue) {
          return function(value, other) {
            var result2;
            if (value === undefined2 && other === undefined2) {
              return defaultValue;
            }
            if (value !== undefined2) {
              result2 = value;
            }
            if (other !== undefined2) {
              if (result2 === undefined2) {
                return other;
              }
              if (typeof value == "string" || typeof other == "string") {
                value = baseToString(value);
                other = baseToString(other);
              } else {
                value = baseToNumber(value);
                other = baseToNumber(other);
              }
              result2 = operator(value, other);
            }
            return result2;
          };
        }
        function createOver(arrayFunc) {
          return flatRest(function(iteratees) {
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            return baseRest(function(args) {
              var thisArg = this;
              return arrayFunc(iteratees, function(iteratee2) {
                return apply(iteratee2, thisArg, args);
              });
            });
          });
        }
        function createPadding(length, chars) {
          chars = chars === undefined2 ? " " : baseToString(chars);
          var charsLength = chars.length;
          if (charsLength < 2) {
            return charsLength ? baseRepeat(chars, length) : chars;
          }
          var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
          return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
        }
        function createPartial(func, bitmask, thisArg, partials) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            while (++leftIndex < leftLength) {
              args[leftIndex] = partials[leftIndex];
            }
            while (argsLength--) {
              args[leftIndex++] = arguments[++argsIndex];
            }
            return apply(fn, isBind ? thisArg : this, args);
          }
          return wrapper;
        }
        function createRange(fromRight) {
          return function(start, end, step) {
            if (step && typeof step != "number" && isIterateeCall(start, end, step)) {
              end = step = undefined2;
            }
            start = toFinite(start);
            if (end === undefined2) {
              end = start;
              start = 0;
            } else {
              end = toFinite(end);
            }
            step = step === undefined2 ? start < end ? 1 : -1 : toFinite(step);
            return baseRange(start, end, step, fromRight);
          };
        }
        function createRelationalOperation(operator) {
          return function(value, other) {
            if (!(typeof value == "string" && typeof other == "string")) {
              value = toNumber(value);
              other = toNumber(other);
            }
            return operator(value, other);
          };
        }
        function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
          var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined2, newHoldersRight = isCurry ? undefined2 : holders, newPartials = isCurry ? partials : undefined2, newPartialsRight = isCurry ? undefined2 : partials;
          bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
          bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
          if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
            bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
          }
          var newData = [
            func,
            bitmask,
            thisArg,
            newPartials,
            newHolders,
            newPartialsRight,
            newHoldersRight,
            argPos,
            ary2,
            arity
          ];
          var result2 = wrapFunc.apply(undefined2, newData);
          if (isLaziable(func)) {
            setData(result2, newData);
          }
          result2.placeholder = placeholder;
          return setWrapToString(result2, func, bitmask);
        }
        function createRound(methodName) {
          var func = Math2[methodName];
          return function(number, precision) {
            number = toNumber(number);
            precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
            if (precision && nativeIsFinite(number)) {
              var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
              pair = (toString(value) + "e").split("e");
              return +(pair[0] + "e" + (+pair[1] - precision));
            }
            return func(number);
          };
        }
        var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop : function(values2) {
          return new Set2(values2);
        };
        function createToPairs(keysFunc) {
          return function(object) {
            var tag = getTag(object);
            if (tag == mapTag) {
              return mapToArray(object);
            }
            if (tag == setTag) {
              return setToPairs(object);
            }
            return baseToPairs(object, keysFunc(object));
          };
        }
        function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
          var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
          if (!isBindKey && typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          var length = partials ? partials.length : 0;
          if (!length) {
            bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
            partials = holders = undefined2;
          }
          ary2 = ary2 === undefined2 ? ary2 : nativeMax(toInteger(ary2), 0);
          arity = arity === undefined2 ? arity : toInteger(arity);
          length -= holders ? holders.length : 0;
          if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
            var partialsRight = partials, holdersRight = holders;
            partials = holders = undefined2;
          }
          var data = isBindKey ? undefined2 : getData(func);
          var newData = [
            func,
            bitmask,
            thisArg,
            partials,
            holders,
            partialsRight,
            holdersRight,
            argPos,
            ary2,
            arity
          ];
          if (data) {
            mergeData(newData, data);
          }
          func = newData[0];
          bitmask = newData[1];
          thisArg = newData[2];
          partials = newData[3];
          holders = newData[4];
          arity = newData[9] = newData[9] === undefined2 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
          if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
            bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
          }
          if (!bitmask || bitmask == WRAP_BIND_FLAG) {
            var result2 = createBind(func, bitmask, thisArg);
          } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
            result2 = createCurry(func, bitmask, arity);
          } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
            result2 = createPartial(func, bitmask, thisArg, partials);
          } else {
            result2 = createHybrid.apply(undefined2, newData);
          }
          var setter = data ? baseSetData : setData;
          return setWrapToString(setter(result2, newData), func, bitmask);
        }
        function customDefaultsAssignIn(objValue, srcValue, key, object) {
          if (objValue === undefined2 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
            return srcValue;
          }
          return objValue;
        }
        function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
          if (isObject(objValue) && isObject(srcValue)) {
            stack.set(srcValue, objValue);
            baseMerge(objValue, srcValue, undefined2, customDefaultsMerge, stack);
            stack["delete"](srcValue);
          }
          return objValue;
        }
        function customOmitClone(value) {
          return isPlainObject(value) ? undefined2 : value;
        }
        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
            return false;
          }
          var arrStacked = stack.get(array);
          var othStacked = stack.get(other);
          if (arrStacked && othStacked) {
            return arrStacked == other && othStacked == array;
          }
          var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined2;
          stack.set(array, other);
          stack.set(other, array);
          while (++index < arrLength) {
            var arrValue = array[index], othValue = other[index];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
            }
            if (compared !== undefined2) {
              if (compared) {
                continue;
              }
              result2 = false;
              break;
            }
            if (seen) {
              if (!arraySome(other, function(othValue2, othIndex) {
                if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
                result2 = false;
                break;
              }
            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              result2 = false;
              break;
            }
          }
          stack["delete"](array);
          stack["delete"](other);
          return result2;
        }
        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
          switch (tag) {
            case dataViewTag:
              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                return false;
              }
              object = object.buffer;
              other = other.buffer;
            case arrayBufferTag:
              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
                return false;
              }
              return true;
            case boolTag:
            case dateTag:
            case numberTag:
              return eq(+object, +other);
            case errorTag:
              return object.name == other.name && object.message == other.message;
            case regexpTag:
            case stringTag:
              return object == other + "";
            case mapTag:
              var convert = mapToArray;
            case setTag:
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
              convert || (convert = setToArray);
              if (object.size != other.size && !isPartial) {
                return false;
              }
              var stacked = stack.get(object);
              if (stacked) {
                return stacked == other;
              }
              bitmask |= COMPARE_UNORDERED_FLAG;
              stack.set(object, other);
              var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
              stack["delete"](object);
              return result2;
            case symbolTag:
              if (symbolValueOf) {
                return symbolValueOf.call(object) == symbolValueOf.call(other);
              }
          }
          return false;
        }
        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
          if (objLength != othLength && !isPartial) {
            return false;
          }
          var index = objLength;
          while (index--) {
            var key = objProps[index];
            if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
              return false;
            }
          }
          var objStacked = stack.get(object);
          var othStacked = stack.get(other);
          if (objStacked && othStacked) {
            return objStacked == other && othStacked == object;
          }
          var result2 = true;
          stack.set(object, other);
          stack.set(other, object);
          var skipCtor = isPartial;
          while (++index < objLength) {
            key = objProps[index];
            var objValue = object[key], othValue = other[key];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
            }
            if (!(compared === undefined2 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
              result2 = false;
              break;
            }
            skipCtor || (skipCtor = key == "constructor");
          }
          if (result2 && !skipCtor) {
            var objCtor = object.constructor, othCtor = other.constructor;
            if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
              result2 = false;
            }
          }
          stack["delete"](object);
          stack["delete"](other);
          return result2;
        }
        function flatRest(func) {
          return setToString(overRest(func, undefined2, flatten), func + "");
        }
        function getAllKeys(object) {
          return baseGetAllKeys(object, keys, getSymbols);
        }
        function getAllKeysIn(object) {
          return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }
        var getData = !metaMap ? noop : function(func) {
          return metaMap.get(func);
        };
        function getFuncName(func) {
          var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty.call(realNames, result2) ? array.length : 0;
          while (length--) {
            var data = array[length], otherFunc = data.func;
            if (otherFunc == null || otherFunc == func) {
              return data.name;
            }
          }
          return result2;
        }
        function getHolder(func) {
          var object = hasOwnProperty.call(lodash, "placeholder") ? lodash : func;
          return object.placeholder;
        }
        function getIteratee() {
          var result2 = lodash.iteratee || iteratee;
          result2 = result2 === iteratee ? baseIteratee : result2;
          return arguments.length ? result2(arguments[0], arguments[1]) : result2;
        }
        function getMapData(map2, key) {
          var data = map2.__data__;
          return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
        }
        function getMatchData(object) {
          var result2 = keys(object), length = result2.length;
          while (length--) {
            var key = result2[length], value = object[key];
            result2[length] = [key, value, isStrictComparable(value)];
          }
          return result2;
        }
        function getNative(object, key) {
          var value = getValue(object, key);
          return baseIsNative(value) ? value : undefined2;
        }
        function getRawTag(value) {
          var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
          try {
            value[symToStringTag] = undefined2;
            var unmasked = true;
          } catch (e) {
          }
          var result2 = nativeObjectToString.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag] = tag;
            } else {
              delete value[symToStringTag];
            }
          }
          return result2;
        }
        var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
          if (object == null) {
            return [];
          }
          object = Object2(object);
          return arrayFilter(nativeGetSymbols(object), function(symbol) {
            return propertyIsEnumerable.call(object, symbol);
          });
        };
        var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
          var result2 = [];
          while (object) {
            arrayPush(result2, getSymbols(object));
            object = getPrototype(object);
          }
          return result2;
        };
        var getTag = baseGetTag;
        if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
          getTag = function(value) {
            var result2 = baseGetTag(value), Ctor = result2 == objectTag ? value.constructor : undefined2, ctorString = Ctor ? toSource(Ctor) : "";
            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString:
                  return dataViewTag;
                case mapCtorString:
                  return mapTag;
                case promiseCtorString:
                  return promiseTag;
                case setCtorString:
                  return setTag;
                case weakMapCtorString:
                  return weakMapTag;
              }
            }
            return result2;
          };
        }
        function getView(start, end, transforms) {
          var index = -1, length = transforms.length;
          while (++index < length) {
            var data = transforms[index], size2 = data.size;
            switch (data.type) {
              case "drop":
                start += size2;
                break;
              case "dropRight":
                end -= size2;
                break;
              case "take":
                end = nativeMin(end, start + size2);
                break;
              case "takeRight":
                start = nativeMax(start, end - size2);
                break;
            }
          }
          return { "start": start, "end": end };
        }
        function getWrapDetails(source) {
          var match = source.match(reWrapDetails);
          return match ? match[1].split(reSplitDetails) : [];
        }
        function hasPath(object, path, hasFunc) {
          path = castPath(path, object);
          var index = -1, length = path.length, result2 = false;
          while (++index < length) {
            var key = toKey(path[index]);
            if (!(result2 = object != null && hasFunc(object, key))) {
              break;
            }
            object = object[key];
          }
          if (result2 || ++index != length) {
            return result2;
          }
          length = object == null ? 0 : object.length;
          return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
        }
        function initCloneArray(array) {
          var length = array.length, result2 = new array.constructor(length);
          if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
            result2.index = array.index;
            result2.input = array.input;
          }
          return result2;
        }
        function initCloneObject(object) {
          return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
        }
        function initCloneByTag(object, tag, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag:
              return cloneArrayBuffer(object);
            case boolTag:
            case dateTag:
              return new Ctor(+object);
            case dataViewTag:
              return cloneDataView(object, isDeep);
            case float32Tag:
            case float64Tag:
            case int8Tag:
            case int16Tag:
            case int32Tag:
            case uint8Tag:
            case uint8ClampedTag:
            case uint16Tag:
            case uint32Tag:
              return cloneTypedArray(object, isDeep);
            case mapTag:
              return new Ctor();
            case numberTag:
            case stringTag:
              return new Ctor(object);
            case regexpTag:
              return cloneRegExp(object);
            case setTag:
              return new Ctor();
            case symbolTag:
              return cloneSymbol(object);
          }
        }
        function insertWrapDetails(source, details) {
          var length = details.length;
          if (!length) {
            return source;
          }
          var lastIndex = length - 1;
          details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
          details = details.join(length > 2 ? ", " : " ");
          return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
        }
        function isFlattenable(value) {
          return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        function isIndex(value, length) {
          var type = typeof value;
          length = length == null ? MAX_SAFE_INTEGER : length;
          return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
        }
        function isIterateeCall(value, index, object) {
          if (!isObject(object)) {
            return false;
          }
          var type = typeof index;
          if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
            return eq(object[index], value);
          }
          return false;
        }
        function isKey(value, object) {
          if (isArray(value)) {
            return false;
          }
          var type = typeof value;
          if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
            return true;
          }
          return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object2(object);
        }
        function isKeyable(value) {
          var type = typeof value;
          return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        function isLaziable(func) {
          var funcName = getFuncName(func), other = lodash[funcName];
          if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
            return false;
          }
          if (func === other) {
            return true;
          }
          var data = getData(other);
          return !!data && func === data[0];
        }
        function isMasked(func) {
          return !!maskSrcKey && maskSrcKey in func;
        }
        var isMaskable = coreJsData ? isFunction : stubFalse;
        function isPrototype(value) {
          var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
          return value === proto;
        }
        function isStrictComparable(value) {
          return value === value && !isObject(value);
        }
        function matchesStrictComparable(key, srcValue) {
          return function(object) {
            if (object == null) {
              return false;
            }
            return object[key] === srcValue && (srcValue !== undefined2 || key in Object2(object));
          };
        }
        function memoizeCapped(func) {
          var result2 = memoize(func, function(key) {
            if (cache.size === MAX_MEMOIZE_SIZE) {
              cache.clear();
            }
            return key;
          });
          var cache = result2.cache;
          return result2;
        }
        function mergeData(data, source) {
          var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
          var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
          if (!(isCommon || isCombo)) {
            return data;
          }
          if (srcBitmask & WRAP_BIND_FLAG) {
            data[2] = source[2];
            newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
          }
          var value = source[3];
          if (value) {
            var partials = data[3];
            data[3] = partials ? composeArgs(partials, value, source[4]) : value;
            data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
          }
          value = source[5];
          if (value) {
            partials = data[5];
            data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
            data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
          }
          value = source[7];
          if (value) {
            data[7] = value;
          }
          if (srcBitmask & WRAP_ARY_FLAG) {
            data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
          }
          if (data[9] == null) {
            data[9] = source[9];
          }
          data[0] = source[0];
          data[1] = newBitmask;
          return data;
        }
        function nativeKeysIn(object) {
          var result2 = [];
          if (object != null) {
            for (var key in Object2(object)) {
              result2.push(key);
            }
          }
          return result2;
        }
        function objectToString(value) {
          return nativeObjectToString.call(value);
        }
        function overRest(func, start, transform2) {
          start = nativeMax(start === undefined2 ? func.length - 1 : start, 0);
          return function() {
            var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array2(length);
            while (++index < length) {
              array[index] = args[start + index];
            }
            index = -1;
            var otherArgs = Array2(start + 1);
            while (++index < start) {
              otherArgs[index] = args[index];
            }
            otherArgs[start] = transform2(array);
            return apply(func, this, otherArgs);
          };
        }
        function parent(object, path) {
          return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
        }
        function reorder(array, indexes) {
          var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
          while (length--) {
            var index = indexes[length];
            array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined2;
          }
          return array;
        }
        function safeGet(object, key) {
          if (key === "constructor" && typeof object[key] === "function") {
            return;
          }
          if (key == "__proto__") {
            return;
          }
          return object[key];
        }
        var setData = shortOut(baseSetData);
        var setTimeout2 = ctxSetTimeout || function(func, wait) {
          return root.setTimeout(func, wait);
        };
        var setToString = shortOut(baseSetToString);
        function setWrapToString(wrapper, reference, bitmask) {
          var source = reference + "";
          return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        function shortOut(func) {
          var count = 0, lastCalled = 0;
          return function() {
            var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
            lastCalled = stamp;
            if (remaining > 0) {
              if (++count >= HOT_COUNT) {
                return arguments[0];
              }
            } else {
              count = 0;
            }
            return func.apply(undefined2, arguments);
          };
        }
        function shuffleSelf(array, size2) {
          var index = -1, length = array.length, lastIndex = length - 1;
          size2 = size2 === undefined2 ? length : size2;
          while (++index < size2) {
            var rand = baseRandom(index, lastIndex), value = array[rand];
            array[rand] = array[index];
            array[index] = value;
          }
          array.length = size2;
          return array;
        }
        var stringToPath = memoizeCapped(function(string) {
          var result2 = [];
          if (string.charCodeAt(0) === 46) {
            result2.push("");
          }
          string.replace(rePropName, function(match, number, quote, subString) {
            result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
          });
          return result2;
        });
        function toKey(value) {
          if (typeof value == "string" || isSymbol(value)) {
            return value;
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
        }
        function toSource(func) {
          if (func != null) {
            try {
              return funcToString.call(func);
            } catch (e) {
            }
            try {
              return func + "";
            } catch (e) {
            }
          }
          return "";
        }
        function updateWrapDetails(details, bitmask) {
          arrayEach(wrapFlags, function(pair) {
            var value = "_." + pair[0];
            if (bitmask & pair[1] && !arrayIncludes(details, value)) {
              details.push(value);
            }
          });
          return details.sort();
        }
        function wrapperClone(wrapper) {
          if (wrapper instanceof LazyWrapper) {
            return wrapper.clone();
          }
          var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
          result2.__actions__ = copyArray(wrapper.__actions__);
          result2.__index__ = wrapper.__index__;
          result2.__values__ = wrapper.__values__;
          return result2;
        }
        function chunk(array, size2, guard) {
          if (guard ? isIterateeCall(array, size2, guard) : size2 === undefined2) {
            size2 = 1;
          } else {
            size2 = nativeMax(toInteger(size2), 0);
          }
          var length = array == null ? 0 : array.length;
          if (!length || size2 < 1) {
            return [];
          }
          var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
          while (index < length) {
            result2[resIndex++] = baseSlice(array, index, index += size2);
          }
          return result2;
        }
        function compact(array) {
          var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index];
            if (value) {
              result2[resIndex++] = value;
            }
          }
          return result2;
        }
        function concat() {
          var length = arguments.length;
          if (!length) {
            return [];
          }
          var args = Array2(length - 1), array = arguments[0], index = length;
          while (index--) {
            args[index - 1] = arguments[index];
          }
          return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
        }
        var difference = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true)) : [];
        });
        var differenceBy = baseRest(function(array, values2) {
          var iteratee2 = last(values2);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2)) : [];
        });
        var differenceWith = baseRest(function(array, values2) {
          var comparator = last(values2);
          if (isArrayLikeObject(comparator)) {
            comparator = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), undefined2, comparator) : [];
        });
        function drop(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function dropRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function dropRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        function dropWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        function fill(array, value, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (start && typeof start != "number" && isIterateeCall(array, value, start)) {
            start = 0;
            end = length;
          }
          return baseFill(array, value, start, end);
        }
        function findIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        function findLastIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length - 1;
          if (fromIndex !== undefined2) {
            index = toInteger(fromIndex);
            index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        function flatten(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, 1) : [];
        }
        function flattenDeep(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, INFINITY) : [];
        }
        function flattenDepth(array, depth) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          depth = depth === undefined2 ? 1 : toInteger(depth);
          return baseFlatten(array, depth);
        }
        function fromPairs(pairs) {
          var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
          while (++index < length) {
            var pair = pairs[index];
            result2[pair[0]] = pair[1];
          }
          return result2;
        }
        function head(array) {
          return array && array.length ? array[0] : undefined2;
        }
        function indexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseIndexOf(array, value, index);
        }
        function initial(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 0, -1) : [];
        }
        var intersection = baseRest(function(arrays) {
          var mapped = arrayMap(arrays, castArrayLikeObject);
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
        });
        var intersectionBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          if (iteratee2 === last(mapped)) {
            iteratee2 = undefined2;
          } else {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
        });
        var intersectionWith = baseRest(function(arrays) {
          var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          if (comparator) {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined2, comparator) : [];
        });
        function join(array, separator) {
          return array == null ? "" : nativeJoin.call(array, separator);
        }
        function last(array) {
          var length = array == null ? 0 : array.length;
          return length ? array[length - 1] : undefined2;
        }
        function lastIndexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length;
          if (fromIndex !== undefined2) {
            index = toInteger(fromIndex);
            index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
        }
        function nth(array, n) {
          return array && array.length ? baseNth(array, toInteger(n)) : undefined2;
        }
        var pull = baseRest(pullAll);
        function pullAll(array, values2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
        }
        function pullAllBy(array, values2, iteratee2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
        }
        function pullAllWith(array, values2, comparator) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined2, comparator) : array;
        }
        var pullAt = flatRest(function(array, indexes) {
          var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
          basePullAt(array, arrayMap(indexes, function(index) {
            return isIndex(index, length) ? +index : index;
          }).sort(compareAscending));
          return result2;
        });
        function remove(array, predicate) {
          var result2 = [];
          if (!(array && array.length)) {
            return result2;
          }
          var index = -1, indexes = [], length = array.length;
          predicate = getIteratee(predicate, 3);
          while (++index < length) {
            var value = array[index];
            if (predicate(value, index, array)) {
              result2.push(value);
              indexes.push(index);
            }
          }
          basePullAt(array, indexes);
          return result2;
        }
        function reverse(array) {
          return array == null ? array : nativeReverse.call(array);
        }
        function slice(array, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
            start = 0;
            end = length;
          } else {
            start = start == null ? 0 : toInteger(start);
            end = end === undefined2 ? length : toInteger(end);
          }
          return baseSlice(array, start, end);
        }
        function sortedIndex(array, value) {
          return baseSortedIndex(array, value);
        }
        function sortedIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
        }
        function sortedIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value);
            if (index < length && eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedLastIndex(array, value) {
          return baseSortedIndex(array, value, true);
        }
        function sortedLastIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
        }
        function sortedLastIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value, true) - 1;
            if (eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedUniq(array) {
          return array && array.length ? baseSortedUniq(array) : [];
        }
        function sortedUniqBy(array, iteratee2) {
          return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function tail(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 1, length) : [];
        }
        function take(array, n, guard) {
          if (!(array && array.length)) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function takeRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function takeRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        function takeWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        var union = baseRest(function(arrays) {
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
        });
        var unionBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2));
        });
        var unionWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined2, comparator);
        });
        function uniq(array) {
          return array && array.length ? baseUniq(array) : [];
        }
        function uniqBy(array, iteratee2) {
          return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function uniqWith(array, comparator) {
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return array && array.length ? baseUniq(array, undefined2, comparator) : [];
        }
        function unzip(array) {
          if (!(array && array.length)) {
            return [];
          }
          var length = 0;
          array = arrayFilter(array, function(group) {
            if (isArrayLikeObject(group)) {
              length = nativeMax(group.length, length);
              return true;
            }
          });
          return baseTimes(length, function(index) {
            return arrayMap(array, baseProperty(index));
          });
        }
        function unzipWith(array, iteratee2) {
          if (!(array && array.length)) {
            return [];
          }
          var result2 = unzip(array);
          if (iteratee2 == null) {
            return result2;
          }
          return arrayMap(result2, function(group) {
            return apply(iteratee2, undefined2, group);
          });
        }
        var without = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, values2) : [];
        });
        var xor = baseRest(function(arrays) {
          return baseXor(arrayFilter(arrays, isArrayLikeObject));
        });
        var xorBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));
        });
        var xorWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined2, comparator);
        });
        var zip = baseRest(unzip);
        function zipObject(props, values2) {
          return baseZipObject(props || [], values2 || [], assignValue);
        }
        function zipObjectDeep(props, values2) {
          return baseZipObject(props || [], values2 || [], baseSet);
        }
        var zipWith = baseRest(function(arrays) {
          var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined2;
          iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined2;
          return unzipWith(arrays, iteratee2);
        });
        function chain(value) {
          var result2 = lodash(value);
          result2.__chain__ = true;
          return result2;
        }
        function tap(value, interceptor) {
          interceptor(value);
          return value;
        }
        function thru(value, interceptor) {
          return interceptor(value);
        }
        var wrapperAt = flatRest(function(paths) {
          var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
            return baseAt(object, paths);
          };
          if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
            return this.thru(interceptor);
          }
          value = value.slice(start, +start + (length ? 1 : 0));
          value.__actions__.push({
            "func": thru,
            "args": [interceptor],
            "thisArg": undefined2
          });
          return new LodashWrapper(value, this.__chain__).thru(function(array) {
            if (length && !array.length) {
              array.push(undefined2);
            }
            return array;
          });
        });
        function wrapperChain() {
          return chain(this);
        }
        function wrapperCommit() {
          return new LodashWrapper(this.value(), this.__chain__);
        }
        function wrapperNext() {
          if (this.__values__ === undefined2) {
            this.__values__ = toArray(this.value());
          }
          var done = this.__index__ >= this.__values__.length, value = done ? undefined2 : this.__values__[this.__index__++];
          return { "done": done, "value": value };
        }
        function wrapperToIterator() {
          return this;
        }
        function wrapperPlant(value) {
          var result2, parent2 = this;
          while (parent2 instanceof baseLodash) {
            var clone2 = wrapperClone(parent2);
            clone2.__index__ = 0;
            clone2.__values__ = undefined2;
            if (result2) {
              previous.__wrapped__ = clone2;
            } else {
              result2 = clone2;
            }
            var previous = clone2;
            parent2 = parent2.__wrapped__;
          }
          previous.__wrapped__ = value;
          return result2;
        }
        function wrapperReverse() {
          var value = this.__wrapped__;
          if (value instanceof LazyWrapper) {
            var wrapped = value;
            if (this.__actions__.length) {
              wrapped = new LazyWrapper(this);
            }
            wrapped = wrapped.reverse();
            wrapped.__actions__.push({
              "func": thru,
              "args": [reverse],
              "thisArg": undefined2
            });
            return new LodashWrapper(wrapped, this.__chain__);
          }
          return this.thru(reverse);
        }
        function wrapperValue() {
          return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        var countBy = createAggregator(function(result2, value, key) {
          if (hasOwnProperty.call(result2, key)) {
            ++result2[key];
          } else {
            baseAssignValue(result2, key, 1);
          }
        });
        function every(collection, predicate, guard) {
          var func = isArray(collection) ? arrayEvery : baseEvery;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        function filter(collection, predicate) {
          var func = isArray(collection) ? arrayFilter : baseFilter;
          return func(collection, getIteratee(predicate, 3));
        }
        var find = createFind(findIndex);
        var findLast = createFind(findLastIndex);
        function flatMap(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), 1);
        }
        function flatMapDeep(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), INFINITY);
        }
        function flatMapDepth(collection, iteratee2, depth) {
          depth = depth === undefined2 ? 1 : toInteger(depth);
          return baseFlatten(map(collection, iteratee2), depth);
        }
        function forEach(collection, iteratee2) {
          var func = isArray(collection) ? arrayEach : baseEach;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function forEachRight(collection, iteratee2) {
          var func = isArray(collection) ? arrayEachRight : baseEachRight;
          return func(collection, getIteratee(iteratee2, 3));
        }
        var groupBy = createAggregator(function(result2, value, key) {
          if (hasOwnProperty.call(result2, key)) {
            result2[key].push(value);
          } else {
            baseAssignValue(result2, key, [value]);
          }
        });
        function includes(collection, value, fromIndex, guard) {
          collection = isArrayLike(collection) ? collection : values(collection);
          fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
          var length = collection.length;
          if (fromIndex < 0) {
            fromIndex = nativeMax(length + fromIndex, 0);
          }
          return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
        }
        var invokeMap = baseRest(function(collection, path, args) {
          var index = -1, isFunc = typeof path == "function", result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value) {
            result2[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
          });
          return result2;
        });
        var keyBy = createAggregator(function(result2, value, key) {
          baseAssignValue(result2, key, value);
        });
        function map(collection, iteratee2) {
          var func = isArray(collection) ? arrayMap : baseMap;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function orderBy(collection, iteratees, orders, guard) {
          if (collection == null) {
            return [];
          }
          if (!isArray(iteratees)) {
            iteratees = iteratees == null ? [] : [iteratees];
          }
          orders = guard ? undefined2 : orders;
          if (!isArray(orders)) {
            orders = orders == null ? [] : [orders];
          }
          return baseOrderBy(collection, iteratees, orders);
        }
        var partition = createAggregator(function(result2, value, key) {
          result2[key ? 0 : 1].push(value);
        }, function() {
          return [[], []];
        });
        function reduce(collection, iteratee2, accumulator) {
          var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
        }
        function reduceRight(collection, iteratee2, accumulator) {
          var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
        }
        function reject(collection, predicate) {
          var func = isArray(collection) ? arrayFilter : baseFilter;
          return func(collection, negate(getIteratee(predicate, 3)));
        }
        function sample(collection) {
          var func = isArray(collection) ? arraySample : baseSample;
          return func(collection);
        }
        function sampleSize(collection, n, guard) {
          if (guard ? isIterateeCall(collection, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          var func = isArray(collection) ? arraySampleSize : baseSampleSize;
          return func(collection, n);
        }
        function shuffle(collection) {
          var func = isArray(collection) ? arrayShuffle : baseShuffle;
          return func(collection);
        }
        function size(collection) {
          if (collection == null) {
            return 0;
          }
          if (isArrayLike(collection)) {
            return isString(collection) ? stringSize(collection) : collection.length;
          }
          var tag = getTag(collection);
          if (tag == mapTag || tag == setTag) {
            return collection.size;
          }
          return baseKeys(collection).length;
        }
        function some(collection, predicate, guard) {
          var func = isArray(collection) ? arraySome : baseSome;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        var sortBy = baseRest(function(collection, iteratees) {
          if (collection == null) {
            return [];
          }
          var length = iteratees.length;
          if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
            iteratees = [];
          } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
            iteratees = [iteratees[0]];
          }
          return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        var now = ctxNow || function() {
          return root.Date.now();
        };
        function after(n, func) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n < 1) {
              return func.apply(this, arguments);
            }
          };
        }
        function ary(func, n, guard) {
          n = guard ? undefined2 : n;
          n = func && n == null ? func.length : n;
          return createWrap(func, WRAP_ARY_FLAG, undefined2, undefined2, undefined2, undefined2, n);
        }
        function before(n, func) {
          var result2;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n > 0) {
              result2 = func.apply(this, arguments);
            }
            if (n <= 1) {
              func = undefined2;
            }
            return result2;
          };
        }
        var bind = baseRest(function(func, thisArg, partials) {
          var bitmask = WRAP_BIND_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bind));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(func, bitmask, thisArg, partials, holders);
        });
        var bindKey = baseRest(function(object, key, partials) {
          var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bindKey));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(key, bitmask, object, partials, holders);
        });
        function curry(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curry.placeholder;
          return result2;
        }
        function curryRight(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curryRight.placeholder;
          return result2;
        }
        function debounce(func, wait, options) {
          var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = "maxWait" in options;
            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
            var args = lastArgs, thisArg = lastThis;
            lastArgs = lastThis = undefined2;
            lastInvokeTime = time;
            result2 = func.apply(thisArg, args);
            return result2;
          }
          function leadingEdge(time) {
            lastInvokeTime = time;
            timerId = setTimeout2(timerExpired, wait);
            return leading ? invokeFunc(time) : result2;
          }
          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
            return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
          }
          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
            return lastCallTime === undefined2 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
          }
          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            timerId = setTimeout2(timerExpired, remainingWait(time));
          }
          function trailingEdge(time) {
            timerId = undefined2;
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined2;
            return result2;
          }
          function cancel() {
            if (timerId !== undefined2) {
              clearTimeout2(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined2;
          }
          function flush() {
            return timerId === undefined2 ? result2 : trailingEdge(now());
          }
          function debounced() {
            var time = now(), isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined2) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                clearTimeout2(timerId);
                timerId = setTimeout2(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined2) {
              timerId = setTimeout2(timerExpired, wait);
            }
            return result2;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }
        var defer = baseRest(function(func, args) {
          return baseDelay(func, 1, args);
        });
        var delay = baseRest(function(func, wait, args) {
          return baseDelay(func, toNumber(wait) || 0, args);
        });
        function flip(func) {
          return createWrap(func, WRAP_FLIP_FLAG);
        }
        function memoize(func, resolver) {
          if (typeof func != "function" || resolver != null && typeof resolver != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          var memoized = function() {
            var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
            if (cache.has(key)) {
              return cache.get(key);
            }
            var result2 = func.apply(this, args);
            memoized.cache = cache.set(key, result2) || cache;
            return result2;
          };
          memoized.cache = new (memoize.Cache || MapCache)();
          return memoized;
        }
        memoize.Cache = MapCache;
        function negate(predicate) {
          if (typeof predicate != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return !predicate.call(this);
              case 1:
                return !predicate.call(this, args[0]);
              case 2:
                return !predicate.call(this, args[0], args[1]);
              case 3:
                return !predicate.call(this, args[0], args[1], args[2]);
            }
            return !predicate.apply(this, args);
          };
        }
        function once(func) {
          return before(2, func);
        }
        var overArgs = castRest(function(func, transforms) {
          transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
          var funcsLength = transforms.length;
          return baseRest(function(args) {
            var index = -1, length = nativeMin(args.length, funcsLength);
            while (++index < length) {
              args[index] = transforms[index].call(this, args[index]);
            }
            return apply(func, this, args);
          });
        });
        var partial = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partial));
          return createWrap(func, WRAP_PARTIAL_FLAG, undefined2, partials, holders);
        });
        var partialRight = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partialRight));
          return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined2, partials, holders);
        });
        var rearg = flatRest(function(func, indexes) {
          return createWrap(func, WRAP_REARG_FLAG, undefined2, undefined2, undefined2, indexes);
        });
        function rest(func, start) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          start = start === undefined2 ? start : toInteger(start);
          return baseRest(func, start);
        }
        function spread(func, start) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          start = start == null ? 0 : nativeMax(toInteger(start), 0);
          return baseRest(function(args) {
            var array = args[start], otherArgs = castSlice(args, 0, start);
            if (array) {
              arrayPush(otherArgs, array);
            }
            return apply(func, this, otherArgs);
          });
        }
        function throttle(func, wait, options) {
          var leading = true, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          if (isObject(options)) {
            leading = "leading" in options ? !!options.leading : leading;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          return debounce(func, wait, {
            "leading": leading,
            "maxWait": wait,
            "trailing": trailing
          });
        }
        function unary(func) {
          return ary(func, 1);
        }
        function wrap(value, wrapper) {
          return partial(castFunction(wrapper), value);
        }
        function castArray() {
          if (!arguments.length) {
            return [];
          }
          var value = arguments[0];
          return isArray(value) ? value : [value];
        }
        function clone(value) {
          return baseClone(value, CLONE_SYMBOLS_FLAG);
        }
        function cloneWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
        }
        function cloneDeep(value) {
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }
        function cloneDeepWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
        }
        function conformsTo(object, source) {
          return source == null || baseConformsTo(object, source, keys(source));
        }
        function eq(value, other) {
          return value === other || value !== value && other !== other;
        }
        var gt = createRelationalOperation(baseGt);
        var gte = createRelationalOperation(function(value, other) {
          return value >= other;
        });
        var isArguments = baseIsArguments(/* @__PURE__ */ function() {
          return arguments;
        }()) ? baseIsArguments : function(value) {
          return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
        };
        var isArray = Array2.isArray;
        var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
        function isArrayLike(value) {
          return value != null && isLength(value.length) && !isFunction(value);
        }
        function isArrayLikeObject(value) {
          return isObjectLike(value) && isArrayLike(value);
        }
        function isBoolean(value) {
          return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
        }
        var isBuffer = nativeIsBuffer || stubFalse;
        var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
        function isElement(value) {
          return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
        }
        function isEmpty(value) {
          if (value == null) {
            return true;
          }
          if (isArrayLike(value) && (isArray(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
            return !value.length;
          }
          var tag = getTag(value);
          if (tag == mapTag || tag == setTag) {
            return !value.size;
          }
          if (isPrototype(value)) {
            return !baseKeys(value).length;
          }
          for (var key in value) {
            if (hasOwnProperty.call(value, key)) {
              return false;
            }
          }
          return true;
        }
        function isEqual(value, other) {
          return baseIsEqual(value, other);
        }
        function isEqualWith(value, other, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          var result2 = customizer ? customizer(value, other) : undefined2;
          return result2 === undefined2 ? baseIsEqual(value, other, undefined2, customizer) : !!result2;
        }
        function isError(value) {
          if (!isObjectLike(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
        }
        function isFinite2(value) {
          return typeof value == "number" && nativeIsFinite(value);
        }
        function isFunction(value) {
          if (!isObject(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }
        function isInteger(value) {
          return typeof value == "number" && value == toInteger(value);
        }
        function isLength(value) {
          return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        function isObject(value) {
          var type = typeof value;
          return value != null && (type == "object" || type == "function");
        }
        function isObjectLike(value) {
          return value != null && typeof value == "object";
        }
        var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
        function isMatch(object, source) {
          return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        function isMatchWith(object, source, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        function isNaN2(value) {
          return isNumber(value) && value != +value;
        }
        function isNative(value) {
          if (isMaskable(value)) {
            throw new Error2(CORE_ERROR_TEXT);
          }
          return baseIsNative(value);
        }
        function isNull(value) {
          return value === null;
        }
        function isNil(value) {
          return value == null;
        }
        function isNumber(value) {
          return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
        }
        function isPlainObject(value) {
          if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
            return false;
          }
          var proto = getPrototype(value);
          if (proto === null) {
            return true;
          }
          var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
          return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
        function isSafeInteger(value) {
          return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
        }
        var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
        function isString(value) {
          return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
        }
        function isSymbol(value) {
          return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
        }
        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        function isUndefined(value) {
          return value === undefined2;
        }
        function isWeakMap(value) {
          return isObjectLike(value) && getTag(value) == weakMapTag;
        }
        function isWeakSet(value) {
          return isObjectLike(value) && baseGetTag(value) == weakSetTag;
        }
        var lt = createRelationalOperation(baseLt);
        var lte = createRelationalOperation(function(value, other) {
          return value <= other;
        });
        function toArray(value) {
          if (!value) {
            return [];
          }
          if (isArrayLike(value)) {
            return isString(value) ? stringToArray(value) : copyArray(value);
          }
          if (symIterator && value[symIterator]) {
            return iteratorToArray(value[symIterator]());
          }
          var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
          return func(value);
        }
        function toFinite(value) {
          if (!value) {
            return value === 0 ? value : 0;
          }
          value = toNumber(value);
          if (value === INFINITY || value === -INFINITY) {
            var sign = value < 0 ? -1 : 1;
            return sign * MAX_INTEGER;
          }
          return value === value ? value : 0;
        }
        function toInteger(value) {
          var result2 = toFinite(value), remainder = result2 % 1;
          return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
        }
        function toLength(value) {
          return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        function toNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject(value)) {
            var other = typeof value.valueOf == "function" ? value.valueOf() : value;
            value = isObject(other) ? other + "" : other;
          }
          if (typeof value != "string") {
            return value === 0 ? value : +value;
          }
          value = baseTrim(value);
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
        }
        function toPlainObject(value) {
          return copyObject(value, keysIn(value));
        }
        function toSafeInteger(value) {
          return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
        }
        function toString(value) {
          return value == null ? "" : baseToString(value);
        }
        var assign = createAssigner(function(object, source) {
          if (isPrototype(source) || isArrayLike(source)) {
            copyObject(source, keys(source), object);
            return;
          }
          for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
              assignValue(object, key, source[key]);
            }
          }
        });
        var assignIn = createAssigner(function(object, source) {
          copyObject(source, keysIn(source), object);
        });
        var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keysIn(source), object, customizer);
        });
        var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keys(source), object, customizer);
        });
        var at = flatRest(baseAt);
        function create(prototype, properties) {
          var result2 = baseCreate(prototype);
          return properties == null ? result2 : baseAssign(result2, properties);
        }
        var defaults = baseRest(function(object, sources) {
          object = Object2(object);
          var index = -1;
          var length = sources.length;
          var guard = length > 2 ? sources[2] : undefined2;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            length = 1;
          }
          while (++index < length) {
            var source = sources[index];
            var props = keysIn(source);
            var propsIndex = -1;
            var propsLength = props.length;
            while (++propsIndex < propsLength) {
              var key = props[propsIndex];
              var value = object[key];
              if (value === undefined2 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
                object[key] = source[key];
              }
            }
          }
          return object;
        });
        var defaultsDeep = baseRest(function(args) {
          args.push(undefined2, customDefaultsMerge);
          return apply(mergeWith, undefined2, args);
        });
        function findKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        function findLastKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        function forIn(object, iteratee2) {
          return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forInRight(object, iteratee2) {
          return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forOwn(object, iteratee2) {
          return object && baseForOwn(object, getIteratee(iteratee2, 3));
        }
        function forOwnRight(object, iteratee2) {
          return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
        }
        function functions(object) {
          return object == null ? [] : baseFunctions(object, keys(object));
        }
        function functionsIn(object) {
          return object == null ? [] : baseFunctions(object, keysIn(object));
        }
        function get(object, path, defaultValue) {
          var result2 = object == null ? undefined2 : baseGet(object, path);
          return result2 === undefined2 ? defaultValue : result2;
        }
        function has(object, path) {
          return object != null && hasPath(object, path, baseHas);
        }
        function hasIn(object, path) {
          return object != null && hasPath(object, path, baseHasIn);
        }
        var invert = createInverter(function(result2, value, key) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          result2[value] = key;
        }, constant(identity));
        var invertBy = createInverter(function(result2, value, key) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          if (hasOwnProperty.call(result2, value)) {
            result2[value].push(key);
          } else {
            result2[value] = [key];
          }
        }, getIteratee);
        var invoke = baseRest(baseInvoke);
        function keys(object) {
          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        function keysIn(object) {
          return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }
        function mapKeys(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key, object2) {
            baseAssignValue(result2, iteratee2(value, key, object2), value);
          });
          return result2;
        }
        function mapValues(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key, object2) {
            baseAssignValue(result2, key, iteratee2(value, key, object2));
          });
          return result2;
        }
        var merge = createAssigner(function(object, source, srcIndex) {
          baseMerge(object, source, srcIndex);
        });
        var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
          baseMerge(object, source, srcIndex, customizer);
        });
        var omit = flatRest(function(object, paths) {
          var result2 = {};
          if (object == null) {
            return result2;
          }
          var isDeep = false;
          paths = arrayMap(paths, function(path) {
            path = castPath(path, object);
            isDeep || (isDeep = path.length > 1);
            return path;
          });
          copyObject(object, getAllKeysIn(object), result2);
          if (isDeep) {
            result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
          }
          var length = paths.length;
          while (length--) {
            baseUnset(result2, paths[length]);
          }
          return result2;
        });
        function omitBy(object, predicate) {
          return pickBy(object, negate(getIteratee(predicate)));
        }
        var pick = flatRest(function(object, paths) {
          return object == null ? {} : basePick(object, paths);
        });
        function pickBy(object, predicate) {
          if (object == null) {
            return {};
          }
          var props = arrayMap(getAllKeysIn(object), function(prop) {
            return [prop];
          });
          predicate = getIteratee(predicate);
          return basePickBy(object, props, function(value, path) {
            return predicate(value, path[0]);
          });
        }
        function result(object, path, defaultValue) {
          path = castPath(path, object);
          var index = -1, length = path.length;
          if (!length) {
            length = 1;
            object = undefined2;
          }
          while (++index < length) {
            var value = object == null ? undefined2 : object[toKey(path[index])];
            if (value === undefined2) {
              index = length;
              value = defaultValue;
            }
            object = isFunction(value) ? value.call(object) : value;
          }
          return object;
        }
        function set(object, path, value) {
          return object == null ? object : baseSet(object, path, value);
        }
        function setWith(object, path, value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseSet(object, path, value, customizer);
        }
        var toPairs = createToPairs(keys);
        var toPairsIn = createToPairs(keysIn);
        function transform(object, iteratee2, accumulator) {
          var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
          iteratee2 = getIteratee(iteratee2, 4);
          if (accumulator == null) {
            var Ctor = object && object.constructor;
            if (isArrLike) {
              accumulator = isArr ? new Ctor() : [];
            } else if (isObject(object)) {
              accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
            } else {
              accumulator = {};
            }
          }
          (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object2) {
            return iteratee2(accumulator, value, index, object2);
          });
          return accumulator;
        }
        function unset(object, path) {
          return object == null ? true : baseUnset(object, path);
        }
        function update(object, path, updater) {
          return object == null ? object : baseUpdate(object, path, castFunction(updater));
        }
        function updateWith(object, path, updater, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
        }
        function values(object) {
          return object == null ? [] : baseValues(object, keys(object));
        }
        function valuesIn(object) {
          return object == null ? [] : baseValues(object, keysIn(object));
        }
        function clamp(number, lower, upper) {
          if (upper === undefined2) {
            upper = lower;
            lower = undefined2;
          }
          if (upper !== undefined2) {
            upper = toNumber(upper);
            upper = upper === upper ? upper : 0;
          }
          if (lower !== undefined2) {
            lower = toNumber(lower);
            lower = lower === lower ? lower : 0;
          }
          return baseClamp(toNumber(number), lower, upper);
        }
        function inRange(number, start, end) {
          start = toFinite(start);
          if (end === undefined2) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          number = toNumber(number);
          return baseInRange(number, start, end);
        }
        function random(lower, upper, floating) {
          if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) {
            upper = floating = undefined2;
          }
          if (floating === undefined2) {
            if (typeof upper == "boolean") {
              floating = upper;
              upper = undefined2;
            } else if (typeof lower == "boolean") {
              floating = lower;
              lower = undefined2;
            }
          }
          if (lower === undefined2 && upper === undefined2) {
            lower = 0;
            upper = 1;
          } else {
            lower = toFinite(lower);
            if (upper === undefined2) {
              upper = lower;
              lower = 0;
            } else {
              upper = toFinite(upper);
            }
          }
          if (lower > upper) {
            var temp = lower;
            lower = upper;
            upper = temp;
          }
          if (floating || lower % 1 || upper % 1) {
            var rand = nativeRandom();
            return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
          }
          return baseRandom(lower, upper);
        }
        var camelCase2 = createCompounder(function(result2, word, index) {
          word = word.toLowerCase();
          return result2 + (index ? capitalize(word) : word);
        });
        function capitalize(string) {
          return upperFirst(toString(string).toLowerCase());
        }
        function deburr(string) {
          string = toString(string);
          return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
        }
        function endsWith(string, target, position) {
          string = toString(string);
          target = baseToString(target);
          var length = string.length;
          position = position === undefined2 ? length : baseClamp(toInteger(position), 0, length);
          var end = position;
          position -= target.length;
          return position >= 0 && string.slice(position, end) == target;
        }
        function escape(string) {
          string = toString(string);
          return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        function escapeRegExp(string) {
          string = toString(string);
          return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
        }
        var kebabCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "-" : "") + word.toLowerCase();
        });
        var lowerCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toLowerCase();
        });
        var lowerFirst = createCaseFirst("toLowerCase");
        function pad(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          if (!length || strLength >= length) {
            return string;
          }
          var mid = (length - strLength) / 2;
          return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
        }
        function padEnd(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
        }
        function padStart(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
        }
        function parseInt2(string, radix, guard) {
          if (guard || radix == null) {
            radix = 0;
          } else if (radix) {
            radix = +radix;
          }
          return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
        }
        function repeat(string, n, guard) {
          if (guard ? isIterateeCall(string, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          return baseRepeat(toString(string), n);
        }
        function replace() {
          var args = arguments, string = toString(args[0]);
          return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        var snakeCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "_" : "") + word.toLowerCase();
        });
        function split(string, separator, limit) {
          if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) {
            separator = limit = undefined2;
          }
          limit = limit === undefined2 ? MAX_ARRAY_LENGTH : limit >>> 0;
          if (!limit) {
            return [];
          }
          string = toString(string);
          if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
            separator = baseToString(separator);
            if (!separator && hasUnicode(string)) {
              return castSlice(stringToArray(string), 0, limit);
            }
          }
          return string.split(separator, limit);
        }
        var startCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + upperFirst(word);
        });
        function startsWith(string, target, position) {
          string = toString(string);
          position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
          target = baseToString(target);
          return string.slice(position, position + target.length) == target;
        }
        function template(string, options, guard) {
          var settings = lodash.templateSettings;
          if (guard && isIterateeCall(string, options, guard)) {
            options = undefined2;
          }
          string = toString(string);
          options = assignInWith({}, options, settings, customDefaultsAssignIn);
          var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
          var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
          var reDelimiters = RegExp2(
            (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
            "g"
          );
          var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
          string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
            interpolateValue || (interpolateValue = esTemplateValue);
            source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
            if (escapeValue) {
              isEscaping = true;
              source += "' +\n__e(" + escapeValue + ") +\n'";
            }
            if (evaluateValue) {
              isEvaluating = true;
              source += "';\n" + evaluateValue + ";\n__p += '";
            }
            if (interpolateValue) {
              source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
            }
            index = offset + match.length;
            return match;
          });
          source += "';\n";
          var variable = hasOwnProperty.call(options, "variable") && options.variable;
          if (!variable) {
            source = "with (obj) {\n" + source + "\n}\n";
          } else if (reForbiddenIdentifierChars.test(variable)) {
            throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
          }
          source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
          source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
          var result2 = attempt(function() {
            return Function2(importsKeys, sourceURL + "return " + source).apply(undefined2, importsValues);
          });
          result2.source = source;
          if (isError(result2)) {
            throw result2;
          }
          return result2;
        }
        function toLower(value) {
          return toString(value).toLowerCase();
        }
        function toUpper(value) {
          return toString(value).toUpperCase();
        }
        function trim(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return baseTrim(string);
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
          return castSlice(strSymbols, start, end).join("");
        }
        function trimEnd(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return string.slice(0, trimmedEndIndex(string) + 1);
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
          return castSlice(strSymbols, 0, end).join("");
        }
        function trimStart(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return string.replace(reTrimStart, "");
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
          return castSlice(strSymbols, start).join("");
        }
        function truncate(string, options) {
          var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
          if (isObject(options)) {
            var separator = "separator" in options ? options.separator : separator;
            length = "length" in options ? toInteger(options.length) : length;
            omission = "omission" in options ? baseToString(options.omission) : omission;
          }
          string = toString(string);
          var strLength = string.length;
          if (hasUnicode(string)) {
            var strSymbols = stringToArray(string);
            strLength = strSymbols.length;
          }
          if (length >= strLength) {
            return string;
          }
          var end = length - stringSize(omission);
          if (end < 1) {
            return omission;
          }
          var result2 = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
          if (separator === undefined2) {
            return result2 + omission;
          }
          if (strSymbols) {
            end += result2.length - end;
          }
          if (isRegExp(separator)) {
            if (string.slice(end).search(separator)) {
              var match, substring = result2;
              if (!separator.global) {
                separator = RegExp2(separator.source, toString(reFlags.exec(separator)) + "g");
              }
              separator.lastIndex = 0;
              while (match = separator.exec(substring)) {
                var newEnd = match.index;
              }
              result2 = result2.slice(0, newEnd === undefined2 ? end : newEnd);
            }
          } else if (string.indexOf(baseToString(separator), end) != end) {
            var index = result2.lastIndexOf(separator);
            if (index > -1) {
              result2 = result2.slice(0, index);
            }
          }
          return result2 + omission;
        }
        function unescape2(string) {
          string = toString(string);
          return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        var upperCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toUpperCase();
        });
        var upperFirst = createCaseFirst("toUpperCase");
        function words(string, pattern, guard) {
          string = toString(string);
          pattern = guard ? undefined2 : pattern;
          if (pattern === undefined2) {
            return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
          }
          return string.match(pattern) || [];
        }
        var attempt = baseRest(function(func, args) {
          try {
            return apply(func, undefined2, args);
          } catch (e) {
            return isError(e) ? e : new Error2(e);
          }
        });
        var bindAll = flatRest(function(object, methodNames) {
          arrayEach(methodNames, function(key) {
            key = toKey(key);
            baseAssignValue(object, key, bind(object[key], object));
          });
          return object;
        });
        function cond(pairs) {
          var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
          pairs = !length ? [] : arrayMap(pairs, function(pair) {
            if (typeof pair[1] != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            return [toIteratee(pair[0]), pair[1]];
          });
          return baseRest(function(args) {
            var index = -1;
            while (++index < length) {
              var pair = pairs[index];
              if (apply(pair[0], this, args)) {
                return apply(pair[1], this, args);
              }
            }
          });
        }
        function conforms(source) {
          return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
        }
        function constant(value) {
          return function() {
            return value;
          };
        }
        function defaultTo(value, defaultValue) {
          return value == null || value !== value ? defaultValue : value;
        }
        var flow = createFlow();
        var flowRight = createFlow(true);
        function identity(value) {
          return value;
        }
        function iteratee(func) {
          return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
        }
        function matches(source) {
          return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
        }
        function matchesProperty(path, srcValue) {
          return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
        }
        var method = baseRest(function(path, args) {
          return function(object) {
            return baseInvoke(object, path, args);
          };
        });
        var methodOf = baseRest(function(object, args) {
          return function(path) {
            return baseInvoke(object, path, args);
          };
        });
        function mixin(object, source, options) {
          var props = keys(source), methodNames = baseFunctions(source, props);
          if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
            options = source;
            source = object;
            object = this;
            methodNames = baseFunctions(source, keys(source));
          }
          var chain2 = !(isObject(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
          arrayEach(methodNames, function(methodName) {
            var func = source[methodName];
            object[methodName] = func;
            if (isFunc) {
              object.prototype[methodName] = function() {
                var chainAll = this.__chain__;
                if (chain2 || chainAll) {
                  var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);
                  actions.push({ "func": func, "args": arguments, "thisArg": object });
                  result2.__chain__ = chainAll;
                  return result2;
                }
                return func.apply(object, arrayPush([this.value()], arguments));
              };
            }
          });
          return object;
        }
        function noConflict() {
          if (root._ === this) {
            root._ = oldDash;
          }
          return this;
        }
        function noop() {
        }
        function nthArg(n) {
          n = toInteger(n);
          return baseRest(function(args) {
            return baseNth(args, n);
          });
        }
        var over = createOver(arrayMap);
        var overEvery = createOver(arrayEvery);
        var overSome = createOver(arraySome);
        function property(path) {
          return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }
        function propertyOf(object) {
          return function(path) {
            return object == null ? undefined2 : baseGet(object, path);
          };
        }
        var range = createRange();
        var rangeRight = createRange(true);
        function stubArray() {
          return [];
        }
        function stubFalse() {
          return false;
        }
        function stubObject() {
          return {};
        }
        function stubString() {
          return "";
        }
        function stubTrue() {
          return true;
        }
        function times(n, iteratee2) {
          n = toInteger(n);
          if (n < 1 || n > MAX_SAFE_INTEGER) {
            return [];
          }
          var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
          iteratee2 = getIteratee(iteratee2);
          n -= MAX_ARRAY_LENGTH;
          var result2 = baseTimes(length, iteratee2);
          while (++index < n) {
            iteratee2(index);
          }
          return result2;
        }
        function toPath(value) {
          if (isArray(value)) {
            return arrayMap(value, toKey);
          }
          return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
        }
        function uniqueId(prefix) {
          var id = ++idCounter;
          return toString(prefix) + id;
        }
        var add = createMathOperation(function(augend, addend) {
          return augend + addend;
        }, 0);
        var ceil = createRound("ceil");
        var divide = createMathOperation(function(dividend, divisor) {
          return dividend / divisor;
        }, 1);
        var floor = createRound("floor");
        function max(array) {
          return array && array.length ? baseExtremum(array, identity, baseGt) : undefined2;
        }
        function maxBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined2;
        }
        function mean(array) {
          return baseMean(array, identity);
        }
        function meanBy(array, iteratee2) {
          return baseMean(array, getIteratee(iteratee2, 2));
        }
        function min(array) {
          return array && array.length ? baseExtremum(array, identity, baseLt) : undefined2;
        }
        function minBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined2;
        }
        var multiply = createMathOperation(function(multiplier, multiplicand) {
          return multiplier * multiplicand;
        }, 1);
        var round = createRound("round");
        var subtract = createMathOperation(function(minuend, subtrahend) {
          return minuend - subtrahend;
        }, 0);
        function sum(array) {
          return array && array.length ? baseSum(array, identity) : 0;
        }
        function sumBy(array, iteratee2) {
          return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
        }
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce;
        lodash.defaults = defaults;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys;
        lodash.keysIn = keysIn;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize;
        lodash.merge = merge;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle;
        lodash.thru = thru;
        lodash.toArray = toArray;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        mixin(lodash, lodash);
        lodash.add = add;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase2;
        lodash.capitalize = capitalize;
        lodash.ceil = ceil;
        lodash.clamp = clamp;
        lodash.clone = clone;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq;
        lodash.escape = escape;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex;
        lodash.findKey = findKey;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn;
        lodash.head = head;
        lodash.identity = identity;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments;
        lodash.isArray = isArray;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike;
        lodash.isArrayLikeObject = isArrayLikeObject;
        lodash.isBoolean = isBoolean;
        lodash.isBuffer = isBuffer;
        lodash.isDate = isDate;
        lodash.isElement = isElement;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite2;
        lodash.isFunction = isFunction;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN2;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber;
        lodash.isObject = isObject;
        lodash.isObjectLike = isObjectLike;
        lodash.isPlainObject = isPlainObject;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString;
        lodash.isSymbol = isSymbol;
        lodash.isTypedArray = isTypedArray;
        lodash.isUndefined = isUndefined;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max;
        lodash.maxBy = maxBy;
        lodash.mean = mean;
        lodash.meanBy = meanBy;
        lodash.min = min;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray;
        lodash.stubFalse = stubFalse;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop;
        lodash.now = now;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt2;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round;
        lodash.runInContext = runInContext2;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract;
        lodash.sum = sum;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString;
        lodash.toUpper = toUpper;
        lodash.trim = trim;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape2;
        lodash.uniqueId = uniqueId;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        lodash.each = forEach;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
          var source = {};
          baseForOwn(lodash, function(func, methodName) {
            if (!hasOwnProperty.call(lodash.prototype, methodName)) {
              source[methodName] = func;
            }
          });
          return source;
        }(), { "chain": false });
        lodash.VERSION = VERSION;
        arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
          lodash[methodName].placeholder = lodash;
        });
        arrayEach(["drop", "take"], function(methodName, index) {
          LazyWrapper.prototype[methodName] = function(n) {
            n = n === undefined2 ? 1 : nativeMax(toInteger(n), 0);
            var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
            if (result2.__filtered__) {
              result2.__takeCount__ = nativeMin(n, result2.__takeCount__);
            } else {
              result2.__views__.push({
                "size": nativeMin(n, MAX_ARRAY_LENGTH),
                "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
              });
            }
            return result2;
          };
          LazyWrapper.prototype[methodName + "Right"] = function(n) {
            return this.reverse()[methodName](n).reverse();
          };
        });
        arrayEach(["filter", "map", "takeWhile"], function(methodName, index) {
          var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
          LazyWrapper.prototype[methodName] = function(iteratee2) {
            var result2 = this.clone();
            result2.__iteratees__.push({
              "iteratee": getIteratee(iteratee2, 3),
              "type": type
            });
            result2.__filtered__ = result2.__filtered__ || isFilter;
            return result2;
          };
        });
        arrayEach(["head", "last"], function(methodName, index) {
          var takeName = "take" + (index ? "Right" : "");
          LazyWrapper.prototype[methodName] = function() {
            return this[takeName](1).value()[0];
          };
        });
        arrayEach(["initial", "tail"], function(methodName, index) {
          var dropName = "drop" + (index ? "" : "Right");
          LazyWrapper.prototype[methodName] = function() {
            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
          };
        });
        LazyWrapper.prototype.compact = function() {
          return this.filter(identity);
        };
        LazyWrapper.prototype.find = function(predicate) {
          return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
          return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
          if (typeof path == "function") {
            return new LazyWrapper(this);
          }
          return this.map(function(value) {
            return baseInvoke(value, path, args);
          });
        });
        LazyWrapper.prototype.reject = function(predicate) {
          return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start, end) {
          start = toInteger(start);
          var result2 = this;
          if (result2.__filtered__ && (start > 0 || end < 0)) {
            return new LazyWrapper(result2);
          }
          if (start < 0) {
            result2 = result2.takeRight(-start);
          } else if (start) {
            result2 = result2.drop(start);
          }
          if (end !== undefined2) {
            end = toInteger(end);
            result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
          }
          return result2;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
          return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
          return this.take(MAX_ARRAY_LENGTH);
        };
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
          if (!lodashFunc) {
            return;
          }
          lodash.prototype[methodName] = function() {
            var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray(value);
            var interceptor = function(value2) {
              var result3 = lodashFunc.apply(lodash, arrayPush([value2], args));
              return isTaker && chainAll ? result3[0] : result3;
            };
            if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
              isLazy = useLazy = false;
            }
            var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
            if (!retUnwrapped && useLazy) {
              value = onlyLazy ? value : new LazyWrapper(this);
              var result2 = func.apply(value, args);
              result2.__actions__.push({ "func": thru, "args": [interceptor], "thisArg": undefined2 });
              return new LodashWrapper(result2, chainAll);
            }
            if (isUnwrapped && onlyLazy) {
              return func.apply(this, args);
            }
            result2 = this.thru(interceptor);
            return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
          };
        });
        arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
          var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
          lodash.prototype[methodName] = function() {
            var args = arguments;
            if (retUnwrapped && !this.__chain__) {
              var value = this.value();
              return func.apply(isArray(value) ? value : [], args);
            }
            return this[chainName](function(value2) {
              return func.apply(isArray(value2) ? value2 : [], args);
            });
          };
        });
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var lodashFunc = lodash[methodName];
          if (lodashFunc) {
            var key = lodashFunc.name + "";
            if (!hasOwnProperty.call(realNames, key)) {
              realNames[key] = [];
            }
            realNames[key].push({ "name": methodName, "func": lodashFunc });
          }
        });
        realNames[createHybrid(undefined2, WRAP_BIND_KEY_FLAG).name] = [{
          "name": "wrapper",
          "func": undefined2
        }];
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) {
          lodash.prototype[symIterator] = wrapperToIterator;
        }
        return lodash;
      };
      var _ = runInContext();
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        root._ = _;
        define(function() {
          return _;
        });
      } else if (freeModule) {
        (freeModule.exports = _)._ = _;
        freeExports._ = _;
      } else {
        root._ = _;
      }
    }).call(exports2);
  }
});

// out/pro/assist.js
var require_assist2 = __commonJS({
  "out/pro/assist.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    var vscode_1 = require("vscode");
    var helper_12 = require_helper();
    var lodash_1 = require_lodash8();
    var AssistPro = class {
      constructor(helper, options) {
        this.type = helper_12.FuncType.Base;
        this.select = {
          "[": { end: "]", embed: true, keyInclude: true },
          "{": { end: "}", embed: true, keyInclude: true },
          "<": { end: ">", embed: false, keyInclude: false },
          ">": { end: "<", embed: false, keyInclude: false },
          "(": { end: ")", embed: true, keyInclude: false },
          '"': { end: '"', embed: false, keyInclude: false },
          "`": { end: "`", embed: false, keyInclude: false },
          "'": { end: "'", embed: false, keyInclude: false },
          " ": { end: " ", embed: false, keyInclude: false }
        };
        this.helper = helper;
        this.options = options;
      }
      init() {
        vscode_1.commands.registerCommand("vue-helper.blockSelect", () => {
          this.blockSelect();
        });
        vscode_1.commands.registerCommand("vue-helper.funcEnhance", () => {
          this.funcEnhance();
        });
        vscode_1.commands.registerCommand("vue-helper.backspace", () => {
          this.backspace();
        });
        vscode_1.commands.registerCommand("vue-helper.autoImport", (name, relPath) => {
          let editor = vscode_1.window.activeTextEditor;
          if (!editor) {
            return;
          }
          this.autoImportComponent(editor, editor.selection.anchor.line, name, relPath);
        });
        this.helper.setContext("vue-helper.backspace", true);
      }
      autoImportComponent(editor, line, name, relPath) {
        if (editor.document.getText().includes(`import ${name}`)) {
          return;
        }
        let countLine = editor.document.lineCount;
        while (!/^\s*<script.*>\s*$/.test(editor.document.lineAt(line).text)) {
          if (countLine > line) {
            line++;
          } else {
            break;
          }
        }
        let importString = `import ${name} from '${relPath}'
`;
        if (editor.document.lineAt(line).text.includes("setup")) {
          editor.edit((editBuilder) => {
            importString = importString.replace(/\\/gi, "/");
            editBuilder.insert(new vscode_1.Position(line + 1, 0), importString);
          });
          return;
        }
        if (editor.document.lineAt(line + 1).text.includes("export default")) {
          line += 1;
        } else {
          line += 1;
          if (countLine < line) {
            return;
          }
          while (/import /gi.test(editor.document.lineAt(line).text.trim())) {
            if (countLine > line) {
              line++;
            } else {
              break;
            }
          }
        }
        let importLine = line;
        if (line < countLine) {
          let prorityInsertLine = 0;
          let secondInsertLine = 0;
          let hasComponents = false;
          let baseEmpty = "";
          while (!/\s*<\/script>\s*/gi.test(editor.document.lineAt(line).text.trim())) {
            if (/\s*components\s*:\s*{.*}.*/gi.test(editor.document.lineAt(line).text.trim())) {
              let text = editor.document.lineAt(line).text;
              let preText = text.replace(/\s*}.*$/, "");
              let insertPos = preText.length;
              editor.edit((editBuilder) => {
                importString = importString.replace(/\\/gi, "/");
                editBuilder.insert(new vscode_1.Position(importLine, 0), importString);
                editBuilder.insert(new vscode_1.Position(line, insertPos), ", " + name);
              });
              break;
            }
            if (hasComponents && /\s*},?\s*$/gi.test(editor.document.lineAt(line).text.trim())) {
              let text = editor.document.lineAt(line - 1).text;
              let insertPos = text.indexOf(text.trim());
              let empty = "";
              for (let i = 0; i < insertPos; i++) {
                empty += " ";
              }
              editor.edit((editBuilder) => {
                importString = importString.replace(/\\/gi, "/");
                editBuilder.insert(new vscode_1.Position(importLine, 0), importString);
                editBuilder.insert(new vscode_1.Position(line - 1, editor.document.lineAt(line - 1).text.length), ",\n" + empty + name);
              });
              break;
            }
            if (/\s*components\s*:\s*{\s*$/gi.test(editor.document.lineAt(line).text.trim())) {
              hasComponents = true;
            }
            if (/\s*export\s*default\s*{\s*/gi.test(editor.document.lineAt(line).text.trim())) {
              secondInsertLine = line;
            }
            if (/\s*data\s*\(\s*\)\s*{\s*/gi.test(editor.document.lineAt(line).text.trim())) {
              let text = editor.document.lineAt(line).text;
              let insertPos = text.indexOf(text.trim());
              for (let i = 0; i < insertPos; i++) {
                baseEmpty += "";
              }
              prorityInsertLine = line;
            }
            if (countLine > line) {
              line++;
            } else {
              break;
            }
          }
          if (prorityInsertLine > 0) {
            editor.edit((editBuilder) => {
              importString = importString.replace(/\\/gi, "/");
              editBuilder.insert(new vscode_1.Position(importLine - 1, 0), importString);
              editBuilder.insert(new vscode_1.Position(prorityInsertLine - 1, editor.document.lineAt(prorityInsertLine - 1).text.length), `
	${baseEmpty}components: { ${name} },`);
            });
          }
          if (secondInsertLine > 0) {
            editor.edit((editBuilder) => {
              importString = importString.replace(/\\/gi, "/");
              editBuilder.insert(new vscode_1.Position(importLine, 0), importString);
              editBuilder.insert(new vscode_1.Position(secondInsertLine, editor.document.lineAt(secondInsertLine).text.length), `
${this.helper.tabSize}components: { ${name} },`);
            });
          }
        }
      }
      asNormal(key, modifiers) {
        switch (key) {
          case "enter":
            if (modifiers === "ctrl") {
              return vscode_1.commands.executeCommand("editor.action.insertLineAfter");
            } else {
              return vscode_1.commands.executeCommand("type", { source: "keyboard", text: "\n" });
            }
          case "tab":
            if (vscode_1.workspace.getConfiguration("emmet").get("triggerExpansionOnTab")) {
              return vscode_1.commands.executeCommand("editor.emmet.action.expandAbbreviation");
            } else if (modifiers === "shift") {
              return vscode_1.commands.executeCommand("editor.action.outdentLines");
            } else {
              return vscode_1.commands.executeCommand("tab");
            }
          case "backspace":
            return vscode_1.commands.executeCommand("deleteLeft");
        }
      }
      // 回退删除处理
      backspace() {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b, _c, _d, _e, _f, _g;
          let editor = vscode_1.window.activeTextEditor;
          if (!editor) {
            this.asNormal("backspace");
            return;
          }
          if (((_a = vscode_1.window.activeTextEditor) === null || _a === void 0 ? void 0 : _a.selections.length) && ((_b = vscode_1.window.activeTextEditor) === null || _b === void 0 ? void 0 : _b.selections.length) > 1) {
            let selections = (_c = vscode_1.window.activeTextEditor) === null || _c === void 0 ? void 0 : _c.selections;
            let selectionList = [];
            for (let index = 0; index < selections.length; index++) {
              const selection = selections[index];
              if (selection.start.line === selection.end.line && selection.start.character === selection.end.character) {
                if (selection.anchor.character > 0) {
                  selectionList.push(new vscode_1.Selection(new vscode_1.Position(selection.anchor.line, selection.anchor.character - 1), selection.anchor));
                } else if (selection.anchor.line > 0) {
                  let len = editor.document.lineAt(selection.anchor.line - 1).text.length;
                  selectionList.push(new vscode_1.Selection(new vscode_1.Position(selection.anchor.line - 1, len), selection.anchor));
                }
              } else {
                selectionList.push(selection);
              }
            }
            yield editor.edit((editBuilder) => {
              for (let i = 0; i < selectionList.length; i++) {
                editBuilder.delete(selectionList[i]);
              }
            });
            return;
          }
          if (((_d = vscode_1.window.activeTextEditor) === null || _d === void 0 ? void 0 : _d.selection.start.line) === ((_e = vscode_1.window.activeTextEditor) === null || _e === void 0 ? void 0 : _e.selection.end.line) && ((_f = vscode_1.window.activeTextEditor) === null || _f === void 0 ? void 0 : _f.selection.start.character) === ((_g = vscode_1.window.activeTextEditor) === null || _g === void 0 ? void 0 : _g.selection.end.character)) {
            if (editor.selection.anchor.line === 0) {
              if (editor.selection.anchor.character > 0) {
                yield editor.edit((editBuilder) => {
                  editBuilder.delete(new vscode_1.Selection(new vscode_1.Position(editor.selection.anchor.line, editor.selection.anchor.character - 1), editor.selection.anchor));
                });
              }
            } else {
              let isLineEmpty = editor.document.lineAt(editor.selection.anchor.line).text.trim() === "";
              if (isLineEmpty) {
                let preText = "";
                let line = editor.selection.anchor.line;
                while (preText.trim() === "" && line >= 0) {
                  line -= 1;
                  preText = editor.document.lineAt(line).text;
                }
                yield editor.edit((editBuilder) => {
                  editBuilder.delete(new vscode_1.Selection(new vscode_1.Position(line, preText.length), editor.selection.anchor));
                });
              } else {
                let startPosition;
                let endPosition = editor.selection.anchor;
                let preLineText = editor.document.getText(new vscode_1.Range(new vscode_1.Position(endPosition.line, 0), endPosition));
                if (endPosition.character === 0 || preLineText.trim() === "") {
                  startPosition = new vscode_1.Position(endPosition.line - 1, editor.document.lineAt(endPosition.line - 1).text.length);
                } else {
                  startPosition = new vscode_1.Position(endPosition.line, endPosition.character - 1);
                  let txt = editor.document.getText(new vscode_1.Range(new vscode_1.Position(endPosition.line, endPosition.character - 1), endPosition));
                  if (editor.document.lineAt(endPosition.line).text.length > endPosition.character) {
                    let nextTxt = editor.document.getText(new vscode_1.Range(endPosition, new vscode_1.Position(endPosition.line, endPosition.character + 1)));
                    if (txt === "{" && nextTxt === "}" || txt === "(" && nextTxt === ")" || txt === "'" && nextTxt === "'" || txt === '"' && nextTxt === '"' || txt === "[" && nextTxt === "]" || txt === "<" && nextTxt === ">") {
                      endPosition = new vscode_1.Position(endPosition.line, endPosition.character + 1);
                    }
                  }
                }
                yield editor.edit((editBuilder) => {
                  editBuilder.delete(new vscode_1.Selection(startPosition, endPosition));
                });
              }
            }
          } else {
            this.asNormal("backspace");
          }
        });
      }
      jumpAndGenerateVar(word) {
        var _a, _b, _c;
        if (((_a = vscode_1.window.activeTextEditor) === null || _a === void 0 ? void 0 : _a.document) && ((_b = vscode_1.window.activeTextEditor) === null || _b === void 0 ? void 0 : _b.selection.anchor.line)) {
          let words = word.split(".");
          let lineCount = vscode_1.window.activeTextEditor.document.lineCount;
          let currentLine = (_c = vscode_1.window.activeTextEditor) === null || _c === void 0 ? void 0 : _c.selection.anchor.line;
          let variable = words[words.length - 1];
          let parentVariable = word.substring(0, word.length - variable.length - 1);
          let parentLine = 0;
          let isVue2 = false;
          let hasExist = false;
          let braceLeftCount = 0;
          let tagLeft = "{";
          let tagRight = "}";
          let wordReg = variable + ":";
          let hasRefImport = false;
          let refImportLine = 0;
          let refImportCharacter = 0;
          let refInsertText = "import { ref } from 'vue'\n";
          let refExtraLine = 1;
          let braceLeftCountSetup = 0;
          let isSetup = false;
          let parentCharacter = 0;
          if (parentVariable) {
            let parentVariableReg = new RegExp(`\\s*[var|let|const]\\s*${parentVariable}\\s*=`, "gi");
            while (currentLine < lineCount) {
              let text = vscode_1.window.activeTextEditor.document.lineAt(currentLine).text;
              if (parentVariableReg.test(text)) {
                parentLine = currentLine;
                if (/{\s*}/.test(text)) {
                  parentCharacter = text.indexOf("{");
                }
                braceLeftCount = 0;
              }
              if (text.includes(wordReg) && braceLeftCount === 1) {
                hasExist = true;
              }
              if (/\s*data\s*\(\s*\)\s*{\s*/gi.test(text)) {
                let nextText = vscode_1.window.activeTextEditor.document.lineAt(currentLine + 1).text;
                if (text.includes("return") || nextText.includes("return")) {
                  isVue2 = true;
                  parentVariableReg = new RegExp(`\\s*${parentVariable}\\s*:\\s*{\\s*`, "gi");
                  ++currentLine;
                  continue;
                }
              }
              if (text.includes(`'vue'`) || text.includes(`"vue"`) || text.includes(`vue.`)) {
                if (new RegExp(`{.*ref.*}`, "gi").test(text)) {
                  hasRefImport = true;
                } else {
                  refImportCharacter = text.replace(/\s*}.*/gi, "").length;
                  refInsertText = `, ref`;
                  refImportLine = currentLine - 1;
                  refExtraLine = 0;
                }
              }
              if (isVue2) {
                let pos = 0;
                while ((text.indexOf(tagLeft, pos) !== -1 || text.indexOf(tagRight, pos) !== -1) && pos < text.length) {
                  let i = -1;
                  if (text.indexOf(tagLeft, pos) !== -1) {
                    i = text.indexOf(tagLeft, pos);
                  }
                  if (text.indexOf(tagRight, pos) !== -1) {
                    if (i === -1 || i > text.indexOf(tagRight, pos)) {
                      --braceLeftCount;
                      pos = text.indexOf(tagRight, pos) + 1;
                    } else {
                      ++braceLeftCount;
                      pos = i + 1;
                    }
                  } else {
                    if (i !== -1) {
                      ++braceLeftCount;
                      pos = i + 1;
                    }
                  }
                  if (braceLeftCount === 0) {
                    break;
                  }
                }
                if (braceLeftCount === 0) {
                  break;
                }
              }
              if (/\s*setup\s*\([\w\s_,{}:]*\)\s*{/gi.test(text)) {
                isSetup = true;
                braceLeftCountSetup = 1;
                ++currentLine;
                continue;
              }
              if (isSetup) {
                let leftBrace = text.match(/{/gi);
                if (leftBrace) {
                  braceLeftCountSetup += leftBrace.length;
                }
                let rightBrace = text.match(/}/gi);
                if (rightBrace) {
                  braceLeftCountSetup -= rightBrace.length;
                }
                if (braceLeftCountSetup === 2 && /return\s*{/gi.test(text)) {
                  break;
                }
                if (braceLeftCountSetup <= 0) {
                  break;
                }
              }
              if (/^\s*<\/script>\s*$/g.test(text)) {
                break;
              }
              ++currentLine;
            }
          } else {
            while (currentLine < lineCount) {
              let text = vscode_1.window.activeTextEditor.document.lineAt(currentLine).text;
              if (/^\s*<script.*>\s*$/g.test(text)) {
                refImportLine = currentLine;
              }
              if (text.includes(wordReg) && braceLeftCount === 1) {
                hasExist = true;
              }
              if (/\s*data\s*\(\s*\)\s*{\s*/gi.test(text)) {
                let nextText = vscode_1.window.activeTextEditor.document.lineAt(currentLine + 1).text;
                if (text.includes("return") || nextText.includes("return")) {
                  isVue2 = true;
                  ++currentLine;
                  continue;
                }
              }
              if (text.includes(`'vue'`) || text.includes(`"vue"`) || text.includes(`vue.`)) {
                if (new RegExp(`{.*ref.*}`, "gi").test(text)) {
                  hasRefImport = true;
                } else {
                  refImportCharacter = text.replace(/\s*}.*/gi, "").length;
                  refInsertText = `, ref`;
                  refImportLine = currentLine - 1;
                  refExtraLine = 0;
                }
              }
              if (isVue2) {
                let pos = 0;
                while ((text.indexOf(tagLeft, pos) !== -1 || text.indexOf(tagRight, pos) !== -1) && pos < text.length) {
                  let i = -1;
                  if (text.indexOf(tagLeft, pos) !== -1) {
                    i = text.indexOf(tagLeft, pos);
                  }
                  if (text.indexOf(tagRight, pos) !== -1) {
                    if (i === -1 || i > text.indexOf(tagRight, pos)) {
                      --braceLeftCount;
                      pos = text.indexOf(tagRight, pos) + 1;
                    } else {
                      ++braceLeftCount;
                      pos = i + 1;
                    }
                  } else {
                    if (i !== -1) {
                      ++braceLeftCount;
                      pos = i + 1;
                    }
                  }
                  if (braceLeftCount === 0) {
                    break;
                  }
                }
                if (braceLeftCount === 0) {
                  break;
                }
              }
              if (/\s*setup\s*\([\w\s_,{}:]*\)\s*{/gi.test(text)) {
                isSetup = true;
                braceLeftCountSetup = 1;
                ++currentLine;
                continue;
              }
              if (isSetup) {
                let leftBrace = text.match(/{/gi);
                if (leftBrace) {
                  braceLeftCountSetup += leftBrace.length;
                }
                let rightBrace = text.match(/}/gi);
                if (rightBrace) {
                  braceLeftCountSetup -= rightBrace.length;
                }
                if (braceLeftCountSetup === 2 && /return\s*{/gi.test(text)) {
                  break;
                }
                if (braceLeftCountSetup <= 0) {
                  break;
                }
              }
              if (/^\s*<\/script>\s*$/g.test(text)) {
                break;
              }
              ++currentLine;
            }
          }
          if (currentLine < lineCount) {
            if (isVue2) {
              let prevText = vscode_1.window.activeTextEditor.document.lineAt(currentLine - 1).text;
              let commaText = "";
              let editor = vscode_1.window.activeTextEditor;
              let prevTextTrim = prevText.trim();
              let prevEmptyLength = prevText.indexOf(prevTextTrim);
              let emptyText = "";
              if (prevTextTrim.includes("return")) {
                emptyText = this.helper.tabSize;
              } else if (!prevTextTrim.includes("return") && !prevTextTrim.includes(",")) {
                commaText = ",";
              }
              for (let i = 0; i < prevEmptyLength; i++) {
                emptyText += " ";
              }
              if (hasExist) {
                let jumpCol = prevEmptyLength + emptyText.length + variable.length + 2;
                editor.revealRange(new vscode_1.Range(new vscode_1.Position(currentLine - 1, jumpCol), new vscode_1.Position(currentLine - 1, jumpCol)), vscode_1.TextEditorRevealType.Default);
                editor.selection = new vscode_1.Selection(new vscode_1.Position(currentLine - 1, jumpCol), new vscode_1.Position(currentLine - 1, jumpCol));
              } else {
                editor.edit((editBuilder) => {
                  editBuilder.insert(new vscode_1.Position(currentLine - 1, prevEmptyLength + prevTextTrim.length), `${commaText}
${emptyText}${variable}: `);
                }).then(() => {
                  let jumpCol = prevEmptyLength + emptyText.length + variable.length + 2;
                  editor.revealRange(new vscode_1.Range(new vscode_1.Position(currentLine, jumpCol), new vscode_1.Position(currentLine, jumpCol)), vscode_1.TextEditorRevealType.Default);
                  editor.selection = new vscode_1.Selection(new vscode_1.Position(currentLine, jumpCol), new vscode_1.Position(currentLine, jumpCol));
                });
              }
            } else {
              let editor = vscode_1.window.activeTextEditor;
              let insertLineHasParent = parentLine + 1;
              let space = "";
              editor.edit((editBuilder) => {
                if (isSetup) {
                  space = this.helper.tabSize + this.helper.tabSize;
                }
                if (parentLine > 0) {
                  if (parentCharacter > 0) {
                    editBuilder.insert(new vscode_1.Position(insertLineHasParent - 1, parentCharacter + 1), `
${space}  ${variable}: '',
${space}`);
                  } else {
                    editBuilder.insert(new vscode_1.Position(insertLineHasParent, 0), `${space}  ${variable}: '',
`);
                  }
                } else {
                  editBuilder.insert(new vscode_1.Position(currentLine, 0), `${space}const ${variable} = ref()
`);
                }
                console.log(hasRefImport, refImportLine);
                if (!hasRefImport) {
                  editBuilder.insert(new vscode_1.Position(refImportLine + 1, refImportCharacter), refInsertText);
                  currentLine += refExtraLine;
                }
              }).then(() => {
                if (parentLine > 0) {
                  if (isSetup) {
                    insertLineHasParent += 1;
                  }
                  let jumpCol = 5 + variable.length + space.length;
                  editor.revealRange(new vscode_1.Range(new vscode_1.Position(insertLineHasParent, jumpCol), new vscode_1.Position(insertLineHasParent, jumpCol)), vscode_1.TextEditorRevealType.Default);
                  editor.selection = new vscode_1.Selection(new vscode_1.Position(insertLineHasParent, jumpCol), new vscode_1.Position(insertLineHasParent, jumpCol));
                } else {
                  let jumpCol = 13 + variable.length + space.length;
                  editor.revealRange(new vscode_1.Range(new vscode_1.Position(currentLine, jumpCol), new vscode_1.Position(currentLine, jumpCol)), vscode_1.TextEditorRevealType.Default);
                  editor.selection = new vscode_1.Selection(new vscode_1.Position(currentLine, jumpCol), new vscode_1.Position(currentLine, jumpCol));
                }
              });
            }
          }
        }
      }
      jumpAndGenerateMtd(word) {
        var _a, _b, _c;
        if (((_a = vscode_1.window.activeTextEditor) === null || _a === void 0 ? void 0 : _a.document) && ((_b = vscode_1.window.activeTextEditor) === null || _b === void 0 ? void 0 : _b.selection.anchor.line)) {
          let lineCount = vscode_1.window.activeTextEditor.document.lineCount;
          let currentLine = (_c = vscode_1.window.activeTextEditor) === null || _c === void 0 ? void 0 : _c.selection.anchor.line;
          let isJs = false;
          let isInMethods = false;
          let funcName = word.replace(/\(.*/gi, "");
          let funcPosition = {
            line: 0,
            character: 0
          };
          let braceLeftCount = 0;
          let isSetup = false;
          let selectionLineText = vscode_1.window.activeTextEditor.document.lineAt(currentLine).text;
          if (/^\s*(function)?\s*\w*\s*\(.*\)\s*{\s*$/gi.test(selectionLineText)) {
            return;
          }
          while (currentLine < lineCount) {
            let text = vscode_1.window.activeTextEditor.document.lineAt(currentLine).text;
            if (/^\s*<\/script>\s*$/g.test(text)) {
              break;
            }
            if (!isJs) {
              if (/^\s*<script.*>\s*$/g.test(text)) {
                isJs = true;
              }
              ++currentLine;
              continue;
            }
            if (/\s*setup\s*\([\w\s_,{}:]*\)\s*{/gi.test(text)) {
              isSetup = true;
              braceLeftCount = 1;
              ++currentLine;
              continue;
            }
            if (isSetup) {
              let leftBrace = text.match(/{/gi);
              if (leftBrace) {
                braceLeftCount += leftBrace.length;
              }
              let rightBrace = text.match(/}/gi);
              if (rightBrace) {
                braceLeftCount -= rightBrace.length;
              }
              if (braceLeftCount === 2 && /return\s*{/gi.test(text)) {
                break;
              }
              if (braceLeftCount <= 0) {
                break;
              }
            }
            if (text.includes(funcName) && this.helper.isMethodExist(funcName, text)) {
              funcPosition.line = currentLine;
              funcPosition.character = this.helper.getLineCharacter(text, true);
            }
            if (!isInMethods) {
              if (/\s*methods\s*:\s*{\s*/gi.test(text)) {
                isInMethods = true;
              }
              ++currentLine;
              continue;
            }
            if (text.includes("...")) {
              ++currentLine;
              continue;
            }
            ++currentLine;
            break;
          }
          if (currentLine < lineCount) {
            word = word.replace(/\(\s?\w*\./gi, "(").replace(/\s+\w*\./gi, " ");
            let editor = vscode_1.window.activeTextEditor;
            if (!isInMethods) {
              currentLine += 1;
            }
            if (funcPosition.line > 0) {
              return this.helper.jumpToLocation(editor, new vscode_1.Position(funcPosition.line, funcPosition.character));
            }
            editor.edit((editBuilder) => {
              let space = this.helper.tabSize;
              let spaceFunc = "";
              let funcMark = "function ";
              let comma = "";
              if (isInMethods) {
                spaceFunc = space + space;
                comma = ",";
                funcMark = "";
                space = spaceFunc + space;
              }
              if (isSetup) {
                spaceFunc = space + space;
                space = spaceFunc + space;
              }
              editBuilder.insert(new vscode_1.Position(currentLine - 1, 0), `${spaceFunc}${funcMark}${word.includes("(") ? word + " {" : word + "() {"}
${space}
${spaceFunc}}${comma}
`);
            }).then(() => {
              this.helper.jumpToLocation(editor, new vscode_1.Position(currentLine - 1, isInMethods ? 4 : 0));
            });
          }
        }
      }
      autoEnhance() {
        let editor = vscode_1.window.activeTextEditor;
        if (!editor) {
          return;
        }
        let txt = editor.document.lineAt(editor.selection.anchor.line).text;
        if (editor.document.lineCount <= editor.selection.anchor.line + 1) {
          return;
        }
        let nextLineTxt = editor.document.lineAt(editor.selection.anchor.line + 1).text;
        let baseEmpty = txt.replace(/(\s)\S.*/gi, "$1");
        let replaceTxt = ` {
${baseEmpty}${this.helper.tabSize}
${baseEmpty}}`;
        if (/^\s*$/gi.test(txt) || txt === "") {
          replaceTxt = "name (params)" + replaceTxt;
        } else if (/[0-9a-zA-Z]\s{0,1}:\s{0,1}[\w\"\']/gi.test(txt)) {
          replaceTxt = ",\n" + baseEmpty;
        } else if (txt.indexOf(")") === -1) {
          replaceTxt = " (params)" + replaceTxt;
        }
        if (/\s*\/\/\s+.*/gi.test(nextLineTxt)) {
          if (editor.document.lineCount <= editor.selection.anchor.line + 2) {
            return;
          }
          nextLineTxt = editor.document.lineAt(editor.selection.anchor.line + 2).text;
        }
        if (/.*(.*).*{.*/gi.test(nextLineTxt)) {
          let isCond = false;
          let txtTrim = txt.trim();
          const condList = ["if", "for", "while", "switch"];
          condList.forEach((cond) => {
            if (txtTrim.indexOf(cond) === 0) {
              isCond = true;
            }
          });
          if (!isCond) {
            replaceTxt += ",";
          }
        }
        if (txt.includes("function")) {
          return;
        }
        editor.edit((editBuilder) => {
          editBuilder.insert(new vscode_1.Position(editor.selection.anchor.line, txt.length + 1), replaceTxt);
        });
        let newPosition = editor.selection.active.translate(1, (baseEmpty + this.helper.tabSize).length);
        editor.selection = new vscode_1.Selection(newPosition, newPosition);
      }
      // 函数增强
      funcEnhance() {
        var _a, _b, _c, _d;
        let editor = vscode_1.window.activeTextEditor;
        if (!editor) {
          return;
        }
        let character = (((_a = vscode_1.window.activeTextEditor) === null || _a === void 0 ? void 0 : _a.selection.anchor.character) || 0) - 1;
        let txt = (_b = vscode_1.window.activeTextEditor) === null || _b === void 0 ? void 0 : _b.document.lineAt((_c = vscode_1.window.activeTextEditor) === null || _c === void 0 ? void 0 : _c.selection.anchor.line).text;
        let word = "";
        let isWordEnd = false;
        let type = "";
        if (txt && txt.includes('"')) {
          type = "0";
        }
        while (txt && character && character > 0) {
          let wordSingle = txt[character];
          if (wordSingle === '"') {
            type = "0";
            isWordEnd = true;
          }
          if (wordSingle === " ") {
            break;
          }
          if (!isWordEnd) {
            word = wordSingle + word;
          }
          if (wordSingle === "@") {
            type = "1";
          }
          --character;
        }
        character = ((_d = vscode_1.window.activeTextEditor) === null || _d === void 0 ? void 0 : _d.selection.anchor.character) || 0;
        while (txt && character && txt.length > character) {
          if (txt[character] === '"') {
            break;
          }
          word = word + txt[character];
          ++character;
        }
        if (word.includes(")")) {
          type = "1";
        }
        switch (type) {
          case "0":
            this.jumpAndGenerateVar(word);
            break;
          case "1":
            this.jumpAndGenerateMtd(word);
            break;
          default:
            this.autoEnhance();
            break;
        }
      }
      TagSelect(positionStart, editor) {
        const stack = [];
        const tagName = "[a-zA-Z_][\\w\\-\\.]*";
        const tagReg = new RegExp(`(<${tagName}|<\\/${tagName}[^>]*>|\\s?\\/>|<>|</>)`, "gi");
        const lineCount = editor.document.lineCount;
        let lineCurrent = positionStart.line;
        let endCharacter = positionStart.character;
        while (lineCurrent < lineCount) {
          let lineText = lineCurrent > positionStart.line ? editor.document.lineAt(lineCurrent).text : editor.document.lineAt(lineCurrent).text.substring(positionStart.character);
          const tags = lineText.match(tagReg);
          if (tags) {
            for (let i = 0; i < tags.length; i++) {
              const tag = tags[i];
              if (new RegExp("<[a-zA-Z_]*" + tag + ">", "gi").test(lineText)) {
                break;
              }
              if (tag.includes("/")) {
                if (tag === " />" || tag === " />" || tag === "</>") {
                  stack.pop();
                } else {
                  let isMatch = false;
                  while (!isMatch) {
                    if (stack.length > 0) {
                      const stackTag = stack.pop();
                      const correspondsTag = "<" + tag.replace(/<|\/|>/gi, "");
                      if (stackTag === correspondsTag) {
                        isMatch = true;
                      }
                    } else {
                      isMatch = true;
                    }
                  }
                }
                if (stack.length === 0) {
                  let index = -1;
                  let effectiveTag = "";
                  for (let j = 0; j <= i; j++) {
                    effectiveTag = tags[j];
                    index = lineText.indexOf(effectiveTag, index + 1);
                  }
                  endCharacter = index + effectiveTag.length;
                  if (lineCurrent === positionStart.line) {
                    endCharacter += positionStart.character;
                  }
                  break;
                }
              } else {
                stack.push(tag);
              }
            }
          }
          if (stack.length === 0) {
            editor.selection = new vscode_1.Selection(new vscode_1.Position(positionStart.line, positionStart.character + positionStart.characterOffset), new vscode_1.Position(lineCurrent, endCharacter));
            break;
          }
          lineCurrent++;
        }
      }
      // 代码块选择
      blockSelect() {
        let editor = vscode_1.window.activeTextEditor;
        let selectPositionStart = editor.selection.start;
        let line = editor.document.lineAt(selectPositionStart.line);
        let lineText = line.text;
        if (lineText.trim()[0] === "<") {
          const noEmptyCharacter = lineText.indexOf(lineText.trim());
          if (noEmptyCharacter >= selectPositionStart.character) {
            return this.TagSelect({
              line: selectPositionStart.line,
              character: noEmptyCharacter,
              characterOffset: 0
            }, editor);
          }
        }
        let leftCharacter = "";
        let startKey = "";
        let selectCond = null;
        let positionStart = {
          line: line.lineNumber,
          character: 0,
          characterOffset: 0
        };
        let opt = "";
        const startKeyList = Object.keys(this.select);
        const attrText = lineText.substring(0, selectPositionStart.character).replace(/.*\s/gi, "") + lineText.substring(selectPositionStart.character);
        let i = selectPositionStart.character;
        for (; i >= 0; i--) {
          leftCharacter = lineText[i];
          if (startKeyList.includes(leftCharacter)) {
            startKey = leftCharacter;
            positionStart.character = i;
            if (startKey === " " && i === selectPositionStart.character && i > 0) {
              let preKey = lineText[i - 1];
              if (startKeyList.includes(preKey)) {
                startKey = preKey;
                positionStart.character -= 1;
              }
            }
            break;
          }
        }
        if (i < 0) {
          i = 0;
        }
        if (startKey) {
          if (startKey === "<") {
            return this.TagSelect(positionStart, editor);
          }
          selectCond = this.select[startKey];
        } else {
          opt = "line";
        }
        let diffCount = 1;
        if (!lineText.substring(0, i).trim() && (startKey === " " || !startKey)) {
          const lineTrimText = lineText.trim();
          let lineEndCharacter = lineTrimText[lineTrimText.length - 1];
          diffCount = 0;
          if (["[", "{", "("].includes(lineEndCharacter)) {
            positionStart.character = lineText.indexOf(lineTrimText);
            if (positionStart.character < 0) {
              positionStart.character = 0;
            }
            if (/{\s*\(.*\)\s*=>\s*{/gi.test(lineText)) {
              diffCount = 2;
            } else if (/=\s*(async)?\s*\(\s*.*\s*=>\s*{/gi.test(lineText)) {
              lineEndCharacter = "{";
              diffCount = 1;
              lineText = lineText.replace(/{/gi, " ").replace(/}/gi, " ");
            } else if (/\(\s*.*\s*=>\s*{/gi.test(lineText)) {
              lineEndCharacter = "(";
            } else if (/\(\s*\(.*\)\s*=>\s*{/gi.test(lineText)) {
              lineEndCharacter = "(";
            } else if (/[\[|{|\(]\s*[\[|{|\(]\s*$/gi.test(lineText)) {
              const lineTextExtra = lineTrimText.substring(0, lineTrimText.length - 1).trim();
              lineEndCharacter = lineTextExtra[lineTextExtra.length - 1];
            }
            startKey = lineEndCharacter;
            selectCond = (0, lodash_1.cloneDeep)(this.select[startKey]);
            if (lineEndCharacter === "(") {
              selectCond.keyInclude = true;
            }
            opt = "";
          } else {
            opt = "line";
          }
        }
        let lineCount = editor.document.lineCount;
        let lineCurrent = selectPositionStart.line;
        let lineCharacter = positionStart.character + 1;
        let endCharacter = lineCharacter;
        if (opt === "line") {
          endCharacter = lineText.length;
          const attrMatch2 = attrText.match(/[\w-.:]*="[^"]*"/gi);
          if (startKey === " " && attrMatch2) {
            endCharacter = positionStart.character + attrMatch2[0].length + 1;
          }
          return editor.selection = new vscode_1.Selection(new vscode_1.Position(positionStart.line, lineText.indexOf(lineText.trim())), new vscode_1.Position(positionStart.line, endCharacter));
        }
        if (!opt && startKey !== ">" && /^[^=]*={/gi.test(attrText)) {
          startKey = "{";
          selectCond = (0, lodash_1.cloneDeep)(this.select[startKey]);
          diffCount = 0;
          positionStart.characterOffset = 1;
          if (!/^[^=]*={/gi.test(line.text.substring(selectPositionStart.character, line.text.length))) {
            selectCond.keyInclude = false;
            diffCount = 1;
            positionStart.characterOffset = 0;
          }
        }
        if (!(selectCond === null || selectCond === void 0 ? void 0 : selectCond.keyInclude)) {
          let trimLineText = lineText.substring(positionStart.character + selectCond.end.length).trim();
          while (!trimLineText && lineCurrent <= lineCount - 2) {
            ++lineCurrent;
            lineText = editor.document.lineAt(lineCurrent).text;
            trimLineText = lineText.trim();
          }
          positionStart.line = lineCurrent;
          positionStart.character = lineText.indexOf(trimLineText) - 1;
          lineCharacter = positionStart.character + 1;
        }
        while (lineCurrent <= lineCount - 2) {
          if (selectCond === null || selectCond === void 0 ? void 0 : selectCond.embed) {
            while (lineCharacter < lineText.length) {
              let startKeyCharacter = lineText.indexOf(startKey, lineCharacter);
              let endKeyCharacter = lineText.indexOf(selectCond.end, lineCharacter);
              if (startKeyCharacter > endKeyCharacter) {
                if (endKeyCharacter === -1) {
                  diffCount++;
                  lineCharacter = startKeyCharacter + 1;
                } else {
                  diffCount--;
                  lineCharacter = endKeyCharacter + 1;
                }
              } else if (startKeyCharacter < endKeyCharacter) {
                if (startKeyCharacter === -1) {
                  diffCount--;
                  lineCharacter = endKeyCharacter + 1;
                } else {
                  diffCount++;
                  lineCharacter = startKeyCharacter + 1;
                }
              } else {
                break;
              }
              if (diffCount <= 0) {
                break;
              }
            }
          } else {
            let endKeyCharacter = lineText.indexOf(selectCond.end, lineCharacter);
            if (endKeyCharacter !== -1) {
              lineCharacter = endKeyCharacter + 1;
              diffCount = 0;
            }
          }
          endCharacter = lineCharacter;
          lineCharacter = 0;
          if (diffCount <= 0) {
            break;
          }
          ++lineCurrent;
          lineText = editor.document.lineAt(lineCurrent).text;
        }
        if (!(selectCond === null || selectCond === void 0 ? void 0 : selectCond.keyInclude)) {
          positionStart.character += startKey.length;
          endCharacter -= selectCond.end.length;
        }
        let endLineText = lineText.substring(0, endCharacter);
        if (!endLineText.trim() && lineCurrent > positionStart.line) {
          lineCurrent -= 1;
          endCharacter = editor.document.lineAt(lineCurrent).text.length;
        }
        const attrMatch = attrText.match(/[\w-.:]*="[^"]*"/gi);
        if (startKey === " " && attrMatch) {
          endCharacter = positionStart.character + attrMatch[0].length;
        }
        editor.selection = new vscode_1.Selection(new vscode_1.Position(positionStart.line, positionStart.character + positionStart.characterOffset), new vscode_1.Position(lineCurrent, endCharacter));
      }
    };
    exports2.default = AssistPro;
  }
});

// out/pro/form.js
var require_form = __commonJS({
  "out/pro/form.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    var vscode_1 = require("vscode");
    var helper_12 = require_helper();
    var webviewMgn_1 = require_webviewMgn();
    var Form = class {
      constructor(helper, options) {
        this.type = helper_12.FuncType.Pro;
        this.framework = "element-plus";
        this.helper = helper;
        this.options = options;
      }
      init() {
        this.framework = this.helper.formFramework;
        vscode_1.commands.registerCommand("vue-helper.form", (uri) => {
          var _a;
          this.activePosition = (_a = vscode_1.window.activeTextEditor) === null || _a === void 0 ? void 0 : _a.selection.active;
          this.textEditor = vscode_1.window.activeTextEditor;
          this.uri = uri;
          this.helper.getPlugin(webviewMgn_1.WebviewMgn).openView({
            title: "\u751F\u6210",
            page: "editor",
            token: helper_12.default.user.token,
            framework: this.framework,
            messageHandler: (message) => {
              switch (message.command) {
                case "formAdd":
                  this.writeTemplate(message.template);
                  break;
                default:
                  break;
              }
            }
          });
        });
      }
      delayWrite(textEditor, formTemplate) {
        let lineCount = textEditor.document.lineCount;
        let scriptPosition = {
          line: -1,
          character: 0,
          prefix: "\n"
        };
        let scriptEndPosition = {
          line: -1,
          character: 0,
          prefix: "\n"
        };
        let exportEndPosition = {
          line: -1,
          character: 0,
          prefix: ""
        };
        let htmlPosition = {
          line: this.activePosition ? this.activePosition.line : -1,
          character: this.activePosition ? this.activePosition.character : -1,
          prefix: "",
          template: ""
        };
        let dataPosition = {
          line: -1,
          character: 0,
          prefix: "",
          template: ""
        };
        let methodPosition = {
          line: -1,
          character: 0,
          prefix: "",
          template: ""
        };
        let htmlEmpty = "";
        for (let i = 0; i < htmlPosition.character; i++) {
          htmlEmpty += " ";
        }
        htmlPosition.prefix = htmlEmpty;
        if (this.framework === "element-ui") {
          let isDataBegin = false;
          let bracketDiff = 0;
          let bracketPosition = {
            line: -1,
            character: 0,
            prefix: "",
            text: "\n"
          };
          for (let i = 0; i < lineCount; i++) {
            let lineText = textEditor.document.lineAt(i).text;
            if (/^\s*<script.*>\s*$/g.test(lineText)) {
              scriptPosition.line = i;
            }
            if (bracketDiff > 0) {
              bracketDiff += lineText.replace(/}/gi, "").length - lineText.replace(/{/gi, "").length;
              let lineTextTrim = lineText.trim();
              if (bracketDiff === 1 && lineTextTrim) {
                bracketPosition.line = i;
                let exportCharcter = lineText.indexOf(lineTextTrim);
                for (let i2 = 0; i2 < exportCharcter; i2++) {
                  bracketPosition.prefix += " ";
                }
                bracketPosition.prefix + this.helper.tabSize;
                bracketPosition.character = exportCharcter + lineTextTrim.length;
                if (!lineText.includes(",")) {
                  bracketPosition.text = ",\n";
                }
              } else if (bracketDiff === 0) {
                exportEndPosition.line = i;
                let exportCharcter = lineText.indexOf(lineText.trim());
                for (let i2 = 0; i2 < exportCharcter; i2++) {
                  exportEndPosition.prefix += " ";
                }
                exportEndPosition.prefix += this.helper.tabSize;
                exportEndPosition.character = exportCharcter;
              }
            }
            if (/\s*export\s*default\s*{\s*/gi.test(lineText)) {
              bracketDiff = 1;
            }
            if (/\s*methods\s*:\s*{\s*/gi.test(lineText)) {
              let methodCharacter = lineText.indexOf("methods");
              for (let i2 = 0; i2 < methodCharacter; i2++) {
                methodPosition.prefix += " ";
              }
              methodPosition.prefix += this.helper.tabSize;
              methodPosition.line = i;
              methodPosition.character = methodCharacter + lineText.trim().length;
            }
            if (isDataBegin) {
              if (lineText.trim()) {
                if (lineText.includes("return")) {
                  let returnCharacter = lineText.indexOf("return");
                  for (let i2 = 0; i2 < returnCharacter; i2++) {
                    dataPosition.prefix += " ";
                  }
                  dataPosition.prefix += this.helper.tabSize;
                  dataPosition.line = i;
                  dataPosition.character = returnCharacter;
                }
                isDataBegin = false;
              }
            }
            if (/\s*data\s*\(\s*\)\s*{\s*/gi.test(lineText)) {
              isDataBegin = true;
            }
          }
          if (dataPosition.line === -1) {
            dataPosition.template = `data () {
  return {
    ${dataPosition.prefix + formTemplate.js.replace(/\n/gi, "\n" + exportEndPosition.prefix + this.helper.tabSize + this.helper.tabSize).trim()}
  }
},
`;
          } else {
            dataPosition.template = dataPosition.prefix + formTemplate.js.replace(/\n/gi, "\n" + dataPosition.prefix).trim() + "\n";
          }
          if (methodPosition.line === -1) {
            methodPosition.prefix += this.helper.tabSize + this.helper.tabSize;
            methodPosition.template = `methods: {
${methodPosition.prefix + (formTemplate.method || "").replace(/\n/gi, "\n" + methodPosition.prefix).trim()}
},
`;
          } else {
            methodPosition.template = methodPosition.prefix + (formTemplate.method || "").replace(/\n/gi, "\n" + methodPosition.prefix).trim();
          }
          textEditor.edit((editBuilder) => {
            if (htmlPosition.line > 0) {
              editBuilder.insert(new vscode_1.Position(htmlPosition.line, htmlPosition.character), formTemplate.html.replace(/\n/gi, "\n" + htmlPosition.prefix));
            }
            if (dataPosition.line === -1) {
              if (bracketPosition.line > 0) {
                editBuilder.insert(new vscode_1.Position(bracketPosition.line, bracketPosition.character), bracketPosition.text + bracketPosition.prefix + dataPosition.template);
              } else if (exportEndPosition.line > 0) {
                editBuilder.insert(new vscode_1.Position(exportEndPosition.line - 1, exportEndPosition.character), exportEndPosition.prefix + dataPosition.template);
              }
            } else {
              editBuilder.insert(new vscode_1.Position(dataPosition.line + 1, 0), dataPosition.template);
            }
            if (methodPosition.line === -1) {
              if (bracketPosition.line > 0) {
                editBuilder.insert(new vscode_1.Position(bracketPosition.line, bracketPosition.character), bracketPosition.text + bracketPosition.prefix + methodPosition.template);
              } else if (exportEndPosition.line > 0) {
                editBuilder.insert(new vscode_1.Position(exportEndPosition.line, exportEndPosition.character), exportEndPosition.prefix + methodPosition.template);
              }
            } else {
              editBuilder.insert(new vscode_1.Position(methodPosition.line, methodPosition.character), "\n" + methodPosition.template);
            }
          });
        } else if (this.framework === "element-plus") {
          let importString = "";
          let docText = textEditor.document.getText();
          if (!/import\s*{.*\s*ref\s*.*}/.test(docText)) {
            importString += "import { ref } from 'vue'\n";
          }
          if (!/import\s*type\s*{.*\s*FormInstance\s*.*}/.test(docText)) {
            importString += "import type { FormInstance } from 'element-plus'\n";
          }
          for (let i = 0; i < lineCount; i++) {
            let lineText = textEditor.document.lineAt(i).text;
            if (/^\s*<\/script>\s*$/g.test(lineText)) {
              scriptEndPosition.line = i;
            }
            if (/^\s*<script.*>\s*$/g.test(lineText)) {
              scriptPosition.line = i;
              scriptPosition.character = this.helper.getLineCharacter(lineText);
            }
          }
          textEditor.edit((editBuilder) => {
            if (htmlPosition.line > 0) {
              editBuilder.insert(new vscode_1.Position(htmlPosition.line, htmlPosition.character), formTemplate.html.replace(/\n/gi, "\n" + htmlPosition.prefix));
            }
            if (scriptPosition.line > -1 && importString) {
              editBuilder.insert(new vscode_1.Position(scriptPosition.line, scriptPosition.character), scriptPosition.prefix + importString);
            }
            if (scriptEndPosition.line > -1) {
              editBuilder.insert(new vscode_1.Position(scriptEndPosition.line, scriptEndPosition.character), scriptEndPosition.prefix + formTemplate.js + "\n");
            }
          });
        } else if (this.framework === "ant-design-vue") {
          let importString = "import { reactive, ref, toRaw } from 'vue'\n";
          let docText = textEditor.document.getText();
          if (!/import\s*type\s*{.*\s*Rule\s*.*}/.test(docText)) {
            importString += "import type { Rule } from 'ant-design-vue/es/form'";
          }
          for (let i = 0; i < lineCount; i++) {
            let lineText = textEditor.document.lineAt(i).text;
            if (/^\s*<\/script>\s*$/g.test(lineText)) {
              scriptEndPosition.line = i;
            }
            if (/^\s*<script.*>\s*$/g.test(lineText)) {
              scriptPosition.line = i;
              scriptPosition.character = this.helper.getLineCharacter(lineText);
            }
          }
          textEditor.edit((editBuilder) => {
            if (htmlPosition.line > 0) {
              editBuilder.insert(new vscode_1.Position(htmlPosition.line, htmlPosition.character), formTemplate.html.replace(/\n/gi, "\n" + htmlPosition.prefix));
            }
            if (scriptPosition.line > -1 && importString) {
              editBuilder.insert(new vscode_1.Position(scriptPosition.line, scriptPosition.character), scriptPosition.prefix + importString);
            }
            if (scriptEndPosition.line > -1) {
              editBuilder.insert(new vscode_1.Position(scriptEndPosition.line, scriptEndPosition.character), scriptEndPosition.prefix + formTemplate.js + "\n");
            }
          });
        }
      }
      writeTemplate(formTemplate) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a;
          if (this.activePosition && this.textEditor) {
            this.helper.getPlugin(webviewMgn_1.WebviewMgn).close();
            setTimeout(() => {
              if (vscode_1.window.activeTextEditor) {
                this.delayWrite(vscode_1.window.activeTextEditor, formTemplate);
              } else {
                setTimeout(() => {
                  if (vscode_1.window.activeTextEditor) {
                    this.delayWrite(vscode_1.window.activeTextEditor, formTemplate);
                  }
                }, 300);
              }
            }, 200);
          } else if ((_a = this.uri) === null || _a === void 0 ? void 0 : _a.path.includes(".")) {
          } else {
          }
        });
      }
    };
    exports2.default = Form;
  }
});

// out/base/framework.js
var require_framework2 = __commonJS({
  "out/base/framework.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.vueHelperDefinitionProvider = void 0;
    var vscode_1 = require("vscode");
    var fs = require("fs");
    var path = require("path");
    var snippets_html_1 = require_snippets_html();
    var snippets_js_1 = require_snippets_js();
    var glob = require_commonjs5();
    var camelcase_1 = (init_camelcase(), __toCommonJS(camelcase_exports));
    var element_plus_1 = require_element_plus();
    var ant_design_vue_1 = require_ant_design_vue();
    var element_ui_1 = require_element_ui();
    var helper_12 = require_helper();
    var beautify = require_js();
    var frameInherit = {
      "element-plus": element_plus_1.default,
      "ant-design-vue": ant_design_vue_1.default,
      "element-ui": element_ui_1.default
    };
    var frameworksCompletionItem = [];
    var FrameworkProvider = class {
      constructor(helper, options) {
        this.frameworks = [];
        this.type = helper_12.FuncType.Pro;
        this.helper = helper;
        this.options = options;
      }
      init() {
        this.frameworks = this.helper.frameworks;
        vscode_1.languages.registerCompletionItemProvider(["vue", "javascript", "typescript", "html", "wxml"], new FrameworkCompletionItemProvider(this), "", ":", "<", '"', "'", "@", "(", ">", "{");
        vscode_1.languages.registerHoverProvider(["vue", "wxml"], new FrameworkHoverProvider(this));
        vscode_1.languages.registerDefinitionProvider(["vue", "javascript", "typescript", "html", "wxml"], new vueHelperDefinitionProvider(this));
        vscode_1.commands.registerCommand("vue-helper.private.completion", (params) => {
          this.privateComponentInsert(params.comp);
        });
      }
      privateComponentInsert(comp) {
        return __awaiter(this, void 0, void 0, function* () {
          let activeTextEditor = vscode_1.window.activeTextEditor;
          if (!activeTextEditor) {
            return;
          }
          let isRepeat = false;
          let posterName = "";
          let activeEditorDoc = activeTextEditor.document.getText();
          if (comp.script) {
            if (activeEditorDoc.includes("// " + comp.name)) {
              isRepeat = true;
              posterName = yield vscode_1.window.showInputBox({
                placeHolder: "\u8BF7\u8F93\u5165\u540E\u7F00\uFF0C\u907F\u514D\u91CD\u590D"
              });
            }
          }
          let importCode = "";
          let scriptCode = "";
          if (comp.script) {
            let importText = "";
            let isImportEnd = false;
            const scriptList = comp.script.split("\n");
            for (let i = 0; i < scriptList.length; i++) {
              const item = scriptList[i];
              if (isImportEnd) {
                scriptCode += item + "\n";
              } else {
                if (item.trim()) {
                  importText += item;
                  if (importText.includes("import")) {
                    importCode += item + "\n";
                    if (/.*import\s.*\sfrom\s.*/gi.test(importText)) {
                      importText = "";
                    }
                  } else {
                    scriptCode += item + "\n";
                    isImportEnd = true;
                  }
                } else if (isImportEnd) {
                  scriptCode += item + "\n";
                }
              }
            }
          }
          let position = {
            jsImport: 0,
            js: 0,
            css: 0
          };
          let lineCount = activeTextEditor.document.lineCount;
          let current = 0;
          while (current < lineCount) {
            let lineText = activeTextEditor.document.lineAt(current);
            if (/^\s*<script.*>\s*$/.test(lineText.text)) {
              position.jsImport = current;
            }
            if (/^\s*<\/script.*>\s*$/.test(lineText.text)) {
              position.js = current;
            }
            if (/^\s*<\/style.*>\s*$/.test(lineText.text)) {
              position.css = current;
            }
            current++;
          }
          activeTextEditor.edit((editBuilder) => {
            if (activeTextEditor === null || activeTextEditor === void 0 ? void 0 : activeTextEditor.selection.active) {
              if (!isRepeat && importCode && position.jsImport > 0) {
                editBuilder.insert(new vscode_1.Position(position.jsImport + 1, 0), importCode.replace(/\$\$/gi, posterName || ""));
              }
              if (scriptCode && position.js > 0) {
                if (isRepeat) {
                  editBuilder.insert(new vscode_1.Position(position.js, 0), scriptCode.replace(/\$\$/gi, posterName || ""));
                } else {
                  editBuilder.insert(new vscode_1.Position(position.js, 0), (`// ${comp.name}
` + scriptCode).replace(/\$\$/gi, posterName || ""));
                }
              }
              if (!isRepeat && comp.style && position.css > 0) {
                editBuilder.insert(new vscode_1.Position(position.css, 0), (comp.style + "\n").replace(/\$\$/gi, posterName || ""));
              }
            }
          });
          let destRootPath = activeTextEditor.document.uri.path;
          if (!isRepeat && comp.fileList && comp.fileList.length > 0) {
            comp.fileList.forEach((fileItem) => {
              let destPath = path.join(destRootPath, "..", fileItem.name);
              try {
                fs.writeFileSync(this.helper.pathCompliantWin(destPath), fs.readFileSync(this.helper.pathCompliantWin(fileItem.url)));
              } catch (error) {
              }
            });
          }
        });
      }
    };
    exports2.default = FrameworkProvider;
    var FrameworkCompletionItemProvider = class {
      constructor(frameworkProvider) {
        this.attribute = {};
        this.jsTag = {};
        this.tag = {};
        this.name = "FrameworkCompletionItemProvider";
        this.globalAttribute = {};
        this.tagReg = /<([\w-]+)\s+/g;
        this.attrReg = /(?:\(|\s*)((\w(-)?)*)=['"][^'"]*/;
        this.triggerKeys = [];
        this.privateComponentList = [];
        this.frameworkProvider = frameworkProvider;
        this.init();
      }
      // 框架处理
      initFramework() {
        let adoptFramework = [];
        this.frameworkProvider.helper.frameworks.forEach((framework) => {
          let installMatch = false;
          let intalllMatchFramework = null;
          let inheritMatch = false;
          let inheritMatchFramework = null;
          this.frameworkProvider.helper.frameworkIntalled.forEach((intallFramework) => {
            if (framework.name === intallFramework.name) {
              if (!installMatch) {
                if (framework.version === intallFramework.version) {
                  installMatch = true;
                  intalllMatchFramework = intallFramework;
                } else if (intalllMatchFramework) {
                  if (Math.abs(parseInt(framework.version) - parseInt(intalllMatchFramework.version)) > Math.abs(parseInt(framework.version) - parseInt(intallFramework.version))) {
                    intalllMatchFramework = intallFramework;
                  }
                } else if (!intalllMatchFramework) {
                  intalllMatchFramework = intallFramework;
                }
              }
            }
          });
          this.frameworkProvider.helper.frameworkInherit.forEach((inheritFramework) => {
            if (framework.name === inheritFramework.name) {
              if (!inheritMatch) {
                if (framework.version === inheritFramework.version) {
                  inheritMatch = true;
                  inheritMatchFramework = inheritFramework;
                } else if (inheritMatchFramework) {
                  if (Math.abs(parseInt(framework.version) - parseInt(inheritMatchFramework.version)) > Math.abs(parseInt(framework.version) - parseInt(inheritFramework.version))) {
                    inheritMatchFramework = inheritFramework;
                  }
                } else if (!inheritMatchFramework) {
                  inheritMatchFramework = inheritFramework;
                }
              }
            }
          });
          if (installMatch) {
            adoptFramework.push({
              name: intalllMatchFramework.name,
              version: intalllMatchFramework.version,
              source: "install",
              trigger: intalllMatchFramework.trigger,
              key: intalllMatchFramework.key
            });
          } else if (inheritMatch) {
            adoptFramework.push({
              name: inheritMatchFramework.name,
              version: inheritMatchFramework.version,
              source: "inherit",
              trigger: inheritMatchFramework.trigger,
              key: inheritMatchFramework.name + inheritMatchFramework.version
            });
          } else if (intalllMatchFramework) {
            adoptFramework.push({
              name: intalllMatchFramework.name,
              version: intalllMatchFramework.version,
              source: "install",
              trigger: intalllMatchFramework.trigger,
              key: intalllMatchFramework.key
            });
          } else if (inheritMatchFramework) {
            adoptFramework.push({
              name: inheritMatchFramework.name,
              version: inheritMatchFramework.version,
              source: "inherit",
              trigger: inheritMatchFramework.trigger,
              key: inheritMatchFramework.name + inheritMatchFramework.version
            });
          }
        });
        try {
          frameworksCompletionItem = [];
          let frameworkNames = [];
          adoptFramework.forEach((framework) => {
            if (!frameworkNames.includes(framework.name)) {
              frameworkNames.push(framework.name);
              this.triggerKeys.push(framework.trigger);
              if (framework.source === "install") {
                const componentDir = this.frameworkProvider.helper.config.get("component-dir");
                if (componentDir) {
                  const installFrameworkPath = path.join(componentDir, "framework/" + framework.key + ".json");
                  if (fs.existsSync(installFrameworkPath)) {
                    let installFramework = fs.readFileSync(installFrameworkPath, "utf-8");
                    if (installFramework) {
                      let installFrameworkJson = JSON.parse(installFramework);
                      installFrameworkJson.trigger = framework.trigger;
                      frameworksCompletionItem.push(installFrameworkJson);
                    }
                  }
                }
              } else {
                if (frameInherit[framework.name]) {
                  let inheritFramework = frameInherit[framework.name];
                  inheritFramework.trigger = framework.trigger;
                  frameworksCompletionItem.push(inheritFramework);
                }
              }
            }
          });
        } catch (error) {
        }
      }
      initPrivateComponent() {
        try {
          const componentDir = this.frameworkProvider.helper.config.get("component-dir");
          if (componentDir) {
            const componentPath = path.join(componentDir, "codeBlock.json");
            if (fs.existsSync(componentPath)) {
              let vueLanguages = ["common"];
              this.frameworkProvider.helper.vueVersion === "3" ? vueLanguages.push("vue3") : vueLanguages.push("vue2");
              let component = fs.readFileSync(componentPath, "utf-8");
              let frameworkList = this.frameworkProvider.helper.frameworks.map((framework) => {
                return framework.name;
              });
              if (component) {
                let componentJson = JSON.parse(component);
                for (const key in componentJson) {
                  const item = componentJson[key];
                  if (vueLanguages.includes(item.language)) {
                    if (!item.framework || frameworkList.includes(item.framework)) {
                      this.privateComponentList.push(item);
                    }
                  }
                }
              }
            }
          }
        } catch (error) {
        }
      }
      init() {
        frameworksCompletionItem = [];
        this.triggerKeys.push("e");
        let inheritFramework = frameInherit["element-ui"];
        inheritFramework.trigger = "e";
        frameworksCompletionItem.push(inheritFramework);
      }
      refresh() {
        this.init();
      }
      isCloseTag(document2, position) {
        let txt = document2.getText(new vscode_1.Range(new vscode_1.Position(position.line, 0), position)).trim();
        const word = txt.replace(/<[^<]*$/gi, "");
        if (word) {
          return false;
        }
        if (!txt.endsWith(">") || /.*=("[^"]*>|'[^']*>)$/gi.test(txt) || txt.endsWith("/>")) {
          return false;
        }
        let txtArr = txt.match(/<([\w-]+)(\s*|(\s+[\w-_:@\.]+(=("[^"]*"|'[^']*'))?)+)\s*>/gim);
        if (Array.isArray(txtArr) && txtArr.length > 0) {
          let txtStr = txtArr[txtArr.length - 1];
          return /<([\w-]+)(\s*|(\s+[\w-_:@\.]+(=("[^"]*"|'[^']*'))?)+)\s*>$/gi.test(txtStr);
        }
        return false;
      }
      // 自动补全关闭标签
      getCloseTagSuggestion(document2, position) {
        let txtInfo = document2.lineAt(position.line);
        let txtArr = txtInfo.text.match(/<([\w-]+)(\s*|(\s+[\w-_:@\.]+(=("[^"]*"|'[^']*'))?)+)\s*>/gim);
        let tag = "div";
        if (txtArr) {
          tag = txtArr[txtArr.length - 1].replace(/<([\w-]+)(\s*|(\s+[\w-_:@\.]+(=("[^"]*"|'[^']*'))?)+)\s*>/gim, "$1");
        }
        const closeTag = "</" + tag;
        if (txtInfo.text.includes(closeTag)) {
          return;
        }
        let exclude = ["br", "img"];
        if (exclude.indexOf(tag) === -1 && vscode_1.window.activeTextEditor) {
          vscode_1.window.activeTextEditor.edit((editBuilder) => {
            editBuilder.insert(position, "</" + tag + ">");
          });
          let newPosition = vscode_1.window.activeTextEditor.selection.active.translate(0, 0);
          if (newPosition) {
            vscode_1.window.activeTextEditor.selection = new vscode_1.Selection(newPosition, newPosition);
          }
        }
      }
      // 获取本行位置前的文本
      getTextBeforePosition(position, document2) {
        var start = new vscode_1.Position(position.line, 0);
        var range = new vscode_1.Range(start, position);
        return document2.getText(range);
      }
      // 匹配标签
      matchTag(reg, txt, line, document2, position) {
        let match;
        let arr = [];
        if (/<\/?[-\w]+[^<>]*>[\s\w]*<?\s*[\w-]*$/.test(txt) || position.line === line && (/^\s*[^<]+\s*>[^<\/>]*$/.test(txt) || /[^<>]*<$/.test(txt[txt.length - 1]))) {
          return "break";
        }
        while (match = reg.exec(txt)) {
          arr.push({
            text: match[1],
            offset: document2.offsetAt(new vscode_1.Position(line, match.index))
          });
        }
        return arr.pop();
      }
      getPreTag(document2, position) {
        let line = position.line;
        let tag;
        let txt = this.getTextBeforePosition(position, document2);
        while (position.line - line < 10 && line >= 0) {
          if (line !== position.line) {
            txt = document2.lineAt(line).text;
          }
          tag = this.matchTag(this.tagReg, txt, line, document2, position);
          if (tag === "break") {
            return;
          }
          if (tag) {
            return tag;
          }
          line--;
        }
        return;
      }
      // 获取预览属性
      getPreAttr(document2, position) {
        let txt = this.getTextBeforePosition(position, document2).replace(/"[^'"]*(\s*)[^'"]*$/, "");
        let end = position.character;
        let start = txt.lastIndexOf(" ", end) + 1;
        let parsedTxt = document2.getText(new vscode_1.Range(position.line, start, position.line, end));
        return this.matchAttr(this.attrReg, parsedTxt);
      }
      // 匹配属性
      matchAttr(reg, txt) {
        let match;
        match = reg.exec(txt);
        return !/"[^"]*"/.test(txt) && match && match[1];
      }
      // 属性值开始
      isAttrValueStart(tag, attr) {
        return tag && attr;
      }
      // 属性值建议值
      getFrameworkAttrValueSuggestion(tag, attr) {
        let suggestions = [];
        try {
          frameworksCompletionItem.forEach((framework) => {
            if (framework.template) {
              if (framework.template[tag] && framework.template[tag][attr]) {
                const attrItem = framework.template[tag][attr];
                if (attrItem.values) {
                  attrItem.values.forEach((val) => {
                    suggestions.push({
                      label: val,
                      sortText: `\x000${val}`,
                      insertText: val,
                      kind: vscode_1.CompletionItemKind.Property,
                      detail: this.frameworkProvider.helper.name
                    });
                  });
                }
              }
            }
          });
        } catch (_error) {
        }
        return suggestions;
      }
      // 属性建议值
      getAttrSuggestion(tag) {
        let suggestions = [];
        try {
          frameworksCompletionItem.forEach((framework) => {
            if (framework.template) {
              if (framework.template[tag]) {
                const tagItem = framework.template[tag];
                for (const attrKey in tagItem) {
                  const attrItem = tagItem[attrKey];
                  if (attrKey[0] !== "_") {
                    if (attrItem.type === "attr") {
                      suggestions.push({
                        label: attrKey,
                        sortText: `\x000${attrKey}`,
                        insertText: new vscode_1.SnippetString(`${attrKey}="$1"`),
                        kind: vscode_1.CompletionItemKind.Property,
                        detail: this.frameworkProvider.helper.name,
                        documentation: attrItem.description
                      });
                    } else {
                      suggestions.push({
                        label: attrKey,
                        sortText: `\x000${attrKey}`,
                        insertText: new vscode_1.SnippetString(`${attrKey}="$1"`),
                        kind: vscode_1.CompletionItemKind.Event,
                        detail: this.frameworkProvider.helper.name,
                        documentation: attrItem.description
                      });
                    }
                  }
                }
              }
            }
          });
        } catch (_error) {
        }
        return suggestions;
      }
      buildAttrSuggestion(attr) {
        const completionItem = new vscode_1.CompletionItem(attr.name);
        completionItem.sortText = `000${attr.name}`;
        completionItem.insertText = attr.name;
        completionItem.kind = attr.type === "method" ? vscode_1.CompletionItemKind.Method : vscode_1.CompletionItemKind.Property;
        completionItem.detail = this.frameworkProvider.helper.name;
        completionItem.documentation = vscode_1.l10n.t(attr.description);
        return completionItem;
      }
      // 获取props属性值
      getPropAttr(document2, tagName) {
        let documentText = document2.getText();
        let tagNameUpper = tagName.replace(/(-[a-z])/g, (_, c) => {
          return c ? c.toUpperCase() : "";
        }).replace(/-/gi, "");
        let pathReg = RegExp("import\\s+(" + tagName + "|" + tagNameUpper + `)\\s+from\\s+['"]([^'"]*)`, "g");
        let pathRegArr = documentText.match(pathReg);
        if (pathRegArr && pathRegArr.length > 0) {
          let tagPath = pathRegArr[0];
          tagPath = tagPath.replace(/(.*['"])/, "");
          tagPath = tagPath.replace(this.frameworkProvider.helper.prefix.alias, this.frameworkProvider.helper.prefix.path);
          if (!tagPath.endsWith(".vue")) {
            tagPath += ".vue";
          }
          if (tagPath.indexOf("./") > 0 || tagPath.indexOf("../") > 0) {
            tagPath = path.join(document2.fileName, "../", tagPath);
          } else {
            tagPath = path.join(vscode_1.workspace.rootPath || "", tagPath);
          }
          documentText = fs.readFileSync(tagPath, "utf8");
        } else {
          return;
        }
        let props = [];
        let scriptIndex = documentText.indexOf("<script");
        if (scriptIndex) {
          let docText = documentText.substr(scriptIndex, documentText.length);
          let propIndex = docText.indexOf("props");
          let propStack = 0;
          if (propIndex) {
            docText = docText.substr(propIndex, docText.length);
            let braceBeforeIndex = docText.indexOf("{");
            let braceAfterIndex = 0;
            if (braceBeforeIndex) {
              ++propStack;
              docText = docText.substr(braceBeforeIndex + 1, docText.length);
            }
            let propText = "";
            while (propStack > 0 && docText.length > 0) {
              braceBeforeIndex = docText.indexOf("{");
              braceAfterIndex = docText.indexOf("}");
              if (braceBeforeIndex === -1) {
                docText = "";
              } else if (braceBeforeIndex < braceAfterIndex) {
                if (propStack === 1) {
                  propText += docText.substr(0, braceBeforeIndex);
                }
                ++propStack;
                docText = docText.substr(braceBeforeIndex > 0 ? braceBeforeIndex + 1 : 1, docText.length);
              } else {
                --propStack;
                docText = docText.substr(braceAfterIndex > 0 ? braceAfterIndex + 1 : 1, docText.length);
              }
            }
            let propMatch = propText.match(/\s[\w-]*:/gi);
            if (propMatch && propMatch.length > 0) {
              propMatch.forEach((propItem, propIndex2) => {
                propItem = propItem.substr(1, propItem.length - 2);
                propItem = propItem.replace(/([A-Z])/g, (_, c) => {
                  return c ? "-" + c.toLowerCase() : "";
                });
                props.push({
                  label: propItem,
                  sortText: "0" + propIndex2,
                  insertText: new vscode_1.SnippetString(`:${propItem}="$0"`),
                  kind: vscode_1.CompletionItemKind.Property,
                  documentation: ""
                });
              });
            }
          }
        }
        let emitReg = documentText.match(/\$emit\(\s?['"](\w*)/g);
        if (emitReg && emitReg.length > 0) {
          for (let i = 0; i < emitReg.length; i++) {
            let emitName = emitReg[i];
            emitName = emitName.replace(/(.*['"])/, "");
            props.push({
              label: emitName,
              sortText: "0" + (props.length + 1),
              insertText: new vscode_1.SnippetString(`@${emitName}="$0"`),
              kind: vscode_1.CompletionItemKind.Method,
              documentation: ""
            });
          }
        }
        return props;
      }
      // 判断是否是导入
      isImport(document2, position) {
        let lineTxt = document2.lineAt(position.line).text.trim();
        return /^\s*import.*/.test(lineTxt);
      }
      // 导入建议
      importSuggestion(document2, position) {
        let search = document2.lineAt(position.line).text.trim();
        search = search.replace(/^import/, "").trim();
        let suggestions = [];
        if (search) {
          let files = this.frameworkProvider.helper.traverse.search("", search, false);
          files.forEach((vf) => {
            let filePath = "";
            if (this.frameworkProvider.helper.prefix.alias) {
              filePath = vf.path;
            } else {
              filePath = this.frameworkProvider.helper.getRelativePath(document2.uri.path, path.join(this.frameworkProvider.helper.projectPath, vf.path));
            }
            let camelName = vf.name;
            let insertPath = filePath;
            if (filePath.endsWith(".ts")) {
              insertPath = filePath.substring(0, filePath.length - 3);
            }
            suggestions.push({
              label: vf.name,
              sortText: `0${vf.name}`,
              insertText: new vscode_1.SnippetString(`\${1:${camelName}} from '${insertPath}'`),
              kind: vscode_1.CompletionItemKind.Reference,
              detail: vf.name,
              documentation: `import ${camelName} from ${filePath}`
            });
          });
        }
        return suggestions;
      }
      // vue文件只在template里面提示，已script作为标记
      notInTemplate(document2, position) {
        let line = position.line;
        while (line) {
          if (/^\s*<script.*>\s*$/.test(document2.lineAt(line).text)) {
            return true;
          }
          line--;
        }
        return false;
      }
      // 编译建议标签
      buildTagSuggestion(tag, tagVal, id) {
        return {
          label: tag,
          sortText: `00${id}${tag}`,
          insertText: new vscode_1.SnippetString(tagVal),
          kind: vscode_1.CompletionItemKind.Snippet,
          detail: this.frameworkProvider.helper.name,
          documentation: ""
        };
      }
      // 框架tag
      getFrameworkTagJsSuggestion(triggerKey) {
        let suggestions = [];
        try {
          frameworksCompletionItem.forEach((framework) => {
            if (framework.trigger === triggerKey) {
              if (framework.script) {
                for (const tag in framework.script) {
                  const tagItem = framework.script[tag];
                  if (tagItem && tagItem._html) {
                    for (const tagExtra in tagItem._html) {
                      const item = tagItem._html[tagExtra];
                      let key = tag + tagExtra;
                      suggestions.push({
                        label: key,
                        sortText: `\x000${key}`,
                        insertText: new vscode_1.SnippetString(beautify.js(item, {
                          index_size: this.frameworkProvider.helper.tabSize
                        })),
                        kind: vscode_1.CompletionItemKind.Snippet,
                        detail: this.frameworkProvider.helper.name,
                        documentation: item
                      });
                    }
                  }
                }
              }
            }
          });
        } catch (_error) {
        }
        return suggestions;
      }
      // 获取js代码提示
      getTagJsSuggestion() {
        let suggestions = [];
        let id = 1;
        const useVueSnippets = this.frameworkProvider.helper.config.get("use-vue-snippets");
        if (useVueSnippets) {
          const snippetsJs = (0, snippets_js_1.default)(this.frameworkProvider.helper.tabSize);
          for (const key in snippetsJs) {
            const snippet = snippetsJs[key];
            suggestions.push({
              label: key,
              sortText: `0${id}${key}`,
              insertText: new vscode_1.SnippetString(snippet),
              kind: vscode_1.CompletionItemKind.Snippet,
              detail: this.frameworkProvider.helper.name
            });
            id++;
          }
        }
        try {
          for (let tag in this.jsTag) {
            const tagItem = this.jsTag[tag];
            suggestions.push({
              label: tag,
              sortText: `00${id}${tag}`,
              insertText: new vscode_1.SnippetString(tagItem),
              kind: vscode_1.CompletionItemKind.Snippet,
              detail: this.frameworkProvider.helper.name,
              documentation: tagItem
            });
            id++;
          }
        } catch (_error) {
        }
        return suggestions;
      }
      // 添加工程内vue组件提示
      addLocalComponentSuggestions() {
        let suggestions = [];
        if (vscode_1.window.activeTextEditor) {
          let activeEditorPath = this.frameworkProvider.helper.getActiveEditorDir(vscode_1.window.activeTextEditor.document.uri.path);
          for (let i = 0; i < this.frameworkProvider.helper.vueFiles.length; i++) {
            const vf = this.frameworkProvider.helper.vueFiles[i];
            let relPath = this.frameworkProvider.helper.getVueRelativePath(activeEditorPath, vf.path);
            let importName = vf.name.includes("-") ? (0, camelcase_1.default)(vf.name, { pascalCase: true }) : vf.name;
            suggestions.push({
              label: vf.name,
              sortText: `0${i}${vf.name}`,
              insertText: new vscode_1.SnippetString(`${vf.name}$0></${vf.name}>`),
              kind: vscode_1.CompletionItemKind.Module,
              detail: this.frameworkProvider.helper.name,
              documentation: `import ${importName} from '${this.frameworkProvider.helper.getVueRelativePath(activeEditorPath, vf.path)}'`,
              command: {
                command: `vue-helper.autoImport`,
                title: `vue-helper.autoImport`,
                arguments: [importName, relPath]
              }
            });
          }
        }
        return suggestions;
      }
      // 框架template标签
      getFrameworkTagSuggestion(triggerKey) {
        let suggestions = [];
        try {
          frameworksCompletionItem.forEach((framework) => {
            if (framework.trigger === triggerKey) {
              if (framework.template) {
                for (const tag in framework.template) {
                  const tagItem = framework.template[tag];
                  if (tagItem && tagItem._html) {
                    for (const tagExtra in tagItem._html) {
                      const item = tagItem._html[tagExtra];
                      let key = tag + tagExtra;
                      suggestions.push({
                        label: key,
                        sortText: `\x000${key}`,
                        insertText: new vscode_1.SnippetString(beautify.html(item, {
                          index_size: this.frameworkProvider.helper.tabSize
                        })),
                        kind: vscode_1.CompletionItemKind.Snippet,
                        detail: this.frameworkProvider.helper.name,
                        documentation: item
                      });
                    }
                  }
                }
              }
            }
          });
        } catch (_error) {
        }
        return suggestions;
      }
      // 标签提示项
      getTagSuggestion() {
        let suggestions = this.addLocalComponentSuggestions();
        let id = 1;
        const useVueSnippets = this.frameworkProvider.helper.config.get("use-vue-snippets");
        if (useVueSnippets) {
          const snippetsHtml = (0, snippets_html_1.default)(this.frameworkProvider.helper.tabSize);
          for (const key in snippetsHtml) {
            const snippet = snippetsHtml[key];
            suggestions.push({
              label: key,
              sortText: `0${id}${key}`,
              insertText: new vscode_1.SnippetString(snippet),
              kind: vscode_1.CompletionItemKind.Snippet,
              detail: this.frameworkProvider.helper.name
            });
            id++;
          }
        }
        try {
          for (let tag in this.tag) {
            suggestions.push(this.buildTagSuggestion(tag, this.tag[tag], id));
            id++;
          }
        } catch (_error) {
        }
        return suggestions;
      }
      getElementTagLabelSuggestion() {
        let suggestions = this.addLocalComponentSuggestions();
        let id = 1;
        try {
          let labels = [];
          for (let tag in this.attribute) {
            let label = tag.replace(/:.*/gi, "");
            if (!labels.includes(label)) {
              labels.push(label);
              suggestions.push({
                label,
                sortText: `00${id}${label}`,
                insertText: new vscode_1.SnippetString(`${label}$0></${label}>`),
                kind: vscode_1.CompletionItemKind.Snippet,
                detail: this.frameworkProvider.helper.name
              });
              id++;
            }
          }
        } catch (_error) {
        }
        return suggestions;
      }
      getPrivateComponentSuggestion() {
        let suggestions = [];
        this.privateComponentList.forEach((comp) => {
          suggestions.push({
            label: "m" + comp.name,
            sortText: "\x000" + comp.name,
            insertText: new vscode_1.SnippetString(comp.template),
            kind: vscode_1.CompletionItemKind.Snippet,
            documentation: comp.remark,
            command: {
              command: "vue-helper.private.completion",
              title: "completions",
              arguments: [
                {
                  comp
                }
              ]
            }
          });
        });
        return suggestions;
      }
      provideCompletionItems(document2, position, _token, _context) {
        if (this.isCloseTag(document2, position)) {
          if (!this.notInTemplate(document2, position)) {
            this.getCloseTagSuggestion(document2, position);
          }
          return [];
        }
        let tag = this.getPreTag(document2, position);
        let attr = this.getPreAttr(document2, position);
        let word = this.frameworkProvider.helper.getCurrentWord(document2, position);
        let hasSquareQuote = document2.lineAt(position.line).text.includes("<");
        let firstKey = "";
        if (word) {
          firstKey = word[0];
        }
        if (tag && attr && this.isAttrValueStart(tag, attr)) {
          let atttValSuggestions = this.getFrameworkAttrValueSuggestion(tag.text, attr);
          return atttValSuggestions;
        } else if (tag) {
          let attrRet = [];
          attrRet = this.getAttrSuggestion(tag.text);
          return attrRet;
        } else if (this.isImport(document2, position)) {
          return this.importSuggestion(document2, position);
        } else if (firstKey === "m") {
          return this.getPrivateComponentSuggestion();
        } else if (this.triggerKeys.includes(firstKey)) {
          return this.notInTemplate(document2, position) ? this.getFrameworkTagJsSuggestion(firstKey) : this.getFrameworkTagSuggestion(firstKey);
        } else if (word.includes("v")) {
          return this.notInTemplate(document2, position) ? this.getTagJsSuggestion() : this.getTagSuggestion();
        } else if (!tag && hasSquareQuote) {
          return this.notInTemplate(document2, position) ? [] : this.getElementTagLabelSuggestion();
        }
        return [];
      }
    };
    var FrameworkHoverProvider = class {
      constructor(frameworkProvider) {
        this.frameworkProvider = frameworkProvider;
      }
      // 获取属性所属标签
      getTag(document2, position) {
        let line = position.line;
        let tagName = "";
        while (line > 0 && !tagName) {
          let lineInfo = document2.lineAt(line);
          let text = lineInfo.text.trim();
          if (line === position.line) {
            text = text.substring(0, position.character);
          }
          let txtArr = text.match(/<[^(>/)]+/gim);
          if (txtArr) {
            for (let i = txtArr.length - 1; i >= 0; i--) {
              if (txtArr[i][0] === "<" && txtArr[i][1] !== "/") {
                if (txtArr[i].indexOf(" ") !== -1) {
                  tagName = txtArr[i].replace(/^<(\S*)(\s.*|\s*)/gi, "$1");
                } else {
                  tagName = txtArr[i].replace(/^<(.*)/gi, "$1");
                }
                break;
              }
            }
          }
          --line;
        }
        return tagName;
      }
      provideHover(document2, position) {
        let hoverText = "";
        let word = this.frameworkProvider.helper.getWord(document2, position, [
          " ",
          "<",
          ">",
          '"',
          "'",
          ".",
          "\\",
          "=",
          ":"
        ]);
        frameworksCompletionItem.forEach((framework) => {
          if (framework.template) {
            if (framework.template[word.selectText] && framework.template[word.selectText]._doc) {
              hoverText = framework.template[word.selectText]._doc;
            }
          }
        });
        if (hoverText) {
          return new vscode_1.Hover(hoverText);
        }
        return null;
      }
      generateDocument(el) {
        let ret = "";
        const args = [{ resourceUri: el.path }];
        const stageCommandUri = vscode_1.Uri.parse(`command:vue-helper.visitLocal?${encodeURIComponent(JSON.stringify(args))}`);
        if (el.props) {
          ret += `[\u6253\u5F00](${stageCommandUri})
      
${el.comment && el.comment.description || ""}

| \u5C5E\u6027\u540D| \u8BF4\u660E| \u7C7B\u578B| \u9ED8\u8BA4\u503C |
| :--- | :--- | :--- | :--- |`;
          for (const key in el.props) {
            const prop = el.props[key];
            ret += `
| ${key} | ${prop.description || "-"} | ${prop.type || "-"} | ${prop.default || "-"} |`;
          }
          ret += "\n";
        }
        if (el.emits) {
          ret += `
| \u4E8B\u4EF6\u540D| \u8BF4\u660E| \u793A\u4F8B |
| :--- | :--- | :--- |`;
          for (const key in el.emits) {
            const emit = el.emits[key];
            ret += `
| ${key} | ${emit.description || "-"} | ${emit.example || "-"} |`;
          }
          ret += "\n";
        }
        if (el.slots) {
          ret += `
| \u63D2\u69FD\u540D| \u53C2\u6570 |
| :--- | :--- |`;
          for (const key in el.slots) {
            const slot = el.slots[key];
            let slotParam = "";
            if (slot) {
              slotParam = slot.join(",");
            }
            ret += `
| ${key} | ${slotParam || "-"} |`;
          }
          ret += "\n";
        }
        return ret;
      }
    };
    var vueHelperDefinitionProvider = class {
      constructor(frameworkProvider) {
        this.VUE_ATTR = {
          props: 1,
          computed: 2,
          methods: 3,
          watch: 4,
          beforeCreate: 5,
          created: 6,
          beforeMount: 7,
          mounted: 8,
          beforeUpdate: 9,
          updated: 10,
          activated: 11,
          deactivated: 12,
          beforeDestroy: 13,
          destroyed: 14,
          directives: 15,
          filters: 16,
          components: 17,
          data: 18
        };
        this.frameworkProvider = frameworkProvider;
      }
      /**
       * 判断是文件内跳转还是文件外跳转
       */
      getDefinitionPosition(lineText) {
        const pathRegs = [
          /import\s+.*\s+from\s+['"](.*)['"]/,
          /import\s*[^'"]*\(['"](.*)['"]\)[^'"]*/,
          /.*require\s*\([^'"]*['"](.*)['"][^'"]*\)/,
          /import\s+['"](.*)['"]/,
          /import\s*\([^'"]*(?:\/\*.*\*\/)\s*['"](.*)['"][^'"]\)*/
        ];
        let execResult;
        for (const pathReg of pathRegs) {
          execResult = pathReg.exec(lineText);
          if (execResult && execResult[1]) {
            const filePath = execResult[1];
            return {
              path: filePath
            };
          }
        }
      }
      /**
       * 获取框架
       * @param plugin 数组则是获取框架，字符串则为获取插件
       */
      getPlugin(plugin) {
        return __awaiter(this, void 0, void 0, function* () {
          return yield new Promise((resolve, reject) => {
            fs.readFile(vscode_1.workspace.rootPath + path.sep + "package.json", "utf8", (err, data) => {
              if (err)
                reject(err);
              let ret = "";
              let p = {};
              try {
                p = JSON.parse(data);
              } catch (_e) {
              }
              if (Array.isArray(plugin)) {
                let framework = plugin;
                for (let i = 0; i < framework.length; i++) {
                  const frame = framework[i];
                  if (p.dependencies && p.dependencies[frame] || p.devDependencies && p.devDependencies[frame]) {
                    ret = frame;
                  }
                }
              } else {
                let pluginArr = plugin.split("/");
                if (pluginArr.length === 1 && p.dependencies && p.dependencies[plugin] || p.devDependencies && p.devDependencies[plugin]) {
                  ret = plugin;
                } else if (pluginArr.length > 1 && p.dependencies && p.dependencies[pluginArr[0]] || p.devDependencies && p.devDependencies[pluginArr[0]]) {
                  ret = plugin;
                }
              }
              if (ret) {
                resolve(ret);
              } else {
                resolve("");
              }
            });
          });
        });
      }
      readDir(dir, selectText, frame) {
        return __awaiter(this, void 0, void 0, function* () {
          return yield new Promise((resolve, reject) => {
            fs.readdir(dir, "utf8", (err, files) => {
              if (err)
                reject(err);
              if (files.indexOf(selectText.toLowerCase()) !== -1) {
                if (frame === "iview") {
                  let prePath = dir + path.sep + selectText.toLowerCase() + path.sep;
                  let vuePath = prePath + selectText.toLowerCase() + ".vue";
                  let indexPath = prePath + "index.js";
                  if (fs.existsSync(vuePath)) {
                    resolve(vuePath);
                  } else if (fs.existsSync(indexPath)) {
                    resolve(indexPath);
                  } else {
                    resolve("");
                  }
                } else if (frame === "element-ui") {
                  let prePath = dir + path.sep + selectText.replace(/^el-/gi, "") + path.sep;
                  let mainPath = prePath + "src" + path.sep + "main.vue";
                  let vuePath = prePath + "src" + path.sep + selectText + ".vue";
                  let indexPath = prePath + "index.js";
                  if (fs.existsSync(mainPath)) {
                    resolve(mainPath);
                  } else if (fs.existsSync(vuePath)) {
                    resolve(vuePath);
                  } else if (fs.existsSync(indexPath)) {
                    resolve(indexPath);
                  } else {
                    resolve("");
                  }
                }
              } else {
                resolve("");
              }
            });
          });
        });
      }
      /**
       * 在node_modules目录下去查找
       * @param selectText
       */
      definitionPlugin(selectText) {
        return __awaiter(this, void 0, void 0, function* () {
          let frame = this.frameworkProvider.frameworks;
          if (frame.length > 0) {
            let framework = frame[0].name;
            if (framework === "iview") {
              return yield this.readDir(this.frameworkProvider.helper.projectPath + path.sep + "node_modules" + path.sep + "iview" + path.sep + "src" + path.sep + "components", selectText, framework);
            } else if (framework === "element-ui") {
              return yield this.readDir(this.frameworkProvider.helper.projectPath + path.sep + "node_modules" + path.sep + "element-ui" + path.sep + "packages", selectText.replace(/^el-/gi, ""), framework);
            } else {
              return "";
            }
          }
        });
      }
      /**
       * 获取node_modules下package.json文件中的main字段
       * @param path
       */
      getMain(rootPath) {
        return __awaiter(this, void 0, void 0, function* () {
          return yield new Promise((resolve, reject) => {
            fs.readFile(rootPath + "package.json", "utf8", (err, data) => {
              if (err)
                reject(err);
              let p = {};
              try {
                p = JSON.parse(data);
              } catch (_e) {
              }
              if (p.main) {
                resolve(p.main);
              } else {
                resolve("");
              }
            });
          });
        });
      }
      /**
       * 文件外跳转
       * 处理方式
       * 1. 根据文件目录查询是否存在相应文件
       * 2. 通过package.json判断是否存在安装插件
       * @param document
       * @param position
       * @param line
       */
      definitionOutFile(document2, file) {
        return __awaiter(this, void 0, void 0, function* () {
          let filePath = file.path;
          let isAbsolute = false;
          if (filePath.includes(this.frameworkProvider.helper.prefix.alias)) {
            isAbsolute = true;
          }
          filePath = filePath.replace(this.frameworkProvider.helper.prefix.alias, this.frameworkProvider.helper.prefix.path);
          if (/(.*\/.*|[^.]+)\..*$/gi.test(filePath)) {
            let tempFile = "";
            if (isAbsolute) {
              tempFile = path.join(this.frameworkProvider.helper.projectPath, filePath);
            } else {
              tempFile = path.join(document2.uri.path || "", "../", filePath);
            }
            if (fs.existsSync(tempFile)) {
              return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(tempFile), new vscode_1.Position(0, 0)));
            }
          } else {
            const postfix = ["vue", "js", "css", "scss", "less"];
            for (let i = 0; i < postfix.length; i++) {
              const post = postfix[i];
              let tempFile = "";
              if (isAbsolute) {
                tempFile = path.join(this.frameworkProvider.helper.projectPath, filePath);
              } else {
                tempFile = path.join(document2.uri.path || "", "../", filePath);
              }
              if (tempFile.endsWith(path.sep)) {
                tempFile = tempFile + "index." + post;
                if (fs.existsSync(tempFile)) {
                  return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(tempFile), new vscode_1.Position(0, 0)));
                }
              } else {
                let indexFile = tempFile + path.sep + "index." + post;
                tempFile += "." + post;
                tempFile = this.frameworkProvider.helper.pathCompliantWin(tempFile);
                if (fs.existsSync(tempFile)) {
                  return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(tempFile), new vscode_1.Position(0, 0)));
                }
                if (fs.existsSync(indexFile)) {
                  return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(indexFile), new vscode_1.Position(0, 0)));
                }
              }
            }
          }
          let plugin = yield this.getPlugin(filePath);
          let pluginRootPath = vscode_1.workspace.rootPath + path.sep + "node_modules" + path.sep + plugin + path.sep;
          let pluginOwn = vscode_1.workspace.rootPath + path.sep + "node_modules" + path.sep + plugin + ".js";
          let pluginPath = pluginRootPath + "index.js";
          if (fs.existsSync(pluginOwn)) {
            return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(pluginOwn), new vscode_1.Position(0, 0)));
          } else if (fs.existsSync(pluginPath)) {
            return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(pluginPath), new vscode_1.Position(0, 0)));
          }
          let main = yield this.getMain(pluginRootPath);
          if (main) {
            return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(pluginRootPath + main), new vscode_1.Position(0, 0)));
          }
          return Promise.resolve(null);
        });
      }
      /**
       * 文件内跳转
       */
      definitionInFile(document2, position) {
        return __awaiter(this, void 0, void 0, function* () {
          const word = this.frameworkProvider.helper.getWord(document2, position, [
            " ",
            "<",
            ">",
            '"',
            "'",
            ".",
            "\\",
            "=",
            ":",
            "@",
            "(",
            ")",
            "[",
            "]",
            "{",
            "}",
            ",",
            "!"
          ]);
          let pos = 0;
          let begin = false;
          let lineText = "";
          let braceLeftCount = 0;
          let attr = "";
          let searchType = "";
          if (word.startText === "<") {
            searchType = "components";
          }
          while (pos < document2.lineCount && !/^\s*<\/script>\s*$/g.test(lineText)) {
            lineText = document2.lineAt(++pos).text;
            if (!begin) {
              if (/^\s*<script.*>\s*$/g.test(lineText)) {
                begin = true;
              }
              continue;
            }
            let keyWord = lineText.replace(/\s*(\w*)\s*(\(\s*\)|:|(:\s*function\s*\(\s*\)))\s*{\s*/gi, "$1");
            if (this.VUE_ATTR[keyWord] !== void 0 && braceLeftCount === 0) {
              attr = keyWord;
              braceLeftCount = 0;
            }
            if (searchType === "components") {
              let tag = word.selectText.toLowerCase().replace(/-/gi, "");
              if (attr) {
                for (let i = 0; i < this.frameworkProvider.helper.vueFiles.length; i++) {
                  const vueFile = this.frameworkProvider.helper.vueFiles[i];
                  const vueFileName = vueFile.name.toLowerCase().replace(/-/gi, "");
                  if (vueFileName === tag) {
                    return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(path.join(this.frameworkProvider.helper.projectPath, vueFile.path.replace(this.frameworkProvider.helper.prefix.alias, this.frameworkProvider.helper.prefix.path))), new vscode_1.Position(0, 0)));
                  }
                }
                let retPath = yield this.definitionPlugin(word.selectText);
                if (retPath) {
                  return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(retPath), new vscode_1.Position(0, 0)));
                }
                break;
              } else {
                if (lineText.toLowerCase().includes(tag) && (lineText.trim().indexOf("import") === 0 || lineText.trim().indexOf("require") === 0)) {
                  return this.definitionOutFile(document2, this.getDefinitionPosition(lineText));
                }
              }
            } else {
              let braceLeftList = lineText.match(/{/gi);
              let braceRightList = lineText.match(/}/gi);
              if (attr === "data" && braceLeftCount >= 2) {
                let matchName = lineText.replace(/\s*(\w+):.+/gi, "$1");
                if (word.selectText === matchName && braceLeftCount === 2) {
                  return Promise.resolve(new vscode_1.Location(document2.uri, new vscode_1.Position(pos, lineText.indexOf(matchName) + matchName.length)));
                }
                let braceLeft = braceLeftList ? braceLeftList.length : 0;
                let braceRight = braceRightList ? braceRightList.length : 0;
                braceLeftCount += braceLeft - braceRight;
              } else if (attr) {
                let matchName = lineText.replace(/\s*(async\s*)?(\w*)\s*(:|\().*/gi, "$2");
                if (word.selectText === matchName && braceLeftCount === 1) {
                  return Promise.resolve(new vscode_1.Location(document2.uri, new vscode_1.Position(pos, lineText.indexOf(matchName) + matchName.length)));
                }
                let braceLeft = braceLeftList ? braceLeftList.length : 0;
                let braceRight = braceRightList ? braceRightList.length : 0;
                braceLeftCount += braceLeft - braceRight;
              }
              if (attr === "data") {
                if (/\s*return\s*{\s*/gi.test(lineText)) {
                  braceLeftCount = 2;
                }
              }
            }
          }
          let files = glob.sync(vscode_1.workspace.rootPath + "/!(node_modules)/**/*.vue");
          for (let i = 0; i < files.length; i++) {
            const vueFile = files[i];
            let vueChangeFile = vueFile.replace(/-/gi, "").toLowerCase().replace(/\.vue$/, "");
            if (vueChangeFile.endsWith("/" + word.selectText.toLowerCase().replace(/-/gi, ""))) {
              return Promise.resolve(new vscode_1.Location(vscode_1.Uri.file(vueFile), new vscode_1.Position(0, 0)));
            }
          }
          return Promise.resolve(null);
        });
      }
      definitionTs(document2, position) {
        const word = this.frameworkProvider.helper.getWord(document2, position, [
          " ",
          "<",
          ">",
          '"',
          "'",
          ".",
          "\\",
          "=",
          ":",
          "@",
          "(",
          ")",
          "[",
          "]",
          "{",
          "}",
          ",",
          "!"
        ]);
        const lineCount = document2.lineCount;
        let i = 0;
        let reg = new RegExp(`${word.selectText}\\s*=\\s*\\(w*\\)`, "gi");
        let methodPosition = {
          line: 0,
          character: 0
        };
        while (i < lineCount) {
          let text = document2.lineAt(i).text;
          if (reg.test(text)) {
            methodPosition.line = i;
            methodPosition.character = text.indexOf(word.selectText);
            break;
          }
          i++;
        }
        if (vscode_1.window.activeTextEditor) {
          this.frameworkProvider.helper.jumpToLocation(vscode_1.window.activeTextEditor, new vscode_1.Position(methodPosition.line, methodPosition.character));
        }
      }
      vue3JumpInFile(document2, position) {
        const word = this.frameworkProvider.helper.getWord(document2, position, [
          " ",
          "<",
          ">",
          '"',
          "'",
          ".",
          "\\",
          "=",
          ":",
          "@",
          "(",
          ")",
          "[",
          "]",
          "{",
          "}",
          ",",
          "!"
        ]);
        const prefix = this.frameworkProvider.helper.getVuePrefix(document2, position);
        const jumpPosition = {
          line: 0,
          character: 0
        };
        let start = false;
        const varFuncReg = this.frameworkProvider.helper.reg.varFunc(word.selectText);
        const funcReg = this.frameworkProvider.helper.reg.func(word.selectText);
        const varReg = this.frameworkProvider.helper.reg.variable(word.selectText);
        if (prefix === "@") {
          for (let i = 0; i < document2.lineCount; i++) {
            const text = document2.lineAt(i).text;
            if (text.includes("<script ")) {
              start = true;
            }
            if (start) {
              if (varFuncReg.test(text)) {
                if (jumpPosition.line === 0) {
                  jumpPosition.line = i;
                  jumpPosition.character = text.indexOf(word.selectText);
                }
                if (funcReg.test(text) || varReg.test(text)) {
                  jumpPosition.line = i;
                  jumpPosition.character = text.indexOf(word.selectText);
                  break;
                }
              }
            }
          }
        } else {
          for (let i = 0; i < document2.lineCount; i++) {
            const text = document2.lineAt(i).text;
            if (text.includes("<script ")) {
              start = true;
            }
            if (start) {
              if (varFuncReg.test(text)) {
                if (jumpPosition.line === 0) {
                  jumpPosition.line = i;
                  jumpPosition.character = text.indexOf(word.selectText);
                }
                if (varReg.test(text)) {
                  jumpPosition.line = i;
                  jumpPosition.character = text.indexOf(word.selectText);
                  break;
                }
              }
            }
          }
        }
        if (jumpPosition.line > 0) {
          return new vscode_1.Location(document2.uri, new vscode_1.Position(jumpPosition.line, jumpPosition.character));
        }
        return null;
      }
      provideDefinition(document2, position, _token) {
        return __awaiter(this, void 0, void 0, function* () {
          let docText = document2.getText();
          const line = document2.lineAt(position.line);
          let file = this.getDefinitionPosition(line.text);
          if (file) {
            if (!(this.frameworkProvider.helper.hasAliasConfig && file.path.includes("."))) {
              return this.definitionOutFile(document2, file);
            }
          } else {
            if (!(docText.includes('lang="ts"') || this.frameworkProvider.helper.isTs)) {
              return this.definitionInFile(document2, position);
            }
          }
          return [];
        });
      }
    };
    exports2.vueHelperDefinitionProvider = vueHelperDefinitionProvider;
    vueHelperDefinitionProvider.count = 0;
  }
});

// out/pro/page.js
var require_page = __commonJS({
  "out/pro/page.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    var vscode_1 = require("vscode");
    var path = require("path");
    var fs = require("fs");
    var helper_12 = require_helper();
    var webviewMgn_1 = require_webviewMgn();
    var Page = class {
      constructor(helper, options) {
        this.uri = null;
        this.componentDir = "";
        this.type = helper_12.FuncType.Pro;
        this.helper = helper;
        this.options = options;
      }
      init() {
        vscode_1.commands.registerCommand("vue-helper.add.page", (uri) => __awaiter(this, void 0, void 0, function* () {
          this.uri = uri;
          const webviewMgn = this.helper.getPlugin(webviewMgn_1.WebviewMgn);
          let componentDir = this.helper.config.get("component-dir");
          if (!componentDir) {
            componentDir = yield this.helper.setComponentDir();
          }
          if (componentDir) {
            this.componentDir = componentDir;
            const pagePath = path.join(this.componentDir, "page");
            if (this.componentDir && !fs.existsSync(pagePath)) {
              fs.mkdirSync(pagePath);
            }
            webviewMgn.openView({
              title: "\u9875\u9762\u751F\u6210\u5668",
              page: "page",
              messageHandler: (message) => {
                var _a;
                switch (message.command) {
                  case "generate":
                    message.params.path = this.helper.pathCompliantWin(((_a = this.uri) === null || _a === void 0 ? void 0 : _a.path) || "");
                    this.generatePage(message.params, message.framework);
                    break;
                  case "config":
                    if (this.helper.frameworks.length === 1) {
                      webviewMgn.postMessage({
                        command: "config",
                        framework: this.helper.frameworks[0].name
                      });
                    } else if (this.helper.frameworks.length > 1) {
                      webviewMgn.postMessage({
                        command: "config",
                        frameworkList: this.helper.frameworks.map((item) => {
                          return item.name;
                        })
                      });
                    }
                    break;
                  case "download":
                    if (helper_12.default.user.vip > 0) {
                      this.download(message.template);
                    } else {
                      webviewMgn.postMessage({
                        command: "notice",
                        type: "warning",
                        message: "Pro\u6B63\u5F0F\u4F1A\u5458\u624D\u652F\u6301\u4E0B\u8F7D"
                      });
                    }
                    break;
                  default:
                    break;
                }
              }
            });
          }
        }));
      }
      download(name) {
        let filePath = path.join(this.helper.context.extensionPath, "media", "page", name + ".js");
        const pagePath = path.join(this.componentDir, "page", name + ".js");
        fs.writeFileSync(pagePath, fs.readFileSync(filePath));
        this.helper.getPlugin(webviewMgn_1.WebviewMgn).postMessage({
          command: "notice",
          type: "success",
          message: "\u4E0B\u8F7D\u6210\u529F\uFF0C\u6587\u4EF6\u653E\u7F6E\u5728\uFF1A " + pagePath
        });
      }
      // 查找编译文件是否存在
      generatePage(params, framework) {
        return __awaiter(this, void 0, void 0, function* () {
          let cwd = path.join(this.helper.context.extensionPath, "asset", "page");
          let exist = false;
          if (["element-ui", "element-plus"].includes(framework)) {
            exist = true;
          }
          try {
            const pagePath = path.join(this.componentDir, "page");
            const fileList = fs.readdirSync(pagePath);
            let frameworkJs = framework + ".js";
            fileList.forEach((item) => {
              if (item === frameworkJs) {
                cwd = pagePath;
                exist = true;
              }
            });
          } catch (error) {
          }
          try {
            if (exist) {
              const terminal = vscode_1.window.createTerminal("project");
              terminal.sendText(`cd ${cwd}`);
              terminal.sendText(`node ${framework}.js ${JSON.stringify(params)}`);
            } else {
              this.helper.getPlugin(webviewMgn_1.WebviewMgn).postMessage({
                command: "notice",
                type: "warning",
                message: "\u8BE5\u6846\u67B6\u6682\u672A\u652F\u6301\uFF0C\u53EF\u4E0B\u8F7D\u6A21\u677F\uFF0C\u81EA\u5B9A\u4E49\u652F\u6301"
              });
            }
          } catch (error) {
            console.log("error", error.message);
          }
        });
      }
    };
    exports2.default = Page;
  }
});

// out/common/notice.js
var require_notice = __commonJS({
  "out/common/notice.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.compare = compare;
    exports2.from = from;
    exports2.parseVersion = parseVersion;
    exports2.showWelcomeOrNews = showWelcomeOrNews;
    var vscode_1 = require("vscode");
    var webviewMgn_1 = require_webviewMgn();
    function compare(v1, v2) {
      if (typeof v1 === "string") {
        v1 = parseVersion(v1);
      }
      if (typeof v2 === "string") {
        v2 = parseVersion(v2);
      }
      if (v1.major > v2.major)
        return 1;
      if (v1.major < v2.major)
        return -1;
      if (v1.minor > v2.minor)
        return 1;
      if (v1.minor < v2.minor)
        return -1;
      if (v1.patch > v2.patch)
        return 1;
      if (v1.patch < v2.patch)
        return -1;
      if (v1.pre === void 0 && v2.pre !== void 0)
        return 1;
      if (v1.pre !== void 0 && v2.pre === void 0)
        return -1;
      return 0;
    }
    function from(major, minor, patch, pre) {
      return {
        major: typeof major === "string" ? parseInt(major, 10) : major,
        minor: typeof minor === "string" ? parseInt(minor, 10) : minor,
        patch: patch == null ? 0 : typeof patch === "string" ? parseInt(patch, 10) : patch,
        pre
      };
    }
    function parseVersion(version) {
      const [ver, pre] = version.split("-");
      const [major, minor, patch] = ver.split(".");
      return from(major, minor, patch, pre);
    }
    function showWelcome(helper) {
      helper.getPlugin(webviewMgn_1.WebviewMgn).openView({
        title: "\u6B22\u8FCE\u4F7F\u7528vue-helper",
        page: "welcome",
        messageHandler: (message) => {
          switch (message.command) {
            case "openWebsite":
              helper.opn(message.url);
              return;
            case "init":
              helper.getPlugin(webviewMgn_1.WebviewMgn).postMessage({
                command: "init",
                params: {
                  version: helper.context.extension.packageJSON.version,
                  isWelcome: true
                }
              });
              break;
          }
        }
      });
    }
    function showNotice(helper) {
      helper.getPlugin(webviewMgn_1.WebviewMgn).openView({
        title: "\u6B22\u8FCE\u4F7F\u7528vue-helper",
        page: "welcome",
        messageHandler: (message) => {
          switch (message.command) {
            case "openWebsite":
              helper.opn(message.url);
              return;
            case "init":
              helper.getPlugin(webviewMgn_1.WebviewMgn).postMessage({
                command: "init",
                params: {
                  version: helper.context.extension.packageJSON.version,
                  isWelcome: false
                }
              });
              break;
          }
        }
      });
    }
    function showWelcomeOrNews(helper) {
      return __awaiter(this, void 0, void 0, function* () {
        let version = helper.context.extension.packageJSON.version;
        let previousVersion = helper.store.get("vue-helper.version");
        if (previousVersion == null || previousVersion && compare(version, previousVersion) === 1) {
          helper.store.set("vue-helper.version", version);
        }
        if (previousVersion == null) {
          if (vscode_1.window.state.focused) {
            showWelcome(helper);
          } else {
            const disposable = vscode_1.window.onDidChangeWindowState((e) => {
              if (!e.focused)
                return;
              disposable.dispose();
              showWelcome(helper);
            });
          }
          return;
        }
        const current = parseVersion(version);
        const previous = parseVersion(previousVersion);
        if (current.major < previous.major || current.major === previous.major && current.minor < previous.minor) {
          return;
        }
        if (current.major === previous.major && current.minor <= previous.minor) {
          return;
        }
        ;
        version = String(current.major);
        if (helper.config.get("show-new-after-upgrade")) {
          if (vscode_1.window.state.focused) {
            showNotice(helper);
          } else {
            const disposable = vscode_1.window.onDidChangeWindowState((e) => {
              if (!e.focused)
                return;
              disposable.dispose();
              showNotice(helper);
            });
          }
        }
      });
    }
  }
});

// node_modules/is-wsl/index.js
var require_is_wsl = __commonJS({
  "node_modules/is-wsl/index.js"(exports2, module2) {
    "use strict";
    var os = require("os");
    var fs = require("fs");
    var isWsl = () => {
      if (process.platform !== "linux") {
        return false;
      }
      if (os.release().includes("Microsoft")) {
        return true;
      }
      try {
        return fs.readFileSync("/proc/version", "utf8").includes("Microsoft");
      } catch (err) {
        return false;
      }
    };
    if (process.env.__IS_WSL_TEST__) {
      module2.exports = isWsl;
    } else {
      module2.exports = isWsl();
    }
  }
});

// node_modules/opn/index.js
var require_opn = __commonJS({
  "node_modules/opn/index.js"(exports2, module2) {
    "use strict";
    var { promisify } = require("util");
    var path = require("path");
    var childProcess = require("child_process");
    var isWsl = require_is_wsl();
    var pExecFile = promisify(childProcess.execFile);
    var wslToWindowsPath = async (path2) => {
      const { stdout } = await pExecFile("wslpath", ["-w", path2]);
      return stdout.trim();
    };
    module2.exports = async (target, options) => {
      if (typeof target !== "string") {
        throw new TypeError("Expected a `target`");
      }
      options = {
        wait: false,
        ...options
      };
      let command;
      let appArguments = [];
      const cliArguments = [];
      const childProcessOptions = {};
      if (Array.isArray(options.app)) {
        appArguments = options.app.slice(1);
        options.app = options.app[0];
      }
      if (process.platform === "darwin") {
        command = "open";
        if (options.wait) {
          cliArguments.push("-W");
        }
        if (options.app) {
          cliArguments.push("-a", options.app);
        }
      } else if (process.platform === "win32" || isWsl) {
        command = "cmd" + (isWsl ? ".exe" : "");
        cliArguments.push("/c", "start", '""', "/b");
        target = target.replace(/&/g, "^&");
        if (options.wait) {
          cliArguments.push("/wait");
        }
        if (options.app) {
          if (isWsl && options.app.startsWith("/mnt/")) {
            const windowsPath = await wslToWindowsPath(options.app);
            options.app = windowsPath;
          }
          cliArguments.push(options.app);
        }
        if (appArguments.length > 0) {
          cliArguments.push(...appArguments);
        }
      } else {
        if (options.app) {
          command = options.app;
        } else {
          const useSystemXdgOpen = process.versions.electron || process.platform === "android";
          command = useSystemXdgOpen ? "xdg-open" : path.join(__dirname, "xdg-open");
        }
        if (appArguments.length > 0) {
          cliArguments.push(...appArguments);
        }
        if (!options.wait) {
          childProcessOptions.stdio = "ignore";
          childProcessOptions.detached = true;
        }
      }
      cliArguments.push(target);
      if (process.platform === "darwin" && appArguments.length > 0) {
        cliArguments.push("--args", ...appArguments);
      }
      const subprocess = childProcess.spawn(command, cliArguments, childProcessOptions);
      if (options.wait) {
        return new Promise((resolve, reject) => {
          subprocess.once("error", reject);
          subprocess.once("close", (exitCode) => {
            if (exitCode > 0) {
              reject(new Error(`Exited with code ${exitCode}`));
              return;
            }
            resolve(subprocess);
          });
        });
      }
      subprocess.unref();
      return subprocess;
    };
  }
});

// out/helper.js
var require_helper = __commonJS({
  "out/helper.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.projectConfigDefault = exports2.FuncType = void 0;
    var vscode_1 = require("vscode");
    var jwt = require_jsonwebtoken();
    var os = require("os");
    var fs = require("fs");
    var path = require("path");
    var statusBar_1 = require_statusBar();
    var member_1 = require_member();
    var webviewMgn_1 = require_webviewMgn();
    var project_1 = require_project();
    var api_1 = require_api();
    var axios_1 = require_axios();
    var localComp_1 = require_localComp();
    var traverse_1 = require_traverse();
    var privateComp_1 = require_privateComp();
    var assist_1 = require_assist();
    var assist_2 = require_assist2();
    var form_1 = require_form();
    var framework_1 = require_framework();
    var framework_2 = require_framework2();
    var page_1 = require_page();
    var notice_1 = require_notice();
    var opn = require_opn();
    var beautify = require_js();
    var FuncType;
    (function(FuncType2) {
      FuncType2[FuncType2["Pro"] = 0] = "Pro";
      FuncType2[FuncType2["Common"] = 1] = "Common";
      FuncType2[FuncType2["Base"] = 2] = "Base";
    })(FuncType || (exports2.FuncType = FuncType = {}));
    exports2.projectConfigDefault = {
      path: {
        root: "@=src",
        api: "src/api",
        request: "../utils/request"
      },
      api: [],
      component: {
        scope: ["src/components", "src/views"]
      }
    };
    var Helper = class _Helper {
      constructor(context) {
        this.context = context;
        this.projectPath = "";
        this.tabSize = "";
        this.docUrl = "http://vue-helper.80fight.cn";
        this.apiUrl = "https://int.miaixyt.com";
        this.isTs = false;
        this.isWin = os.platform().includes("win");
        this.project = "";
        this.projectConfig = exports2.projectConfigDefault;
        this.projectConfigFile = "helper.json";
        this.prefix = {
          alias: "@",
          path: "src"
        };
        this.name = "vue-helper";
        this.localVues = {};
        this.localAttrs = {};
        this.vueVersion = "3";
        this.formFramework = "element-plus";
        this.modules = [];
        this.frameworks = [];
        this.frameworkIntalled = [];
        this.frameworkInherit = [{ name: "element-ui", version: "2", trigger: "e" }, { name: "element-plus", version: "2", trigger: "e" }, { name: "ant-design-vue", version: "4", trigger: "a" }];
        this.vueFiles = [];
        this.hasAliasConfig = false;
        this.formSupportFramework = ["element-plus", "element-ui", "ant-design-vue"];
        this.reg = {
          variable: (name) => {
            return new RegExp(`.*[const|var|let]\\s*${name}.*`, "gi");
          },
          func: (name) => {
            return new RegExp(`.*function\\s*${name}.*`, "gi");
          },
          varFunc: (name) => {
            return new RegExp(`.*([const|var|let|function]\\s*${name})|(${name}\\s*:).*`, "gi");
          }
        };
        this.config = {
          set(key, value) {
            vscode_1.workspace.getConfiguration("vue-helper").update(key, value, vscode_1.ConfigurationTarget.Global);
          },
          get(key) {
            return vscode_1.workspace.getConfiguration("vue-helper").get(key);
          }
        };
        this.store = {
          set: (key, value) => {
            this.context.globalState.update(key, value);
          },
          get: (key) => {
            return this.context.globalState.get(key);
          }
        };
        this.plugins = {};
        this.opn = opn;
        this.projectPath = this.getProjectPath();
        this.tabSize = this.getTabSize();
        this.projectRootPathReg = new RegExp(`.*${this.projectPath}/`, "gi");
        this.axios = axios_1.default;
        this.axios.defaults.baseURL = this.apiUrl;
        this.axios.defaults.withCredentials = false;
        this.traverse = new traverse_1.default(this, this.prefix);
        this.frameworkInit();
      }
      // 框架初始化
      frameworkInit() {
        try {
          let configFramework = this.config.get("framework");
          if (configFramework) {
            let configFrameworkList = configFramework.split(",");
            for (let i = 0; i < configFrameworkList.length; i++) {
              const item = configFrameworkList[i];
              this.frameworks.push({
                name: item,
                trigger: item[0],
                version: "100"
              });
            }
          } else {
            this.frameworks = [];
          }
          const frameworkNpms = ["element-plus", "ant-design-vue", "element-ui"];
          const componentDir = this.config.get("component-dir");
          if (componentDir) {
            const frameworkPath = path.join(componentDir, "framework.json");
            if (fs.existsSync(frameworkPath)) {
              let frameworkIntalledJson = fs.readFileSync(frameworkPath, "utf-8");
              if (frameworkIntalledJson) {
                frameworkIntalledJson = JSON.parse(frameworkIntalledJson);
                for (const key in frameworkIntalledJson) {
                  const framework = Object.assign(Object.assign({}, frameworkIntalledJson[key]), { key });
                  this.frameworkIntalled.push(framework);
                  if (!frameworkNpms.includes(framework.name)) {
                    frameworkNpms.push(framework.name);
                  }
                }
              }
            }
          }
          if (this.projectPath) {
            const frameworkNames = [];
            if (this.frameworks.length > 0) {
              this.frameworks.forEach((frameworkItem) => {
                frameworkNames.push(frameworkItem.name);
              });
            }
            const pkg = fs.readFileSync(this.pathCompliantWin(path.join(this.projectPath, "package.json")), "utf-8");
            const combineFramework = this.frameworkInherit.concat(this.frameworkIntalled);
            combineFramework.forEach((installFramework) => {
              if (pkg.includes(`"${installFramework.name}"`)) {
                let frameworkVersion = "";
                let npmReg = new RegExp(`"${installFramework.name}"\\s*:\\s*"([^"]*)`, "gi");
                const frameworkNpm = pkg.match(npmReg);
                if (frameworkNpm && frameworkNpm.length > 0) {
                  frameworkVersion = frameworkNpm[0].replace(/.*"/gi, "");
                  if (frameworkVersion) {
                    if (["~", "^"].includes(frameworkVersion[0])) {
                      frameworkVersion = frameworkVersion[0];
                    } else {
                      frameworkVersion = frameworkVersion[0];
                    }
                    if (isNaN(parseInt(frameworkVersion))) {
                      frameworkVersion = "100";
                    }
                  }
                }
                if (!frameworkNames.includes(installFramework.name)) {
                  this.frameworks.push({
                    name: installFramework.name,
                    version: frameworkVersion,
                    trigger: installFramework.trigger
                  });
                  frameworkNames.push(installFramework.name);
                }
                if (this.formSupportFramework.includes(installFramework.name)) {
                  this.formFramework = installFramework.name;
                }
              }
            });
            if (/"vue":\s*"2/gi.test(pkg)) {
              this.vueVersion = "2";
            }
          }
        } catch (error) {
          console.log(error);
        }
      }
      // 路径兼容windows
      pathCompliantWin(comPath) {
        if (this.isWin && comPath && (comPath[0] === "\\" || comPath[0] === "/")) {
          return comPath.substring(1);
        }
        return comPath;
      }
      // 获取工程目录
      getProjectPath(fullPath) {
        var _a, _b;
        if (((_a = vscode_1.workspace.workspaceFolders) === null || _a === void 0 ? void 0 : _a.length) === 1) {
          return this.pathCompliantWin(vscode_1.workspace.workspaceFolders[0].uri.path);
        }
        (_b = vscode_1.workspace.workspaceFolders) === null || _b === void 0 ? void 0 : _b.forEach((folder) => {
          if (fullPath === null || fullPath === void 0 ? void 0 : fullPath.includes(folder.uri.path.replace(/.*:\//gi, "/"))) {
            return folder.uri.path;
          }
        });
        return this.pathCompliantWin(fullPath || "");
      }
      // 跟从编辑器配置，如果没有，则默认两个空格
      getTabSize() {
        const tabSize = vscode_1.workspace.getConfiguration("editor").tabSize;
        let space = Array(tabSize).join(" ");
        if (space.length === 0)
          space = "  ";
        return space;
      }
      pluginBootstrap(cls, options) {
        if (!this.plugins[cls.name]) {
          this.plugins[cls.name] = new cls(this, options);
        }
        this.plugins[cls.name].init();
      }
      setContext(name, value) {
        vscode_1.commands.executeCommand("setContext", name, value);
      }
      getPlugin(cls) {
        return this.plugins[cls.name];
      }
      // 启动
      bootstrap(id) {
        if (id) {
          if (id.startsWith(_Helper.deviceId)) {
            _Helper.user.token = id.substring(_Helper.deviceLength, id.length);
            const res = jwt.verify(_Helper.user.token, "vue-helper-20240512-project");
            if (res && res.auth_value) {
              const user = JSON.parse(res.auth_value);
              _Helper.user.vip = user.m;
              if (user.m !== 3) {
                _Helper.user.expired = user.e < (/* @__PURE__ */ new Date()).getTime();
              }
              let remainTime = user.e - (/* @__PURE__ */ new Date()).getTime();
              if (remainTime > 0) {
                _Helper.user.remain = Math.round(remainTime / 86400 / 1e3);
              }
            }
          }
        }
        const tsconfigPath = this.pathCompliantWin(path.join(this.projectPath, "tsconfig.json"));
        this.isTs = fs.existsSync(tsconfigPath);
        this.getProjectConfig();
        if (vscode_1.workspace.workspaceFolders) {
          const watcher = vscode_1.workspace.createFileSystemWatcher("**/" + this.projectConfigFile);
          watcher.onDidChange(() => {
            this.updateProjectConfig();
          });
          watcher.onDidCreate(() => {
            this.updateProjectConfig();
          });
          watcher.onDidDelete(() => {
            this.updateProjectConfig();
          });
        }
        this.context.subscriptions.push(vscode_1.commands.registerCommand("vue-helper.add.component", (uri) => {
          this.showPickComponent(uri);
        }));
        this.context.subscriptions.push(vscode_1.commands.registerCommand("vue-helper.add.file", (uri) => {
          this.getPlugin(webviewMgn_1.WebviewMgn).postMessage({
            command: "addFile",
            params: [{
              name: uri.path.replace(/.*\//gi, ""),
              url: uri.path
            }]
          });
        }));
        this.context.subscriptions.push(vscode_1.commands.registerCommand("vue-helper.upload.block", () => {
          this.getPlugin(privateComp_1.default).openPrivateComponent(null, true);
        }));
        this.context.subscriptions.push(vscode_1.commands.registerCommand("vue-helper.upload.component", (uri) => {
          let dirPath = this.pathCompliantWin(uri.path);
          let params = {};
          try {
            let stat = fs.statSync(dirPath);
            if (stat.isDirectory()) {
              params.module = [{
                label: uri.path.replace(/.*\//gi, ""),
                children: this.traverse.traverseDir(dirPath)
              }];
              params.url = dirPath;
            } else {
              params.fileList = [{
                name: uri.path.replace(/.*\//gi, ""),
                url: dirPath
              }];
            }
          } catch (error) {
          }
          this.getPlugin(privateComp_1.default).openPrivateComponent(params);
        }));
        this.pluginBootstrap(statusBar_1.default);
        this.pluginBootstrap(webviewMgn_1.WebviewMgn);
        this.pluginBootstrap(member_1.default);
        if (_Helper.user.vip > -2 && !_Helper.user.expired) {
          this.setContext("vue-helper.pro", true);
          this.pluginBootstrap(project_1.default);
          this.pluginBootstrap(api_1.default);
          this.pluginBootstrap(localComp_1.default);
          this.pluginBootstrap(privateComp_1.default);
          this.pluginBootstrap(assist_2.default);
          this.pluginBootstrap(form_1.default);
          this.pluginBootstrap(page_1.default);
          this.pluginBootstrap(framework_1.default);
        } else {
          this.pluginBootstrap(assist_1.default);
          this.pluginBootstrap(framework_2.default);
        }
        (0, notice_1.showWelcomeOrNews)(this);
      }
      traverseTreeGenerate(tree, sourcePath, destPath) {
        try {
          tree.forEach((item) => {
            const destDirPath = this.pathCompliantWin(path.join(destPath, item.label));
            if (item.children) {
              fs.mkdirSync(destDirPath);
              this.traverseTreeGenerate(item.children, path.join(sourcePath, item.label), path.join(destPath, item.label));
            } else {
              fs.writeFileSync(destDirPath, fs.readFileSync(this.pathCompliantWin(path.join(sourcePath, item.label))));
            }
          });
        } catch (error) {
        }
      }
      insertComponent(component, source, dest) {
        if (component.tree) {
          this.traverseTreeGenerate(component.tree, path.join(source, "component/" + component.id + component.name), dest);
        }
        if (component.fileList) {
          component.fileList.forEach((fileItem) => {
            let componentFilePath = path.join(dest, fileItem.name);
            fs.writeFileSync(this.pathCompliantWin(componentFilePath), fs.readFileSync(this.pathCompliantWin(fileItem.url)));
          });
        }
      }
      showPickComponent(uri) {
        console.log("so");
        const pickItems = [];
        let componentDir = this.config.get("component-dir");
        let componentJson = fs.readFileSync(path.join(componentDir, "component.json"), "utf-8");
        componentJson = JSON.parse(componentJson);
        let vueLanguages = ["common"];
        this.vueVersion === "3" ? vueLanguages.push("vue3") : vueLanguages.push("vue2");
        let frameworkList = this.frameworks.map((framework) => {
          return framework.name;
        });
        for (const key in componentJson) {
          const item = componentJson[key];
          if (vueLanguages.includes(item.language)) {
            if (!item.framework || frameworkList.includes(item.framework)) {
              pickItems.push({
                label: item.name,
                description: item.remark,
                id: key
              });
            }
          }
        }
        const pagePick = vscode_1.window.createQuickPick();
        pagePick.title = "\u6DFB\u52A0\u7EC4\u4EF6";
        pagePick.placeholder = "\u9009\u62E9\u7EC4\u4EF6";
        pagePick.items = pickItems;
        pagePick.onDidChangeSelection((selection) => {
          pagePick.hide();
          if (vscode_1.workspace.workspaceFolders && selection[0] && selection[0].label) {
            this.insertComponent(componentJson[selection[0].id], componentDir, uri.path);
          } else {
            if (!vscode_1.workspace.workspaceFolders) {
              vscode_1.window.showInformationMessage("\u8BF7\u5148\u6253\u5F00\u5DE5\u7A0B");
            }
          }
        });
        pagePick.onDidHide(() => pagePick.dispose());
        pagePick.show();
      }
      // 打开配置文件
      openConfigByReg(regStr) {
        return __awaiter(this, void 0, void 0, function* () {
          let optTxt = "";
          if (!fs.existsSync(path.join(this.projectPath, this.projectConfigFile))) {
            optTxt = yield vscode_1.window.showInformationMessage("\u751F\u6210\u914D\u7F6E?", "\u786E\u5B9A", "\u53D6\u6D88");
          }
          if (optTxt === "\u786E\u5B9A") {
            this.generateProjectConfig(true);
          }
          let reg = new RegExp(regStr, "gi");
          let projectConfigFile = path.join(this.projectPath, this.projectConfigFile);
          const config = fs.readFileSync(projectConfigFile, "utf-8");
          let configLines = config.split("\n");
          let x = 0, y = 0;
          for (let i = 0; i < configLines.length; i++) {
            const line = configLines[i];
            if (reg.test(line)) {
              x = i;
              y = line.length - 2;
              break;
            }
          }
          let uri = vscode_1.Uri.file(projectConfigFile);
          const document2 = yield vscode_1.workspace.openTextDocument(uri);
          yield vscode_1.window.showTextDocument(document2, { preserveFocus: true, selection: new vscode_1.Selection(new vscode_1.Position(x, y), new vscode_1.Position(x, y)) });
          if (vscode_1.window.activeTextEditor) {
            vscode_1.window.activeTextEditor.revealRange(new vscode_1.Range(new vscode_1.Position(x, y), new vscode_1.Position(x, y)), vscode_1.TextEditorRevealType.Default);
          }
        });
      }
      /**
       * 生成文件类型
       * @param handle 是否手动
       */
      generateProjectConfig(handle) {
        let projectConfigFile = path.join(this.projectPath, this.projectConfigFile);
        let gitignorePath = path.join(this.projectPath, ".gitignore");
        const configAutoGenerate = this.config.get("config-auto-generate");
        if (configAutoGenerate && !fs.existsSync(projectConfigFile) || handle) {
          if (fs.existsSync(path.join(this.projectPath, "package.json")) || fs.existsSync(path.join(this.projectPath, "pages.json"))) {
            fs.writeFileSync(projectConfigFile, beautify.js(JSON.stringify(exports2.projectConfigDefault), { index_size: 2 }));
            if (fs.existsSync(gitignorePath)) {
              const gitignore = fs.readFileSync(gitignorePath);
              if (!gitignore.includes(this.projectConfigFile)) {
                fs.appendFileSync(gitignorePath, "\n" + this.projectConfigFile);
              }
            }
          }
        }
        this.getProjectConfig();
      }
      /**
       * 更新工程配置
       */
      updateProjectConfig() {
        try {
          let projectConfig = fs.readFileSync(path.join(this.projectPath, this.projectConfigFile), "utf-8");
          if (projectConfig) {
            this.projectConfig = JSON.parse(projectConfig);
            this.setPrefix();
          }
        } catch (error) {
        }
      }
      getProjectConfig() {
        const paths = this.projectPath.split("/");
        let project = "";
        if (paths.length > 0) {
          project = paths[paths.length - 1];
        }
        this.project = project.toLowerCase();
        let projectConfigFilePath = path.join(this.projectPath, this.projectConfigFile);
        if (fs.existsSync(projectConfigFilePath)) {
          let localProjectConfig = fs.readFileSync(projectConfigFilePath, "utf-8");
          localProjectConfig = JSON.parse(localProjectConfig);
          this.projectConfig = localProjectConfig;
          this.setPrefix();
        }
      }
      setPrefix() {
        this.prefix.alias = this.projectConfig.path.root.split("=")[0];
        this.prefix.path = this.projectConfig.path.root.split("=")[1];
      }
      jumpToLocation(editor, position) {
        editor.selection = new vscode_1.Selection(position, position);
        let halfRange = 16;
        let lineStart = position.line - halfRange;
        let lineEnd = position.line + halfRange;
        if (lineStart < 0) {
          lineStart = 0;
        }
        if (lineEnd > editor.document.lineCount) {
          lineEnd = editor.document.lineCount;
        }
        editor.revealRange(new vscode_1.Range(new vscode_1.Position(lineStart, position.character), new vscode_1.Position(lineEnd, position.character)), vscode_1.TextEditorRevealType.Default);
      }
      isMethodExist(word, text) {
        return new RegExp(`^\\s*(function)?\\s*${word}\\s*\\(.*\\)\\s*{\\s*$`, "gi").test(text);
      }
      getLineCharacter(text, lineStart) {
        let textTrim = text.trim();
        if (lineStart) {
          return text.indexOf(textTrim);
        } else {
          return text.indexOf(textTrim) + textTrim.length;
        }
      }
      getRelativePath(src, dist) {
        let vfPath = path.relative(this.pathCompliantWin(src), dist);
        vfPath = vfPath.replace(/\\/gi, "/");
        if (vfPath.startsWith("../")) {
          vfPath = vfPath.substr(1, vfPath.length);
        }
        return vfPath;
      }
      getActiveEditorDir(activePath) {
        return activePath.replace(this.projectRootPathReg, "").replace(/[\/|\\]\w*\.\w*$/gi, "");
      }
      getVueRelativePath(activeEditorPath, vuePath) {
        let vfPath = path.relative(activeEditorPath, vuePath);
        vfPath = "./" + vfPath;
        return vfPath.replace(/\\/gi, "/");
      }
      getCurrentWord(document2, position) {
        let i = position.character - 1;
        const text = document2.lineAt(position.line).text;
        while (i >= 0 && ' 	\n\r\v":{[,'.indexOf(text.charAt(i)) === -1) {
          i--;
        }
        return text.substring(i + 1, position.character);
      }
      getWord(document2, position, textSplite) {
        const line = document2.lineAt(position.line);
        let posIndex = position.character;
        let textSingle = line.text.substring(posIndex, posIndex + 1);
        let selectText = "";
        while (textSplite.indexOf(textSingle) === -1 && posIndex <= line.text.length) {
          selectText += textSingle;
          ++posIndex;
          textSingle = line.text.substring(posIndex, posIndex + 1);
        }
        posIndex = position.character - 1;
        textSingle = line.text.substring(posIndex, posIndex + 1);
        while (textSplite.indexOf(textSingle) === -1 && posIndex > 0) {
          selectText = textSingle + selectText;
          --posIndex;
          textSingle = line.text.substring(posIndex, posIndex + 1);
        }
        textSingle = line.text.substring(posIndex, posIndex + 1);
        return {
          selectText,
          startText: textSingle
        };
      }
      getVuePrefix(document2, position) {
        const line = document2.lineAt(position.line);
        let posIndex = position.character;
        let textSingle = line.text.substring(posIndex, posIndex + 1);
        let textSplite = [" "];
        while (textSplite.indexOf(textSingle) === -1 && posIndex > 0) {
          --posIndex;
          textSingle = line.text.substring(posIndex, posIndex + 1);
        }
        return line.text.substring(posIndex + 1, posIndex + 2);
      }
      setComponentDir(showMsg) {
        return __awaiter(this, void 0, void 0, function* () {
          const componentDir = this.config.get("component-dir");
          let dir = yield vscode_1.window.showInputBox({
            placeHolder: "\u8BBE\u7F6E\u7EC4\u4EF6/\u914D\u7F6E\u653E\u7F6E\u76EE\u5F55, \u5982\uFF1AD:\\helper",
            value: componentDir
          });
          if (dir) {
            if (fs.existsSync(dir)) {
              this.config.set("component-dir", dir);
              try {
                if (!fs.existsSync(path.join(dir, "framework"))) {
                  fs.mkdirSync(path.join(dir, "framework"));
                }
                if (!fs.existsSync(path.join(dir, "component"))) {
                  fs.mkdirSync(path.join(dir, "component"));
                }
                if (!fs.existsSync(path.join(dir, "codeBlock"))) {
                  fs.mkdirSync(path.join(dir, "codeBlock"));
                }
                if (!fs.existsSync(path.join(dir, "page"))) {
                  fs.mkdirSync(path.join(dir, "page"));
                }
                if (!fs.existsSync(path.join(dir, "codeBlock.json"))) {
                  fs.writeFileSync(path.join(dir, "codeBlock.json"), "{}");
                }
                if (!fs.existsSync(path.join(dir, "component.json"))) {
                  fs.writeFileSync(path.join(dir, "component.json"), "{}");
                }
                if (!fs.existsSync(path.join(dir, "framework.json"))) {
                  fs.writeFileSync(path.join(dir, "framework.json"), "{}");
                }
                if (!fs.existsSync(path.join(dir, "languages.json"))) {
                  fs.writeFileSync(path.join(dir, "languages.json"), '{"vue3":["element-plus","ant-design-vue"],"vue2":["element-ui"],"common":[]}');
                }
              } catch (error) {
                console.log(error);
              }
              if (showMsg) {
                vscode_1.window.showInformationMessage("\u8BBE\u7F6E\u7EC4\u4EF6\u76EE\u5F55\u6210\u529F");
              }
            } else {
              if (showMsg) {
                vscode_1.window.showWarningMessage("\u8BBE\u7F6E\u76EE\u5F55\u4E0D\u5B58\u5728, \u8BF7\u91CD\u65B0 [\u8BBE\u7F6E](command:vue-helper.private.setting)");
              }
            }
          }
          return dir;
        });
      }
    };
    Helper.user = {
      vip: -2,
      expired: false,
      remain: 0,
      token: ""
    };
    Helper.deviceLength = 6;
    Helper.deviceId = vscode_1.env.machineId.substring(0, Helper.deviceLength);
    exports2.default = Helper;
  }
});

// out/client.js
Object.defineProperty(exports, "__esModule", { value: true });
exports.activate = activate;
var helper_1 = require_helper();
function setup(user, context) {
  const helper = new helper_1.default(context);
  helper.bootstrap(user);
}
function activate(context) {
  const user = context.globalState.get("user");
  if (user) {
    setup(user, context);
  } else {
    setup(user, context);
  }
}
/*! Bundled license information:

safe-buffer/index.js:
  (*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> *)

mime-db/index.js:
  (*!
   * mime-db
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

mime-types/index.js:
  (*!
   * mime-types
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

lodash/lodash.js:
  (**
   * @license
   * Lodash <https://lodash.com/>
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)
*/
